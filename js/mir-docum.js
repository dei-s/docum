/*! decimal.js v5.0.8 https://github.com/MikeMcl/decimal.js/LICENCE */
;(function (globalScope) {
  'use strict';


  /*
   *  decimal.js v5.0.8
   *  An arbitrary-precision Decimal type for JavaScript.
   *  https://github.com/MikeMcl/decimal.js
   *  Copyright (c) 2016 Michael Mclaughlin <M8ch88l@gmail.com>
   *  MIT Expat Licence
   */


  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //


    // The maximum exponent magnitude.
    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.
  var EXP_LIMIT = 9e15,                      // 0 to 9e15

    // The limit on the value of `precision`, and on the value of the first argument to
    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.
    MAX_DIGITS = 1e9,                        // 0 to 1e9

    // The base 88 alphabet used by `toJSON` and `fromJSON`.
    // 7 printable ASCII characters omitted (space) \ " & ' < >
    NUMERALS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%()*+,-./:;=?@[]^_`{|}~',

    // The natural logarithm of 10 (1025 digits).
    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',

    // Pi (1025 digits).
    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',


    // The initial configuration properties of the Decimal constructor.
    Decimal = {

      // These values must be integers within the stated ranges (inclusive).
      // Most of these values can be changed during run-time using `Decimal.config`.

      // The maximum number of significant digits of the result of a calculation or base conversion.
      // E.g. `Decimal.config({ precision: 20 });`
      precision: 20,                         // 1 to MAX_DIGITS

      // The rounding mode used when rounding to `precision`.
      //
      // ROUND_UP         0 Away from zero.
      // ROUND_DOWN       1 Towards zero.
      // ROUND_CEIL       2 Towards +Infinity.
      // ROUND_FLOOR      3 Towards -Infinity.
      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.
      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
      //
      // E.g.
      // `Decimal.rounding = 4;`
      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`
      rounding: 4,                           // 0 to 8

      // The modulo mode used when calculating the modulus: a mod n.
      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.
      // The remainder (r) is calculated as: r = a - n * q.
      //
      // UP         0 The remainder is positive if the dividend is negative, else is negative.
      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).
      // FLOOR      3 The remainder has the same sign as the divisor (Python %).
      // HALF_EVEN  6 The IEEE 754 remainder function.
      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.
      //
      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian
      // division (9) are commonly used for the modulus operation. The other rounding modes can also
      // be used, but they may not give useful results.
      modulo: 1,                             // 0 to 9

      // The exponent value at and beneath which `toString` returns exponential notation.
      // JavaScript numbers: -7
      toExpNeg: -7,                          // 0 to -EXP_LIMIT

      // The exponent value at and above which `toString` returns exponential notation.
      // JavaScript numbers: 21
      toExpPos:  21,                         // 0 to EXP_LIMIT

      // The minimum exponent value, beneath which underflow to zero occurs.
      // JavaScript numbers: -324  (5e-324)
      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT

      // The maximum exponent value, above which overflow to Infinity occurs.
      // JavaScript numbers: 308  (1.7976931348623157e+308)
      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT

      // Whether to use cryptographically-secure random number generation, if available.
      crypto: void 0                         // true/false/undefined
    },


  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //


    inexact, noConflict, quadrant,
    cryptoObject = typeof crypto != 'undefined' ? crypto : null,
    external = true,

    decimalError = '[DecimalError] ',
    invalidArgument = decimalError + 'Invalid argument: ',
    precisionLimitExceeded = decimalError + 'Precision limit exceeded',

    mathfloor = Math.floor,
    mathpow = Math.pow,

    isBinary = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,
    isHex = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,
    isOctal = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,
    isDecimal = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,

    BASE = 1e7,
    LOG_BASE = 7,
    MAX_SAFE_INTEGER = 9007199254740991,

    LN10_PRECISION = LN10.length - 1,
    PI_PRECISION = PI.length - 1,

    // Decimal.prototype object
    P = {};


  // Decimal prototype methods


  /*
   *  absoluteValue             abs
   *  ceil
   *  comparedTo                cmp
   *  cosine                    cos
   *  cubeRoot                  cbrt
   *  decimalPlaces             dp
   *  dividedBy                 div
   *  dividedToIntegerBy        divToInt
   *  equals                    eq
   *  floor
   *  greaterThan               gt
   *  greaterThanOrEqualTo      gte
   *  hyperbolicCosine          cosh
   *  hyperbolicSine            sinh
   *  hyperbolicTangent         tanh
   *  inverseCosine             acos
   *  inverseHyperbolicCosine   acosh
   *  inverseHyperbolicSine     asinh
   *  inverseHyperbolicTangent  atanh
   *  inverseSine               asin
   *  inverseTangent            atan
   *  isFinite
   *  isInteger                 isInt
   *  isNaN
   *  isNegative                isNeg
   *  isPositive                isPos
   *  isZero
   *  lessThan                  lt
   *  lessThanOrEqualTo         lte
   *  logarithm                 log
   *  [maximum]                 [max]
   *  [minimum]                 [min]
   *  minus                     sub
   *  modulo                    mod
   *  naturalExponential        exp
   *  naturalLogarithm          ln
   *  negated                   neg
   *  plus                      add
   *  precision                 sd
   *  round
   *  sine                      sin
   *  squareRoot                sqrt
   *  tangent                   tan
   *  times                     mul
   *  toBinary
   *  toDecimalPlaces           toDP
   *  toExponential
   *  toFixed
   *  toFraction
   *  toHexadecimal             toHex
   *  toJSON
   *  toNearest
   *  toNumber
   *  toOctal
   *  toPower                   pow
   *  toPrecision
   *  toSignificantDigits       toSD
   *  toString
   *  truncated                 trunc
   *  valueOf
   */


  /*
   * Return a new Decimal whose value is the absolute value of this Decimal.
   *
   */
  P.absoluteValue = P.abs = function () {
    var x = new this.constructor(this);
    if (x.s < 0) x.s = 1;
    return finalise(x);
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the
   * direction of positive Infinity.
   *
   */
  P.ceil = function () {
    return finalise(new this.constructor(this), this.e + 1, 2);
  };


  /*
   * Return
   *   1    if the value of this Decimal is greater than the value of `y`,
   *  -1    if the value of this Decimal is less than the value of `y`,
   *   0    if they have the same value,
   *   NaN  if the value of either Decimal is NaN.
   *
   */
  P.comparedTo = P.cmp = function (y) {
    var i, j, xdL, ydL,
      x = this,
      xd = x.d,
      yd = (y = new x.constructor(y)).d,
      xs = x.s,
      ys = y.s;

    // Either NaN or Â±Infinity?
    if (!xd || !yd) {
      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;
    }

    // Either zero?
    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;

    // Signs differ?
    if (xs !== ys) return xs;

    // Compare exponents.
    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;

    xdL = xd.length;
    ydL = yd.length;

    // Compare digit by digit.
    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {
      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;
    }

    // Compare lengths.
    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;
  };


  /*
   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-1, 1]
   *
   * cos(0)         = 1
   * cos(-0)        = 1
   * cos(Infinity)  = NaN
   * cos(-Infinity) = NaN
   * cos(NaN)       = NaN
   *
   */
  P.cosine = P.cos = function () {
    var pr, rm,
      x = this,
      Ctor = x.constructor;

    if (!x.d) return new Ctor(NaN);

    // cos(0) = cos(-0) = 1
    if (!x.d[0]) return new Ctor(1);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;
    Ctor.rounding = 1;

    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));

    Ctor.precision = pr;
    Ctor.rounding = rm;

    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);
  };


  /*
   *
   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to
   * `precision` significant digits using rounding mode `rounding`.
   *
   *  cbrt(0)  =  0
   *  cbrt(-0) = -0
   *  cbrt(1)  =  1
   *  cbrt(-1) = -1
   *  cbrt(N)  =  N
   *  cbrt(-I) = -I
   *  cbrt(I)  =  I
   *
   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))
   *
   */
  P.cubeRoot = P.cbrt = function () {
    var e, m, n, r, rep, s, sd, t, t3, t3plusx,
      x = this,
      Ctor = x.constructor;

    if (!x.isFinite() || x.isZero()) return new Ctor(x);
    external = false;

    // Initial estimate.
    s = x.s * Math.pow(x.s * x, 1 / 3);

     // Math.cbrt underflow/overflow?
     // Pass x to Math.pow as integer, then adjust the exponent of the result.
    if (!s || Math.abs(s) == 1 / 0) {
      n = digitsToString(x.d);
      e = x.e;

      // Adjust n exponent so it is a multiple of 3 away from x exponent.
      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');
      s = Math.pow(n, 1 / 3);

      // Rarely, e may be one less than the result exponent value.
      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));

      if (s == 1 / 0) {
        n = '5e' + e;
      } else {
        n = s.toExponential();
        n = n.slice(0, n.indexOf('e') + 1) + e;
      }

      r = new Ctor(n);
      r.s = x.s;
    } else {
      r = new Ctor(s.toString());
    }

    sd = (e = Ctor.precision) + 3;

    // Halley's method.
    // TODO? Compare Newton's method.
    for (;;) {
      t = r;
      t3 = t.times(t).times(t);
      t3plusx = t3.plus(x);
      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);

      // TODO? Replace with for-loop and checkRoundingDigits.
      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {
        n = n.slice(sd - 3, sd + 1);

        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999
        // , i.e. approaching a rounding boundary, continue the iteration.
        if (n == '9999' || !rep && n == '4999') {

          // On the first iteration only, check to see if rounding up gives the exact result as the
          // nines may infinitely repeat.
          if (!rep) {
            finalise(t, e + 1, 0);

            if (t.times(t).times(t).eq(x)) {
              r = t;
              break;
            }
          }

          sd += 4;
          rep = 1;
        } else {

          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.
          // If not, then there are further digits and m will be truthy.
          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {

            // Truncate to the first rounding digit.
            finalise(r, e + 1, 1);
            m = !r.times(r).times(r).eq(x);
          }

          break;
        }
      }
    }

    external = true;

    return finalise(r, e, Ctor.rounding, m);
  };


  /*
   * Return the number of decimal places of the value of this Decimal.
   *
   */
  P.decimalPlaces = P.dp = function () {
    var w,
      d = this.d,
      n = NaN;

    if (d) {
      w = d.length - 1;
      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;

      // Subtract the number of trailing zeros of the last word.
      w = d[w];
      if (w) for (; w % 10 == 0; w /= 10) n--;
      if (n < 0) n = 0;
    }

    return n;
  };


  /*
   *  n / 0 = I
   *  n / N = N
   *  n / I = 0
   *  0 / n = 0
   *  0 / 0 = N
   *  0 / N = N
   *  0 / I = 0
   *  N / n = N
   *  N / 0 = N
   *  N / N = N
   *  N / I = N
   *  I / n = I
   *  I / 0 = I
   *  I / N = N
   *  I / I = N
   *
   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to
   * `precision` significant digits using rounding mode `rounding`.
   *
   */
  P.dividedBy = P.div = function (y) {
    return divide(this, new this.constructor(y));
  };


  /*
   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal
   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.
   *
   */
  P.dividedToIntegerBy = P.divToInt = function (y) {
    var x = this,
      Ctor = x.constructor;
    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);
  };


  /*
   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.
   *
   */
  P.equals = P.eq = function (y) {
    return this.cmp(y) === 0;
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the
   * direction of negative Infinity.
   *
   */
  P.floor = function () {
    return finalise(new this.constructor(this), this.e + 1, 3);
  };


  /*
   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return
   * false.
   *
   */
  P.greaterThan = P.gt = function (y) {
    return this.cmp(y) > 0;
  };


  /*
   * Return true if the value of this Decimal is greater than or equal to the value of `y`,
   * otherwise return false.
   *
   */
  P.greaterThanOrEqualTo = P.gte = function (y) {
    var k = this.cmp(y);
    return k == 1 || k === 0;
  };


  /*
   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this
   * Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [1, Infinity]
   *
   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...
   *
   * cosh(0)         = 1
   * cosh(-0)        = 1
   * cosh(Infinity)  = Infinity
   * cosh(-Infinity) = Infinity
   * cosh(NaN)       = NaN
   *
   *  x        time taken (ms)   result
   * 1000      9                 9.8503555700852349694e+433
   * 10000     25                4.4034091128314607936e+4342
   * 100000    171               1.4033316802130615897e+43429
   * 1000000   3817              1.5166076984010437725e+434294
   * 10000000  abandoned after 2 minute wait
   *
   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))
   *
   */
  P.hyperbolicCosine = P.cosh = function () {
    var k, n, pr, rm, len,
      x = this,
      Ctor = x.constructor,
      one = new Ctor(1);

    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);
    if (x.isZero()) return one;

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;
    Ctor.rounding = 1;
    len = x.d.length;

    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1
    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))

    // Estimate the optimum number of times to use the argument reduction.
    // TODO? Estimation reused from cosine() and may not be optimal here.
    if (len < 32) {
      k = Math.ceil(len / 3);
      n = Math.pow(4, -k).toString();
    } else {
      k = 16;
      n = '2.3283064365386962890625e-10';
    }

    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);

    // Reverse argument reduction
    var cosh2_x,
      i = k,
      d8 = new Ctor(8);
    for (; i--;) {
      cosh2_x = x.times(x);
      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));
    }

    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);
  };


  /*
   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this
   * Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-Infinity, Infinity]
   *
   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...
   *
   * sinh(0)         = 0
   * sinh(-0)        = -0
   * sinh(Infinity)  = Infinity
   * sinh(-Infinity) = -Infinity
   * sinh(NaN)       = NaN
   *
   * x        time taken (ms)
   * 10       2 ms
   * 100      5 ms
   * 1000     14 ms
   * 10000    82 ms
   * 100000   886 ms            1.4033316802130615897e+43429
   * 200000   2613 ms
   * 300000   5407 ms
   * 400000   8824 ms
   * 500000   13026 ms          8.7080643612718084129e+217146
   * 1000000  48543 ms
   *
   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))
   *
   */
  P.hyperbolicSine = P.sinh = function () {
    var k, pr, rm, len,
      x = this,
      Ctor = x.constructor;

    if (!x.isFinite() || x.isZero()) return new Ctor(x);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;
    Ctor.rounding = 1;
    len = x.d.length;

    if (len < 3) {
      x = taylorSeries(Ctor, 2, x, x, true);
    } else {

      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))
      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))
      // 3 multiplications and 1 addition

      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))
      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))
      // 4 multiplications and 2 additions

      // Estimate the optimum number of times to use the argument reduction.
      k = 1.4 * Math.sqrt(len);
      k = k > 16 ? 16 : k | 0;

      x = x.times(Math.pow(5, -k));

      x = taylorSeries(Ctor, 2, x, x, true);

      // Reverse argument reduction
      var sinh2_x,
        d5 = new Ctor(5),
        d16 = new Ctor(16),
        d20 = new Ctor(20);
      for (; k--;) {
        sinh2_x = x.times(x);
        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));
      }
    }

    Ctor.precision = pr;
    Ctor.rounding = rm;

    return finalise(x, pr, rm, true);
  };


  /*
   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this
   * Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-1, 1]
   *
   * tanh(x) = sinh(x) / cosh(x)
   *
   * tanh(0)         = 0
   * tanh(-0)        = -0
   * tanh(Infinity)  = 1
   * tanh(-Infinity) = -1
   * tanh(NaN)       = NaN
   *
   */
  P.hyperbolicTangent = P.tanh = function () {
    var pr, rm,
      x = this,
      Ctor = x.constructor;

    if (!x.isFinite()) return new Ctor(x.s);
    if (x.isZero()) return new Ctor(x);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + 7;
    Ctor.rounding = 1;

    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);
  };


  /*
   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of
   * this Decimal.
   *
   * Domain: [-1, 1]
   * Range: [0, pi]
   *
   * acos(x) = pi/2 - asin(x)
   *
   * acos(0)       = pi/2
   * acos(-0)      = pi/2
   * acos(1)       = 0
   * acos(-1)      = pi
   * acos(1/2)     = pi/3
   * acos(-1/2)    = 2*pi/3
   * acos(|x| > 1) = NaN
   * acos(NaN)     = NaN
   *
   */
  P.inverseCosine = P.acos = function () {
    var halfPi,
      x = this,
      Ctor = x.constructor,
      k = x.abs().cmp(1),
      pr = Ctor.precision,
      rm = Ctor.rounding;

    if (k !== -1) {
      return k === 0
        // |x| is 1
        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)
        // |x| > 1 or x is NaN
        : new Ctor(NaN);
    }

    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);

    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3

    Ctor.precision = pr + 6;
    Ctor.rounding = 1;

    x = x.asin();
    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);

    Ctor.precision = pr;
    Ctor.rounding = rm;

    return halfPi.minus(x);
  };


  /*
   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the
   * value of this Decimal.
   *
   * Domain: [1, Infinity]
   * Range: [0, Infinity]
   *
   * acosh(x) = ln(x + sqrt(x^2 - 1))
   *
   * acosh(x < 1)     = NaN
   * acosh(NaN)       = NaN
   * acosh(Infinity)  = Infinity
   * acosh(-Infinity) = NaN
   * acosh(0)         = NaN
   * acosh(-0)        = NaN
   * acosh(1)         = 0
   * acosh(-1)        = NaN
   *
   */
  P.inverseHyperbolicCosine = P.acosh = function () {
    var pr, rm,
      x = this,
      Ctor = x.constructor;

    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);
    if (!x.isFinite()) return new Ctor(x);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;
    Ctor.rounding = 1;
    external = false;

    x = x.times(x).minus(1).sqrt().plus(x);

    external = true;
    Ctor.precision = pr;
    Ctor.rounding = rm;

    return x.ln();
  };


  /*
   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value
   * of this Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-Infinity, Infinity]
   *
   * asinh(x) = ln(x + sqrt(x^2 + 1))
   *
   * asinh(NaN)       = NaN
   * asinh(Infinity)  = Infinity
   * asinh(-Infinity) = -Infinity
   * asinh(0)         = 0
   * asinh(-0)        = -0
   *
   */
  P.inverseHyperbolicSine = P.asinh = function () {
    var pr, rm,
      x = this,
      Ctor = x.constructor;

    if (!x.isFinite() || x.isZero()) return new Ctor(x);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;
    Ctor.rounding = 1;
    external = false;

    x = x.times(x).plus(1).sqrt().plus(x);

    external = true;
    Ctor.precision = pr;
    Ctor.rounding = rm;

    return x.ln();
  };


  /*
   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the
   * value of this Decimal.
   *
   * Domain: [-1, 1]
   * Range: [-Infinity, Infinity]
   *
   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))
   *
   * atanh(|x| > 1)   = NaN
   * atanh(NaN)       = NaN
   * atanh(Infinity)  = NaN
   * atanh(-Infinity) = NaN
   * atanh(0)         = 0
   * atanh(-0)        = -0
   * atanh(1)         = Infinity
   * atanh(-1)        = -Infinity
   *
   */
  P.inverseHyperbolicTangent = P.atanh = function () {
    var pr, rm, wpr, xsd,
      x = this,
      Ctor = x.constructor;

    if (!x.isFinite()) return new Ctor(NaN);
    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    xsd = x.sd();

    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);

    Ctor.precision = wpr = xsd - x.e;

    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);

    Ctor.precision = pr + 4;
    Ctor.rounding = 1;

    x = x.ln();

    Ctor.precision = pr;
    Ctor.rounding = rm;

    return x.times(0.5);
  };


  /*
   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this
   * Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-pi/2, pi/2]
   *
   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))
   *
   * asin(0)       = 0
   * asin(-0)      = -0
   * asin(1/2)     = pi/6
   * asin(-1/2)    = -pi/6
   * asin(1)       = pi/2
   * asin(-1)      = -pi/2
   * asin(|x| > 1) = NaN
   * asin(NaN)     = NaN
   *
   * TODO? Compare performance of Taylor series.
   *
   */
  P.inverseSine = P.asin = function () {
    var halfPi, k,
      pr, rm,
      x = this,
      Ctor = x.constructor;

    if (x.isZero()) return new Ctor(x);

    k = x.abs().cmp(1);
    pr = Ctor.precision;
    rm = Ctor.rounding;

    if (k !== -1) {

      // |x| is 1
      if (k === 0) {
        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);
        halfPi.s = x.s;
        return halfPi;
      }

      // |x| > 1 or x is NaN
      return new Ctor(NaN);
    }

    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6

    Ctor.precision = pr + 6;
    Ctor.rounding = 1;

    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();

    Ctor.precision = pr;
    Ctor.rounding = rm;

    return x.times(2);
  };


  /*
   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value
   * of this Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-pi/2, pi/2]
   *
   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...
   *
   * atan(0)         = 0
   * atan(-0)        = -0
   * atan(1)         = pi/4
   * atan(-1)        = -pi/4
   * atan(Infinity)  = pi/2
   * atan(-Infinity) = -pi/2
   * atan(NaN)       = NaN
   *
   */
  P.inverseTangent = P.atan = function () {
    var i, j, k, n, px, t, r, wpr, x2,
      x = this,
      Ctor = x.constructor,
      pr = Ctor.precision,
      rm = Ctor.rounding;

    if (!x.isFinite()) {
      if (!x.s) return new Ctor(NaN);
      if (pr + 4 <= PI_PRECISION) {
        r = getPi(Ctor, pr + 4, rm).times(0.5);
        r.s = x.s;
        return r;
      }
    } else if (x.isZero()) {
      return new Ctor(x);
    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {
      r = getPi(Ctor, pr + 4, rm).times(0.25);
      r.s = x.s;
      return r;
    }

    Ctor.precision = wpr = pr + 10;
    Ctor.rounding = 1;

    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);

    // Argument reduction
    // Ensure |x| < 0.42
    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))

    k = Math.min(28, wpr / LOG_BASE + 2 | 0);

    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));

    external = false;

    j = Math.ceil(wpr / LOG_BASE);
    n = 1;
    x2 = x.times(x);
    r = new Ctor(x);
    px = x;

    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...
    for (; i !== -1;) {
      px = px.times(x2);
      t = r.minus(px.div(n += 2));

      px = px.times(x2);
      r = t.plus(px.div(n += 2));

      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);
    }

    if (k) r = r.times(2 << (k - 1));

    external = true;

    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);
  };


  /*
   * Return true if the value of this Decimal is a finite number, otherwise return false.
   *
   */
  P.isFinite = function () {
    return !!this.d;
  };


  /*
   * Return true if the value of this Decimal is an integer, otherwise return false.
   *
   */
  P.isInteger = P.isInt = function () {
    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;
  };


  /*
   * Return true if the value of this Decimal is NaN, otherwise return false.
   *
   */
  P.isNaN = function () {
    return !this.s;
  };


  /*
   * Return true if the value of this Decimal is negative, otherwise return false.
   *
   */
  P.isNegative = P.isNeg = function () {
    return this.s < 0;
  };


  /*
   * Return true if the value of this Decimal is positive, otherwise return false.
   *
   */
  P.isPositive = P.isPos = function () {
    return this.s > 0;
  };


  /*
   * Return true if the value of this Decimal is 0 or -0, otherwise return false.
   *
   */
  P.isZero = function () {
    return !!this.d && this.d[0] === 0;
  };


  /*
   * Return true if the value of this Decimal is less than `y`, otherwise return false.
   *
   */
  P.lessThan = P.lt = function (y) {
    return this.cmp(y) < 0;
  };


  /*
   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.
   *
   */
  P.lessThanOrEqualTo = P.lte = function (y) {
    return this.cmp(y) < 1;
  };


  /*
   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * If no base is specified, return log[10](arg).
   *
   * log[base](arg) = ln(arg) / ln(base)
   *
   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'
   * otherwise:
   *
   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen
   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error
   * between the result and the correctly rounded result will be one ulp (unit in the last place).
   *
   * log[-b](a)       = NaN
   * log[0](a)        = NaN
   * log[1](a)        = NaN
   * log[NaN](a)      = NaN
   * log[Infinity](a) = NaN
   * log[b](0)        = -Infinity
   * log[b](-0)       = -Infinity
   * log[b](-a)       = NaN
   * log[b](1)        = 0
   * log[b](Infinity) = Infinity
   * log[b](NaN)      = NaN
   *
   * [base] {number|string|Decimal} The base of the logarithm.
   *
   */
  P.logarithm = P.log = function (base) {
    var isBase10, d, denominator, k, inf, num, sd, r,
      arg = this,
      Ctor = arg.constructor,
      pr = Ctor.precision,
      rm = Ctor.rounding,
      guard = 5;

    // Default base is 10.
    if (base == null) {
      base = new Ctor(10);
      isBase10 = true;
    } else {
      base = new Ctor(base);
      d = base.d;

      // Return NaN if base is negative, or non-finite, or is 0 or 1.
      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);

      isBase10 = base.eq(10);
    }

    d = arg.d;

    // Is arg negative, non-finite, 0 or 1?
    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {
      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);
    }

    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an
    // integer power of 10.
    if (isBase10) {
      if (d.length > 1) {
        inf = true;
      } else {
        for (k = d[0]; k % 10 === 0;) k /= 10;
        inf = k !== 1;
      }
    }

    external = false;
    sd = pr + guard;
    num = naturalLogarithm(arg, sd);
    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);

    // The result will have 5 rounding digits.
    r = divide(num, denominator, sd, 1);

    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,
    // calculate 10 further digits.
    //
    // If the result is known to have an infinite decimal expansion, repeat this until it is clear
    // that the result is above or below the boundary. Otherwise, if after calculating the 10
    // further digits, the last 14 are nines, round up and assume the result is exact.
    // Also assume the result is exact if the last 14 are zero.
    //
    // Example of a result that will be incorrectly rounded:
    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...
    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it
    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so
    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal
    // place is still 2.6.
    if (checkRoundingDigits(r.d, k = pr, rm)) {

      do {
        sd += 10;
        num = naturalLogarithm(arg, sd);
        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);
        r = divide(num, denominator, sd, 1);

        if (!inf) {

          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.
          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {
            r = finalise(r, pr + 1, 0);
          }

          break;
        }
      } while (checkRoundingDigits(r.d, k += 10, rm));
    }

    external = true;

    return finalise(r, pr, rm);
  };


  /*
   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.
   *
   * arguments {number|string|Decimal}
   *
  P.max = function () {
    Array.prototype.push.call(arguments, this);
    return maxOrMin(this.constructor, arguments, 'lt');
  };
   */


  /*
   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.
   *
   * arguments {number|string|Decimal}
   *
  P.min = function () {
    Array.prototype.push.call(arguments, this);
    return maxOrMin(this.constructor, arguments, 'gt');
  };
   */


  /*
   *  n - 0 = n
   *  n - N = N
   *  n - I = -I
   *  0 - n = -n
   *  0 - 0 = 0
   *  0 - N = N
   *  0 - I = -I
   *  N - n = N
   *  N - 0 = N
   *  N - N = N
   *  N - I = N
   *  I - n = I
   *  I - 0 = I
   *  I - N = N
   *  I - I = N
   *
   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   */
  P.minus = P.sub = function (y) {
    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,
      x = this,
      Ctor = x.constructor;

    y = new Ctor(y);

    // If either is not finite...
    if (!x.d || !y.d) {

      // Return NaN if either is NaN.
      if (!x.s || !y.s) y = new Ctor(NaN);

      // Return y negated if x is finite and y is Â±Infinity.
      else if (x.d) y.s = -y.s;

      // Return x if y is finite and x is Â±Infinity.
      // Return x if both are Â±Infinity with different signs.
      // Return NaN if both are Â±Infinity with the same sign.
      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);

      return y;
    }

    // If signs differ...
    if (x.s != y.s) {
      y.s = -y.s;
      return x.plus(y);
    }

    xd = x.d;
    yd = y.d;
    pr = Ctor.precision;
    rm = Ctor.rounding;

    // If either is zero...
    if (!xd[0] || !yd[0]) {

      // Return y negated if x is zero and y is non-zero.
      if (yd[0]) y.s = -y.s;

      // Return x if y is zero and x is non-zero.
      else if (xd[0]) y = new Ctor(x);

      // Return zero if both are zero.
      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.
      else return new Ctor(rm === 3 ? -0 : 0);

      return external ? finalise(y, pr, rm) : y;
    }

    // x and y are finite, non-zero numbers with the same sign.

    // Calculate base 1e7 exponents.
    e = mathfloor(y.e / LOG_BASE);
    xe = mathfloor(x.e / LOG_BASE);

    xd = xd.slice();
    k = xe - e;

    // If base 1e7 exponents differ...
    if (k) {
      xLTy = k < 0;

      if (xLTy) {
        d = xd;
        k = -k;
        len = yd.length;
      } else {
        d = yd;
        e = xe;
        len = xd.length;
      }

      // Numbers with massively different exponents would result in a very high number of
      // zeros needing to be prepended, but this can be avoided while still ensuring correct
      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.
      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;

      if (k > i) {
        k = i;
        d.length = 1;
      }

      // Prepend zeros to equalise exponents.
      d.reverse();
      for (i = k; i--;) d.push(0);
      d.reverse();

    // Base 1e7 exponents equal.
    } else {

      // Check digits to determine which is the bigger number.

      i = xd.length;
      len = yd.length;
      xLTy = i < len;
      if (xLTy) len = i;

      for (i = 0; i < len; i++) {
        if (xd[i] != yd[i]) {
          xLTy = xd[i] < yd[i];
          break;
        }
      }

      k = 0;
    }

    if (xLTy) {
      d = xd;
      xd = yd;
      yd = d;
      y.s = -y.s;
    }

    len = xd.length;

    // Append zeros to `xd` if shorter.
    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.
    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;

    // Subtract yd from xd.
    for (i = yd.length; i > k;) {

      if (xd[--i] < yd[i]) {
        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;
        --xd[j];
        xd[i] += BASE;
      }

      xd[i] -= yd[i];
    }

    // Remove trailing zeros.
    for (; xd[--len] === 0;) xd.pop();

    // Remove leading zeros and adjust exponent accordingly.
    for (; xd[0] === 0; xd.shift()) --e;

    // Zero?
    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);

    y.d = xd;
    y.e = getBase10Exponent(xd, e);

    return external ? finalise(y, pr, rm) : y;
  };


  /*
   *   n % 0 =  N
   *   n % N =  N
   *   n % I =  n
   *   0 % n =  0
   *  -0 % n = -0
   *   0 % 0 =  N
   *   0 % N =  N
   *   0 % I =  0
   *   N % n =  N
   *   N % 0 =  N
   *   N % N =  N
   *   N % I =  N
   *   I % n =  N
   *   I % 0 =  N
   *   I % N =  N
   *   I % I =  N
   *
   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to
   * `precision` significant digits using rounding mode `rounding`.
   *
   * The result depends on the modulo mode.
   *
   */
  P.modulo = P.mod = function (y) {
    var q,
      x = this,
      Ctor = x.constructor;

    y = new Ctor(y);

    // Return NaN if x is Â±Infinity or NaN, or y is NaN or Â±0.
    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);

    // Return x if y is Â±Infinity or x is Â±0.
    if (!y.d || x.d && !x.d[0]) {
      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);
    }

    // Prevent rounding of intermediate calculations.
    external = false;

    if (Ctor.modulo == 9) {

      // Euclidian division: q = sign(y) * floor(x / abs(y))
      // result = x - q * y    where  0 <= result < abs(y)
      q = divide(x, y.abs(), 0, 3, 1);
      q.s *= y.s;
    } else {
      q = divide(x, y, 0, Ctor.modulo, 1);
    }

    q = q.times(y);

    external = true;

    return x.minus(q);
  };


  /*
   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,
   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   */
  P.naturalExponential = P.exp = function () {
    return naturalExponential(this);
  };


  /*
   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,
   * rounded to `precision` significant digits using rounding mode `rounding`.
   *
   */
  P.naturalLogarithm = P.ln = function () {
    return naturalLogarithm(this);
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by
   * -1.
   *
   */
  P.negated = P.neg = function () {
    var x = new this.constructor(this);
    x.s = -x.s;
    return finalise(x);
  };


  /*
   *  n + 0 = n
   *  n + N = N
   *  n + I = I
   *  0 + n = n
   *  0 + 0 = 0
   *  0 + N = N
   *  0 + I = I
   *  N + n = N
   *  N + 0 = N
   *  N + N = N
   *  N + I = N
   *  I + n = I
   *  I + 0 = I
   *  I + N = N
   *  I + I = I
   *
   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   */
  P.plus = P.add = function (y) {
    var carry, d, e, i, k, len, pr, rm, xd, yd,
      x = this,
      Ctor = x.constructor;

    y = new Ctor(y);

    // If either is not finite...
    if (!x.d || !y.d) {

      // Return NaN if either is NaN.
      if (!x.s || !y.s) y = new Ctor(NaN);

      // Return x if y is finite and x is Â±Infinity.
      // Return x if both are Â±Infinity with the same sign.
      // Return NaN if both are Â±Infinity with different signs.
      // Return y if x is finite and y is Â±Infinity.
      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);

      return y;
    }

     // If signs differ...
    if (x.s != y.s) {
      y.s = -y.s;
      return x.minus(y);
    }

    xd = x.d;
    yd = y.d;
    pr = Ctor.precision;
    rm = Ctor.rounding;

    // If either is zero...
    if (!xd[0] || !yd[0]) {

      // Return x if y is zero.
      // Return y if y is non-zero.
      if (!yd[0]) y = new Ctor(x);

      return external ? finalise(y, pr, rm) : y;
    }

    // x and y are finite, non-zero numbers with the same sign.

    // Calculate base 1e7 exponents.
    k = mathfloor(x.e / LOG_BASE);
    e = mathfloor(y.e / LOG_BASE);

    xd = xd.slice();
    i = k - e;

    // If base 1e7 exponents differ...
    if (i) {

      if (i < 0) {
        d = xd;
        i = -i;
        len = yd.length;
      } else {
        d = yd;
        e = k;
        len = xd.length;
      }

      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.
      k = Math.ceil(pr / LOG_BASE);
      len = k > len ? k + 1 : len + 1;

      if (i > len) {
        i = len;
        d.length = 1;
      }

      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.
      d.reverse();
      for (; i--;) d.push(0);
      d.reverse();
    }

    len = xd.length;
    i = yd.length;

    // If yd is longer than xd, swap xd and yd so xd points to the longer array.
    if (len - i < 0) {
      i = len;
      d = yd;
      yd = xd;
      xd = d;
    }

    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.
    for (carry = 0; i;) {
      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;
      xd[i] %= BASE;
    }

    if (carry) {
      xd.unshift(carry);
      ++e;
    }

    // Remove trailing zeros.
    // No need to check for zero, as +x + +y != 0 && -x + -y != 0
    for (len = xd.length; xd[--len] == 0;) xd.pop();

    y.d = xd;
    y.e = getBase10Exponent(xd, e);

    return external ? finalise(y, pr, rm) : y;
  };


  /*
   * Return the number of significant digits of the value of this Decimal.
   *
   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.
   *
   */
  P.precision = P.sd = function (z) {
    var k,
      x = this;

    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);

    if (x.d) {
      k = getPrecision(x.d);
      if (z && x.e + 1 > k) k = x.e + 1;
    } else {
      k = NaN;
    }

    return k;
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using
   * rounding mode `rounding`.
   *
   */
  P.round = function () {
    var x = this,
      Ctor = x.constructor;

    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);
  };


  /*
   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-1, 1]
   *
   * sin(x) = x - x^3/3! + x^5/5! - ...
   *
   * sin(0)         = 0
   * sin(-0)        = -0
   * sin(Infinity)  = NaN
   * sin(-Infinity) = NaN
   * sin(NaN)       = NaN
   *
   */
  P.sine = P.sin = function () {
    var pr, rm,
      x = this,
      Ctor = x.constructor;

    if (!x.isFinite()) return new Ctor(NaN);
    if (x.isZero()) return new Ctor(x);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;
    Ctor.rounding = 1;

    x = sine(Ctor, toLessThanHalfPi(Ctor, x));

    Ctor.precision = pr;
    Ctor.rounding = rm;

    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);
  };


  /*
   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   *  sqrt(-n) =  N
   *  sqrt(N)  =  N
   *  sqrt(-I) =  N
   *  sqrt(I)  =  I
   *  sqrt(0)  =  0
   *  sqrt(-0) = -0
   *
   */
  P.squareRoot = P.sqrt = function () {
    var m, n, sd, r, rep, t,
      x = this,
      d = x.d,
      e = x.e,
      s = x.s,
      Ctor = x.constructor;

    // Negative/NaN/Infinity/zero?
    if (s !== 1 || !d || !d[0]) {
      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);
    }

    external = false;

    // Initial estimate.
    s = Math.sqrt(+x);

    // Math.sqrt underflow/overflow?
    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.
    if (s == 0 || s == 1 / 0) {
      n = digitsToString(d);

      if ((n.length + e) % 2 == 0) n += '0';
      s = Math.sqrt(n);
      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);

      if (s == 1 / 0) {
        n = '1e' + e;
      } else {
        n = s.toExponential();
        n = n.slice(0, n.indexOf('e') + 1) + e;
      }

      r = new Ctor(n);
    } else {
      r = new Ctor(s.toString());
    }

    sd = (e = Ctor.precision) + 3;

    // Newton-Raphson iteration.
    for (;;) {
      t = r;
      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);

      // TODO? Replace with for-loop and checkRoundingDigits.
      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {
        n = n.slice(sd - 3, sd + 1);

        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or
        // 4999, i.e. approaching a rounding boundary, continue the iteration.
        if (n == '9999' || !rep && n == '4999') {

          // On the first iteration only, check to see if rounding up gives the exact result as the
          // nines may infinitely repeat.
          if (!rep) {
            finalise(t, e + 1, 0);

            if (t.times(t).eq(x)) {
              r = t;
              break;
            }
          }

          sd += 4;
          rep = 1;
        } else {

          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.
          // If not, then there are further digits and m will be truthy.
          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {

            // Truncate to the first rounding digit.
            finalise(r, e + 1, 1);
            m = !r.times(r).eq(x);
          }

          break;
        }
      }
    }

    external = true;

    return finalise(r, e, Ctor.rounding, m);
  };


  /*
   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-Infinity, Infinity]
   *
   * tan(0)         = 0
   * tan(-0)        = -0
   * tan(Infinity)  = NaN
   * tan(-Infinity) = NaN
   * tan(NaN)       = NaN
   *
   */
  P.tangent = P.tan = function () {
    var pr, rm,
      x = this,
      Ctor = x.constructor;

    if (!x.isFinite()) return new Ctor(NaN);
    if (x.isZero()) return new Ctor(x);

    pr = Ctor.precision;
    rm = Ctor.rounding;
    Ctor.precision = pr + 10;
    Ctor.rounding = 1;

    x = x.sin();
    x.s = 1;
    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);

    Ctor.precision = pr;
    Ctor.rounding = rm;

    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);
  };


  /*
   *  n * 0 = 0
   *  n * N = N
   *  n * I = I
   *  0 * n = 0
   *  0 * 0 = 0
   *  0 * N = N
   *  0 * I = N
   *  N * n = N
   *  N * 0 = N
   *  N * N = N
   *  N * I = N
   *  I * n = I
   *  I * 0 = N
   *  I * N = N
   *  I * I = I
   *
   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   */
  P.times = P.mul = function (y) {
    var carry, e, i, k, r, rL, t, xdL, ydL,
      x = this,
      Ctor = x.constructor,
      xd = x.d,
      yd = (y = new Ctor(y)).d;

    y.s *= x.s;

     // If either is NaN, Â±Infinity or Â±0...
    if (!xd || !xd[0] || !yd || !yd[0]) {

      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd

        // Return NaN if either is NaN.
        // Return NaN if x is Â±0 and y is Â±Infinity, or y is Â±0 and x is Â±Infinity.
        ? NaN

        // Return Â±Infinity if either is Â±Infinity.
        // Return Â±0 if either is Â±0.
        : !xd || !yd ? y.s / 0 : y.s * 0);
    }

    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);
    xdL = xd.length;
    ydL = yd.length;

    // Ensure xd points to the longer array.
    if (xdL < ydL) {
      r = xd;
      xd = yd;
      yd = r;
      rL = xdL;
      xdL = ydL;
      ydL = rL;
    }

    // Initialise the result array with zeros.
    r = [];
    rL = xdL + ydL;
    for (i = rL; i--;) r.push(0);

    // Multiply!
    for (i = ydL; --i >= 0;) {
      carry = 0;
      for (k = xdL + i; k > i;) {
        t = r[k] + yd[i] * xd[k - i - 1] + carry;
        r[k--] = t % BASE | 0;
        carry = t / BASE | 0;
      }

      r[k] = (r[k] + carry) % BASE | 0;
    }

    // Remove trailing zeros.
    for (; !r[--rL];) r.pop();

    if (carry) ++e;
    else r.shift();

    // Remove trailing zeros.
    for (i = r.length; !r[--i];) r.pop();

    y.d = r;
    y.e = getBase10Exponent(r, e);

    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;
  };


  /*
   * Return a string representing the value of this Decimal in base 2, round to `sd` significant
   * digits using rounding mode `rm`.
   *
   * If the optional `sd` argument is present then return binary exponential notation.
   *
   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */
  P.toBinary = function (sd, rm) {
    return toStringBinary(this, 2, sd, rm);
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`
   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.
   *
   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.
   *
   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */
  P.toDecimalPlaces = P.toDP = function (dp, rm) {
    var x = this,
      Ctor = x.constructor;

    x = new Ctor(x);
    if (dp === void 0) return x;

    checkInt32(dp, 0, MAX_DIGITS);

    if (rm === void 0) rm = Ctor.rounding;
    else checkInt32(rm, 0, 8);

    return finalise(x, dp + x.e + 1, rm);
  };


  /*
   * Return a string representing the value of this Decimal in exponential notation rounded to
   * `dp` fixed decimal places using rounding mode `rounding`.
   *
   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */
  P.toExponential = function (dp, rm) {
    var str,
      x = this,
      Ctor = x.constructor;

    if (dp === void 0) {
      str = finiteToString(x, true);
    } else {
      checkInt32(dp, 0, MAX_DIGITS);

      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);

      x = finalise(new Ctor(x), dp + 1, rm);
      str = finiteToString(x, true, dp + 1);
    }

    return x.isNeg() && !x.isZero() ? '-' + str : str;
  };


  /*
   * Return a string representing the value of this Decimal in normal (fixed-point) notation to
   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is
   * omitted.
   *
   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.
   *
   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.
   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.
   * (-0).toFixed(3) is '0.000'.
   * (-0.5).toFixed(0) is '-0'.
   *
   */
  P.toFixed = function (dp, rm) {
    var str, y,
      x = this,
      Ctor = x.constructor;

    if (dp === void 0) {
      str = finiteToString(x);
    } else {
      checkInt32(dp, 0, MAX_DIGITS);

      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);

      y = finalise(new Ctor(x), dp + x.e + 1, rm);
      str = finiteToString(y, false, dp + y.e + 1);
    }

    // To determine whether to add the minus sign look at the value before it was rounded,
    // i.e. look at `x` rather than `y`.
    return x.isNeg() && !x.isZero() ? '-' + str : str;
  };


  /*
   * Return an array representing the value of this Decimal as a simple fraction with an integer
   * numerator and an integer denominator.
   *
   * The denominator will be a positive non-zero value less than or equal to the specified maximum
   * denominator. If a maximum denominator is not specified, the denominator will be the lowest
   * value necessary to represent the number exactly.
   *
   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.
   *
   */
  P.toFraction = function (maxD) {
    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,
      x = this,
      xd = x.d,
      Ctor = x.constructor;

    if (!xd) return new Ctor(x);

    n1 = d0 = new Ctor(1);
    d1 = n0 = new Ctor(0);

    d = new Ctor(d1);
    e = d.e = getPrecision(xd) - x.e - 1;
    k = e % LOG_BASE;
    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);

    if (maxD == null) {

      // d is 10**e, the minimum max-denominator needed.
      maxD = e > 0 ? d : n1;
    } else {
      n = new Ctor(maxD);
      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);
      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;
    }

    external = false;
    n = new Ctor(digitsToString(xd));
    pr = Ctor.precision;
    Ctor.precision = e = xd.length * LOG_BASE * 2;

    for (;;)  {
      q = divide(n, d, 0, 1, 1);
      d2 = d0.plus(q.times(d1));
      if (d2.cmp(maxD) == 1) break;
      d0 = d1;
      d1 = d2;
      d2 = n1;
      n1 = n0.plus(q.times(d2));
      n0 = d2;
      d2 = d;
      d = n.minus(q.times(d2));
      n = d2;
    }

    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);
    n0 = n0.plus(d2.times(n1));
    d0 = d0.plus(d2.times(d1));
    n0.s = n1.s = x.s;

    // Determine which fraction is closer to x, n0/d0 or n1/d1?
    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1
        ? [n1, d1] : [n0, d0];

    Ctor.precision = pr;
    external = true;

    return r;
  };


  /*
   * Return a string representing the value of this Decimal in base 16, round to `sd` significant
   * digits using rounding mode `rm`.
   *
   * If the optional `sd` argument is present then return binary exponential notation.
   *
   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */
  P.toHexadecimal = P.toHex = function (sd, rm) {
    return toStringBinary(this, 16, sd, rm);
  };


  /*
   * Return a string representing the exact value of this Decimal in a compact base-88 based format.
   *
   * The number of characters of the string will always be equal to or less than the number of
   * characters returned by `toString` or `toExponential` - usually just over half as many.
   *
   * The original Decimal value can be recreated by passing the string to `Decimal.fromJSON`.
   *
   * Base 88 alphabet:
   * 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%()*+,-./:;=?@[]^_`{|}~
   *
   * The following 7 printable ASCII characters are not used
   * (space) \ " & ' < >
   * so the return value is safe for strings, HTML, JSON, and XML.
   *
   *     0   0     g  16    w  32    M  48    $  64    ]  80
   *     1   1     h  17    x  33    N  49    %  65    ^  81
   *     2   2     i  18    y  34    O  50    (  66    _  82
   *     3   3     j  19    z  35    P  51    )  67    `  83
   *     4   4     k  20    A  36    Q  52    *  68    {  84
   *     5   5     l  21    B  37    R  53    +  69    |  85
   *     6   6     m  22    C  38    S  54    ,  70    }  86
   *     7   7     n  23    D  39    T  55    -  71    ~  87
   *     8   8     o  24    E  40    U  56    .  72
   *     9   9     p  25    F  41    V  57    /  73
   *     a  10     q  26    G  42    W  58    :  74
   *     b  11     r  27    H  43    X  59    ;  75
   *     c  12     s  28    I  44    Y  60    =  76
   *     d  13     t  29    J  45    Z  61    ?  77
   *     e  14     u  30    K  46    !  62    @  78
   *     f  15     v  31    L  47    #  63    [  79
   *
   * If the return value is just one character, it represents:
   * 0-81  [[0, 40][-0, -40]]
   * 82    -Infinity
   * 83    +Infinity
   * 84    NaN
   * 85-87 free
   *
   *   64 32 16  8  4  2  1
   *    1  0  1  0  1  1  1 = 87
   *
   */
   P.toJSON = function () {
    var arr, e, i, k, len, n, r, str,
      x = this,
      isNeg = x.s < 0;

    // -Infinity/Infinity/NaN.
    if (!x.d) return NUMERALS.charAt(x.s ? isNeg ? 82 : 83 : 84);
    e = x.e;

    // Small integer.
    if (x.d.length === 1 && e < 4 && e >= 0) {
      n = x.d[0];

      if (n < 2857) {

        // One character.
        // [[0, 40][-0, -40]]
        if (n < 41) return NUMERALS.charAt(isNeg ? n + 41 : n);

        // Two characters. High bit of first character unset.
        // 0XXXXXX
        // 63*88 + 87 = 5631 = 5632 values, 5632/2 = 2816
        // [[0, 2815][2816, 5631]]  (2816 * 2 = 5632 values)
        // [[0, 2815][-0, -2815]]
        // [[41, 2856][-41, -2856]]
        n -= 41;
        if (isNeg) n += 2816;
        k = n / 88 | 0;

        return NUMERALS.charAt(k) + NUMERALS.charAt(n - k * 88);
      }
    }

    str = digitsToString(x.d);
    r = '';

    // Values with a small exponent. Set high bit.
    // Positive value: 100XXXX
    // 1 0 0 {exponent [0, 15] -> [-7, 8]}
    if (!isNeg && e <= 8 && e >= -7) {
      k = 64 + e + 7;

    // Negative value: 1010XXX
    // 1 0 1 0 {exponent [0, 7] -> [-3, 4]}
    } else if (isNeg && e <= 4 && e >= -3) {
      k = 64 + 16 + e + 3;

    // Integer without trailing zeros: 0X00000
    // 0 {is negative} 0 0 0 0 0
    } else if (str.length === e + 1) {
      k = 32 * isNeg;

    // All remaining values: 0XXXXXX
    // Result will have at least 3 characters.
    // 0 {is negative} {is exponent negative} {exponent character count [1, 15]}
    } else {
      k = 32 * isNeg + 16 * (e < 0);
      e = Math.abs(e);

      // One character to represent the exponent.
      if (e < 88)  {
        k += 1;
        r = NUMERALS.charAt(e);

      // Two characters to represent the exponent.
      // 87*88 + 87 = 7743
      } else if (e < 7744) {
        k += 2;
        n = e / 88 | 0;
        r = NUMERALS.charAt(n) + NUMERALS.charAt(e - n * 88);

      // More than two characters to represent the exponent.
      } else {
        arr = convertBase(String(e), 10, 88);
        len = arr.length;
        k += len;
        for (i = 0; i < len; i++) r += NUMERALS.charAt(arr[i]);
      }
    }

    // At this point r contains the characters in base 88 representing the exponent value.
    // Prepend the first character, which describes the sign, the exponent sign, and the number of
    // characters that follow which represent the exponent value.
    r = NUMERALS.charAt(k) + r;
    arr = convertBase(str, 10, 88);
    len = arr.length;

    // Add the base 88 characters that represent the significand.
    for (i = 0; i < len; i++) r += NUMERALS.charAt(arr[i]);

    return r;
  };


  /*
   * Returns a new Decimal whose value is the nearest multiple of the magnitude of `y` to the value
   * of this Decimal.
   *
   * If the value of this Decimal is equidistant from two multiples of `y`, the rounding mode `rm`,
   * or `Decimal.rounding` if `rm` is omitted, determines the direction of the nearest multiple.
   *
   * In the context of this method, rounding mode 4 (ROUND_HALF_UP) is the same as rounding mode 0
   * (ROUND_UP), and so on.
   *
   * The return value will always have the same sign as this Decimal, unless either this Decimal
   * or `y` is NaN, in which case the return value will be also be NaN.
   *
   * The return value is not affected by the value of `precision`.
   *
   * y {number|string|Decimal} The magnitude to round to a multiple of.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   * 'toNearest() rounding mode not an integer: {rm}'
   * 'toNearest() rounding mode out of range: {rm}'
   *
   */
  P.toNearest = function (y, rm) {
    var x = this,
      Ctor = x.constructor;

    x = new Ctor(x);

    if (y == null) {

      // If x is not finite, return x.
      if (!x.d) return x;

      y = new Ctor(1);
      rm = Ctor.rounding;
    } else {
      y = new Ctor(y);
      if (rm !== void 0) checkInt32(rm, 0, 8);

      // If x is not finite, return x if y is not NaN, else NaN.
      if (!x.d) return y.s ? x : y;

      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.
      if (!y.d) {
        if (y.s) y.s = x.s;
        return y;
      }
    }

    // If y is not zero, calculate the nearest multiple of y to x.
    if (y.d[0]) {
      external = false;
      if (rm < 4) rm = [4, 5, 7, 8][rm];
      x = divide(x, y, 0, rm, 1).times(y);
      external = true;
      finalise(x);

    // If y is zero, return zero with the sign of x.
    } else {
      y.s = x.s;
      x = y;
    }

    return x;
  };


  /*
   * Return the value of this Decimal converted to a number primitive.
   * Zero keeps its sign.
   *
   */
  P.toNumber = function () {
    return +this;
  };


  /*
   * Return a string representing the value of this Decimal in base 8, round to `sd` significant
   * digits using rounding mode `rm`.
   *
   * If the optional `sd` argument is present then return binary exponential notation.
   *
   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */
  P.toOctal = function (sd, rm) {
    return toStringBinary(this, 8, sd, rm);
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded
   * to `precision` significant digits using rounding mode `rounding`.
   *
   * ECMAScript compliant.
   *
   *   pow(x, NaN)                           = NaN
   *   pow(x, Â±0)                            = 1

   *   pow(NaN, non-zero)                    = NaN
   *   pow(abs(x) > 1, +Infinity)            = +Infinity
   *   pow(abs(x) > 1, -Infinity)            = +0
   *   pow(abs(x) == 1, Â±Infinity)           = NaN
   *   pow(abs(x) < 1, +Infinity)            = +0
   *   pow(abs(x) < 1, -Infinity)            = +Infinity
   *   pow(+Infinity, y > 0)                 = +Infinity
   *   pow(+Infinity, y < 0)                 = +0
   *   pow(-Infinity, odd integer > 0)       = -Infinity
   *   pow(-Infinity, even integer > 0)      = +Infinity
   *   pow(-Infinity, odd integer < 0)       = -0
   *   pow(-Infinity, even integer < 0)      = +0
   *   pow(+0, y > 0)                        = +0
   *   pow(+0, y < 0)                        = +Infinity
   *   pow(-0, odd integer > 0)              = -0
   *   pow(-0, even integer > 0)             = +0
   *   pow(-0, odd integer < 0)              = -Infinity
   *   pow(-0, even integer < 0)             = +Infinity
   *   pow(finite x < 0, finite non-integer) = NaN
   *
   * For non-integer or very large exponents pow(x, y) is calculated using
   *
   *   x^y = exp(y*ln(x))
   *
   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the
   * probability of an incorrectly rounded result
   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14
   * i.e. 1 in 250,000,000,000,000
   *
   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).
   *
   * y {number|string|Decimal} The power to which to raise this Decimal.
   *
   */
  P.toPower = P.pow = function (y) {
    var e, k, pr, r, rm, sign, yIsInt,
      x = this,
      Ctor = x.constructor,
      yn = +(y = new Ctor(y));

    // Either Â±Infinity, NaN or Â±0?
    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return  new Ctor(mathpow(+x, yn));

    x = new Ctor(x);

    if (x.eq(1)) return x;

    pr = Ctor.precision;
    rm = Ctor.rounding;

    if (y.eq(1)) return finalise(x, pr, rm);

    e = mathfloor(y.e / LOG_BASE);
    k = y.d.length - 1;
    yIsInt = e >= k;
    sign = x.s;

    if (!yIsInt) {
      if (sign < 0) return new Ctor(NaN);

    // If y is a small integer use the 'exponentiation by squaring' algorithm.
    } else if ((k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {
      r = intPow(Ctor, x, k, pr);
      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);
    }

    // Result is negative if x is negative and the last digit of integer y is odd.
    sign = sign < 0 && y.d[Math.max(e, k)] & 1 ? -1 : 1;

    // Estimate result exponent.
    // x^y = 10^e,  where e = y * log10(x)
    // log10(x) = log10(x_significand) + x_exponent
    // log10(x_significand) = ln(x_significand) / ln(10)
    k = mathpow(+x, yn);
    e = k == 0 || !isFinite(k)
      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))
      : new Ctor(k + '').e;

    // Estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.

    // Overflow/underflow?
    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? sign / 0 : 0);

    external = false;
    Ctor.rounding = x.s = 1;

    // Estimate the extra guard digits needed to ensure five correct rounding digits from
    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):
    // new Decimal(2.32456).pow('2087987436534566.46411')
    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815
    k = Math.min(12, (e + '').length);

    // r = x^y = exp(y*ln(x))
    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);

    // Truncate to the required precision plus five rounding digits.
    r = finalise(r, pr + 5, 1);

    // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate
    // the result.
    if (checkRoundingDigits(r.d, pr, rm)) {
      e = pr + 10;

      // Truncate to the increased precision plus five rounding digits.
      r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);

      // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).
      if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {
        r = finalise(r, pr + 1, 0);
      }
    }

    r.s = sign;
    external = true;
    Ctor.rounding = rm;

    return finalise(r, pr, rm);
  };


  /*
   * Return a string representing the value of this Decimal rounded to `sd` significant digits
   * using rounding mode `rounding`.
   *
   * Return exponential notation if `sd` is less than the number of digits necessary to represent
   * the integer part of the value in normal notation.
   *
   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   */
  P.toPrecision = function (sd, rm) {
    var str,
      x = this,
      Ctor = x.constructor;

    if (sd === void 0) {
      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
    } else {
      checkInt32(sd, 1, MAX_DIGITS);

      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);

      x = finalise(new Ctor(x), sd, rm);
      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);
    }

    return x.isNeg() && !x.isZero() ? '-' + str : str;
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`
   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if
   * omitted.
   *
   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.
   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
   *
   * 'toSD() digits out of range: {sd}'
   * 'toSD() digits not an integer: {sd}'
   * 'toSD() rounding mode not an integer: {rm}'
   * 'toSD() rounding mode out of range: {rm}'
   *
   */
  P.toSignificantDigits = P.toSD = function (sd, rm) {
    var x = this,
      Ctor = x.constructor;

    if (sd === void 0) {
      sd = Ctor.precision;
      rm = Ctor.rounding;
    } else {
      checkInt32(sd, 1, MAX_DIGITS);

      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);
    }

    return finalise(new Ctor(x), sd, rm);
  };


  /*
   * Return a string representing the value of this Decimal.
   *
   * Return exponential notation if this Decimal has a positive exponent equal to or greater than
   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.
   *
   */
  P.toString = function () {
    var x = this,
      Ctor = x.constructor,
      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);

    return x.isNeg() && !x.isZero() ? '-' + str : str;
  };


  /*
   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.
   *
   */
  P.truncated = P.trunc = function () {
    return finalise(new this.constructor(this), this.e + 1, 1);
  };


  /*
   * Return a string representing the value of this Decimal.
   * Unlike `toString`, negative zero will include the minus sign.
   *
   */
  P.valueOf = function () {
    var x = this,
      Ctor = x.constructor,
      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);

    return x.isNeg() ? '-' + str : str;
  };


  /*
  // Add aliases to match BigDecimal method names.
  // P.add = P.plus;
  P.subtract = P.minus;
  P.multiply = P.times;
  P.divide = P.div;
  P.remainder = P.mod;
  P.compareTo = P.cmp;
  P.negate = P.neg;
   */


  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.


  /*
   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toJSON,
   *                           P.toPower, finiteToString, naturalExponential, naturalLogarithm
   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,
   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random
   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm
   *  convertBase              P.toJSON, toStringBinary, fromJSON, parseOther
   *  cos                      P.cos
   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,
   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,
   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,
   *                           taylorSeries, atan2, parseOther
   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,
   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,
   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,
   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,
   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,
   *                           P.truncated, divide, getLn10, getPi, naturalExponential,
   *                           naturalLogarithm, ceil, floor, round, trunc
   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,
   *                           toStringBinary
   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther
   *  getLn10                  P.logarithm, naturalLogarithm
   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2
   *  getPrecision             P.precision, P.toFraction
   *  getZeroString            digitsToString, finiteToString
   *  intPow                   P.toPower, parseOther
   *  isOdd                    toLessThanHalfPi
   *  maxOrMin                 max, min
   *  naturalExponential       P.naturalExponential, P.toPower
   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,
   *                           P.toPower, naturalExponential
   *  nonFiniteToString        finiteToString, toStringBinary
   *  parseDecimal             Decimal
   *  parseOther               Decimal
   *  sin                      P.sin
   *  taylorSeries             P.cosh, P.sinh, cos, sin
   *  toLessThanHalfPi         P.cos, P.sin
   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal
   *  truncate                 intPow
   *
   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,
   *                           naturalLogarithm, config, fromJSON, parseOther, random, Decimal           *
   */


  function digitsToString(d) {
    var i, k, ws,
      indexOfLastWord = d.length - 1,
      str = '',
      w = d[0];

    if (indexOfLastWord > 0) {
      str += w;
      for (i = 1; i < indexOfLastWord; i++) {
        ws = d[i] + '';
        k = LOG_BASE - ws.length;
        if (k) str += getZeroString(k);
        str += ws;
      }

      w = d[i];
      ws = w + '';
      k = LOG_BASE - ws.length;
      if (k) str += getZeroString(k);
    } else if (w === 0) {
      return '0';
    }

    // Remove trailing zeros of last w.
    for (; w % 10 === 0;) w /= 10;

    return str + w;
  }


  function checkInt32(i, min, max) {
    if (i !== ~~i || i < min || i > max) {
      throw Error(invalidArgument + i);
    }
  }


  /*
   * Check 5 rounding digits if `repeating` is null, 4 otherwise.
   * `repeating == null` if caller is `log` or `pow`,
   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.
   */
  function checkRoundingDigits(d, i, rm, repeating) {
    var di, k, r, rd;

    // Get the length of the first word of the array d.
    for (k = d[0]; k >= 10; k /= 10) --i;

    // Is the rounding digit in the first word of d?
    if (--i < 0) {
      i += LOG_BASE;
      di = 0;
    } else {
      di = Math.ceil((i + 1) / LOG_BASE);
      i %= LOG_BASE;
    }

    // i is the index (0 - 6) of the rounding digit.
    // E.g. if within the word 3487563 the first rounding digit is 5,
    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563
    k = mathpow(10, LOG_BASE - i);
    rd = d[di] % k | 0;

    if (repeating == null) {
      if (i < 3) {
        if (i == 0) rd = rd / 100 | 0;
        else if (i == 1) rd = rd / 10 | 0;
        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;
      } else {
        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&
          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||
            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;
      }
    } else {
      if (i < 4) {
        if (i == 0) rd = rd / 1000 | 0;
        else if (i == 1) rd = rd / 100 | 0;
        else if (i == 2) rd = rd / 10 | 0;
        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;
      } else {
        r = ((repeating || rm < 4) && rd + 1 == k ||
        (!repeating && rm > 3) && rd + 1 == k / 2) &&
          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;
      }
    }

    return r;
  }


  // Convert string of `baseIn` to an array of numbers of `baseOut`.
  // Eg. convertBase('255', 10, 16) returns [15, 15].
  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].
  function convertBase(str, baseIn, baseOut) {
    var j,
      arr = [0],
      arrL,
      i = 0,
      strL = str.length;

    for (; i < strL;) {
      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;
      arr[0] += NUMERALS.indexOf(str.charAt(i++));
      for (j = 0; j < arr.length; j++) {
        if (arr[j] > baseOut - 1) {
          if (arr[j + 1] === void 0) arr[j + 1] = 0;
          arr[j + 1] += arr[j] / baseOut | 0;
          arr[j] %= baseOut;
        }
      }
    }

    return arr.reverse();
  }


  /*
   * cos(x) = 1 - x^2/2! + x^4/4! - ...
   * |x| < pi/2
   *
   */
  function cosine(Ctor, x) {
    var k, y,
      len = x.d.length;

    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1
    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1

    // Estimate the optimum number of times to use the argument reduction.
    if (len < 32) {
      k = Math.ceil(len / 3);
      y = Math.pow(4, -k).toString();
    } else {
      k = 16;
      y = '2.3283064365386962890625e-10';
    }

    Ctor.precision += k;

    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));

    // Reverse argument reduction
    for (var i = k; i--;) {
      var cos2x = x.times(x);
      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);
    }

    Ctor.precision -= k;

    return x;
  }


  /*
   * Perform division in the specified base.
   */
  var divide = (function () {

    // Assumes non-zero x and k, and hence non-zero result.
    function multiplyInteger(x, k, base) {
      var temp,
        carry = 0,
        i = x.length;

      for (x = x.slice(); i--;) {
        temp = x[i] * k + carry;
        x[i] = temp % base | 0;
        carry = temp / base | 0;
      }

      if (carry) x.unshift(carry);

      return x;
    }

    function compare(a, b, aL, bL) {
      var i, r;

      if (aL != bL) {
        r = aL > bL ? 1 : -1;
      } else {
        for (i = r = 0; i < aL; i++) {
          if (a[i] != b[i]) {
            r = a[i] > b[i] ? 1 : -1;
            break;
          }
        }
      }

      return r;
    }

    function subtract(a, b, aL, base) {
      var i = 0;

      // Subtract b from a.
      for (; aL--;) {
        a[aL] -= i;
        i = a[aL] < b[aL] ? 1 : 0;
        a[aL] = i * base + a[aL] - b[aL];
      }

      // Remove leading zeros.
      for (; !a[0] && a.length > 1;) a.shift();
    }

    return function (x, y, pr, rm, dp, base) {
      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,
        yL, yz,
        Ctor = x.constructor,
        sign = x.s == y.s ? 1 : -1,
        xd = x.d,
        yd = y.d;

      // Either NaN, Infinity or 0?
      if (!xd || !xd[0] || !yd || !yd[0]) {

        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.
          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :

          // Return Â±0 if x is 0 or y is Â±Infinity, or return Â±Infinity as y is 0.
          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);
      }

      if (base) {
        logBase = 1;
        e = x.e - y.e;
      } else {
        base = BASE;
        logBase = LOG_BASE;
        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);
      }

      yL = yd.length;
      xL = xd.length;
      q = new Ctor(sign);
      qd = q.d = [];

      // Result exponent may be one less than e.
      // The digit array of a Decimal from toStringBinary may have trailing zeros.
      for (i = 0; yd[i] == (xd[i] || 0); i++);

      if (yd[i] > (xd[i] || 0)) e--;

      if (pr == null) {
        sd = pr = Ctor.precision;
        rm = Ctor.rounding;
      } else if (dp) {
        sd = pr + (x.e - y.e) + 1;
      } else {
        sd = pr;
      }

      if (sd < 0) {
        qd.push(1);
        more = true;
      } else {

        // Convert precision in number of base 10 digits to base 1e7 digits.
        sd = sd / logBase + 2 | 0;
        i = 0;

        // divisor < 1e7
        if (yL == 1) {
          k = 0;
          yd = yd[0];
          sd++;

          // k is the carry.
          for (; (i < xL || k) && sd--; i++) {
            t = k * base + (xd[i] || 0);
            qd[i] = t / yd | 0;
            k = t % yd | 0;
          }

          more = k || i < xL;

        // divisor >= 1e7
        } else {

          // Normalise xd and yd so highest order digit of yd is >= base/2
          k = base / (yd[0] + 1) | 0;

          if (k > 1) {
            yd = multiplyInteger(yd, k, base);
            xd = multiplyInteger(xd, k, base);
            yL = yd.length;
            xL = xd.length;
          }

          xi = yL;
          rem = xd.slice(0, yL);
          remL = rem.length;

          // Add zeros to make remainder as long as divisor.
          for (; remL < yL;) rem[remL++] = 0;

          yz = yd.slice();
          yz.unshift(0);
          yd0 = yd[0];

          if (yd[1] >= base / 2) ++yd0;

          do {
            k = 0;

            // Compare divisor and remainder.
            cmp = compare(yd, rem, yL, remL);

            // If divisor < remainder.
            if (cmp < 0) {

              // Calculate trial digit, k.
              rem0 = rem[0];
              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);

              // k will be how many times the divisor goes into the current remainder.
              k = rem0 / yd0 | 0;

              //  Algorithm:
              //  1. product = divisor * trial digit (k)
              //  2. if product > remainder: product -= divisor, k--
              //  3. remainder -= product
              //  4. if product was < remainder at 2:
              //    5. compare new remainder and divisor
              //    6. If remainder > divisor: remainder -= divisor, k++

              if (k > 1) {
                if (k >= base) k = base - 1;

                // product = divisor * trial digit.
                prod = multiplyInteger(yd, k, base);
                prodL = prod.length;
                remL = rem.length;

                // Compare product and remainder.
                cmp = compare(prod, rem, prodL, remL);

                // product > remainder.
                if (cmp == 1) {
                  k--;

                  // Subtract divisor from product.
                  subtract(prod, yL < prodL ? yz : yd, prodL, base);
                }
              } else {

                // cmp is -1.
                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1
                // to avoid it. If k is 1 there is a need to compare yd and rem again below.
                if (k == 0) cmp = k = 1;
                prod = yd.slice();
              }

              prodL = prod.length;
              if (prodL < remL) prod.unshift(0);

              // Subtract product from remainder.
              subtract(rem, prod, remL, base);

              // If product was < previous remainder.
              if (cmp == -1) {
                remL = rem.length;

                // Compare divisor and new remainder.
                cmp = compare(yd, rem, yL, remL);

                // If divisor < new remainder, subtract divisor from remainder.
                if (cmp < 1) {
                  k++;

                  // Subtract divisor from remainder.
                  subtract(rem, yL < remL ? yz : yd, remL, base);
                }
              }

              remL = rem.length;
            } else if (cmp === 0) {
              k++;
              rem = [0];
            }    // if cmp === 1, k will be 0

            // Add the next digit, k, to the result array.
            qd[i++] = k;

            // Update the remainder.
            if (cmp && rem[0]) {
              rem[remL++] = xd[xi] || 0;
            } else {
              rem = [xd[xi]];
              remL = 1;
            }

          } while ((xi++ < xL || rem[0] !== void 0) && sd--);

          more = rem[0] !== void 0;
        }

        // Leading zero?
        if (!qd[0]) qd.shift();
      }

      // logBase is 1 when divide is being used for base conversion.
      if (logBase == 1) {
        q.e = e;
        inexact = more;
      } else {

        // To calculate q.e, first get the number of digits of qd[0].
        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;
        q.e = i + e * logBase - 1;

        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);
      }

      return q;
    };
  })();


  /*
   * Round `x` to `sd` significant digits using rounding mode `rm`.
   * Check for over/under-flow.
   */
   function finalise(x, sd, rm, isTruncated) {
    var digits, i, j, k, rd, roundUp, w, xd, xdi,
      Ctor = x.constructor;

    // Don't round if sd is null or undefined.
    out: if (sd != null) {
      xd = x.d;

      // Infinity/NaN.
      if (!xd) return x;

      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.
      // w: the word of xd containing rd, a base 1e7 number.
      // xdi: the index of w within xd.
      // digits: the number of digits of w.
      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if
      // they had leading zeros)
      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).

      // Get the length of the first word of the digits array xd.
      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;
      i = sd - digits;

      // Is the rounding digit in the first word of xd?
      if (i < 0) {
        i += LOG_BASE;
        j = sd;
        w = xd[xdi = 0];

        // Get the rounding digit at index j of w.
        rd = w / mathpow(10, digits - j - 1) % 10 | 0;
      } else {
        xdi = Math.ceil((i + 1) / LOG_BASE);
        k = xd.length;
        if (xdi >= k) {
          if (isTruncated) {

            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.
            for (; k++ <= xdi;) xd.push(0);
            w = rd = 0;
            digits = 1;
            i %= LOG_BASE;
            j = i - LOG_BASE + 1;
          } else {
            break out;
          }
        } else {
          w = k = xd[xdi];

          // Get the number of digits of w.
          for (digits = 1; k >= 10; k /= 10) digits++;

          // Get the index of rd within w.
          i %= LOG_BASE;

          // Get the index of rd within w, adjusted for leading zeros.
          // The number of leading zeros of w is given by LOG_BASE - digits.
          j = i - LOG_BASE + digits;

          // Get the rounding digit at index j of w.
          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;
        }
      }

      // Are there any non-zero digits after the rounding digit?
      isTruncated = isTruncated || sd < 0 ||
        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));

      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right
      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression
      // will give 714.

      roundUp = rm < 4
        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))
        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&

          // Check whether the digit to the left of the rounding digit is odd.
          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||
            rm == (x.s < 0 ? 8 : 7));

      if (sd < 1 || !xd[0]) {
        xd.length = 0;
        if (roundUp) {

          // Convert sd to decimal places.
          sd -= x.e + 1;

          // 1, 0.1, 0.01, 0.001, 0.0001 etc.
          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);
          x.e = -sd || 0;
        } else {

          // Zero.
          xd[0] = x.e = 0;
        }

        return x;
      }

      // Remove excess digits.
      if (i == 0) {
        xd.length = xdi;
        k = 1;
        xdi--;
      } else {
        xd.length = xdi + 1;
        k = mathpow(10, LOG_BASE - i);

        // E.g. 56700 becomes 56000 if 7 is the rounding digit.
        // j > 0 means i > number of leading zeros of w.
        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;
      }

      if (roundUp) {
        for (;;) {

          // Is the digit to be rounded up in the first word of xd?
          if (xdi == 0) {

            // i will be the length of xd[0] before k is added.
            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;
            j = xd[0] += k;
            for (k = 1; j >= 10; j /= 10) k++;

            // if i != k the length has increased.
            if (i != k) {
              x.e++;
              if (xd[0] == BASE) xd[0] = 1;
            }

            break;
          } else {
            xd[xdi] += k;
            if (xd[xdi] != BASE) break;
            xd[xdi--] = 0;
            k = 1;
          }
        }
      }

      // Remove trailing zeros.
      for (i = xd.length; xd[--i] === 0;) xd.pop();
    }

    if (external) {

      // Overflow?
      if (x.e > Ctor.maxE) {

        // Infinity.
        x.d = null;
        x.e = NaN;

      // Underflow?
      } else if (x.e < Ctor.minE) {

        // Zero.
        x.e = 0;
        x.d = [0];
        // Ctor.underflow = true;
      } // else Ctor.underflow = false;
    }

    return x;
  }


  function finiteToString(x, isExp, sd) {
    if (!x.isFinite()) return nonFiniteToString(x);
    var k,
      e = x.e,
      str = digitsToString(x.d),
      len = str.length;

    if (isExp) {
      if (sd && (k = sd - len) > 0) {
        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);
      } else if (len > 1) {
        str = str.charAt(0) + '.' + str.slice(1);
      }

      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;
    } else if (e < 0) {
      str = '0.' + getZeroString(-e - 1) + str;
      if (sd && (k = sd - len) > 0) str += getZeroString(k);
    } else if (e >= len) {
      str += getZeroString(e + 1 - len);
      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);
    } else {
      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);
      if (sd && (k = sd - len) > 0) {
        if (e + 1 === len) str += '.';
        str += getZeroString(k);
      }
    }

    return str;
  }


  // Calculate the base 10 exponent from the base 1e7 exponent.
  function getBase10Exponent(digits, e) {

    // First get the number of digits of the first word of the digits array.
    for (var i = 1, w = digits[0]; w >= 10; w /= 10) i++;
    return i + e * LOG_BASE - 1;
  }


   function getLn10(Ctor, sd, pr) {
    if (sd > LN10_PRECISION) {

      // Reset global state in case the exception is caught.
      external = true;
      if (pr) Ctor.precision = pr;
      throw Error(precisionLimitExceeded);
    }
    return finalise(new Ctor(LN10), sd, 1, true);
  }


  function getPi(Ctor, sd, rm) {
    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);
    return finalise(new Ctor(PI), sd, rm, true);
  }


  function getPrecision(digits) {
    var w = digits.length - 1,
      len = w * LOG_BASE + 1;

    w = digits[w];

    // If non-zero...
    if (w) {

      // Subtract the number of trailing zeros of the last word.
      for (; w % 10 == 0; w /= 10) len--;

      // Add the number of digits of the first word.
      for (w = digits[0]; w >= 10; w /= 10) len++;
    }

    return len;
  }


  function getZeroString(k) {
    var zs = '';
    for (; k--;) zs += '0';
    return zs;
  }


  /*
   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an
   * integer of type number.
   *
   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.
   *
   */
  function intPow(Ctor, x, n, pr) {
    var isTruncated,
      r = new Ctor(1),

      // Max n of 9007199254740991 takes 53 loop iterations.
      // Maximum digits array length; leaves [28, 34] guard digits.
      k = Math.ceil(pr / LOG_BASE + 4);

    external = false;

    for (;;) {
      if (n % 2) {
        r = r.times(x);
        if (truncate(r.d, k)) isTruncated = true;
      }

      n = mathfloor(n / 2);
      if (n === 0) {

        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.
        n = r.d.length - 1;
        if (isTruncated && r.d[n] === 0) ++r.d[n];
        break;
      }

      x = x.times(x);
      truncate(x.d, k);
    }

    external = true;

    return r;
  }


  function isOdd(n) {
    return n.d[n.d.length - 1] & 1;
  }


  /*
   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.
   */
  function maxOrMin(Ctor, args, ltgt) {
    var y,
      x = new Ctor(args[0]),
      i = 0;

    for (; ++i < args.length;) {
      y = new Ctor(args[i]);
      if (!y.s) {
        x = y;
        break;
      } else if (x[ltgt](y)) {
        x = y;
      }
    }

    return x;
  }


  /*
   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant
   * digits.
   *
   * Taylor/Maclaurin series.
   *
   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...
   *
   * Argument reduction:
   *   Repeat x = x / 32, k += 5, until |x| < 0.1
   *   exp(x) = exp(x / 2^k)^(2^k)
   *
   * Previously, the argument was initially reduced by
   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)
   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was
   * found to be slower than just dividing repeatedly by 32 as above.
   *
   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000
   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000
   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)
   *
   *  exp(Infinity)  = Infinity
   *  exp(-Infinity) = 0
   *  exp(NaN)       = NaN
   *  exp(Â±0)        = 1
   *
   *  exp(x) is non-terminating for any finite, non-zero x.
   *
   *  The result will always be correctly rounded.
   *
   */
  function naturalExponential(x, sd) {
    var denominator, guard, j, pow, sum, t, wpr,
      rep = 0,
      i = 0,
      k = 0,
      Ctor = x.constructor,
      rm = Ctor.rounding,
      pr = Ctor.precision;

    // 0/NaN/Infinity?
    if (!x.d || !x.d[0] || x.e > 17) {

      return new Ctor(x.d
        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0
        : x.s ? x.s < 0 ? 0 : x : 0 / 0);
    }

    if (sd == null) {
      external = false;
      wpr = pr;
    } else {
      wpr = sd;
    }

    t = new Ctor(0.03125);

    // while abs(x) >= 0.1
    while (x.e > -2) {

      // x = x / 2^5
      x = x.times(t);
      k += 5;
    }

    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision
    // necessary to ensure the first 4 rounding digits are correct.
    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;
    wpr += guard;
    denominator = pow = sum = new Ctor(1);
    Ctor.precision = wpr;

    for (;;) {
      pow = finalise(pow.times(x), wpr, 1);
      denominator = denominator.times(++i);
      t = sum.plus(divide(pow, denominator, wpr, 1));

      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {
        j = k;
        while (j--) sum = finalise(sum.times(sum), wpr, 1);

        // Check to see if the first 4 rounding digits are [49]999.
        // If so, repeat the summation with a higher precision, otherwise
        // e.g. with precision: 18, rounding: 1
        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)
        // `wpr - guard` is the index of first rounding digit.
        if (sd == null) {

          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {
            Ctor.precision = wpr += 10;
            denominator = pow = t = new Ctor(1);
            i = 0;
            rep++;
          } else {
            return finalise(sum, Ctor.precision = pr, rm, external = true);
          }
        } else {
          Ctor.precision = pr;
          return sum;
        }
      }

      sum = t;
    }
  }


  /*
   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant
   * digits.
   *
   *  ln(-n)        = NaN
   *  ln(0)         = -Infinity
   *  ln(-0)        = -Infinity
   *  ln(1)         = 0
   *  ln(Infinity)  = Infinity
   *  ln(-Infinity) = NaN
   *  ln(NaN)       = NaN
   *
   *  ln(n) (n != 1) is non-terminating.
   *
   */
  function naturalLogarithm(y, sd) {
    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,
      n = 1,
      guard = 10,
      x = y,
      xd = x.d,
      Ctor = x.constructor,
      rm = Ctor.rounding,
      pr = Ctor.precision;

    // Is x negative or Infinity, NaN, 0 or 1?
    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {
      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);
    }

    if (sd == null) {
      external = false;
      wpr = pr;
    } else {
      wpr = sd;
    }

    Ctor.precision = wpr += guard;
    c = digitsToString(xd);
    c0 = c.charAt(0);

    if (Math.abs(e = x.e) < 1.5e15) {

      // Argument reduction.
      // The series converges faster the closer the argument is to 1, so using
      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b
      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,
      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can
      // later be divided by this number, then separate out the power of 10 using
      // ln(a*10^b) = ln(a) + b*ln(10).

      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).
      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {
      // max n is 6 (gives 0.7 - 1.3)
      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {
        x = x.times(y);
        c = digitsToString(x.d);
        c0 = c.charAt(0);
        n++;
      }

      e = x.e;

      if (c0 > 1) {
        x = new Ctor('0.' + c);
        e++;
      } else {
        x = new Ctor(c0 + '.' + c.slice(1));
      }
    } else {

      // The argument reduction method above may result in overflow if the argument y is a massive
      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this
      // function using ln(x*10^e) = ln(x) + e*ln(10).
      t = getLn10(Ctor, wpr + 2, pr).times(e + '');
      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);
      Ctor.precision = pr;

      return sd == null ? finalise(x, pr, rm, external = true) : x;
    }

    // x1 is x reduced to a value near 1.
    x1 = x;

    // Taylor series.
    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)
    // where x = (y - 1)/(y + 1)    (|x| < 1)
    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);
    x2 = finalise(x.times(x), wpr, 1);
    denominator = 3;

    for (;;) {
      numerator = finalise(numerator.times(x2), wpr, 1);
      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));

      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {
        sum = sum.times(2);

        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an
        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.
        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));
        sum = divide(sum, new Ctor(n), wpr, 1);

        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has
        // been repeated previously) and the first 4 rounding digits 9999?
        // If so, restart the summation with a higher precision, otherwise
        // e.g. with precision: 12, rounding: 1
        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.
        // `wpr - guard` is the index of first rounding digit.
        if (sd == null) {
          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {
            Ctor.precision = wpr += guard;
            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);
            x2 = finalise(x.times(x), wpr, 1);
            denominator = rep = 1;
          } else {
            return finalise(sum, Ctor.precision = pr, rm, external = true);
          }
        } else {
          Ctor.precision = pr;
          return sum;
        }
      }

      sum = t;
      denominator += 2;
    }
  }


  // Â±Infinity, NaN.
  function nonFiniteToString(x) {
    // Unsigned.
    return String(x.s * x.s / 0);
  }


  /*
   * Parse the value of a new Decimal `x` from string `str`.
   */
  function parseDecimal(x, str) {
    var e, i, len;

    // Decimal point?
    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');

    // Exponential form?
    if ((i = str.search(/e/i)) > 0) {

      // Determine exponent.
      if (e < 0) e = i;
      e += +str.slice(i + 1);
      str = str.substring(0, i);
    } else if (e < 0) {

      // Integer.
      e = str.length;
    }

    // Determine leading zeros.
    for (i = 0; str.charCodeAt(i) === 48; i++);

    // Determine trailing zeros.
    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);
    str = str.slice(i, len);

    if (str) {
      len -= i;
      x.e = e = e - i - 1;
      x.d = [];

      // Transform base

      // e is the base 10 exponent.
      // i is where to slice str to get the first word of the digits array.
      i = (e + 1) % LOG_BASE;
      if (e < 0) i += LOG_BASE;

      if (i < len) {
        if (i) x.d.push(+str.slice(0, i));
        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));
        str = str.slice(i);
        i = LOG_BASE - str.length;
      } else {
        i -= len;
      }

      for (; i--;) str += '0';
      x.d.push(+str);

      if (external) {

        // Overflow?
        if (x.e > x.constructor.maxE) {

          // Infinity.
          x.d = null;
          x.e = NaN;

        // Underflow?
        } else if (x.e < x.constructor.minE) {

          // Zero.
          x.e = 0;
          x.d = [0];
          // x.constructor.underflow = true;
        } // else x.constructor.underflow = false;
      }
    } else {

      // Zero.
      x.e = 0;
      x.d = [0];
    }

    return x;
  }


  /*
   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.
   */
  function parseOther(x, str) {
    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;

    if (str === 'Infinity' || str === 'NaN') {
      if (!+str) x.s = NaN;
      x.e = NaN;
      x.d = null;
      return x;
    }

    if (isHex.test(str))  {
      base = 16;
      str = str.toLowerCase();
    } else if (isBinary.test(str))  {
      base = 2;
    } else if (isOctal.test(str))  {
      base = 8;
    } else {
      throw Error(invalidArgument + str);
    }

    // Is there a binary exponent part?
    i = str.search(/p/i);

    if (i > 0) {
      p = +str.slice(i + 1);
      str = str.substring(2, i);
    } else {
      str = str.slice(2);
    }

    // Convert `str` as an integer then divide the result by `base` raised to a power such that the
    // fraction part will be restored.
    i = str.indexOf('.');
    isFloat = i >= 0;
    Ctor = x.constructor;

    if (isFloat) {
      str = str.replace('.', '');
      len = str.length;
      i = len - i;

      // log[10](16) = 1.2041... , log[10](88) = 1.9444....
      divisor = intPow(Ctor, new Ctor(base), i, i * 2);
    }

    xd = convertBase(str, base, BASE);
    xe = xd.length - 1;

    // Remove trailing zeros.
    for (i = xe; xd[i] === 0; --i) xd.pop();
    if (i < 0) return new Ctor(x.s * 0);
    x.e = getBase10Exponent(xd, xe);
    x.d = xd;
    external = false;

    // At what precision to perform the division to ensure exact conversion?
    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)
    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412
    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.
    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount
    // Therefore using 4 * the number of digits of str will always be enough.
    if (isFloat) x = divide(x, divisor, len * 4);

    // Multiply by the binary exponent part if present.
    if (p) x = x.times(Math.abs(p) < 54 ? Math.pow(2, p) : Decimal.pow(2, p));
    external = true;

    return x;
  }


  /*
   * sin(x) = x - x^3/3! + x^5/5! - ...
   * |x| < pi/2
   *
   */
  function sine(Ctor, x) {
    var k,
      len = x.d.length;

    if (len < 3) return taylorSeries(Ctor, 2, x, x);

    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)
    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)
    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))

    // Estimate the optimum number of times to use the argument reduction.
    k = 1.4 * Math.sqrt(len);
    k = k > 16 ? 16 : k | 0;

    // Max k before Math.pow precision loss is 22
    x = x.times(Math.pow(5, -k));
    x = taylorSeries(Ctor, 2, x, x);

    // Reverse argument reduction
    var sin2_x,
      d5 = new Ctor(5),
      d16 = new Ctor(16),
      d20 = new Ctor(20);
    for (; k--;) {
      sin2_x = x.times(x);
      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));
    }

    return x;
  }


  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.
  function taylorSeries(Ctor, n, x, y, isHyperbolic) {
    var j, t, u, x2,
      i = 1,
      pr = Ctor.precision,
      k = Math.ceil(pr / LOG_BASE);

    external = false;
    x2 = x.times(x);
    u = new Ctor(y);

    for (;;) {
      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);
      u = isHyperbolic ? y.plus(t) : y.minus(t);
      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);
      t = u.plus(y);

      if (t.d[k] !== void 0) {
        for (j = k; t.d[j] === u.d[j] && j--;);
        if (j == -1) break;
      }

      j = u;
      u = y;
      y = t;
      t = j;
      i++;
    }

    external = true;
    t.d.length = k + 1;

    return t;
  }


  // Return the absolute value of `x` reduced to less than or equal to half pi.
  function toLessThanHalfPi(Ctor, x) {
    var t,
      isNeg = x.s < 0,
      pi = getPi(Ctor, Ctor.precision, 1),
      halfPi = pi.times(0.5);

    x = x.abs();

    if (x.lte(halfPi)) {
      quadrant = isNeg ? 4 : 1;
      return x;
    }

    t = x.divToInt(pi);

    if (t.isZero()) {
      quadrant = isNeg ? 3 : 2;
    } else {
      x = x.minus(t.times(pi));

      // 0 <= x < pi
      if (x.lte(halfPi)) {
        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);
        return x;
      }

      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);
    }

    return x.minus(pi).abs();
  }


  /*
   * Return the value of Decimal `x` as a string in base `baseOut`.
   *
   * If the optional `sd` argument is present include a binary exponent suffix.
   */
  function toStringBinary(x, baseOut, sd, rm) {
    var base, e, i, k, len, roundUp, str, xd, y,
      Ctor = x.constructor,
      isExp = sd !== void 0;

    if (isExp) {
      checkInt32(sd, 1, MAX_DIGITS);
      if (rm === void 0) rm = Ctor.rounding;
      else checkInt32(rm, 0, 8);
    } else {
      sd = Ctor.precision;
      rm = Ctor.rounding;
    }

    if (!x.isFinite()) {
      str = nonFiniteToString(x);
    } else {
      str = finiteToString(x);
      i = str.indexOf('.');

      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:
      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))
      // minBinaryExponent = floor(decimalExponent * log[2](10))
      // log[2](10) = 3.321928094887362347870319429489390175864

      if (isExp) {
        base = 2;
        if (baseOut == 16) {
          sd = sd * 4 - 3;
        } else if (baseOut == 8) {
          sd = sd * 3 - 2;
        }
      } else {
        base = baseOut;
      }

      // Convert the number as an integer then divide the result by its base raised to a power such
      // that the fraction part will be restored.

      // Non-integer.
      if (i >= 0) {
        str = str.replace('.', '');
        y = new Ctor(1);
        y.e = str.length - i;
        y.d = convertBase(finiteToString(y), 10, base);
        y.e = y.d.length;
      }

      xd = convertBase(str, 10, base);
      e = len = xd.length;

      // Remove trailing zeros.
      for (; xd[--len] == 0;) xd.pop();

      if (!xd[0]) {
        str = isExp ? '0p+0' : '0';
      } else {
        if (i < 0) {
          e--;
        } else {
          x = new Ctor(x);
          x.d = xd;
          x.e = e;
          x = divide(x, y, sd, rm, 0, base);
          xd = x.d;
          e = x.e;
          roundUp = inexact;
        }

        // The rounding digit, i.e. the digit after the digit that may be rounded up.
        i = xd[sd];
        k = base / 2;
        roundUp = roundUp || xd[sd + 1] !== void 0;

        roundUp = rm < 4
          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))
          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||
            rm === (x.s < 0 ? 8 : 7));

        xd.length = sd;

        if (roundUp) {

          // Rounding up may mean the previous digit has to be rounded up and so on.
          for (; ++xd[--sd] > base - 1;) {
            xd[sd] = 0;
            if (!sd) {
              ++e;
              xd.unshift(1);
            }
          }
        }

        // Determine trailing zeros.
        for (len = xd.length; !xd[len - 1]; --len);

        // E.g. [4, 11, 15] becomes 4bf.
        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);

        // Add binary exponent suffix?
        if (isExp) {
          if (len > 1) {
            if (baseOut == 16 || baseOut == 8) {
              i = baseOut == 16 ? 4 : 3;
              for (--len; len % i; len++) str += '0';
              xd = convertBase(str, base, baseOut);
              for (len = xd.length; !xd[len - 1]; --len);

              // xd[0] will always be be 1
              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);
            } else {
              str = str.charAt(0) + '.' + str.slice(1);
            }
          }

          str =  str + (e < 0 ? 'p' : 'p+') + e;
        } else if (e < 0) {
          for (; ++e;) str = '0' + str;
          str = '0.' + str;
        } else {
          if (++e > len) for (e -= len; e-- ;) str += '0';
          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);
        }
      }

      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;
    }

    return x.s < 0 ? '-' + str : str;
  }


  // Does not strip trailing zeros.
  function truncate(arr, len) {
    if (arr.length > len) {
      arr.length = len;
      return true;
    }
  }


  // Decimal methods


  /*
   *  abs
   *  acos
   *  acosh
   *  add
   *  asin
   *  asinh
   *  atan
   *  atanh
   *  atan2
   *  cbrt
   *  ceil
   *  clone
   *  config
   *  cos
   *  cosh
   *  div
   *  exp
   *  floor
   *  fromJSON
   *  hypot
   *  ln
   *  log
   *  log2
   *  log10
   *  max
   *  min
   *  mod
   *  mul
   *  pow
   *  random
   *  round
   *  sign
   *  sin
   *  sinh
   *  sqrt
   *  sub
   *  tan
   *  tanh
   *  trunc
   */


  /*
   * Return a new Decimal whose value is the absolute value of `x`.
   *
   * x {number|string|Decimal}
   *
   */
  function abs(x) {
    return new this(x).abs();
  }


  /*
   * Return a new Decimal whose value is the arccosine in radians of `x`.
   *
   * x {number|string|Decimal}
   *
   */
  function acos(x) {
    return new this(x).acos();
  }


  /*
   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to
   * `precision` significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function acosh(x) {
    return new this(x).acosh();
  }


  /*
   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   * y {number|string|Decimal}
   *
   */
  function add(x, y) {
    return new this(x).plus(y);
  }


  /*
   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   *
   */
  function asin(x) {
    return new this(x).asin();
  }


  /*
   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to
   * `precision` significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function asinh(x) {
    return new this(x).asinh();
  }


  /*
   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   *
   */
  function atan(x) {
    return new this(x).atan();
  }


  /*
   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to
   * `precision` significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function atanh(x) {
    return new this(x).atanh();
  }


  /*
   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi
   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.
   *
   * Domain: [-Infinity, Infinity]
   * Range: [-pi, pi]
   *
   * y {number|string|Decimal} The y-coordinate.
   * x {number|string|Decimal} The x-coordinate.
   *
   * atan2(Â±0, -0)               = Â±pi
   * atan2(Â±0, +0)               = Â±0
   * atan2(Â±0, -x)               = Â±pi for x > 0
   * atan2(Â±0, x)                = Â±0 for x > 0
   * atan2(-y, Â±0)               = -pi/2 for y > 0
   * atan2(y, Â±0)                = pi/2 for y > 0
   * atan2(Â±y, -Infinity)        = Â±pi for finite y > 0
   * atan2(Â±y, +Infinity)        = Â±0 for finite y > 0
   * atan2(Â±Infinity, x)         = Â±pi/2 for finite x
   * atan2(Â±Infinity, -Infinity) = Â±3*pi/4
   * atan2(Â±Infinity, +Infinity) = Â±pi/4
   * atan2(NaN, x) = NaN
   * atan2(y, NaN) = NaN
   *
   */
  function atan2(y, x) {
    y = new this(y);
    x = new this(x);
    var r,
      pr = this.precision,
      rm = this.rounding,
      wpr = pr + 4;

    // Either NaN
    if (!y.s || !x.s) {
      r = new this(NaN);

    // Both Â±Infinity
    } else if (!y.d && !x.d) {
      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);
      r.s = y.s;

    // x is Â±Infinity or y is Â±0
    } else if (!x.d || y.isZero()) {
      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);
      r.s = y.s;

    // y is Â±Infinity or x is Â±0
    } else if (!y.d || x.isZero()) {
      r = getPi(this, wpr, 1).times(0.5);
      r.s = y.s;

    // Both non-zero and finite
    } else if (x.s < 0) {
      this.precision = wpr;
      this.rounding = 1;
      r = this.atan(divide(y, x, wpr, 1));
      x = getPi(this, wpr, 1);
      this.precision = pr;
      this.rounding = rm;
      r = y.s < 0 ? r.minus(x) : r.plus(x);
    } else {
      r = this.atan(divide(y, x, wpr, 1));
    }

    return r;
  }


  /*
   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   *
   */
  function cbrt(x) {
    return new this(x).cbrt();
  }


  /*
   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.
   *
   * x {number|string|Decimal}
   *
   */
  function ceil(x) {
    return finalise(x = new this(x), x.e + 1, 2);
  }


  /*
   * Configure global settings for a Decimal constructor.
   *
   * `obj` is an object with one or more of the following properties,
   *
   *   precision  {number}
   *   rounding   {number}
   *   toExpNeg   {number}
   *   toExpPos   {number}
   *   maxE       {number}
   *   minE       {number}
   *   modulo     {number}
   *   crypto     {boolean|number|undefined}
   *
   * E.g. Decimal.config({ precision: 20, rounding: 4 })
   *
   */
  function config(obj) {
    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');
    var i, p, v,
      ps = [
        'precision', 1, MAX_DIGITS,
        'rounding', 0, 8,
        'toExpNeg', -EXP_LIMIT, 0,
        'toExpPos', 0, EXP_LIMIT,
        'maxE', 0, EXP_LIMIT,
        'minE', -EXP_LIMIT, 0,
        'modulo', 0, 9
      ];

    for (i = 0; i < ps.length; i += 3) {
      if ((v = obj[p = ps[i]]) !== void 0) {
        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;
        else throw Error(invalidArgument + p + ': ' + v);
      }
    }

    if (obj.hasOwnProperty(p = 'crypto')) {
      if ((v = obj[p]) === void 0) {
        this[p] = v;
      } else if (v === true || v === false || v === 0 || v === 1) {
        this[p] = !!(v && cryptoObject &&
            (cryptoObject.getRandomValues || cryptoObject.randomBytes));
      } else {
        throw Error(invalidArgument + p + ': ' + v);
      }
    }

    return this;
  }


  /*
   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function cos(x) {
    return new this(x).cos();
  }


  /*
   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function cosh(x) {
    return new this(x).cosh();
  }


  /*
   * Create and return a Decimal constructor with the same configuration properties as this Decimal
   * constructor.
   *
   */
  function clone(obj) {
    var i, p, ps;

    /*
     * The Decimal constructor and exported function.
     * Return a new Decimal instance.
     *
     * v {number|string|Decimal} A numeric value.
     *
     */
    function Decimal(v) {
      var e, i, t,
        x = this;

      // Decimal called without new.
      if (!(x instanceof Decimal)) return new Decimal(v);

      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor
      // which points to Object.
      x.constructor = Decimal;

      // Duplicate.
      if (v instanceof Decimal) {
        x.s = v.s;
        x.e = v.e;
        x.d = (v = v.d) ? v.slice() : v;
        return;
      }

      t = typeof v;

      if (t === 'number') {
        if (v === 0) {
          x.s = 1 / v < 0 ? -1 : 1;
          x.e = 0;
          x.d = [0];
          return;
        }

        if (v < 0) {
          v = -v;
          x.s = -1;
        } else {
          x.s = 1;
        }

        // Fast path for small integers.
        if (v === ~~v && v < 1e7) {
          for (e = 0, i = v; i >= 10; i /= 10) e++;
          x.e = e;
          x.d = [v];
          return;

        // Infinity, NaN.
        } else if (v * 0 !== 0) {
          if (!v) x.s = NaN;
          x.e = NaN;
          x.d = null;
          return;
        }

        return parseDecimal(x, v.toString());

      } else if (t !== 'string') {
        throw Error(invalidArgument + v);
      }

      // Minus sign?
      if (v.charCodeAt(0) === 45) {
        v = v.slice(1);
        x.s = -1;
      } else {
        x.s = 1;
      }

      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);
    }

    Decimal.prototype = P;

    Decimal.ROUND_UP = 0;
    Decimal.ROUND_DOWN = 1;
    Decimal.ROUND_CEIL = 2;
    Decimal.ROUND_FLOOR = 3;
    Decimal.ROUND_HALF_UP = 4;
    Decimal.ROUND_HALF_DOWN = 5;
    Decimal.ROUND_HALF_EVEN = 6;
    Decimal.ROUND_HALF_CEIL = 7;
    Decimal.ROUND_HALF_FLOOR = 8;
    Decimal.EUCLID = 9;

    Decimal.config = config;
    Decimal.clone = clone;

    Decimal.abs = abs;
    Decimal.acos = acos;
    Decimal.acosh = acosh;        // ES6
    Decimal.add = add;
    Decimal.asin = asin;
    Decimal.asinh = asinh;        // ES6
    Decimal.atan = atan;
    Decimal.atanh = atanh;        // ES6
    Decimal.atan2 = atan2;
    Decimal.cbrt = cbrt;          // ES6
    Decimal.ceil = ceil;
    Decimal.cos = cos;
    Decimal.cosh = cosh;          // ES6
    Decimal.div = div;
    Decimal.exp = exp;
    Decimal.floor = floor;
    Decimal.fromJSON = fromJSON;
    Decimal.hypot = hypot;        // ES6
    Decimal.ln = ln;
    Decimal.log = log;
    Decimal.log10 = log10;        // ES6
    Decimal.log2 = log2;          // ES6
    Decimal.max = max;
    Decimal.min = min;
    Decimal.mod = mod;
    Decimal.mul = mul;
    Decimal.pow = pow;
    Decimal.random = random;
    Decimal.round = round;
    Decimal.sign = sign;          // ES6
    Decimal.sin = sin;
    Decimal.sinh = sinh;          // ES6
    Decimal.sqrt = sqrt;
    Decimal.sub = sub;
    Decimal.tan = tan;
    Decimal.tanh = tanh;          // ES6
    Decimal.trunc = trunc;        // ES6

    if (obj === void 0) obj = {};
    if (obj) {
      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];
      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];
    }

    Decimal.config(obj);

    return Decimal;
  }


  /*
   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   * y {number|string|Decimal}
   *
   */
  function div(x, y) {
    return new this(x).div(y);
  }


  /*
   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} The power to which to raise the base of the natural log.
   *
   */
  function exp(x) {
    return new this(x).exp();
  }


  /*
   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.
   *
   * x {number|string|Decimal}
   *
   */
  function floor(x) {
    return finalise(x = new this(x), x.e + 1, 3);
  }


  /*
   * Return a new Decimal from `str`, a string value created by `toJSON`.
   *
   * Base 88 alphabet:
   * 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%()*+,-./:;=?@[]^_`{|}~
   *
   * If `str` is just one character:
   * 0-81  [[0, 40][-0, -40]]
   * 82    -Infinity
   * 83    +Infinity
   * 84    NaN
   *
   *   64 32 16  8  4  2  1
   *    1  0  1  0  1  1  1 = 87
   *
   */
  function fromJSON(str) {
    var e, isNeg, k, n;

    if (typeof str !== 'string' || !str) throw Error(invalidArgument + str);
    k = str.length;
    n = NUMERALS.indexOf(str.charAt(0));

    //  [0, 81] -> [[0, 40][-0, -40]]
    if (k === 1) {
      return new this(n > 81 ? [-1 / 0, 1 / 0, 0 / 0][n - 82] : n > 40 ? -(n - 41) : n);
    } else if (n & 64) {
      isNeg = n & 16;

      // e = isNeg ? [-3, 4] : [-7, 8]
      e = isNeg ? (n & 7) - 3 : (n & 15) - 7;
      k = 1;
    } else if (k === 2) {
      n = n * 88 + NUMERALS.indexOf(str.charAt(1));

      // [0, 5631] -> [[0, 2815][-0, -2815]] -> [[41, 2856][-41, -2856]]
      return new this(n >= 2816 ? -(n - 2816) - 41 : n + 41);
    } else {

      // 0XXXXXX
      // 0 {is negative} {is exponent negative} {exponent digit count [0, 15]}
      isNeg = n & 32;

      // Has an exponent been specified?
      if (n & 31) {
        e = n & 15;    // Exponent character count [1, 15]
        k = e + 1;     // Index of first character of the significand.

        if (e === 1)  {
          e = NUMERALS.indexOf(str.charAt(1));
        } else if (e === 2) {
          e = NUMERALS.indexOf(str.charAt(1)) * 88 +
            NUMERALS.indexOf(str.charAt(2));
        } else {
          e = +convertBase(str.slice(1, k), 88, 10).join('');
        }

        // Negative exponent?
        if (n & 16) e = -e;
      } else {

        // Integer without trailing zeros.
        // 0X00000
        // 0 {is negative} 0 0 0 0 0
        str = convertBase(str.slice(1), 88, 10).join('');
        return new this(isNeg ? '-' + str : str);
      }
    }

    str = convertBase(str.slice(k), 88, 10).join('');
    e = e - str.length + 1;
    str = str + 'e' + e;

    return new this(isNeg ? '-' + str : str);
  }


  /*
   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,
   * rounded to `precision` significant digits using rounding mode `rounding`.
   *
   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)
   *
   */
  function hypot() {
    var i, n,
      t = new this(0);

    external = false;

    for (i = 0; i < arguments.length;) {
      n = new this(arguments[i++]);
      if (!n.d) {
        if (n.s) {
          external = true;
          return new this(1 / 0);
        }
        t = n;
      } else if (t.d) {
        t = t.plus(n.times(n));
      }
    }

    external = true;

    return t.sqrt();
  }


  /*
   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   *
   */
  function ln(x) {
    return new this(x).ln();
  }


  /*
   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base
   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.
   *
   * log[y](x)
   *
   * x {number|string|Decimal} The argument of the logarithm.
   * y {number|string|Decimal} The base of the logarithm.
   *
   */
  function log(x, y) {
    return new this(x).log(y);
  }


  /*
   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   *
   */
  function log2(x) {
    return new this(x).log(2);
  }


  /*
   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   *
   */
  function log10(x) {
    return new this(x).log(10);
  }


  /*
   * Return a new Decimal whose value is the maximum of the arguments.
   *
   * arguments {number|string|Decimal}
   *
   */
  function max() {
    return maxOrMin(this, arguments, 'lt');
  }


  /*
   * Return a new Decimal whose value is the minimum of the arguments.
   *
   * arguments {number|string|Decimal}
   *
   */
  function min() {
    return maxOrMin(this, arguments, 'gt');
  }


  /*
   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits
   * using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   * y {number|string|Decimal}
   *
   */
  function mod(x, y) {
    return new this(x).mod(y);
  }


  /*
   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   * y {number|string|Decimal}
   *
   */
  function mul(x, y) {
    return new this(x).mul(y);
  }


  /*
   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} The base.
   * y {number|string|Decimal} The exponent.
   *
   */
  function pow(x, y) {
    return new this(x).pow(y);
  }


  /*
   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with
   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros
   * are produced).
   *
   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.
   *
   */
  function random(sd) {
    var d, e, k, n,
      i = 0,
      r = new this(1),
      rd = [];

    if (sd === void 0) sd = this.precision;
    else checkInt32(sd, 1, MAX_DIGITS);

    k = Math.ceil(sd / LOG_BASE);

    if (this.crypto === false) {
      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;

    // Browsers supporting crypto.getRandomValues.
    } else if (cryptoObject && cryptoObject.getRandomValues) {
      d = cryptoObject.getRandomValues(new Uint32Array(k));

      for (; i < k;) {
        n = d[i];

        // 0 <= n < 4294967296
        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).
        if (n >= 4.29e9) {
          d[i] = cryptoObject.getRandomValues(new Uint32Array(1))[0];
        } else {

          // 0 <= n <= 4289999999
          // 0 <= (n % 1e7) <= 9999999
          rd[i++] = n % 1e7;
        }
      }

    // Node.js supporting crypto.randomBytes.
    } else if (cryptoObject && cryptoObject.randomBytes) {

      // buffer
      d = cryptoObject.randomBytes(k *= 4);

      for (; i < k;) {

        // 0 <= n < 2147483648
        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);

        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).
        if (n >= 2.14e9) {
          cryptoObject.randomBytes(4).copy(d, i);
        } else {

          // 0 <= n <= 2139999999
          // 0 <= (n % 1e7) <= 9999999
          rd.push(n % 1e7);
          i += 4;
        }
      }

      i = k / 4;
    } else if (this.crypto) {
      throw Error(decimalError + 'crypto unavailable');
    } else {
      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;
    }

    k = rd[--i];
    sd %= LOG_BASE;

    // Convert trailing digits to zeros according to sd.
    if (k && sd) {
      n = mathpow(10, LOG_BASE - sd);
      rd[i] = (k / n | 0) * n;
    }

    // Remove trailing words which are zero.
    for (; rd[i] === 0; i--) rd.pop();

    // Zero?
    if (i < 0) {
      e = 0;
      rd = [0];
    } else {
      e = -1;

      // Remove leading words which are zero and adjust exponent accordingly.
      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();

      // Count the digits of the first word of rd to determine leading zeros.
      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;

      // Adjust the exponent for leading zeros of the first word of rd.
      if (k < LOG_BASE) e -= LOG_BASE - k;
    }

    r.e = e;
    r.d = rd;

    return r;
  }


  /*
   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.
   *
   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).
   *
   * x {number|string|Decimal}
   *
   */
  function round(x) {
    return finalise(x = new this(x), x.e + 1, this.rounding);
  }


  /*
   * Return
   *   1    if x > 0,
   *  -1    if x < 0,
   *   0    if x is 0,
   *  -0    if x is -0,
   *   NaN  otherwise
   *
   */
  function sign(x) {
    x = new this(x);
    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;
  }


  /*
   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits
   * using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function sin(x) {
    return new this(x).sin();
  }


  /*
   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function sinh(x) {
    return new this(x).sinh();
  }


  /*
   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   *
   */
  function sqrt(x) {
    return new this(x).sqrt();
  }


  /*
   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits
   * using rounding mode `rounding`.
   *
   * x {number|string|Decimal}
   * y {number|string|Decimal}
   *
   */
  function sub(x, y) {
    return new this(x).sub(y);
  }


  /*
   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant
   * digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function tan(x) {
    return new this(x).tan();
  }


  /*
   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`
   * significant digits using rounding mode `rounding`.
   *
   * x {number|string|Decimal} A value in radians.
   *
   */
  function tanh(x) {
    return new this(x).tanh();
  }


  /*
   * Return a new Decimal whose value is `x` truncated to an integer.
   *
   * x {number|string|Decimal}
   *
   */
  function trunc(x) {
    return finalise(x = new this(x), x.e + 1, 1);
  }


  // Create and configure initial Decimal constructor.
  Decimal = clone(Decimal);

  // Create the internal constants from their string values.
  LN10 = new Decimal(LN10);
  PI = new Decimal(PI);


  // Export.


  // AMD.
  if (typeof define == 'function' && define.amd) {
    define(function () {
      return Decimal;
    });

  // Node and other environments that support module.exports.
  } else if (typeof module != 'undefined' && module.exports) {
    module.exports = Decimal;

    if (!cryptoObject) {
      try {
        cryptoObject = require('cry' + 'pto');
      } catch (e) {
        // Ignore.
      }
    }

  // Browser.
  } else {
    if (!globalScope) {
      globalScope = typeof self != 'undefined' && self && self.self == self
        ? self : Function('return this')();
    }

    noConflict = globalScope.Decimal;
    Decimal.noConflict = function () {
      globalScope.Decimal = noConflict;
      return Decimal;
    };

    globalScope.Decimal = Decimal;
  }
})(this);

// Generated by CoffeeScript 1.8.0
(function() {
  var ALPHABET, ALPHABET_MAP, Base58, i;

  Base58 = (typeof module !== "undefined" && module !== null ? module.exports : void 0) || (window.Base58 = {});

  ALPHABET = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";

  ALPHABET_MAP = {};

  i = 0;

  while (i < ALPHABET.length) {
    ALPHABET_MAP[ALPHABET.charAt(i)] = i;
    i++;
  }

  Base58.encode = function(buffer) {
    var carry, digits, j;
    if (buffer.length === 0) {
      return "";
    }
    i = void 0;
    j = void 0;
    digits = [0];
    i = 0;
    while (i < buffer.length) {
      j = 0;
      while (j < digits.length) {
        digits[j] <<= 8;
        j++;
      }
      digits[0] += buffer[i];
      carry = 0;
      j = 0;
      while (j < digits.length) {
        digits[j] += carry;
        carry = (digits[j] / 58) | 0;
        digits[j] %= 58;
        ++j;
      }
      while (carry) {
        digits.push(carry % 58);
        carry = (carry / 58) | 0;
      }
      i++;
    }
    i = 0;
    while (buffer[i] === 0 && i < buffer.length - 1) {
      digits.push(0);
      i++;
    }
    return digits.reverse().map(function(digit) {
      return ALPHABET[digit];
    }).join("");
  };

  Base58.decode = function(string) {
    var bytes, c, carry, j;
    if (string.length === 0) {
      return new (typeof Uint8Array !== "undefined" && Uint8Array !== null ? Uint8Array : Buffer)(0);
    }
    i = void 0;
    j = void 0;
    bytes = [0];
    i = 0;
    while (i < string.length) {
      c = string[i];
      if (!(c in ALPHABET_MAP)) {
        throw "Base58.decode received unacceptable input. Character '" + c + "' is not in the Base58 alphabet.";
      }
      j = 0;
      while (j < bytes.length) {
        bytes[j] *= 58;
        j++;
      }
      bytes[0] += ALPHABET_MAP[c];
      carry = 0;
      j = 0;
      while (j < bytes.length) {
        bytes[j] += carry;
        carry = bytes[j] >> 8;
        bytes[j] &= 0xff;
        ++j;
      }
      while (carry) {
        bytes.push(carry & 0xff);
        carry >>= 8;
      }
      i++;
    }
    i = 0;
    while (string[i] === "1" && i < string.length - 1) {
      bytes.push(0);
      i++;
    }
    return new (typeof Uint8Array !== "undefined" && Uint8Array !== null ? Uint8Array : Buffer)(bytes.reverse());
  };

}).call(this);

/*
CryptoJS v3.1.2
code.google.com/p/crypto-js
(c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License
*/
var CryptoJS=CryptoJS||function(u,p){var d={},l=d.lib={},s=function(){},t=l.Base={extend:function(a){s.prototype=this;var c=new s;a&&c.mixIn(a);c.hasOwnProperty("init")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty("toString")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},
r=l.WordArray=t.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=p?c:4*a.length},toString:function(a){return(a||v).stringify(this)},concat:function(a){var c=this.words,e=a.words,j=this.sigBytes;a=a.sigBytes;this.clamp();if(j%4)for(var k=0;k<a;k++)c[j+k>>>2]|=(e[k>>>2]>>>24-8*(k%4)&255)<<24-8*((j+k)%4);else if(65535<e.length)for(k=0;k<a;k+=4)c[j+k>>>2]=e[k>>>2];else c.push.apply(c,e);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<
32-8*(c%4);a.length=u.ceil(c/4)},clone:function(){var a=t.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],e=0;e<a;e+=4)c.push(4294967296*u.random()|0);return new r.init(c,a)}}),w=d.enc={},v=w.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var e=[],j=0;j<a;j++){var k=c[j>>>2]>>>24-8*(j%4)&255;e.push((k>>>4).toString(16));e.push((k&15).toString(16))}return e.join("")},parse:function(a){for(var c=a.length,e=[],j=0;j<c;j+=2)e[j>>>3]|=parseInt(a.substr(j,
2),16)<<24-4*(j%8);return new r.init(e,c/2)}},b=w.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var e=[],j=0;j<a;j++)e.push(String.fromCharCode(c[j>>>2]>>>24-8*(j%4)&255));return e.join("")},parse:function(a){for(var c=a.length,e=[],j=0;j<c;j++)e[j>>>2]|=(a.charCodeAt(j)&255)<<24-8*(j%4);return new r.init(e,c)}},x=w.Utf8={stringify:function(a){try{return decodeURIComponent(escape(b.stringify(a)))}catch(c){throw Error("Malformed UTF-8 data");}},parse:function(a){return b.parse(unescape(encodeURIComponent(a)))}},
q=l.BufferedBlockAlgorithm=t.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){"string"==typeof a&&(a=x.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,e=c.words,j=c.sigBytes,k=this.blockSize,b=j/(4*k),b=a?u.ceil(b):u.max((b|0)-this._minBufferSize,0);a=b*k;j=u.min(4*a,j);if(a){for(var q=0;q<a;q+=k)this._doProcessBlock(e,q);q=e.splice(0,a);c.sigBytes-=j}return new r.init(q,j)},clone:function(){var a=t.clone.call(this);
a._data=this._data.clone();return a},_minBufferSize:0});l.Hasher=q.extend({cfg:t.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){q.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(b,e){return(new a.init(e)).finalize(b)}},_createHmacHelper:function(a){return function(b,e){return(new n.HMAC.init(a,
e)).finalize(b)}}});var n=d.algo={};return d}(Math);
(function(){var u=CryptoJS,p=u.lib.WordArray;u.enc.Base64={stringify:function(d){var l=d.words,p=d.sigBytes,t=this._map;d.clamp();d=[];for(var r=0;r<p;r+=3)for(var w=(l[r>>>2]>>>24-8*(r%4)&255)<<16|(l[r+1>>>2]>>>24-8*((r+1)%4)&255)<<8|l[r+2>>>2]>>>24-8*((r+2)%4)&255,v=0;4>v&&r+0.75*v<p;v++)d.push(t.charAt(w>>>6*(3-v)&63));if(l=t.charAt(64))for(;d.length%4;)d.push(l);return d.join("")},parse:function(d){var l=d.length,s=this._map,t=s.charAt(64);t&&(t=d.indexOf(t),-1!=t&&(l=t));for(var t=[],r=0,w=0;w<
l;w++)if(w%4){var v=s.indexOf(d.charAt(w-1))<<2*(w%4),b=s.indexOf(d.charAt(w))>>>6-2*(w%4);t[r>>>2]|=(v|b)<<24-8*(r%4);r++}return p.create(t,r)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}})();
(function(u){function p(b,n,a,c,e,j,k){b=b+(n&a|~n&c)+e+k;return(b<<j|b>>>32-j)+n}function d(b,n,a,c,e,j,k){b=b+(n&c|a&~c)+e+k;return(b<<j|b>>>32-j)+n}function l(b,n,a,c,e,j,k){b=b+(n^a^c)+e+k;return(b<<j|b>>>32-j)+n}function s(b,n,a,c,e,j,k){b=b+(a^(n|~c))+e+k;return(b<<j|b>>>32-j)+n}for(var t=CryptoJS,r=t.lib,w=r.WordArray,v=r.Hasher,r=t.algo,b=[],x=0;64>x;x++)b[x]=4294967296*u.abs(u.sin(x+1))|0;r=r.MD5=v.extend({_doReset:function(){this._hash=new w.init([1732584193,4023233417,2562383102,271733878])},
_doProcessBlock:function(q,n){for(var a=0;16>a;a++){var c=n+a,e=q[c];q[c]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360}var a=this._hash.words,c=q[n+0],e=q[n+1],j=q[n+2],k=q[n+3],z=q[n+4],r=q[n+5],t=q[n+6],w=q[n+7],v=q[n+8],A=q[n+9],B=q[n+10],C=q[n+11],u=q[n+12],D=q[n+13],E=q[n+14],x=q[n+15],f=a[0],m=a[1],g=a[2],h=a[3],f=p(f,m,g,h,c,7,b[0]),h=p(h,f,m,g,e,12,b[1]),g=p(g,h,f,m,j,17,b[2]),m=p(m,g,h,f,k,22,b[3]),f=p(f,m,g,h,z,7,b[4]),h=p(h,f,m,g,r,12,b[5]),g=p(g,h,f,m,t,17,b[6]),m=p(m,g,h,f,w,22,b[7]),
f=p(f,m,g,h,v,7,b[8]),h=p(h,f,m,g,A,12,b[9]),g=p(g,h,f,m,B,17,b[10]),m=p(m,g,h,f,C,22,b[11]),f=p(f,m,g,h,u,7,b[12]),h=p(h,f,m,g,D,12,b[13]),g=p(g,h,f,m,E,17,b[14]),m=p(m,g,h,f,x,22,b[15]),f=d(f,m,g,h,e,5,b[16]),h=d(h,f,m,g,t,9,b[17]),g=d(g,h,f,m,C,14,b[18]),m=d(m,g,h,f,c,20,b[19]),f=d(f,m,g,h,r,5,b[20]),h=d(h,f,m,g,B,9,b[21]),g=d(g,h,f,m,x,14,b[22]),m=d(m,g,h,f,z,20,b[23]),f=d(f,m,g,h,A,5,b[24]),h=d(h,f,m,g,E,9,b[25]),g=d(g,h,f,m,k,14,b[26]),m=d(m,g,h,f,v,20,b[27]),f=d(f,m,g,h,D,5,b[28]),h=d(h,f,
m,g,j,9,b[29]),g=d(g,h,f,m,w,14,b[30]),m=d(m,g,h,f,u,20,b[31]),f=l(f,m,g,h,r,4,b[32]),h=l(h,f,m,g,v,11,b[33]),g=l(g,h,f,m,C,16,b[34]),m=l(m,g,h,f,E,23,b[35]),f=l(f,m,g,h,e,4,b[36]),h=l(h,f,m,g,z,11,b[37]),g=l(g,h,f,m,w,16,b[38]),m=l(m,g,h,f,B,23,b[39]),f=l(f,m,g,h,D,4,b[40]),h=l(h,f,m,g,c,11,b[41]),g=l(g,h,f,m,k,16,b[42]),m=l(m,g,h,f,t,23,b[43]),f=l(f,m,g,h,A,4,b[44]),h=l(h,f,m,g,u,11,b[45]),g=l(g,h,f,m,x,16,b[46]),m=l(m,g,h,f,j,23,b[47]),f=s(f,m,g,h,c,6,b[48]),h=s(h,f,m,g,w,10,b[49]),g=s(g,h,f,m,
E,15,b[50]),m=s(m,g,h,f,r,21,b[51]),f=s(f,m,g,h,u,6,b[52]),h=s(h,f,m,g,k,10,b[53]),g=s(g,h,f,m,B,15,b[54]),m=s(m,g,h,f,e,21,b[55]),f=s(f,m,g,h,v,6,b[56]),h=s(h,f,m,g,x,10,b[57]),g=s(g,h,f,m,t,15,b[58]),m=s(m,g,h,f,D,21,b[59]),f=s(f,m,g,h,z,6,b[60]),h=s(h,f,m,g,C,10,b[61]),g=s(g,h,f,m,j,15,b[62]),m=s(m,g,h,f,A,21,b[63]);a[0]=a[0]+f|0;a[1]=a[1]+m|0;a[2]=a[2]+g|0;a[3]=a[3]+h|0},_doFinalize:function(){var b=this._data,n=b.words,a=8*this._nDataBytes,c=8*b.sigBytes;n[c>>>5]|=128<<24-c%32;var e=u.floor(a/
4294967296);n[(c+64>>>9<<4)+15]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360;n[(c+64>>>9<<4)+14]=(a<<8|a>>>24)&16711935|(a<<24|a>>>8)&4278255360;b.sigBytes=4*(n.length+1);this._process();b=this._hash;n=b.words;for(a=0;4>a;a++)c=n[a],n[a]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;return b},clone:function(){var b=v.clone.call(this);b._hash=this._hash.clone();return b}});t.MD5=v._createHelper(r);t.HmacMD5=v._createHmacHelper(r)})(Math);
(function(){var u=CryptoJS,p=u.lib,d=p.Base,l=p.WordArray,p=u.algo,s=p.EvpKDF=d.extend({cfg:d.extend({keySize:4,hasher:p.MD5,iterations:1}),init:function(d){this.cfg=this.cfg.extend(d)},compute:function(d,r){for(var p=this.cfg,s=p.hasher.create(),b=l.create(),u=b.words,q=p.keySize,p=p.iterations;u.length<q;){n&&s.update(n);var n=s.update(d).finalize(r);s.reset();for(var a=1;a<p;a++)n=s.finalize(n),s.reset();b.concat(n)}b.sigBytes=4*q;return b}});u.EvpKDF=function(d,l,p){return s.create(p).compute(d,
l)}})();
CryptoJS.lib.Cipher||function(u){var p=CryptoJS,d=p.lib,l=d.Base,s=d.WordArray,t=d.BufferedBlockAlgorithm,r=p.enc.Base64,w=p.algo.EvpKDF,v=d.Cipher=t.extend({cfg:l.extend(),createEncryptor:function(e,a){return this.create(this._ENC_XFORM_MODE,e,a)},createDecryptor:function(e,a){return this.create(this._DEC_XFORM_MODE,e,a)},init:function(e,a,b){this.cfg=this.cfg.extend(b);this._xformMode=e;this._key=a;this.reset()},reset:function(){t.reset.call(this);this._doReset()},process:function(e){this._append(e);return this._process()},
finalize:function(e){e&&this._append(e);return this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(e){return{encrypt:function(b,k,d){return("string"==typeof k?c:a).encrypt(e,b,k,d)},decrypt:function(b,k,d){return("string"==typeof k?c:a).decrypt(e,b,k,d)}}}});d.StreamCipher=v.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var b=p.mode={},x=function(e,a,b){var c=this._iv;c?this._iv=u:c=this._prevBlock;for(var d=0;d<b;d++)e[a+d]^=
c[d]},q=(d.BlockCipherMode=l.extend({createEncryptor:function(e,a){return this.Encryptor.create(e,a)},createDecryptor:function(e,a){return this.Decryptor.create(e,a)},init:function(e,a){this._cipher=e;this._iv=a}})).extend();q.Encryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize;x.call(this,e,a,c);b.encryptBlock(e,a);this._prevBlock=e.slice(a,a+c)}});q.Decryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize,d=e.slice(a,a+c);b.decryptBlock(e,a);x.call(this,
e,a,c);this._prevBlock=d}});b=b.CBC=q;q=(p.pad={}).Pkcs7={pad:function(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,l=[],n=0;n<c;n+=4)l.push(d);c=s.create(l,c);a.concat(c)},unpad:function(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255}};d.BlockCipher=v.extend({cfg:v.cfg.extend({mode:b,padding:q}),reset:function(){v.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;this._mode=c.call(a,
this,b&&b.words)},_doProcessBlock:function(a,b){this._mode.processBlock(a,b)},_doFinalize:function(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0)}else b=this._process(!0),a.unpad(b);return b},blockSize:4});var n=d.CipherParams=l.extend({init:function(a){this.mixIn(a)},toString:function(a){return(a||this.formatter).stringify(this)}}),b=(p.format={}).OpenSSL={stringify:function(a){var b=a.ciphertext;a=a.salt;return(a?s.create([1398893684,
1701076831]).concat(a).concat(b):b).toString(r)},parse:function(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=s.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16}return n.create({ciphertext:a,salt:c})}},a=d.SerializableCipher=l.extend({cfg:l.extend({format:b}),encrypt:function(a,b,c,d){d=this.cfg.extend(d);var l=a.createEncryptor(c,d);b=l.finalize(b);l=l.cfg;return n.create({ciphertext:b,key:c,iv:l.iv,algorithm:a,mode:l.mode,padding:l.padding,blockSize:a.blockSize,formatter:d.format})},
decrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext)},_parse:function(a,b){return"string"==typeof a?b.parse(a,this):a}}),p=(p.kdf={}).OpenSSL={execute:function(a,b,c,d){d||(d=s.random(8));a=w.create({keySize:b+c}).compute(a,d);c=s.create(a.words.slice(b),4*c);a.sigBytes=4*b;return n.create({key:a,iv:c,salt:d})}},c=d.PasswordBasedCipher=a.extend({cfg:a.cfg.extend({kdf:p}),encrypt:function(b,c,d,l){l=this.cfg.extend(l);d=l.kdf.execute(d,
b.keySize,b.ivSize);l.iv=d.iv;b=a.encrypt.call(this,b,c,d.key,l);b.mixIn(d);return b},decrypt:function(b,c,d,l){l=this.cfg.extend(l);c=this._parse(c,l.format);d=l.kdf.execute(d,b.keySize,b.ivSize,c.salt);l.iv=d.iv;return a.decrypt.call(this,b,c,d.key,l)}})}();
(function(){for(var u=CryptoJS,p=u.lib.BlockCipher,d=u.algo,l=[],s=[],t=[],r=[],w=[],v=[],b=[],x=[],q=[],n=[],a=[],c=0;256>c;c++)a[c]=128>c?c<<1:c<<1^283;for(var e=0,j=0,c=0;256>c;c++){var k=j^j<<1^j<<2^j<<3^j<<4,k=k>>>8^k&255^99;l[e]=k;s[k]=e;var z=a[e],F=a[z],G=a[F],y=257*a[k]^16843008*k;t[e]=y<<24|y>>>8;r[e]=y<<16|y>>>16;w[e]=y<<8|y>>>24;v[e]=y;y=16843009*G^65537*F^257*z^16843008*e;b[k]=y<<24|y>>>8;x[k]=y<<16|y>>>16;q[k]=y<<8|y>>>24;n[k]=y;e?(e=z^a[a[a[G^z]]],j^=a[a[j]]):e=j=1}var H=[0,1,2,4,8,
16,32,64,128,27,54],d=d.AES=p.extend({_doReset:function(){for(var a=this._key,c=a.words,d=a.sigBytes/4,a=4*((this._nRounds=d+6)+1),e=this._keySchedule=[],j=0;j<a;j++)if(j<d)e[j]=c[j];else{var k=e[j-1];j%d?6<d&&4==j%d&&(k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255]):(k=k<<8|k>>>24,k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255],k^=H[j/d|0]<<24);e[j]=e[j-d]^k}c=this._invKeySchedule=[];for(d=0;d<a;d++)j=a-d,k=d%4?e[j]:e[j-4],c[d]=4>d||4>=j?k:b[l[k>>>24]]^x[l[k>>>16&255]]^q[l[k>>>
8&255]]^n[l[k&255]]},encryptBlock:function(a,b){this._doCryptBlock(a,b,this._keySchedule,t,r,w,v,l)},decryptBlock:function(a,c){var d=a[c+1];a[c+1]=a[c+3];a[c+3]=d;this._doCryptBlock(a,c,this._invKeySchedule,b,x,q,n,s);d=a[c+1];a[c+1]=a[c+3];a[c+3]=d},_doCryptBlock:function(a,b,c,d,e,j,l,f){for(var m=this._nRounds,g=a[b]^c[0],h=a[b+1]^c[1],k=a[b+2]^c[2],n=a[b+3]^c[3],p=4,r=1;r<m;r++)var q=d[g>>>24]^e[h>>>16&255]^j[k>>>8&255]^l[n&255]^c[p++],s=d[h>>>24]^e[k>>>16&255]^j[n>>>8&255]^l[g&255]^c[p++],t=
d[k>>>24]^e[n>>>16&255]^j[g>>>8&255]^l[h&255]^c[p++],n=d[n>>>24]^e[g>>>16&255]^j[h>>>8&255]^l[k&255]^c[p++],g=q,h=s,k=t;q=(f[g>>>24]<<24|f[h>>>16&255]<<16|f[k>>>8&255]<<8|f[n&255])^c[p++];s=(f[h>>>24]<<24|f[k>>>16&255]<<16|f[n>>>8&255]<<8|f[g&255])^c[p++];t=(f[k>>>24]<<24|f[n>>>16&255]<<16|f[g>>>8&255]<<8|f[h&255])^c[p++];n=(f[n>>>24]<<24|f[g>>>16&255]<<16|f[h>>>8&255]<<8|f[k&255])^c[p++];a[b]=q;a[b+1]=s;a[b+2]=t;a[b+3]=n},keySize:8});u.AES=p._createHelper(d)})();

/*
CryptoJS v3.1.2
code.google.com/p/crypto-js
(c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License
*/
var CryptoJS=CryptoJS||function(h,s){var f={},t=f.lib={},g=function(){},j=t.Base={extend:function(a){g.prototype=this;var c=new g;a&&c.mixIn(a);c.hasOwnProperty("init")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty("toString")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},
q=t.WordArray=j.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=s?c:4*a.length},toString:function(a){return(a||u).stringify(this)},concat:function(a){var c=this.words,d=a.words,b=this.sigBytes;a=a.sigBytes;this.clamp();if(b%4)for(var e=0;e<a;e++)c[b+e>>>2]|=(d[e>>>2]>>>24-8*(e%4)&255)<<24-8*((b+e)%4);else if(65535<d.length)for(e=0;e<a;e+=4)c[b+e>>>2]=d[e>>>2];else c.push.apply(c,d);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<
32-8*(c%4);a.length=h.ceil(c/4)},clone:function(){var a=j.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],d=0;d<a;d+=4)c.push(4294967296*h.random()|0);return new q.init(c,a)}}),v=f.enc={},u=v.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++){var e=c[b>>>2]>>>24-8*(b%4)&255;d.push((e>>>4).toString(16));d.push((e&15).toString(16))}return d.join("")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b+=2)d[b>>>3]|=parseInt(a.substr(b,
2),16)<<24-4*(b%8);return new q.init(d,c/2)}},k=v.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var d=[],b=0;b<a;b++)d.push(String.fromCharCode(c[b>>>2]>>>24-8*(b%4)&255));return d.join("")},parse:function(a){for(var c=a.length,d=[],b=0;b<c;b++)d[b>>>2]|=(a.charCodeAt(b)&255)<<24-8*(b%4);return new q.init(d,c)}},l=v.Utf8={stringify:function(a){try{return decodeURIComponent(escape(k.stringify(a)))}catch(c){throw Error("Malformed UTF-8 data");}},parse:function(a){return k.parse(unescape(encodeURIComponent(a)))}},
x=t.BufferedBlockAlgorithm=j.extend({reset:function(){this._data=new q.init;this._nDataBytes=0},_append:function(a){"string"==typeof a&&(a=l.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,d=c.words,b=c.sigBytes,e=this.blockSize,f=b/(4*e),f=a?h.ceil(f):h.max((f|0)-this._minBufferSize,0);a=f*e;b=h.min(4*a,b);if(a){for(var m=0;m<a;m+=e)this._doProcessBlock(d,m);m=d.splice(0,a);c.sigBytes-=b}return new q.init(m,b)},clone:function(){var a=j.clone.call(this);
a._data=this._data.clone();return a},_minBufferSize:0});t.Hasher=x.extend({cfg:j.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){x.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(c,d){return(new a.init(d)).finalize(c)}},_createHmacHelper:function(a){return function(c,d){return(new w.HMAC.init(a,
d)).finalize(c)}}});var w=f.algo={};return f}(Math);
(function(h){for(var s=CryptoJS,f=s.lib,t=f.WordArray,g=f.Hasher,f=s.algo,j=[],q=[],v=function(a){return 4294967296*(a-(a|0))|0},u=2,k=0;64>k;){var l;a:{l=u;for(var x=h.sqrt(l),w=2;w<=x;w++)if(!(l%w)){l=!1;break a}l=!0}l&&(8>k&&(j[k]=v(h.pow(u,0.5))),q[k]=v(h.pow(u,1/3)),k++);u++}var a=[],f=f.SHA256=g.extend({_doReset:function(){this._hash=new t.init(j.slice(0))},_doProcessBlock:function(c,d){for(var b=this._hash.words,e=b[0],f=b[1],m=b[2],h=b[3],p=b[4],j=b[5],k=b[6],l=b[7],n=0;64>n;n++){if(16>n)a[n]=
c[d+n]|0;else{var r=a[n-15],g=a[n-2];a[n]=((r<<25|r>>>7)^(r<<14|r>>>18)^r>>>3)+a[n-7]+((g<<15|g>>>17)^(g<<13|g>>>19)^g>>>10)+a[n-16]}r=l+((p<<26|p>>>6)^(p<<21|p>>>11)^(p<<7|p>>>25))+(p&j^~p&k)+q[n]+a[n];g=((e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22))+(e&f^e&m^f&m);l=k;k=j;j=p;p=h+r|0;h=m;m=f;f=e;e=r+g|0}b[0]=b[0]+e|0;b[1]=b[1]+f|0;b[2]=b[2]+m|0;b[3]=b[3]+h|0;b[4]=b[4]+p|0;b[5]=b[5]+j|0;b[6]=b[6]+k|0;b[7]=b[7]+l|0},_doFinalize:function(){var a=this._data,d=a.words,b=8*this._nDataBytes,e=8*a.sigBytes;
d[e>>>5]|=128<<24-e%32;d[(e+64>>>9<<4)+14]=h.floor(b/4294967296);d[(e+64>>>9<<4)+15]=b;a.sigBytes=4*d.length;this._process();return this._hash},clone:function(){var a=g.clone.call(this);a._hash=this._hash.clone();return a}});s.SHA256=g._createHelper(f);s.HmacSHA256=g._createHmacHelper(f)})(Math);

(function(axlsign) {
'use strict';

// Curve25519 signatures (and also key agreement)
// like in the early Axolotl.
//
// Written by Dmitry Chestnykh.
// You can use it under MIT or CC0 license.

// Curve25519 signatures idea and math by Trevor Perrin
// https://moderncrypto.org/mail-archive/curves/2014/000205.html

// Derived from TweetNaCl.js (https://tweetnacl.js.org/)
// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.
// Public domain.
//
// Implementation derived from TweetNaCl version 20140427.
// See for details: http://tweetnacl.cr.yp.to/

var gf = function(init) {
  var i, r = new Float64Array(16);
  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];
  return r;
};

var _0 = new Uint8Array(16);
var _9 = new Uint8Array(32); _9[0] = 9;

var gf0 = gf(),
    gf1 = gf([1]),
    _121665 = gf([0xdb41, 1]),
    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),
    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),
    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),
    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),
    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);

function ts64(x, i, h, l) {
  x[i]   = (h >> 24) & 0xff;
  x[i+1] = (h >> 16) & 0xff;
  x[i+2] = (h >>  8) & 0xff;
  x[i+3] = h & 0xff;
  x[i+4] = (l >> 24)  & 0xff;
  x[i+5] = (l >> 16)  & 0xff;
  x[i+6] = (l >>  8)  & 0xff;
  x[i+7] = l & 0xff;
}

function vn(x, xi, y, yi, n) {
  var i,d = 0;
  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];
  return (1 & ((d - 1) >>> 8)) - 1;
}

function crypto_verify_32(x, xi, y, yi) {
  return vn(x,xi,y,yi,32);
}

function set25519(r, a) {
  var i;
  for (i = 0; i < 16; i++) r[i] = a[i]|0;
}

function car25519(o) {
  var i, v, c = 1;
  for (i = 0; i < 16; i++) {
    v = o[i] + c + 65535;
    c = Math.floor(v / 65536);
    o[i] = v - c * 65536;
  }
  o[0] += c-1 + 37 * (c-1);
}

function sel25519(p, q, b) {
  var t, c = ~(b-1);
  for (var i = 0; i < 16; i++) {
    t = c & (p[i] ^ q[i]);
    p[i] ^= t;
    q[i] ^= t;
  }
}

function pack25519(o, n) {
  var i, j, b;
  var m = gf(), t = gf();
  for (i = 0; i < 16; i++) t[i] = n[i];
  car25519(t);
  car25519(t);
  car25519(t);
  for (j = 0; j < 2; j++) {
    m[0] = t[0] - 0xffed;
    for (i = 1; i < 15; i++) {
      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);
      m[i-1] &= 0xffff;
    }
    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);
    b = (m[15]>>16) & 1;
    m[14] &= 0xffff;
    sel25519(t, m, 1-b);
  }
  for (i = 0; i < 16; i++) {
    o[2*i] = t[i] & 0xff;
    o[2*i+1] = t[i]>>8;
  }
}

function neq25519(a, b) {
  var c = new Uint8Array(32), d = new Uint8Array(32);
  pack25519(c, a);
  pack25519(d, b);
  return crypto_verify_32(c, 0, d, 0);
}

function par25519(a) {
  var d = new Uint8Array(32);
  pack25519(d, a);
  return d[0] & 1;
}

function unpack25519(o, n) {
  var i;
  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);
  o[15] &= 0x7fff;
}

function A(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];
}

function Z(o, a, b) {
  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];
}

function M(o, a, b) {
  var v, c,
     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,
     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,
    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,
    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,
    b0 = b[0],
    b1 = b[1],
    b2 = b[2],
    b3 = b[3],
    b4 = b[4],
    b5 = b[5],
    b6 = b[6],
    b7 = b[7],
    b8 = b[8],
    b9 = b[9],
    b10 = b[10],
    b11 = b[11],
    b12 = b[12],
    b13 = b[13],
    b14 = b[14],
    b15 = b[15];

  v = a[0];
  t0 += v * b0;
  t1 += v * b1;
  t2 += v * b2;
  t3 += v * b3;
  t4 += v * b4;
  t5 += v * b5;
  t6 += v * b6;
  t7 += v * b7;
  t8 += v * b8;
  t9 += v * b9;
  t10 += v * b10;
  t11 += v * b11;
  t12 += v * b12;
  t13 += v * b13;
  t14 += v * b14;
  t15 += v * b15;
  v = a[1];
  t1 += v * b0;
  t2 += v * b1;
  t3 += v * b2;
  t4 += v * b3;
  t5 += v * b4;
  t6 += v * b5;
  t7 += v * b6;
  t8 += v * b7;
  t9 += v * b8;
  t10 += v * b9;
  t11 += v * b10;
  t12 += v * b11;
  t13 += v * b12;
  t14 += v * b13;
  t15 += v * b14;
  t16 += v * b15;
  v = a[2];
  t2 += v * b0;
  t3 += v * b1;
  t4 += v * b2;
  t5 += v * b3;
  t6 += v * b4;
  t7 += v * b5;
  t8 += v * b6;
  t9 += v * b7;
  t10 += v * b8;
  t11 += v * b9;
  t12 += v * b10;
  t13 += v * b11;
  t14 += v * b12;
  t15 += v * b13;
  t16 += v * b14;
  t17 += v * b15;
  v = a[3];
  t3 += v * b0;
  t4 += v * b1;
  t5 += v * b2;
  t6 += v * b3;
  t7 += v * b4;
  t8 += v * b5;
  t9 += v * b6;
  t10 += v * b7;
  t11 += v * b8;
  t12 += v * b9;
  t13 += v * b10;
  t14 += v * b11;
  t15 += v * b12;
  t16 += v * b13;
  t17 += v * b14;
  t18 += v * b15;
  v = a[4];
  t4 += v * b0;
  t5 += v * b1;
  t6 += v * b2;
  t7 += v * b3;
  t8 += v * b4;
  t9 += v * b5;
  t10 += v * b6;
  t11 += v * b7;
  t12 += v * b8;
  t13 += v * b9;
  t14 += v * b10;
  t15 += v * b11;
  t16 += v * b12;
  t17 += v * b13;
  t18 += v * b14;
  t19 += v * b15;
  v = a[5];
  t5 += v * b0;
  t6 += v * b1;
  t7 += v * b2;
  t8 += v * b3;
  t9 += v * b4;
  t10 += v * b5;
  t11 += v * b6;
  t12 += v * b7;
  t13 += v * b8;
  t14 += v * b9;
  t15 += v * b10;
  t16 += v * b11;
  t17 += v * b12;
  t18 += v * b13;
  t19 += v * b14;
  t20 += v * b15;
  v = a[6];
  t6 += v * b0;
  t7 += v * b1;
  t8 += v * b2;
  t9 += v * b3;
  t10 += v * b4;
  t11 += v * b5;
  t12 += v * b6;
  t13 += v * b7;
  t14 += v * b8;
  t15 += v * b9;
  t16 += v * b10;
  t17 += v * b11;
  t18 += v * b12;
  t19 += v * b13;
  t20 += v * b14;
  t21 += v * b15;
  v = a[7];
  t7 += v * b0;
  t8 += v * b1;
  t9 += v * b2;
  t10 += v * b3;
  t11 += v * b4;
  t12 += v * b5;
  t13 += v * b6;
  t14 += v * b7;
  t15 += v * b8;
  t16 += v * b9;
  t17 += v * b10;
  t18 += v * b11;
  t19 += v * b12;
  t20 += v * b13;
  t21 += v * b14;
  t22 += v * b15;
  v = a[8];
  t8 += v * b0;
  t9 += v * b1;
  t10 += v * b2;
  t11 += v * b3;
  t12 += v * b4;
  t13 += v * b5;
  t14 += v * b6;
  t15 += v * b7;
  t16 += v * b8;
  t17 += v * b9;
  t18 += v * b10;
  t19 += v * b11;
  t20 += v * b12;
  t21 += v * b13;
  t22 += v * b14;
  t23 += v * b15;
  v = a[9];
  t9 += v * b0;
  t10 += v * b1;
  t11 += v * b2;
  t12 += v * b3;
  t13 += v * b4;
  t14 += v * b5;
  t15 += v * b6;
  t16 += v * b7;
  t17 += v * b8;
  t18 += v * b9;
  t19 += v * b10;
  t20 += v * b11;
  t21 += v * b12;
  t22 += v * b13;
  t23 += v * b14;
  t24 += v * b15;
  v = a[10];
  t10 += v * b0;
  t11 += v * b1;
  t12 += v * b2;
  t13 += v * b3;
  t14 += v * b4;
  t15 += v * b5;
  t16 += v * b6;
  t17 += v * b7;
  t18 += v * b8;
  t19 += v * b9;
  t20 += v * b10;
  t21 += v * b11;
  t22 += v * b12;
  t23 += v * b13;
  t24 += v * b14;
  t25 += v * b15;
  v = a[11];
  t11 += v * b0;
  t12 += v * b1;
  t13 += v * b2;
  t14 += v * b3;
  t15 += v * b4;
  t16 += v * b5;
  t17 += v * b6;
  t18 += v * b7;
  t19 += v * b8;
  t20 += v * b9;
  t21 += v * b10;
  t22 += v * b11;
  t23 += v * b12;
  t24 += v * b13;
  t25 += v * b14;
  t26 += v * b15;
  v = a[12];
  t12 += v * b0;
  t13 += v * b1;
  t14 += v * b2;
  t15 += v * b3;
  t16 += v * b4;
  t17 += v * b5;
  t18 += v * b6;
  t19 += v * b7;
  t20 += v * b8;
  t21 += v * b9;
  t22 += v * b10;
  t23 += v * b11;
  t24 += v * b12;
  t25 += v * b13;
  t26 += v * b14;
  t27 += v * b15;
  v = a[13];
  t13 += v * b0;
  t14 += v * b1;
  t15 += v * b2;
  t16 += v * b3;
  t17 += v * b4;
  t18 += v * b5;
  t19 += v * b6;
  t20 += v * b7;
  t21 += v * b8;
  t22 += v * b9;
  t23 += v * b10;
  t24 += v * b11;
  t25 += v * b12;
  t26 += v * b13;
  t27 += v * b14;
  t28 += v * b15;
  v = a[14];
  t14 += v * b0;
  t15 += v * b1;
  t16 += v * b2;
  t17 += v * b3;
  t18 += v * b4;
  t19 += v * b5;
  t20 += v * b6;
  t21 += v * b7;
  t22 += v * b8;
  t23 += v * b9;
  t24 += v * b10;
  t25 += v * b11;
  t26 += v * b12;
  t27 += v * b13;
  t28 += v * b14;
  t29 += v * b15;
  v = a[15];
  t15 += v * b0;
  t16 += v * b1;
  t17 += v * b2;
  t18 += v * b3;
  t19 += v * b4;
  t20 += v * b5;
  t21 += v * b6;
  t22 += v * b7;
  t23 += v * b8;
  t24 += v * b9;
  t25 += v * b10;
  t26 += v * b11;
  t27 += v * b12;
  t28 += v * b13;
  t29 += v * b14;
  t30 += v * b15;

  t0  += 38 * t16;
  t1  += 38 * t17;
  t2  += 38 * t18;
  t3  += 38 * t19;
  t4  += 38 * t20;
  t5  += 38 * t21;
  t6  += 38 * t22;
  t7  += 38 * t23;
  t8  += 38 * t24;
  t9  += 38 * t25;
  t10 += 38 * t26;
  t11 += 38 * t27;
  t12 += 38 * t28;
  t13 += 38 * t29;
  t14 += 38 * t30;
  // t15 left as is

  // first car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  // second car
  c = 1;
  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;
  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;
  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;
  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;
  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;
  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;
  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;
  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;
  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;
  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;
  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;
  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;
  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;
  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;
  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;
  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;
  t0 += c-1 + 37 * (c-1);

  o[ 0] = t0;
  o[ 1] = t1;
  o[ 2] = t2;
  o[ 3] = t3;
  o[ 4] = t4;
  o[ 5] = t5;
  o[ 6] = t6;
  o[ 7] = t7;
  o[ 8] = t8;
  o[ 9] = t9;
  o[10] = t10;
  o[11] = t11;
  o[12] = t12;
  o[13] = t13;
  o[14] = t14;
  o[15] = t15;
}

function S(o, a) {
  M(o, a, a);
}

function inv25519(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 253; a >= 0; a--) {
    S(c, c);
    if(a !== 2 && a !== 4) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function pow2523(o, i) {
  var c = gf();
  var a;
  for (a = 0; a < 16; a++) c[a] = i[a];
  for (a = 250; a >= 0; a--) {
      S(c, c);
      if(a !== 1) M(c, c, i);
  }
  for (a = 0; a < 16; a++) o[a] = c[a];
}

function crypto_scalarmult(q, n, p) {
  var z = new Uint8Array(32);
  var x = new Float64Array(80), r, i;
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf();
  for (i = 0; i < 31; i++) z[i] = n[i];
  z[31]=(n[31]&127)|64;
  z[0]&=248;
  unpack25519(x,p);
  for (i = 0; i < 16; i++) {
    b[i]=x[i];
    d[i]=a[i]=c[i]=0;
  }
  a[0]=d[0]=1;
  for (i=254; i>=0; --i) {
    r=(z[i>>>3]>>>(i&7))&1;
    sel25519(a,b,r);
    sel25519(c,d,r);
    A(e,a,c);
    Z(a,a,c);
    A(c,b,d);
    Z(b,b,d);
    S(d,e);
    S(f,a);
    M(a,c,a);
    M(c,b,e);
    A(e,a,c);
    Z(a,a,c);
    S(b,a);
    Z(c,d,f);
    M(a,c,_121665);
    A(a,a,d);
    M(c,c,a);
    M(a,d,f);
    M(d,b,x);
    S(b,e);
    sel25519(a,b,r);
    sel25519(c,d,r);
  }
  for (i = 0; i < 16; i++) {
    x[i+16]=a[i];
    x[i+32]=c[i];
    x[i+48]=b[i];
    x[i+64]=d[i];
  }
  var x32 = x.subarray(32);
  var x16 = x.subarray(16);
  inv25519(x32,x32);
  M(x16,x16,x32);
  pack25519(q,x16);
  return 0;
}

function crypto_scalarmult_base(q, n) {
  return crypto_scalarmult(q, n, _9);
}

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function crypto_hashblocks_hl(hh, hl, m, n) {
  var wh = new Int32Array(16), wl = new Int32Array(16),
      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,
      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,
      th, tl, i, j, h, l, a, b, c, d;

  var ah0 = hh[0],
      ah1 = hh[1],
      ah2 = hh[2],
      ah3 = hh[3],
      ah4 = hh[4],
      ah5 = hh[5],
      ah6 = hh[6],
      ah7 = hh[7],

      al0 = hl[0],
      al1 = hl[1],
      al2 = hl[2],
      al3 = hl[3],
      al4 = hl[4],
      al5 = hl[5],
      al6 = hl[6],
      al7 = hl[7];

  var pos = 0;
  while (n >= 128) {
    for (i = 0; i < 16; i++) {
      j = 8 * i + pos;
      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];
      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];
    }
    for (i = 0; i < 80; i++) {
      bh0 = ah0;
      bh1 = ah1;
      bh2 = ah2;
      bh3 = ah3;
      bh4 = ah4;
      bh5 = ah5;
      bh6 = ah6;
      bh7 = ah7;

      bl0 = al0;
      bl1 = al1;
      bl2 = al2;
      bl3 = al3;
      bl4 = al4;
      bl5 = al5;
      bl6 = al6;
      bl7 = al7;

      // add
      h = ah7;
      l = al7;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma1
      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));
      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Ch
      h = (ah4 & ah5) ^ (~ah4 & ah6);
      l = (al4 & al5) ^ (~al4 & al6);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // K
      h = K[i*2];
      l = K[i*2+1];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // w
      h = wh[i%16];
      l = wl[i%16];

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      th = c & 0xffff | d << 16;
      tl = a & 0xffff | b << 16;

      // add
      h = th;
      l = tl;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      // Sigma0
      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));
      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      // Maj
      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);
      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh7 = (c & 0xffff) | (d << 16);
      bl7 = (a & 0xffff) | (b << 16);

      // add
      h = bh3;
      l = bl3;

      a = l & 0xffff; b = l >>> 16;
      c = h & 0xffff; d = h >>> 16;

      h = th;
      l = tl;

      a += l & 0xffff; b += l >>> 16;
      c += h & 0xffff; d += h >>> 16;

      b += a >>> 16;
      c += b >>> 16;
      d += c >>> 16;

      bh3 = (c & 0xffff) | (d << 16);
      bl3 = (a & 0xffff) | (b << 16);

      ah1 = bh0;
      ah2 = bh1;
      ah3 = bh2;
      ah4 = bh3;
      ah5 = bh4;
      ah6 = bh5;
      ah7 = bh6;
      ah0 = bh7;

      al1 = bl0;
      al2 = bl1;
      al3 = bl2;
      al4 = bl3;
      al5 = bl4;
      al6 = bl5;
      al7 = bl6;
      al0 = bl7;

      if (i%16 === 15) {
        for (j = 0; j < 16; j++) {
          // add
          h = wh[j];
          l = wl[j];

          a = l & 0xffff; b = l >>> 16;
          c = h & 0xffff; d = h >>> 16;

          h = wh[(j+9)%16];
          l = wl[(j+9)%16];

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma0
          th = wh[(j+1)%16];
          tl = wl[(j+1)%16];
          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);
          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          // sigma1
          th = wh[(j+14)%16];
          tl = wl[(j+14)%16];
          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);
          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));

          a += l & 0xffff; b += l >>> 16;
          c += h & 0xffff; d += h >>> 16;

          b += a >>> 16;
          c += b >>> 16;
          d += c >>> 16;

          wh[j] = (c & 0xffff) | (d << 16);
          wl[j] = (a & 0xffff) | (b << 16);
        }
      }
    }

    // add
    h = ah0;
    l = al0;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[0];
    l = hl[0];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[0] = ah0 = (c & 0xffff) | (d << 16);
    hl[0] = al0 = (a & 0xffff) | (b << 16);

    h = ah1;
    l = al1;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[1];
    l = hl[1];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[1] = ah1 = (c & 0xffff) | (d << 16);
    hl[1] = al1 = (a & 0xffff) | (b << 16);

    h = ah2;
    l = al2;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[2];
    l = hl[2];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[2] = ah2 = (c & 0xffff) | (d << 16);
    hl[2] = al2 = (a & 0xffff) | (b << 16);

    h = ah3;
    l = al3;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[3];
    l = hl[3];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[3] = ah3 = (c & 0xffff) | (d << 16);
    hl[3] = al3 = (a & 0xffff) | (b << 16);

    h = ah4;
    l = al4;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[4];
    l = hl[4];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[4] = ah4 = (c & 0xffff) | (d << 16);
    hl[4] = al4 = (a & 0xffff) | (b << 16);

    h = ah5;
    l = al5;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[5];
    l = hl[5];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[5] = ah5 = (c & 0xffff) | (d << 16);
    hl[5] = al5 = (a & 0xffff) | (b << 16);

    h = ah6;
    l = al6;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[6];
    l = hl[6];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[6] = ah6 = (c & 0xffff) | (d << 16);
    hl[6] = al6 = (a & 0xffff) | (b << 16);

    h = ah7;
    l = al7;

    a = l & 0xffff; b = l >>> 16;
    c = h & 0xffff; d = h >>> 16;

    h = hh[7];
    l = hl[7];

    a += l & 0xffff; b += l >>> 16;
    c += h & 0xffff; d += h >>> 16;

    b += a >>> 16;
    c += b >>> 16;
    d += c >>> 16;

    hh[7] = ah7 = (c & 0xffff) | (d << 16);
    hl[7] = al7 = (a & 0xffff) | (b << 16);

    pos += 128;
    n -= 128;
  }

  return n;
}

function crypto_hash(out, m, n) {
  var hh = new Int32Array(8),
      hl = new Int32Array(8),
      x = new Uint8Array(256),
      i, b = n;

  hh[0] = 0x6a09e667;
  hh[1] = 0xbb67ae85;
  hh[2] = 0x3c6ef372;
  hh[3] = 0xa54ff53a;
  hh[4] = 0x510e527f;
  hh[5] = 0x9b05688c;
  hh[6] = 0x1f83d9ab;
  hh[7] = 0x5be0cd19;

  hl[0] = 0xf3bcc908;
  hl[1] = 0x84caa73b;
  hl[2] = 0xfe94f82b;
  hl[3] = 0x5f1d36f1;
  hl[4] = 0xade682d1;
  hl[5] = 0x2b3e6c1f;
  hl[6] = 0xfb41bd6b;
  hl[7] = 0x137e2179;

  crypto_hashblocks_hl(hh, hl, m, n);
  n %= 128;

  for (i = 0; i < n; i++) x[i] = m[b-n+i];
  x[n] = 128;

  n = 256-128*(n<112?1:0);
  x[n-9] = 0;
  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);
  crypto_hashblocks_hl(hh, hl, x, n);

  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);

  return 0;
}

function add(p, q) {
  var a = gf(), b = gf(), c = gf(),
      d = gf(), e = gf(), f = gf(),
      g = gf(), h = gf(), t = gf();

  Z(a, p[1], p[0]);
  Z(t, q[1], q[0]);
  M(a, a, t);
  A(b, p[0], p[1]);
  A(t, q[0], q[1]);
  M(b, b, t);
  M(c, p[3], q[3]);
  M(c, c, D2);
  M(d, p[2], q[2]);
  A(d, d, d);
  Z(e, b, a);
  Z(f, d, c);
  A(g, d, c);
  A(h, b, a);

  M(p[0], e, f);
  M(p[1], h, g);
  M(p[2], g, f);
  M(p[3], e, h);
}

function cswap(p, q, b) {
  var i;
  for (i = 0; i < 4; i++) {
    sel25519(p[i], q[i], b);
  }
}

function pack(r, p) {
  var tx = gf(), ty = gf(), zi = gf();
  inv25519(zi, p[2]);
  M(tx, p[0], zi);
  M(ty, p[1], zi);
  pack25519(r, ty);
  r[31] ^= par25519(tx) << 7;
}

function scalarmult(p, q, s) {
  var b, i;
  set25519(p[0], gf0);
  set25519(p[1], gf1);
  set25519(p[2], gf1);
  set25519(p[3], gf0);
  for (i = 255; i >= 0; --i) {
    b = (s[(i/8)|0] >> (i&7)) & 1;
    cswap(p, q, b);
    add(q, p);
    add(p, p);
    cswap(p, q, b);
  }
}

function scalarbase(p, s) {
  var q = [gf(), gf(), gf(), gf()];
  set25519(q[0], X);
  set25519(q[1], Y);
  set25519(q[2], gf1);
  M(q[3], X, Y);
  scalarmult(p, q, s);
}

var L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);

function modL(r, x) {
  var carry, i, j, k;
  for (i = 63; i >= 32; --i) {
    carry = 0;
    for (j = i - 32, k = i - 12; j < k; ++j) {
      x[j] += carry - 16 * x[i] * L[j - (i - 32)];
      carry = (x[j] + 128) >> 8;
      x[j] -= carry * 256;
    }
    x[j] += carry;
    x[i] = 0;
  }
  carry = 0;
  for (j = 0; j < 32; j++) {
    x[j] += carry - (x[31] >> 4) * L[j];
    carry = x[j] >> 8;
    x[j] &= 255;
  }
  for (j = 0; j < 32; j++) x[j] -= carry * L[j];
  for (i = 0; i < 32; i++) {
    x[i+1] += x[i] >> 8;
    r[i] = x[i] & 255;
  }
}

function reduce(r) {
  var x = new Float64Array(64), i;
  for (i = 0; i < 64; i++) x[i] = r[i];
  for (i = 0; i < 64; i++) r[i] = 0;
  modL(r, x);
}

// Like crypto_sign, but uses secret key directly in hash.
function crypto_sign_direct(sm, m, n, sk) {
  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);
  var i, j, x = new Float64Array(64);
  var p = [gf(), gf(), gf(), gf()];

  for (i = 0; i < n; i++) sm[64 + i] = m[i];
  for (i = 0; i < 32; i++) sm[32 + i] = sk[i];

  crypto_hash(r, sm.subarray(32), n+32);
  reduce(r);
  scalarbase(p, r);
  pack(sm, p);

  for (i = 0; i < 32; i++) sm[i + 32] = sk[32 + i];
  crypto_hash(h, sm, n + 64);
  reduce(h);

  for (i = 0; i < 64; i++) x[i] = 0;
  for (i = 0; i < 32; i++) x[i] = r[i];
  for (i = 0; i < 32; i++) {
    for (j = 0; j < 32; j++) {
      x[i+j] += h[i] * sk[j];
    }
  }

  modL(sm.subarray(32), x);
  return n + 64;
}

// Note: sm must be n+128.
function crypto_sign_direct_rnd(sm, m, n, sk, rnd) {
  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);
  var i, j, x = new Float64Array(64);
  var p = [gf(), gf(), gf(), gf()];

  // Hash separation.
  sm[0] = 0xfe;
  for (i = 1; i < 32; i++) sm[i] = 0xff;

  // Secret key.
  for (i = 0; i < 32; i++) sm[32 + i] = sk[i];

  // Message.
  for (i = 0; i < n; i++) sm[64 + i] = m[i];

  // Random suffix.
  for (i = 0; i < 64; i++) sm[n + 64 + i] = rnd[i];

  crypto_hash(r, sm, n+128);
  reduce(r);
  scalarbase(p, r);
  pack(sm, p);

  for (i = 0; i < 32; i++) sm[i + 32] = sk[32 + i];
  crypto_hash(h, sm, n + 64);
  reduce(h);

  // Wipe out random suffix.
  for (i = 0; i < 64; i++) sm[n + 64 + i] = 0;

  for (i = 0; i < 64; i++) x[i] = 0;
  for (i = 0; i < 32; i++) x[i] = r[i];
  for (i = 0; i < 32; i++) {
    for (j = 0; j < 32; j++) {
      x[i+j] += h[i] * sk[j];
    }
  }

  modL(sm.subarray(32, n + 64), x);

  return n + 64;
}


function curve25519_sign(sm, m, n, sk, opt_rnd) {
  // If opt_rnd is provided, sm must have n + 128,
  // otherwise it must have n + 64 bytes.

  // Convert Curve25519 secret key into Ed25519 secret key (includes pub key).
  var edsk = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()];

  for (var i = 0; i < 32; i++) edsk[i] = sk[i];
  // Ensure private key is in the correct format.
  edsk[0] &= 248;
  edsk[31] &= 127;
  edsk[31] |= 64;

  scalarbase(p, edsk);
  pack(edsk.subarray(32), p);

  // Remember sign bit.
  var signBit = edsk[63] & 128;
  var smlen;

  if (opt_rnd) {
    smlen = crypto_sign_direct_rnd(sm, m, n, edsk, opt_rnd);
  } else {
    smlen = crypto_sign_direct(sm, m, n, edsk);
  }

  // Copy sign bit from public key into signature.
  sm[63] |= signBit;
  return smlen;
}

function unpackneg(r, p) {
  var t = gf(), chk = gf(), num = gf(),
      den = gf(), den2 = gf(), den4 = gf(),
      den6 = gf();

  set25519(r[2], gf1);
  unpack25519(r[1], p);
  S(num, r[1]);
  M(den, num, D);
  Z(num, num, r[2]);
  A(den, r[2], den);

  S(den2, den);
  S(den4, den2);
  M(den6, den4, den2);
  M(t, den6, num);
  M(t, t, den);

  pow2523(t, t);
  M(t, t, num);
  M(t, t, den);
  M(t, t, den);
  M(r[0], t, den);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) M(r[0], r[0], I);

  S(chk, r[0]);
  M(chk, chk, den);
  if (neq25519(chk, num)) return -1;

  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);

  M(r[3], r[0], r[1]);
  return 0;
}

function crypto_sign_open(m, sm, n, pk) {
  var i, mlen;
  var t = new Uint8Array(32), h = new Uint8Array(64);
  var p = [gf(), gf(), gf(), gf()],
      q = [gf(), gf(), gf(), gf()];

  mlen = -1;
  if (n < 64) return -1;

  if (unpackneg(q, pk)) return -1;

  for (i = 0; i < n; i++) m[i] = sm[i];
  for (i = 0; i < 32; i++) m[i+32] = pk[i];
  crypto_hash(h, m, n);
  reduce(h);
  scalarmult(p, q, h);

  scalarbase(q, sm.subarray(32));
  add(p, q);
  pack(t, p);

  n -= 64;
  if (crypto_verify_32(sm, 0, t, 0)) {
    for (i = 0; i < n; i++) m[i] = 0;
    return -1;
  }

  for (i = 0; i < n; i++) m[i] = sm[i + 64];
  mlen = n;
  return mlen;
}

// Converts Curve25519 public key back to Ed25519 public key.
// edwardsY = (montgomeryX - 1) / (montgomeryX + 1)
function convertPublicKey(pk) {
  var z = new Uint8Array(32),
      x = gf(), a = gf(), b = gf();

  unpack25519(x, pk);

  A(a, x, gf1);
  Z(b, x, gf1);
  inv25519(a, a);
  M(a, a, b);

  pack25519(z, a);
  return z;
}

function curve25519_sign_open(m, sm, n, pk) {
  // Convert Curve25519 public key into Ed25519 public key.
  var edpk = convertPublicKey(pk);

  // Restore sign bit from signature.
  edpk[31] |= sm[63] & 128;

  // Remove sign bit from signature.
  sm[63] &= 127;

  // Verify signed message.
  return crypto_sign_open(m, sm, n, edpk);
}

/* High-level API */

function checkArrayTypes() {
  var t, i;
  for (i = 0; i < arguments.length; i++) {
     if ((t = Object.prototype.toString.call(arguments[i])) !== '[object Uint8Array]')
       throw new TypeError('unexpected type ' + t + ', use Uint8Array');
  }
}

axlsign.sharedKey = function(secretKey, publicKey) {
  checkArrayTypes(publicKey, secretKey);
  if (publicKey.length !== 32) throw new Error('wrong public key length');
  if (secretKey.length !== 32) throw new Error('wrong secret key length');
  var sharedKey = new Uint8Array(32);
  crypto_scalarmult(sharedKey, secretKey, publicKey);
  return sharedKey;
};

axlsign.signMessage = function(secretKey, msg, opt_random) {
  checkArrayTypes(msg, secretKey);
  if (secretKey.length !== 32) throw new Error('wrong secret key length');
  if (opt_random) {
    checkArrayTypes(opt_random)
    if (opt_random.length !== 64) throw new Error('wrong random data length');
    var buf = new Uint8Array(128 + msg.length);
    curve25519_sign(buf, msg, msg.length, secretKey, opt_random);
    return new Uint8Array(buf.subarray(0, 64 + msg.length));
  } else {
    var signedMsg = new Uint8Array(64 + msg.length);
    curve25519_sign(signedMsg, msg, msg.length, secretKey);
    return signedMsg;
  }
}

axlsign.openMessage = function(publicKey, signedMsg) {
  checkArrayTypes(signedMsg, publicKey);
  if (publicKey.length !== 32) throw new Error('wrong public key length');
  var tmp = new Uint8Array(signedMsg.length);
  var mlen = curve25519_sign_open(tmp, signedMsg, signedMsg.length, publicKey);
  if (mlen < 0) return null;
  var m = new Uint8Array(mlen);
  for (var i = 0; i < m.length; i++) m[i] = tmp[i];
  return m;
};

axlsign.sign = function(secretKey, msg, opt_random) {
  checkArrayTypes(secretKey, msg);
  if (secretKey.length !== 32) throw new Error('wrong secret key length');
  if (opt_random) {
    checkArrayTypes(opt_random);
    if (opt_random.length !== 64) throw new Error('wrong random data length');
  }
  var buf = new Uint8Array((opt_random ? 128 : 64) + msg.length);
  curve25519_sign(buf, msg, msg.length, secretKey, opt_random);
  var signature = new Uint8Array(64);
  for (var i = 0; i < signature.length; i++) signature[i] = buf[i];
  return signature;
};

axlsign.verify = function(publicKey, msg, signature) {
  checkArrayTypes(msg, signature, publicKey);
  if (signature.length !== 64) throw new Error('wrong signature length');
  if (publicKey.length !== 32) throw new Error('wrong public key length');
  var sm = new Uint8Array(64 + msg.length);
  var m = new Uint8Array(64 + msg.length);
  var i;
  for (i = 0; i < 64; i++) sm[i] = signature[i];
  for (i = 0; i < msg.length; i++) sm[i+64] = msg[i];
  return (curve25519_sign_open(m, sm, sm.length, publicKey) >= 0);
};

axlsign.generateKeyPair = function(seed) {
  checkArrayTypes(seed);
  if (seed.length !== 32) throw new Error('wrong seed length');
  var sk = new Uint8Array(32);
  var pk = new Uint8Array(32);

  for (var i = 0; i < 32; i++) sk[i] = seed[i];

  crypto_scalarmult_base(pk, sk);

  // Turn secret key into the correct format.
  sk[0] &= 248;
  sk[31] &= 127;
  sk[31] |= 64;

  // Remove sign bit from public key.
  pk[31] &= 127;

  return {
    public: pk,
    private: sk
  };
};

})(typeof module !== 'undefined' && module.exports ? module.exports : (self.axlsign = self.axlsign || {}));

/*!
 * clipboard.js v1.5.16
 * https://zenorocha.github.io/clipboard.js
 *
 * Licensed MIT Â© Zeno Rocha
 */
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Clipboard = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var DOCUMENT_NODE_TYPE = 9;

/**
 * A polyfill for Element.matches()
 */
if (Element && !Element.prototype.matches) {
    var proto = Element.prototype;

    proto.matches = proto.matchesSelector ||
                    proto.mozMatchesSelector ||
                    proto.msMatchesSelector ||
                    proto.oMatchesSelector ||
                    proto.webkitMatchesSelector;
}

/**
 * Finds the closest parent that matches a selector.
 *
 * @param {Element} element
 * @param {String} selector
 * @return {Function}
 */
function closest (element, selector) {
    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {
        if (element.matches(selector)) return element;
        element = element.parentNode;
    }
}

module.exports = closest;

},{}],2:[function(require,module,exports){
var closest = require('./closest');

/**
 * Delegates event to a selector.
 *
 * @param {Element} element
 * @param {String} selector
 * @param {String} type
 * @param {Function} callback
 * @param {Boolean} useCapture
 * @return {Object}
 */
function delegate(element, selector, type, callback, useCapture) {
    var listenerFn = listener.apply(this, arguments);

    element.addEventListener(type, listenerFn, useCapture);

    return {
        destroy: function() {
            element.removeEventListener(type, listenerFn, useCapture);
        }
    }
}

/**
 * Finds closest match and invokes callback.
 *
 * @param {Element} element
 * @param {String} selector
 * @param {String} type
 * @param {Function} callback
 * @return {Function}
 */
function listener(element, selector, type, callback) {
    return function(e) {
        e.delegateTarget = closest(e.target, selector);

        if (e.delegateTarget) {
            callback.call(element, e);
        }
    }
}

module.exports = delegate;

},{"./closest":1}],3:[function(require,module,exports){
/**
 * Check if argument is a HTML element.
 *
 * @param {Object} value
 * @return {Boolean}
 */
exports.node = function(value) {
    return value !== undefined
        && value instanceof HTMLElement
        && value.nodeType === 1;
};

/**
 * Check if argument is a list of HTML elements.
 *
 * @param {Object} value
 * @return {Boolean}
 */
exports.nodeList = function(value) {
    var type = Object.prototype.toString.call(value);

    return value !== undefined
        && (type === '[object NodeList]' || type === '[object HTMLCollection]')
        && ('length' in value)
        && (value.length === 0 || exports.node(value[0]));
};

/**
 * Check if argument is a string.
 *
 * @param {Object} value
 * @return {Boolean}
 */
exports.string = function(value) {
    return typeof value === 'string'
        || value instanceof String;
};

/**
 * Check if argument is a function.
 *
 * @param {Object} value
 * @return {Boolean}
 */
exports.fn = function(value) {
    var type = Object.prototype.toString.call(value);

    return type === '[object Function]';
};

},{}],4:[function(require,module,exports){
var is = require('./is');
var delegate = require('delegate');

/**
 * Validates all params and calls the right
 * listener function based on its target type.
 *
 * @param {String|HTMLElement|HTMLCollection|NodeList} target
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
function listen(target, type, callback) {
    if (!target && !type && !callback) {
        throw new Error('Missing required arguments');
    }

    if (!is.string(type)) {
        throw new TypeError('Second argument must be a String');
    }

    if (!is.fn(callback)) {
        throw new TypeError('Third argument must be a Function');
    }

    if (is.node(target)) {
        return listenNode(target, type, callback);
    }
    else if (is.nodeList(target)) {
        return listenNodeList(target, type, callback);
    }
    else if (is.string(target)) {
        return listenSelector(target, type, callback);
    }
    else {
        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');
    }
}

/**
 * Adds an event listener to a HTML element
 * and returns a remove listener function.
 *
 * @param {HTMLElement} node
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
function listenNode(node, type, callback) {
    node.addEventListener(type, callback);

    return {
        destroy: function() {
            node.removeEventListener(type, callback);
        }
    }
}

/**
 * Add an event listener to a list of HTML elements
 * and returns a remove listener function.
 *
 * @param {NodeList|HTMLCollection} nodeList
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
function listenNodeList(nodeList, type, callback) {
    Array.prototype.forEach.call(nodeList, function(node) {
        node.addEventListener(type, callback);
    });

    return {
        destroy: function() {
            Array.prototype.forEach.call(nodeList, function(node) {
                node.removeEventListener(type, callback);
            });
        }
    }
}

/**
 * Add an event listener to a selector
 * and returns a remove listener function.
 *
 * @param {String} selector
 * @param {String} type
 * @param {Function} callback
 * @return {Object}
 */
function listenSelector(selector, type, callback) {
    return delegate(document.body, selector, type, callback);
}

module.exports = listen;

},{"./is":3,"delegate":2}],5:[function(require,module,exports){
function select(element) {
    var selectedText;

    if (element.nodeName === 'SELECT') {
        element.focus();

        selectedText = element.value;
    }
    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {
        element.focus();
        element.setSelectionRange(0, element.value.length);

        selectedText = element.value;
    }
    else {
        if (element.hasAttribute('contenteditable')) {
            element.focus();
        }

        var selection = window.getSelection();
        var range = document.createRange();

        range.selectNodeContents(element);
        selection.removeAllRanges();
        selection.addRange(range);

        selectedText = selection.toString();
    }

    return selectedText;
}

module.exports = select;

},{}],6:[function(require,module,exports){
function E () {
  // Keep this empty so it's easier to inherit from
  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)
}

E.prototype = {
  on: function (name, callback, ctx) {
    var e = this.e || (this.e = {});

    (e[name] || (e[name] = [])).push({
      fn: callback,
      ctx: ctx
    });

    return this;
  },

  once: function (name, callback, ctx) {
    var self = this;
    function listener () {
      self.off(name, listener);
      callback.apply(ctx, arguments);
    };

    listener._ = callback
    return this.on(name, listener, ctx);
  },

  emit: function (name) {
    var data = [].slice.call(arguments, 1);
    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();
    var i = 0;
    var len = evtArr.length;

    for (i; i < len; i++) {
      evtArr[i].fn.apply(evtArr[i].ctx, data);
    }

    return this;
  },

  off: function (name, callback) {
    var e = this.e || (this.e = {});
    var evts = e[name];
    var liveEvents = [];

    if (evts && callback) {
      for (var i = 0, len = evts.length; i < len; i++) {
        if (evts[i].fn !== callback && evts[i].fn._ !== callback)
          liveEvents.push(evts[i]);
      }
    }

    // Remove event from queue to prevent memory leak
    // Suggested by https://github.com/lazd
    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910

    (liveEvents.length)
      ? e[name] = liveEvents
      : delete e[name];

    return this;
  }
};

module.exports = E;

},{}],7:[function(require,module,exports){
(function (global, factory) {
    if (typeof define === "function" && define.amd) {
        define(['module', 'select'], factory);
    } else if (typeof exports !== "undefined") {
        factory(module, require('select'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod, global.select);
        global.clipboardAction = mod.exports;
    }
})(this, function (module, _select) {
    'use strict';

    var _select2 = _interopRequireDefault(_select);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj;
    } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }

        return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
        };
    }();

    var ClipboardAction = function () {
        /**
         * @param {Object} options
         */
        function ClipboardAction(options) {
            _classCallCheck(this, ClipboardAction);

            this.resolveOptions(options);
            this.initSelection();
        }

        /**
         * Defines base properties passed from constructor.
         * @param {Object} options
         */


        _createClass(ClipboardAction, [{
            key: 'resolveOptions',
            value: function resolveOptions() {
                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

                this.action = options.action;
                this.emitter = options.emitter;
                this.target = options.target;
                this.text = options.text;
                this.trigger = options.trigger;

                this.selectedText = '';
            }
        }, {
            key: 'initSelection',
            value: function initSelection() {
                if (this.text) {
                    this.selectFake();
                } else if (this.target) {
                    this.selectTarget();
                }
            }
        }, {
            key: 'selectFake',
            value: function selectFake() {
                var _this = this;

                var isRTL = document.documentElement.getAttribute('dir') == 'rtl';

                this.removeFake();

                this.fakeHandlerCallback = function () {
                    return _this.removeFake();
                };
                this.fakeHandler = document.body.addEventListener('click', this.fakeHandlerCallback) || true;

                this.fakeElem = document.createElement('textarea');
                // Prevent zooming on iOS
                this.fakeElem.style.fontSize = '12pt';
                // Reset box model
                this.fakeElem.style.border = '0';
                this.fakeElem.style.padding = '0';
                this.fakeElem.style.margin = '0';
                // Move element out of screen horizontally
                this.fakeElem.style.position = 'absolute';
                this.fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';
                // Move element to the same position vertically
                var yPosition = window.pageYOffset || document.documentElement.scrollTop;
                this.fakeElem.addEventListener('focus', window.scrollTo(0, yPosition));
                this.fakeElem.style.top = yPosition + 'px';

                this.fakeElem.setAttribute('readonly', '');
                this.fakeElem.value = this.text;

                document.body.appendChild(this.fakeElem);

                this.selectedText = (0, _select2.default)(this.fakeElem);
                this.copyText();
            }
        }, {
            key: 'removeFake',
            value: function removeFake() {
                if (this.fakeHandler) {
                    document.body.removeEventListener('click', this.fakeHandlerCallback);
                    this.fakeHandler = null;
                    this.fakeHandlerCallback = null;
                }

                if (this.fakeElem) {
                    document.body.removeChild(this.fakeElem);
                    this.fakeElem = null;
                }
            }
        }, {
            key: 'selectTarget',
            value: function selectTarget() {
                this.selectedText = (0, _select2.default)(this.target);
                this.copyText();
            }
        }, {
            key: 'copyText',
            value: function copyText() {
                var succeeded = void 0;

                try {
                    succeeded = document.execCommand(this.action);
                } catch (err) {
                    succeeded = false;
                }

                this.handleResult(succeeded);
            }
        }, {
            key: 'handleResult',
            value: function handleResult(succeeded) {
                this.emitter.emit(succeeded ? 'success' : 'error', {
                    action: this.action,
                    text: this.selectedText,
                    trigger: this.trigger,
                    clearSelection: this.clearSelection.bind(this)
                });
            }
        }, {
            key: 'clearSelection',
            value: function clearSelection() {
                if (this.target) {
                    this.target.blur();
                }

                window.getSelection().removeAllRanges();
            }
        }, {
            key: 'destroy',
            value: function destroy() {
                this.removeFake();
            }
        }, {
            key: 'action',
            set: function set() {
                var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'copy';

                this._action = action;

                if (this._action !== 'copy' && this._action !== 'cut') {
                    throw new Error('Invalid "action" value, use either "copy" or "cut"');
                }
            },
            get: function get() {
                return this._action;
            }
        }, {
            key: 'target',
            set: function set(target) {
                if (target !== undefined) {
                    if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && target.nodeType === 1) {
                        if (this.action === 'copy' && target.hasAttribute('disabled')) {
                            throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
                        }

                        if (this.action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {
                            throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');
                        }

                        this._target = target;
                    } else {
                        throw new Error('Invalid "target" value, use a valid Element');
                    }
                }
            },
            get: function get() {
                return this._target;
            }
        }]);

        return ClipboardAction;
    }();

    module.exports = ClipboardAction;
});

},{"select":5}],8:[function(require,module,exports){
(function (global, factory) {
    if (typeof define === "function" && define.amd) {
        define(['module', './clipboard-action', 'tiny-emitter', 'good-listener'], factory);
    } else if (typeof exports !== "undefined") {
        factory(module, require('./clipboard-action'), require('tiny-emitter'), require('good-listener'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod, global.clipboardAction, global.tinyEmitter, global.goodListener);
        global.clipboard = mod.exports;
    }
})(this, function (module, _clipboardAction, _tinyEmitter, _goodListener) {
    'use strict';

    var _clipboardAction2 = _interopRequireDefault(_clipboardAction);

    var _tinyEmitter2 = _interopRequireDefault(_tinyEmitter);

    var _goodListener2 = _interopRequireDefault(_goodListener);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _createClass = function () {
        function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }

        return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
        };
    }();

    function _possibleConstructorReturn(self, call) {
        if (!self) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
            constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    var Clipboard = function (_Emitter) {
        _inherits(Clipboard, _Emitter);

        /**
         * @param {String|HTMLElement|HTMLCollection|NodeList} trigger
         * @param {Object} options
         */
        function Clipboard(trigger, options) {
            _classCallCheck(this, Clipboard);

            var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this));

            _this.resolveOptions(options);
            _this.listenClick(trigger);
            return _this;
        }

        /**
         * Defines if attributes would be resolved using internal setter functions
         * or custom functions that were passed in the constructor.
         * @param {Object} options
         */


        _createClass(Clipboard, [{
            key: 'resolveOptions',
            value: function resolveOptions() {
                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

                this.action = typeof options.action === 'function' ? options.action : this.defaultAction;
                this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;
                this.text = typeof options.text === 'function' ? options.text : this.defaultText;
            }
        }, {
            key: 'listenClick',
            value: function listenClick(trigger) {
                var _this2 = this;

                this.listener = (0, _goodListener2.default)(trigger, 'click', function (e) {
                    return _this2.onClick(e);
                });
            }
        }, {
            key: 'onClick',
            value: function onClick(e) {
                var trigger = e.delegateTarget || e.currentTarget;

                if (this.clipboardAction) {
                    this.clipboardAction = null;
                }

                this.clipboardAction = new _clipboardAction2.default({
                    action: this.action(trigger),
                    target: this.target(trigger),
                    text: this.text(trigger),
                    trigger: trigger,
                    emitter: this
                });
            }
        }, {
            key: 'defaultAction',
            value: function defaultAction(trigger) {
                return getAttributeValue('action', trigger);
            }
        }, {
            key: 'defaultTarget',
            value: function defaultTarget(trigger) {
                var selector = getAttributeValue('target', trigger);

                if (selector) {
                    return document.querySelector(selector);
                }
            }
        }, {
            key: 'defaultText',
            value: function defaultText(trigger) {
                return getAttributeValue('text', trigger);
            }
        }, {
            key: 'destroy',
            value: function destroy() {
                this.listener.destroy();

                if (this.clipboardAction) {
                    this.clipboardAction.destroy();
                    this.clipboardAction = null;
                }
            }
        }]);

        return Clipboard;
    }(_tinyEmitter2.default);

    /**
     * Helper function to retrieve attribute value.
     * @param {String} suffix
     * @param {Element} element
     */
    function getAttributeValue(suffix, element) {
        var attribute = 'data-clipboard-' + suffix;

        if (!element.hasAttribute(attribute)) {
            return;
        }

        return element.getAttribute(attribute);
    }

    module.exports = Clipboard;
});

},{"./clipboard-action":7,"good-listener":4,"tiny-emitter":6}]},{},[8])(8)
});
/*! ngclipboard - v1.1.3 - 2016-12-26
* https://github.com/beregovoy68/ngclipboard
* Copyright (c) 2016 Sachin; Licensed MIT */
(function() {
    'use strict';
    var MODULE_NAME = 'ngclipboard';
    var angular, Clipboard;

    // Check for CommonJS support
    if (typeof module === 'object' && module.exports) {
      angular = require('angular');
      Clipboard = require('clipboard');
      module.exports = MODULE_NAME;
    } else {
      angular = window.angular;
      Clipboard = window.Clipboard;
    }

    angular.module(MODULE_NAME, []).directive('ngclipboard', function() {
        return {
            restrict: 'A',
            scope: {
                ngclipboardSuccess: '&',
                ngclipboardError: '&',
                ngclipboardTextProvider: '&'
            },
            link: function(scope, element, attributes) {
                var options = {};
                if (attributes.ngclipboardTextProvider) {
                    options.text = function () {
                        return scope.ngclipboardTextProvider();
                    };
                }

                var clipboard = new Clipboard(element[0], options);

                clipboard.on('success', function(e) {
                  scope.$apply(function () {
                    scope.ngclipboardSuccess({
                      e: e
                    });
                  });
                });

                clipboard.on('error', function(e) {
                  scope.$apply(function () {
                    scope.ngclipboardError({
                      e: e
                    });
                  });
                });
            }
        };
    });
})();

/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */

;(function(root, factory) {

  if (typeof define === 'function' && define.amd) {
    define(factory);
  } else if (typeof exports === 'object') {
    module.exports = factory();
  } else {
    root.NProgress = factory();
  }

})(this, function() {
  var NProgress = {};

  NProgress.version = '0.2.0';

  var Settings = NProgress.settings = {
    minimum: 0.08,
    easing: 'ease',
    positionUsing: '',
    speed: 200,
    trickle: true,
    trickleRate: 0.02,
    trickleSpeed: 800,
    showSpinner: true,
    barSelector: '[role="bar"]',
    spinnerSelector: '[role="spinner"]',
    parent: 'body',
    template: '<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'
  };

  /**
   * Updates configuration.
   *
   *     NProgress.configure({
   *       minimum: 0.1
   *     });
   */
  NProgress.configure = function(options) {
    var key, value;
    for (key in options) {
      value = options[key];
      if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;
    }

    return this;
  };

  /**
   * Last number.
   */

  NProgress.status = null;

  /**
   * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.
   *
   *     NProgress.set(0.4);
   *     NProgress.set(1.0);
   */

  NProgress.set = function(n) {
    var started = NProgress.isStarted();

    n = clamp(n, Settings.minimum, 1);
    NProgress.status = (n === 1 ? null : n);

    var progress = NProgress.render(!started),
        bar      = progress.querySelector(Settings.barSelector),
        speed    = Settings.speed,
        ease     = Settings.easing;

    progress.offsetWidth; /* Repaint */

    queue(function(next) {
      // Set positionUsing if it hasn't already been set
      if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS();

      // Add transition
      css(bar, barPositionCSS(n, speed, ease));

      if (n === 1) {
        // Fade out
        css(progress, {
          transition: 'none',
          opacity: 1
        });
        progress.offsetWidth; /* Repaint */

        setTimeout(function() {
          css(progress, {
            transition: 'all ' + speed + 'ms linear',
            opacity: 0
          });
          setTimeout(function() {
            NProgress.remove();
            next();
          }, speed);
        }, speed);
      } else {
        setTimeout(next, speed);
      }
    });

    return this;
  };

  NProgress.isStarted = function() {
    return typeof NProgress.status === 'number';
  };

  /**
   * Shows the progress bar.
   * This is the same as setting the status to 0%, except that it doesn't go backwards.
   *
   *     NProgress.start();
   *
   */
  NProgress.start = function() {
    if (!NProgress.status) NProgress.set(0);

    var work = function() {
      setTimeout(function() {
        if (!NProgress.status) return;
        NProgress.trickle();
        work();
      }, Settings.trickleSpeed);
    };

    if (Settings.trickle) work();

    return this;
  };

  /**
   * Hides the progress bar.
   * This is the *sort of* the same as setting the status to 100%, with the
   * difference being `done()` makes some placebo effect of some realistic motion.
   *
   *     NProgress.done();
   *
   * If `true` is passed, it will show the progress bar even if its hidden.
   *
   *     NProgress.done(true);
   */

  NProgress.done = function(force) {
    if (!force && !NProgress.status) return this;

    return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);
  };

  /**
   * Increments by a random amount.
   */

  NProgress.inc = function(amount) {
    var n = NProgress.status;

    if (!n) {
      return NProgress.start();
    } else {
      if (typeof amount !== 'number') {
        amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);
      }

      n = clamp(n + amount, 0, 0.994);
      return NProgress.set(n);
    }
  };

  NProgress.trickle = function() {
    return NProgress.inc(Math.random() * Settings.trickleRate);
  };

  /**
   * Waits for all supplied jQuery promises and
   * increases the progress as the promises resolve.
   *
   * @param $promise jQUery Promise
   */
  (function() {
    var initial = 0, current = 0;

    NProgress.promise = function($promise) {
      if (!$promise || $promise.state() === "resolved") {
        return this;
      }

      if (current === 0) {
        NProgress.start();
      }

      initial++;
      current++;

      $promise.always(function() {
        current--;
        if (current === 0) {
            initial = 0;
            NProgress.done();
        } else {
            NProgress.set((initial - current) / initial);
        }
      });

      return this;
    };

  })();

  /**
   * (Internal) renders the progress bar markup based on the `template`
   * setting.
   */

  NProgress.render = function(fromStart) {
    if (NProgress.isRendered()) return document.getElementById('nprogress');

    addClass(document.documentElement, 'nprogress-busy');

    var progress = document.createElement('div');
    progress.id = 'nprogress';
    progress.innerHTML = Settings.template;

    var bar      = progress.querySelector(Settings.barSelector),
        perc     = fromStart ? '-100' : toBarPerc(NProgress.status || 0),
        parent   = document.querySelector(Settings.parent),
        spinner;

    css(bar, {
      transition: 'all 0 linear',
      transform: 'translate3d(' + perc + '%,0,0)'
    });

    if (!Settings.showSpinner) {
      spinner = progress.querySelector(Settings.spinnerSelector);
      spinner && removeElement(spinner);
    }

    if (parent != document.body) {
      addClass(parent, 'nprogress-custom-parent');
    }

    parent.appendChild(progress);
    return progress;
  };

  /**
   * Removes the element. Opposite of render().
   */

  NProgress.remove = function() {
    removeClass(document.documentElement, 'nprogress-busy');
    removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');
    var progress = document.getElementById('nprogress');
    progress && removeElement(progress);
  };

  /**
   * Checks if the progress bar is rendered.
   */

  NProgress.isRendered = function() {
    return !!document.getElementById('nprogress');
  };

  /**
   * Determine which positioning CSS rule to use.
   */

  NProgress.getPositioningCSS = function() {
    // Sniff on document.body.style
    var bodyStyle = document.body.style;

    // Sniff prefixes
    var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' :
                       ('MozTransform' in bodyStyle) ? 'Moz' :
                       ('msTransform' in bodyStyle) ? 'ms' :
                       ('OTransform' in bodyStyle) ? 'O' : '';

    if (vendorPrefix + 'Perspective' in bodyStyle) {
      // Modern browsers with 3D support, e.g. Webkit, IE10
      return 'translate3d';
    } else if (vendorPrefix + 'Transform' in bodyStyle) {
      // Browsers without 3D support, e.g. IE9
      return 'translate';
    } else {
      // Browsers without translate() support, e.g. IE7-8
      return 'margin';
    }
  };

  /**
   * Helpers
   */

  function clamp(n, min, max) {
    if (n < min) return min;
    if (n > max) return max;
    return n;
  }

  /**
   * (Internal) converts a percentage (`0..1`) to a bar translateX
   * percentage (`-100%..0%`).
   */

  function toBarPerc(n) {
    return (-1 + n) * 100;
  }


  /**
   * (Internal) returns the correct CSS for changing the bar's
   * position given an n percentage, and speed and ease from Settings
   */

  function barPositionCSS(n, speed, ease) {
    var barCSS;

    if (Settings.positionUsing === 'translate3d') {
      barCSS = { transform: 'translate3d('+toBarPerc(n)+'%,0,0)' };
    } else if (Settings.positionUsing === 'translate') {
      barCSS = { transform: 'translate('+toBarPerc(n)+'%,0)' };
    } else {
      barCSS = { 'margin-left': toBarPerc(n)+'%' };
    }

    barCSS.transition = 'all '+speed+'ms '+ease;

    return barCSS;
  }

  /**
   * (Internal) Queues a function to be executed.
   */

  var queue = (function() {
    var pending = [];

    function next() {
      var fn = pending.shift();
      if (fn) {
        fn(next);
      }
    }

    return function(fn) {
      pending.push(fn);
      if (pending.length == 1) next();
    };
  })();

  /**
   * (Internal) Applies css properties to an element, similar to the jQuery
   * css method.
   *
   * While this helper does assist with vendor prefixed property names, it
   * does not perform any manipulation of values prior to setting styles.
   */

  var css = (function() {
    var cssPrefixes = [ 'Webkit', 'O', 'Moz', 'ms' ],
        cssProps    = {};

    function camelCase(string) {
      return string.replace(/^-ms-/, 'ms-').replace(/-([\da-z])/gi, function(match, letter) {
        return letter.toUpperCase();
      });
    }

    function getVendorProp(name) {
      var style = document.body.style;
      if (name in style) return name;

      var i = cssPrefixes.length,
          capName = name.charAt(0).toUpperCase() + name.slice(1),
          vendorName;
      while (i--) {
        vendorName = cssPrefixes[i] + capName;
        if (vendorName in style) return vendorName;
      }

      return name;
    }

    function getStyleProp(name) {
      name = camelCase(name);
      return cssProps[name] || (cssProps[name] = getVendorProp(name));
    }

    function applyCss(element, prop, value) {
      prop = getStyleProp(prop);
      element.style[prop] = value;
    }

    return function(element, properties) {
      var args = arguments,
          prop,
          value;

      if (args.length == 2) {
        for (prop in properties) {
          value = properties[prop];
          if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);
        }
      } else {
        applyCss(element, args[1], args[2]);
      }
    }
  })();

  /**
   * (Internal) Determines if an element or space separated list of class names contains a class name.
   */

  function hasClass(element, name) {
    var list = typeof element == 'string' ? element : classList(element);
    return list.indexOf(' ' + name + ' ') >= 0;
  }

  /**
   * (Internal) Adds a class to an element.
   */

  function addClass(element, name) {
    var oldList = classList(element),
        newList = oldList + name;

    if (hasClass(oldList, name)) return;

    // Trim the opening space.
    element.className = newList.substring(1);
  }

  /**
   * (Internal) Removes a class from an element.
   */

  function removeClass(element, name) {
    var oldList = classList(element),
        newList;

    if (!hasClass(element, name)) return;

    // Replace the class name.
    newList = oldList.replace(' ' + name + ' ', ' ');

    // Trim the opening and closing spaces.
    element.className = newList.substring(1, newList.length - 1);
  }

  /**
   * (Internal) Gets a space separated list of the class names on the element.
   * The list is wrapped with a single space on each end to facilitate finding
   * matches within the list.
   */

  function classList(element) {
    return (' ' + (element.className || '') + ' ').replace(/\s+/gi, ' ');
  }

  /**
   * (Internal) Removes an element from the DOM.
   */

  function removeElement(element) {
    element && element.parentNode && element.parentNode.removeChild(element);
  }

  return NProgress;
});


// Generated by CoffeeScript 1.10.0

/*
jQuery Growl
Copyright 2015 Kevin Sylvestre
1.3.2
 */

(function() {
  "use strict";
  var $, Animation, Growl,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  $ = jQuery;

  Animation = (function() {
    function Animation() {}

    Animation.transitions = {
      "webkitTransition": "webkitTransitionEnd",
      "mozTransition": "mozTransitionEnd",
      "oTransition": "oTransitionEnd",
      "transition": "transitionend"
    };

    Animation.transition = function($el) {
      var el, ref, result, type;
      el = $el[0];
      ref = this.transitions;
      for (type in ref) {
        result = ref[type];
        if (el.style[type] != null) {
          return result;
        }
      }
    };

    return Animation;

  })();

  Growl = (function() {
    Growl.settings = {
      namespace: 'growl',
      duration: 3200,
      close: "&#215;",
      location: "default",
      style: "default",
      size: "medium",
      delayOnHover: true
    };

    Growl.growl = function(settings) {
      if (settings == null) {
        settings = {};
      }
      this.initialize();
      return new Growl(settings);
    };

    Growl.initialize = function() {
      return $("body:not(:has(#growls))").append('<div id="growls" />');
    };

    function Growl(settings) {
      if (settings == null) {
        settings = {};
      }
      this.container = bind(this.container, this);
      this.content = bind(this.content, this);
      this.html = bind(this.html, this);
      this.$growl = bind(this.$growl, this);
      this.$growls = bind(this.$growls, this);
      this.animate = bind(this.animate, this);
      this.remove = bind(this.remove, this);
      this.dismiss = bind(this.dismiss, this);
      this.present = bind(this.present, this);
      this.waitAndDismiss = bind(this.waitAndDismiss, this);
      this.cycle = bind(this.cycle, this);
      this.close = bind(this.close, this);
      this.click = bind(this.click, this);
      this.mouseLeave = bind(this.mouseLeave, this);
      this.mouseEnter = bind(this.mouseEnter, this);
      this.unbind = bind(this.unbind, this);
      this.bind = bind(this.bind, this);
      this.render = bind(this.render, this);
      this.settings = $.extend({}, Growl.settings, settings);
      this.$growls().attr('class', this.settings.location);
      this.render();
    }

    Growl.prototype.render = function() {
      var $growl;
      $growl = this.$growl();
      this.$growls().append($growl);
      if (this.settings.fixed) {
        this.present();
      } else {
        this.cycle();
      }
    };

    Growl.prototype.bind = function($growl) {
      if ($growl == null) {
        $growl = this.$growl();
      }
      $growl.on("click", this.click);
      if (this.settings.delayOnHover) {
        $growl.on("mouseenter", this.mouseEnter);
        $growl.on("mouseleave", this.mouseLeave);
      }
      return $growl.on("contextmenu", this.close).find("." + this.settings.namespace + "-close").on("click", this.close);
    };

    Growl.prototype.unbind = function($growl) {
      if ($growl == null) {
        $growl = this.$growl();
      }
      $growl.off("click", this.click);
      if (this.settings.delayOnHover) {
        $growl.off("mouseenter", this.mouseEnter);
        $growl.off("mouseleave", this.mouseLeave);
      }
      return $growl.off("contextmenu", this.close).find("." + this.settings.namespace + "-close").off("click", this.close);
    };

    Growl.prototype.mouseEnter = function(event) {
      var $growl;
      $growl = this.$growl();
      return $growl.stop(true, true);
    };

    Growl.prototype.mouseLeave = function(event) {
      return this.waitAndDismiss();
    };

    Growl.prototype.click = function(event) {
      if (this.settings.url != null) {
        event.preventDefault();
        event.stopPropagation();
        return window.open(this.settings.url);
      }
    };

    Growl.prototype.close = function(event) {
      var $growl;
      event.preventDefault();
      event.stopPropagation();
      $growl = this.$growl();
      return $growl.stop().queue(this.dismiss).queue(this.remove);
    };

    Growl.prototype.cycle = function() {
      var $growl;
      $growl = this.$growl();
      return $growl.queue(this.present).queue(this.waitAndDismiss());
    };

    Growl.prototype.waitAndDismiss = function() {
      var $growl;
      $growl = this.$growl();
      return $growl.delay(this.settings.duration).queue(this.dismiss).queue(this.remove);
    };

    Growl.prototype.present = function(callback) {
      var $growl;
      $growl = this.$growl();
      this.bind($growl);
      return this.animate($growl, this.settings.namespace + "-incoming", 'out', callback);
    };

    Growl.prototype.dismiss = function(callback) {
      var $growl;
      $growl = this.$growl();
      this.unbind($growl);
      return this.animate($growl, this.settings.namespace + "-outgoing", 'in', callback);
    };

    Growl.prototype.remove = function(callback) {
      this.$growl().remove();
      return typeof callback === "function" ? callback() : void 0;
    };

    Growl.prototype.animate = function($element, name, direction, callback) {
      var transition;
      if (direction == null) {
        direction = 'in';
      }
      transition = Animation.transition($element);
      $element[direction === 'in' ? 'removeClass' : 'addClass'](name);
      $element.offset().position;
      $element[direction === 'in' ? 'addClass' : 'removeClass'](name);
      if (callback == null) {
        return;
      }
      if (transition != null) {
        $element.one(transition, callback);
      } else {
        callback();
      }
    };

    Growl.prototype.$growls = function() {
      return this.$_growls != null ? this.$_growls : this.$_growls = $('#growls');
    };

    Growl.prototype.$growl = function() {
      return this.$_growl != null ? this.$_growl : this.$_growl = $(this.html());
    };

    Growl.prototype.html = function() {
      return this.container(this.content());
    };

    Growl.prototype.content = function() {
      return "<div class='" + this.settings.namespace + "-close'>" + this.settings.close + "</div>\n<div class='" + this.settings.namespace + "-title'>" + this.settings.title + "</div>\n<div class='" + this.settings.namespace + "-message'>" + this.settings.message + "</div>";
    };

    Growl.prototype.container = function(content) {
      return "<div class='" + this.settings.namespace + " " + this.settings.namespace + "-" + this.settings.style + " " + this.settings.namespace + "-" + this.settings.size + "'>\n  " + content + "\n</div>";
    };

    return Growl;

  })();

  this.Growl = Growl;

  $.growl = function(options) {
    if (options == null) {
      options = {};
    }
    return Growl.growl(options);
  };

  $.growl.error = function(options) {
    var settings;
    if (options == null) {
      options = {};
    }
    settings = {
      title: "Error!",
      style: "error"
    };
    return $.growl($.extend(settings, options));
  };

  $.growl.notice = function(options) {
    var settings;
    if (options == null) {
      options = {};
    }
    settings = {
      title: "Notice!",
      style: "notice"
    };
    return $.growl($.extend(settings, options));
  };

  $.growl.warning = function(options) {
    var settings;
    if (options == null) {
      options = {};
    }
    settings = {
      title: "Warning!",
      style: "warning"
    };
    return $.growl($.extend(settings, options));
  };

}).call(this);

/*!
 * jQuery Validation Plugin v1.14.0
 *
 * http://jqueryvalidation.org/
 *
 * Copyright (c) 2015 JÃ¶rn Zaefferer
 * Released under the MIT license
 */
(function( factory ) {
	if ( typeof define === "function" && define.amd ) {
		define( ["jquery"], factory );
	} else {
		factory( jQuery );
	}
}(function( $ ) {

$.extend($.fn, {
	// http://jqueryvalidation.org/validate/
	validate: function( options ) {

		// if nothing is selected, return nothing; can't chain anyway
		if ( !this.length ) {
			if ( options && options.debug && window.console ) {
				console.warn( "Nothing selected, can't validate, returning nothing." );
			}
			return;
		}

		// check if a validator for this form was already created
		var validator = $.data( this[ 0 ], "validator" );
		if ( validator ) {
			return validator;
		}

		// Add novalidate tag if HTML5.
		this.attr( "novalidate", "novalidate" );

		validator = new $.validator( options, this[ 0 ] );
		$.data( this[ 0 ], "validator", validator );

		if ( validator.settings.onsubmit ) {

			this.on( "click.validate", ":submit", function( event ) {
				if ( validator.settings.submitHandler ) {
					validator.submitButton = event.target;
				}

				// allow suppressing validation by adding a cancel class to the submit button
				if ( $( this ).hasClass( "cancel" ) ) {
					validator.cancelSubmit = true;
				}

				// allow suppressing validation by adding the html5 formnovalidate attribute to the submit button
				if ( $( this ).attr( "formnovalidate" ) !== undefined ) {
					validator.cancelSubmit = true;
				}
			});

			// validate the form on submit
			this.on( "submit.validate", function( event ) {
				if ( validator.settings.debug ) {
					// prevent form submit to be able to see console output
					event.preventDefault();
				}
				function handle() {
					var hidden, result;
					if ( validator.settings.submitHandler ) {
						if ( validator.submitButton ) {
							// insert a hidden input as a replacement for the missing submit button
							hidden = $( "<input type='hidden'/>" )
								.attr( "name", validator.submitButton.name )
								.val( $( validator.submitButton ).val() )
								.appendTo( validator.currentForm );
						}
						result = validator.settings.submitHandler.call( validator, validator.currentForm, event );
						if ( validator.submitButton ) {
							// and clean up afterwards; thanks to no-block-scope, hidden can be referenced
							hidden.remove();
						}
						if ( result !== undefined ) {
							return result;
						}
						return false;
					}
					return true;
				}

				// prevent submit for invalid forms or custom submit handlers
				if ( validator.cancelSubmit ) {
					validator.cancelSubmit = false;
					return handle();
				}
				if ( validator.form() ) {
					if ( validator.pendingRequest ) {
						validator.formSubmitted = true;
						return false;
					}
					return handle();
				} else {
					validator.focusInvalid();
					return false;
				}
			});
		}

		return validator;
	},
	// http://jqueryvalidation.org/valid/
	valid: function() {
		var valid, validator, errorList;

		if ( $( this[ 0 ] ).is( "form" ) ) {
			valid = this.validate().form();
		} else {
			errorList = [];
			valid = true;
			validator = $( this[ 0 ].form ).validate();
			this.each( function() {
				valid = validator.element( this ) && valid;
				errorList = errorList.concat( validator.errorList );
			});
			validator.errorList = errorList;
		}
		return valid;
	},

	// http://jqueryvalidation.org/rules/
	rules: function( command, argument ) {
		var element = this[ 0 ],
			settings, staticRules, existingRules, data, param, filtered;

		if ( command ) {
			settings = $.data( element.form, "validator" ).settings;
			staticRules = settings.rules;
			existingRules = $.validator.staticRules( element );
			switch ( command ) {
			case "add":
				$.extend( existingRules, $.validator.normalizeRule( argument ) );
				// remove messages from rules, but allow them to be set separately
				delete existingRules.messages;
				staticRules[ element.name ] = existingRules;
				if ( argument.messages ) {
					settings.messages[ element.name ] = $.extend( settings.messages[ element.name ], argument.messages );
				}
				break;
			case "remove":
				if ( !argument ) {
					delete staticRules[ element.name ];
					return existingRules;
				}
				filtered = {};
				$.each( argument.split( /\s/ ), function( index, method ) {
					filtered[ method ] = existingRules[ method ];
					delete existingRules[ method ];
					if ( method === "required" ) {
						$( element ).removeAttr( "aria-required" );
					}
				});
				return filtered;
			}
		}

		data = $.validator.normalizeRules(
		$.extend(
			{},
			$.validator.classRules( element ),
			$.validator.attributeRules( element ),
			$.validator.dataRules( element ),
			$.validator.staticRules( element )
		), element );

		// make sure required is at front
		if ( data.required ) {
			param = data.required;
			delete data.required;
			data = $.extend( { required: param }, data );
			$( element ).attr( "aria-required", "true" );
		}

		// make sure remote is at back
		if ( data.remote ) {
			param = data.remote;
			delete data.remote;
			data = $.extend( data, { remote: param });
		}

		return data;
	}
});

// Custom selectors
$.extend( $.expr[ ":" ], {
	// http://jqueryvalidation.org/blank-selector/
	blank: function( a ) {
		return !$.trim( "" + $( a ).val() );
	},
	// http://jqueryvalidation.org/filled-selector/
	filled: function( a ) {
		return !!$.trim( "" + $( a ).val() );
	},
	// http://jqueryvalidation.org/unchecked-selector/
	unchecked: function( a ) {
		return !$( a ).prop( "checked" );
	}
});

// constructor for validator
$.validator = function( options, form ) {
	this.settings = $.extend( true, {}, $.validator.defaults, options );
	this.currentForm = form;
	this.init();
};

// http://jqueryvalidation.org/jQuery.validator.format/
$.validator.format = function( source, params ) {
	if ( arguments.length === 1 ) {
		return function() {
			var args = $.makeArray( arguments );
			args.unshift( source );
			return $.validator.format.apply( this, args );
		};
	}
	if ( arguments.length > 2 && params.constructor !== Array  ) {
		params = $.makeArray( arguments ).slice( 1 );
	}
	if ( params.constructor !== Array ) {
		params = [ params ];
	}
	$.each( params, function( i, n ) {
		source = source.replace( new RegExp( "\\{" + i + "\\}", "g" ), function() {
			return n;
		});
	});
	return source;
};

$.extend( $.validator, {

	defaults: {
		messages: {},
		groups: {},
		rules: {},
		errorClass: "error",
		validClass: "valid",
		errorElement: "label",
		focusCleanup: false,
		focusInvalid: true,
		errorContainer: $( [] ),
		errorLabelContainer: $( [] ),
		onsubmit: true,
		ignore: ":hidden",
		ignoreTitle: false,
		onfocusin: function( element ) {
			this.lastActive = element;

			// Hide error label and remove error class on focus if enabled
			if ( this.settings.focusCleanup ) {
				if ( this.settings.unhighlight ) {
					this.settings.unhighlight.call( this, element, this.settings.errorClass, this.settings.validClass );
				}
				this.hideThese( this.errorsFor( element ) );
			}
		},
		onfocusout: function( element ) {
			if ( !this.checkable( element ) && ( element.name in this.submitted || !this.optional( element ) ) ) {
				this.element( element );
			}
		},
		onkeyup: function( element, event ) {
			// Avoid revalidate the field when pressing one of the following keys
			// Shift       => 16
			// Ctrl        => 17
			// Alt         => 18
			// Caps lock   => 20
			// End         => 35
			// Home        => 36
			// Left arrow  => 37
			// Up arrow    => 38
			// Right arrow => 39
			// Down arrow  => 40
			// Insert      => 45
			// Num lock    => 144
			// AltGr key   => 225
			var excludedKeys = [
				16, 17, 18, 20, 35, 36, 37,
				38, 39, 40, 45, 144, 225
			];

			if ( event.which === 9 && this.elementValue( element ) === "" || $.inArray( event.keyCode, excludedKeys ) !== -1 ) {
				return;
			} else if ( element.name in this.submitted || element === this.lastElement ) {
				this.element( element );
			}
		},
		onclick: function( element ) {
			// click on selects, radiobuttons and checkboxes
			if ( element.name in this.submitted ) {
				this.element( element );

			// or option elements, check parent select in that case
			} else if ( element.parentNode.name in this.submitted ) {
				this.element( element.parentNode );
			}
		},
		highlight: function( element, errorClass, validClass ) {
			if ( element.type === "radio" ) {
				this.findByName( element.name ).addClass( errorClass ).removeClass( validClass );
			} else {
				$( element ).addClass( errorClass ).removeClass( validClass );
			}
		},
		unhighlight: function( element, errorClass, validClass ) {
			if ( element.type === "radio" ) {
				this.findByName( element.name ).removeClass( errorClass ).addClass( validClass );
			} else {
				$( element ).removeClass( errorClass ).addClass( validClass );
			}
		}
	},

	// http://jqueryvalidation.org/jQuery.validator.setDefaults/
	setDefaults: function( settings ) {
		$.extend( $.validator.defaults, settings );
	},

	messages: {
		required: "This field is required.",
		remote: "Please fix this field.",
		email: "Please enter a valid email address.",
		url: "Please enter a valid URL.",
		date: "Please enter a valid date.",
		dateISO: "Please enter a valid date ( ISO ).",
		number: "Please enter a valid number.",
		digits: "Please enter only digits.",
		creditcard: "Please enter a valid credit card number.",
		equalTo: "Please enter the same value again.",
		maxlength: $.validator.format( "Please enter no more than {0} characters." ),
		minlength: $.validator.format( "Please enter at least {0} characters." ),
		rangelength: $.validator.format( "Please enter a value between {0} and {1} characters long." ),
		range: $.validator.format( "Please enter a value between {0} and {1}." ),
		max: $.validator.format( "Please enter a value less than or equal to {0}." ),
		min: $.validator.format( "Please enter a value greater than or equal to {0}." )
	},

	autoCreateRanges: false,

	prototype: {

		init: function() {
			this.labelContainer = $( this.settings.errorLabelContainer );
			this.errorContext = this.labelContainer.length && this.labelContainer || $( this.currentForm );
			this.containers = $( this.settings.errorContainer ).add( this.settings.errorLabelContainer );
			this.submitted = {};
			this.valueCache = {};
			this.pendingRequest = 0;
			this.pending = {};
			this.invalid = {};
			this.reset();

			var groups = ( this.groups = {} ),
				rules;
			$.each( this.settings.groups, function( key, value ) {
				if ( typeof value === "string" ) {
					value = value.split( /\s/ );
				}
				$.each( value, function( index, name ) {
					groups[ name ] = key;
				});
			});
			rules = this.settings.rules;
			$.each( rules, function( key, value ) {
				rules[ key ] = $.validator.normalizeRule( value );
			});

			function delegate( event ) {
				var validator = $.data( this.form, "validator" ),
					eventType = "on" + event.type.replace( /^validate/, "" ),
					settings = validator.settings;
				if ( settings[ eventType ] && !$( this ).is( settings.ignore ) ) {
					settings[ eventType ].call( validator, this, event );
				}
			}

			$( this.currentForm )
				.on( "focusin.validate focusout.validate keyup.validate",
					":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], " +
					"[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], " +
					"[type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], " +
					"[type='radio'], [type='checkbox']", delegate)
				// Support: Chrome, oldIE
				// "select" is provided as event.target when clicking a option
				.on("click.validate", "select, option, [type='radio'], [type='checkbox']", delegate);

			if ( this.settings.invalidHandler ) {
				$( this.currentForm ).on( "invalid-form.validate", this.settings.invalidHandler );
			}

			// Add aria-required to any Static/Data/Class required fields before first validation
			// Screen readers require this attribute to be present before the initial submission http://www.w3.org/TR/WCAG-TECHS/ARIA2.html
			$( this.currentForm ).find( "[required], [data-rule-required], .required" ).attr( "aria-required", "true" );
		},

		// http://jqueryvalidation.org/Validator.form/
		form: function() {
			this.checkForm();
			$.extend( this.submitted, this.errorMap );
			this.invalid = $.extend({}, this.errorMap );
			if ( !this.valid() ) {
				$( this.currentForm ).triggerHandler( "invalid-form", [ this ]);
			}
			this.showErrors();
			return this.valid();
		},

		checkForm: function() {
			this.prepareForm();
			for ( var i = 0, elements = ( this.currentElements = this.elements() ); elements[ i ]; i++ ) {
				this.check( elements[ i ] );
			}
			return this.valid();
		},

		// http://jqueryvalidation.org/Validator.element/
		element: function( element ) {
			var cleanElement = this.clean( element ),
				checkElement = this.validationTargetFor( cleanElement ),
				result = true;

			this.lastElement = checkElement;

			if ( checkElement === undefined ) {
				delete this.invalid[ cleanElement.name ];
			} else {
				this.prepareElement( checkElement );
				this.currentElements = $( checkElement );

				result = this.check( checkElement ) !== false;
				if ( result ) {
					delete this.invalid[ checkElement.name ];
				} else {
					this.invalid[ checkElement.name ] = true;
				}
			}
			// Add aria-invalid status for screen readers
			$( element ).attr( "aria-invalid", !result );

			if ( !this.numberOfInvalids() ) {
				// Hide error containers on last error
				this.toHide = this.toHide.add( this.containers );
			}
			this.showErrors();
			return result;
		},

		// http://jqueryvalidation.org/Validator.showErrors/
		showErrors: function( errors ) {
			if ( errors ) {
				// add items to error list and map
				$.extend( this.errorMap, errors );
				this.errorList = [];
				for ( var name in errors ) {
					this.errorList.push({
						message: errors[ name ],
						element: this.findByName( name )[ 0 ]
					});
				}
				// remove items from success list
				this.successList = $.grep( this.successList, function( element ) {
					return !( element.name in errors );
				});
			}
			if ( this.settings.showErrors ) {
				this.settings.showErrors.call( this, this.errorMap, this.errorList );
			} else {
				this.defaultShowErrors();
			}
		},

		// http://jqueryvalidation.org/Validator.resetForm/
		resetForm: function() {
			if ( $.fn.resetForm ) {
				$( this.currentForm ).resetForm();
			}
			this.submitted = {};
			this.lastElement = null;
			this.prepareForm();
			this.hideErrors();
			var i, elements = this.elements()
				.removeData( "previousValue" )
				.removeAttr( "aria-invalid" );

			if ( this.settings.unhighlight ) {
				for ( i = 0; elements[ i ]; i++ ) {
					this.settings.unhighlight.call( this, elements[ i ],
						this.settings.errorClass, "" );
				}
			} else {
				elements.removeClass( this.settings.errorClass );
			}
		},

		numberOfInvalids: function() {
			return this.objectLength( this.invalid );
		},

		objectLength: function( obj ) {
			/* jshint unused: false */
			var count = 0,
				i;
			for ( i in obj ) {
				count++;
			}
			return count;
		},

		hideErrors: function() {
			this.hideThese( this.toHide );
		},

		hideThese: function( errors ) {
			errors.not( this.containers ).text( "" );
			this.addWrapper( errors ).hide();
		},

		valid: function() {
			return this.size() === 0;
		},

		size: function() {
			return this.errorList.length;
		},

		focusInvalid: function() {
			if ( this.settings.focusInvalid ) {
				try {
					$( this.findLastActive() || this.errorList.length && this.errorList[ 0 ].element || [])
					.filter( ":visible" )
					.focus()
					// manually trigger focusin event; without it, focusin handler isn't called, findLastActive won't have anything to find
					.trigger( "focusin" );
				} catch ( e ) {
					// ignore IE throwing errors when focusing hidden elements
				}
			}
		},

		findLastActive: function() {
			var lastActive = this.lastActive;
			return lastActive && $.grep( this.errorList, function( n ) {
				return n.element.name === lastActive.name;
			}).length === 1 && lastActive;
		},

		elements: function() {
			var validator = this,
				rulesCache = {};

			// select all valid inputs inside the form (no submit or reset buttons)
			return $( this.currentForm )
			.find( "input, select, textarea" )
			.not( ":submit, :reset, :image, :disabled" )
			.not( this.settings.ignore )
			.filter( function() {
				if ( !this.name && validator.settings.debug && window.console ) {
					console.error( "%o has no name assigned", this );
				}

				// select only the first element for each name, and only those with rules specified
				if ( this.name in rulesCache || !validator.objectLength( $( this ).rules() ) ) {
					return false;
				}

				rulesCache[ this.name ] = true;
				return true;
			});
		},

		clean: function( selector ) {
			return $( selector )[ 0 ];
		},

		errors: function() {
			var errorClass = this.settings.errorClass.split( " " ).join( "." );
			return $( this.settings.errorElement + "." + errorClass, this.errorContext );
		},

		reset: function() {
			this.successList = [];
			this.errorList = [];
			this.errorMap = {};
			this.toShow = $( [] );
			this.toHide = $( [] );
			this.currentElements = $( [] );
		},

		prepareForm: function() {
			this.reset();
			this.toHide = this.errors().add( this.containers );
		},

		prepareElement: function( element ) {
			this.reset();
			this.toHide = this.errorsFor( element );
		},

		elementValue: function( element ) {
			var val,
				$element = $( element ),
				type = element.type;

			if ( type === "radio" || type === "checkbox" ) {
				return this.findByName( element.name ).filter(":checked").val();
			} else if ( type === "number" && typeof element.validity !== "undefined" ) {
				return element.validity.badInput ? false : $element.val();
			}

			val = $element.val();
			if ( typeof val === "string" ) {
				return val.replace(/\r/g, "" );
			}
			return val;
		},

		check: function( element ) {
			element = this.validationTargetFor( this.clean( element ) );

			var rules = $( element ).rules(),
				rulesCount = $.map( rules, function( n, i ) {
					return i;
				}).length,
				dependencyMismatch = false,
				val = this.elementValue( element ),
				result, method, rule;

			for ( method in rules ) {
				rule = { method: method, parameters: rules[ method ] };
				try {

					result = $.validator.methods[ method ].call( this, val, element, rule.parameters );

					// if a method indicates that the field is optional and therefore valid,
					// don't mark it as valid when there are no other rules
					if ( result === "dependency-mismatch" && rulesCount === 1 ) {
						dependencyMismatch = true;
						continue;
					}
					dependencyMismatch = false;

					if ( result === "pending" ) {
						this.toHide = this.toHide.not( this.errorsFor( element ) );
						return;
					}

					if ( !result ) {
						this.formatAndAdd( element, rule );
						return false;
					}
				} catch ( e ) {
					if ( this.settings.debug && window.console ) {
						console.log( "Exception occurred when checking element " + element.id + ", check the '" + rule.method + "' method.", e );
					}
					if ( e instanceof TypeError ) {
						e.message += ".  Exception occurred when checking element " + element.id + ", check the '" + rule.method + "' method.";
					}

					throw e;
				}
			}
			if ( dependencyMismatch ) {
				return;
			}
			if ( this.objectLength( rules ) ) {
				this.successList.push( element );
			}
			return true;
		},

		// return the custom message for the given element and validation method
		// specified in the element's HTML5 data attribute
		// return the generic message if present and no method specific message is present
		customDataMessage: function( element, method ) {
			return $( element ).data( "msg" + method.charAt( 0 ).toUpperCase() +
				method.substring( 1 ).toLowerCase() ) || $( element ).data( "msg" );
		},

		// return the custom message for the given element name and validation method
		customMessage: function( name, method ) {
			var m = this.settings.messages[ name ];
			return m && ( m.constructor === String ? m : m[ method ]);
		},

		// return the first defined argument, allowing empty strings
		findDefined: function() {
			for ( var i = 0; i < arguments.length; i++) {
				if ( arguments[ i ] !== undefined ) {
					return arguments[ i ];
				}
			}
			return undefined;
		},

		defaultMessage: function( element, method ) {
			return this.findDefined(
				this.customMessage( element.name, method ),
				this.customDataMessage( element, method ),
				// title is never undefined, so handle empty string as undefined
				!this.settings.ignoreTitle && element.title || undefined,
				$.validator.messages[ method ],
				"<strong>Warning: No message defined for " + element.name + "</strong>"
			);
		},

		formatAndAdd: function( element, rule ) {
			var message = this.defaultMessage( element, rule.method ),
				theregex = /\$?\{(\d+)\}/g;
			if ( typeof message === "function" ) {
				message = message.call( this, rule.parameters, element );
			} else if ( theregex.test( message ) ) {
				message = $.validator.format( message.replace( theregex, "{$1}" ), rule.parameters );
			}
			this.errorList.push({
				message: message,
				element: element,
				method: rule.method
			});

			this.errorMap[ element.name ] = message;
			this.submitted[ element.name ] = message;
		},

		addWrapper: function( toToggle ) {
			if ( this.settings.wrapper ) {
				toToggle = toToggle.add( toToggle.parent( this.settings.wrapper ) );
			}
			return toToggle;
		},

		defaultShowErrors: function() {
			var i, elements, error;
			for ( i = 0; this.errorList[ i ]; i++ ) {
				error = this.errorList[ i ];
				if ( this.settings.highlight ) {
					this.settings.highlight.call( this, error.element, this.settings.errorClass, this.settings.validClass );
				}
				this.showLabel( error.element, error.message );
			}
			if ( this.errorList.length ) {
				this.toShow = this.toShow.add( this.containers );
			}
			if ( this.settings.success ) {
				for ( i = 0; this.successList[ i ]; i++ ) {
					this.showLabel( this.successList[ i ] );
				}
			}
			if ( this.settings.unhighlight ) {
				for ( i = 0, elements = this.validElements(); elements[ i ]; i++ ) {
					this.settings.unhighlight.call( this, elements[ i ], this.settings.errorClass, this.settings.validClass );
				}
			}
			this.toHide = this.toHide.not( this.toShow );
			this.hideErrors();
			this.addWrapper( this.toShow ).show();
		},

		validElements: function() {
			return this.currentElements.not( this.invalidElements() );
		},

		invalidElements: function() {
			return $( this.errorList ).map(function() {
				return this.element;
			});
		},

		showLabel: function( element, message ) {
			var place, group, errorID,
				error = this.errorsFor( element ),
				elementID = this.idOrName( element ),
				describedBy = $( element ).attr( "aria-describedby" );
			if ( error.length ) {
				// refresh error/success class
				error.removeClass( this.settings.validClass ).addClass( this.settings.errorClass );
				// replace message on existing label
				error.html( message );
			} else {
				// create error element
				error = $( "<" + this.settings.errorElement + ">" )
					.attr( "id", elementID + "-error" )
					.addClass( this.settings.errorClass )
					.html( message || "" );

				// Maintain reference to the element to be placed into the DOM
				place = error;
				if ( this.settings.wrapper ) {
					// make sure the element is visible, even in IE
					// actually showing the wrapped element is handled elsewhere
					place = error.hide().show().wrap( "<" + this.settings.wrapper + "/>" ).parent();
				}
				if ( this.labelContainer.length ) {
					this.labelContainer.append( place );
				} else if ( this.settings.errorPlacement ) {
					this.settings.errorPlacement( place, $( element ) );
				} else {
					place.insertAfter( element );
				}

				// Link error back to the element
				if ( error.is( "label" ) ) {
					// If the error is a label, then associate using 'for'
					error.attr( "for", elementID );
				} else if ( error.parents( "label[for='" + elementID + "']" ).length === 0 ) {
					// If the element is not a child of an associated label, then it's necessary
					// to explicitly apply aria-describedby

					errorID = error.attr( "id" ).replace( /(:|\.|\[|\]|\$)/g, "\\$1");
					// Respect existing non-error aria-describedby
					if ( !describedBy ) {
						describedBy = errorID;
					} else if ( !describedBy.match( new RegExp( "\\b" + errorID + "\\b" ) ) ) {
						// Add to end of list if not already present
						describedBy += " " + errorID;
					}
					$( element ).attr( "aria-describedby", describedBy );

					// If this element is grouped, then assign to all elements in the same group
					group = this.groups[ element.name ];
					if ( group ) {
						$.each( this.groups, function( name, testgroup ) {
							if ( testgroup === group ) {
								$( "[name='" + name + "']", this.currentForm )
									.attr( "aria-describedby", error.attr( "id" ) );
							}
						});
					}
				}
			}
			if ( !message && this.settings.success ) {
				error.text( "" );
				if ( typeof this.settings.success === "string" ) {
					error.addClass( this.settings.success );
				} else {
					this.settings.success( error, element );
				}
			}
			this.toShow = this.toShow.add( error );
		},

		errorsFor: function( element ) {
			var name = this.idOrName( element ),
				describer = $( element ).attr( "aria-describedby" ),
				selector = "label[for='" + name + "'], label[for='" + name + "'] *";

			// aria-describedby should directly reference the error element
			if ( describer ) {
				selector = selector + ", #" + describer.replace( /\s+/g, ", #" );
			}
			return this
				.errors()
				.filter( selector );
		},

		idOrName: function( element ) {
			return this.groups[ element.name ] || ( this.checkable( element ) ? element.name : element.id || element.name );
		},

		validationTargetFor: function( element ) {

			// If radio/checkbox, validate first element in group instead
			if ( this.checkable( element ) ) {
				element = this.findByName( element.name );
			}

			// Always apply ignore filter
			return $( element ).not( this.settings.ignore )[ 0 ];
		},

		checkable: function( element ) {
			return ( /radio|checkbox/i ).test( element.type );
		},

		findByName: function( name ) {
			return $( this.currentForm ).find( "[name='" + name + "']" );
		},

		getLength: function( value, element ) {
			switch ( element.nodeName.toLowerCase() ) {
			case "select":
				return $( "option:selected", element ).length;
			case "input":
				if ( this.checkable( element ) ) {
					return this.findByName( element.name ).filter( ":checked" ).length;
				}
			}
			return value.length;
		},

		depend: function( param, element ) {
			return this.dependTypes[typeof param] ? this.dependTypes[typeof param]( param, element ) : true;
		},

		dependTypes: {
			"boolean": function( param ) {
				return param;
			},
			"string": function( param, element ) {
				return !!$( param, element.form ).length;
			},
			"function": function( param, element ) {
				return param( element );
			}
		},

		optional: function( element ) {
			var val = this.elementValue( element );
			return !$.validator.methods.required.call( this, val, element ) && "dependency-mismatch";
		},

		startRequest: function( element ) {
			if ( !this.pending[ element.name ] ) {
				this.pendingRequest++;
				this.pending[ element.name ] = true;
			}
		},

		stopRequest: function( element, valid ) {
			this.pendingRequest--;
			// sometimes synchronization fails, make sure pendingRequest is never < 0
			if ( this.pendingRequest < 0 ) {
				this.pendingRequest = 0;
			}
			delete this.pending[ element.name ];
			if ( valid && this.pendingRequest === 0 && this.formSubmitted && this.form() ) {
				$( this.currentForm ).submit();
				this.formSubmitted = false;
			} else if (!valid && this.pendingRequest === 0 && this.formSubmitted ) {
				$( this.currentForm ).triggerHandler( "invalid-form", [ this ]);
				this.formSubmitted = false;
			}
		},

		previousValue: function( element ) {
			return $.data( element, "previousValue" ) || $.data( element, "previousValue", {
				old: null,
				valid: true,
				message: this.defaultMessage( element, "remote" )
			});
		},

		// cleans up all forms and elements, removes validator-specific events
		destroy: function() {
			this.resetForm();

			$( this.currentForm )
				.off( ".validate" )
				.removeData( "validator" );
		}

	},

	classRuleSettings: {
		required: { required: true },
		email: { email: true },
		url: { url: true },
		date: { date: true },
		dateISO: { dateISO: true },
		number: { number: true },
		digits: { digits: true },
		creditcard: { creditcard: true }
	},

	addClassRules: function( className, rules ) {
		if ( className.constructor === String ) {
			this.classRuleSettings[ className ] = rules;
		} else {
			$.extend( this.classRuleSettings, className );
		}
	},

	classRules: function( element ) {
		var rules = {},
			classes = $( element ).attr( "class" );

		if ( classes ) {
			$.each( classes.split( " " ), function() {
				if ( this in $.validator.classRuleSettings ) {
					$.extend( rules, $.validator.classRuleSettings[ this ]);
				}
			});
		}
		return rules;
	},

	normalizeAttributeRule: function( rules, type, method, value ) {

		// convert the value to a number for number inputs, and for text for backwards compability
		// allows type="date" and others to be compared as strings
		if ( /min|max/.test( method ) && ( type === null || /number|range|text/.test( type ) ) ) {
			value = Number( value );

			// Support Opera Mini, which returns NaN for undefined minlength
			if ( isNaN( value ) ) {
				value = undefined;
			}
		}

		if ( value || value === 0 ) {
			rules[ method ] = value;
		} else if ( type === method && type !== "range" ) {

			// exception: the jquery validate 'range' method
			// does not test for the html5 'range' type
			rules[ method ] = true;
		}
	},

	attributeRules: function( element ) {
		var rules = {},
			$element = $( element ),
			type = element.getAttribute( "type" ),
			method, value;

		for ( method in $.validator.methods ) {

			// support for <input required> in both html5 and older browsers
			if ( method === "required" ) {
				value = element.getAttribute( method );

				// Some browsers return an empty string for the required attribute
				// and non-HTML5 browsers might have required="" markup
				if ( value === "" ) {
					value = true;
				}

				// force non-HTML5 browsers to return bool
				value = !!value;
			} else {
				value = $element.attr( method );
			}

			this.normalizeAttributeRule( rules, type, method, value );
		}

		// maxlength may be returned as -1, 2147483647 ( IE ) and 524288 ( safari ) for text inputs
		if ( rules.maxlength && /-1|2147483647|524288/.test( rules.maxlength ) ) {
			delete rules.maxlength;
		}

		return rules;
	},

	dataRules: function( element ) {
		var rules = {},
			$element = $( element ),
			type = element.getAttribute( "type" ),
			method, value;

		for ( method in $.validator.methods ) {
			value = $element.data( "rule" + method.charAt( 0 ).toUpperCase() + method.substring( 1 ).toLowerCase() );
			this.normalizeAttributeRule( rules, type, method, value );
		}
		return rules;
	},

	staticRules: function( element ) {
		var rules = {},
			validator = $.data( element.form, "validator" );

		if ( validator.settings.rules ) {
			rules = $.validator.normalizeRule( validator.settings.rules[ element.name ] ) || {};
		}
		return rules;
	},

	normalizeRules: function( rules, element ) {
		// handle dependency check
		$.each( rules, function( prop, val ) {
			// ignore rule when param is explicitly false, eg. required:false
			if ( val === false ) {
				delete rules[ prop ];
				return;
			}
			if ( val.param || val.depends ) {
				var keepRule = true;
				switch ( typeof val.depends ) {
				case "string":
					keepRule = !!$( val.depends, element.form ).length;
					break;
				case "function":
					keepRule = val.depends.call( element, element );
					break;
				}
				if ( keepRule ) {
					rules[ prop ] = val.param !== undefined ? val.param : true;
				} else {
					delete rules[ prop ];
				}
			}
		});

		// evaluate parameters
		$.each( rules, function( rule, parameter ) {
			rules[ rule ] = $.isFunction( parameter ) ? parameter( element ) : parameter;
		});

		// clean number parameters
		$.each([ "minlength", "maxlength" ], function() {
			if ( rules[ this ] ) {
				rules[ this ] = Number( rules[ this ] );
			}
		});
		$.each([ "rangelength", "range" ], function() {
			var parts;
			if ( rules[ this ] ) {
				if ( $.isArray( rules[ this ] ) ) {
					rules[ this ] = [ Number( rules[ this ][ 0 ]), Number( rules[ this ][ 1 ] ) ];
				} else if ( typeof rules[ this ] === "string" ) {
					parts = rules[ this ].replace(/[\[\]]/g, "" ).split( /[\s,]+/ );
					rules[ this ] = [ Number( parts[ 0 ]), Number( parts[ 1 ] ) ];
				}
			}
		});

		if ( $.validator.autoCreateRanges ) {
			// auto-create ranges
			if ( rules.min != null && rules.max != null ) {
				rules.range = [ rules.min, rules.max ];
				delete rules.min;
				delete rules.max;
			}
			if ( rules.minlength != null && rules.maxlength != null ) {
				rules.rangelength = [ rules.minlength, rules.maxlength ];
				delete rules.minlength;
				delete rules.maxlength;
			}
		}

		return rules;
	},

	// Converts a simple string to a {string: true} rule, e.g., "required" to {required:true}
	normalizeRule: function( data ) {
		if ( typeof data === "string" ) {
			var transformed = {};
			$.each( data.split( /\s/ ), function() {
				transformed[ this ] = true;
			});
			data = transformed;
		}
		return data;
	},

	// http://jqueryvalidation.org/jQuery.validator.addMethod/
	addMethod: function( name, method, message ) {
		$.validator.methods[ name ] = method;
		$.validator.messages[ name ] = message !== undefined ? message : $.validator.messages[ name ];
		if ( method.length < 3 ) {
			$.validator.addClassRules( name, $.validator.normalizeRule( name ) );
		}
	},

	methods: {

		// http://jqueryvalidation.org/required-method/
		required: function( value, element, param ) {
			// check if dependency is met
			if ( !this.depend( param, element ) ) {
				return "dependency-mismatch";
			}
			if ( element.nodeName.toLowerCase() === "select" ) {
				// could be an array for select-multiple or a string, both are fine this way
				var val = $( element ).val();
				return val && val.length > 0;
			}
			if ( this.checkable( element ) ) {
				return this.getLength( value, element ) > 0;
			}
			return value.length > 0;
		},

		// http://jqueryvalidation.org/email-method/
		email: function( value, element ) {
			// From https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address
			// Retrieved 2014-01-14
			// If you have a problem with this implementation, report a bug against the above spec
			// Or use custom methods to implement your own email validation
			return this.optional( element ) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test( value );
		},

		// http://jqueryvalidation.org/url-method/
		url: function( value, element ) {

			// Copyright (c) 2010-2013 Diego Perini, MIT licensed
			// https://gist.github.com/dperini/729294
			// see also https://mathiasbynens.be/demo/url-regex
			// modified to allow protocol-relative URLs
			return this.optional( element ) || /^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[/?#]\S*)?$/i.test( value );
		},

		// http://jqueryvalidation.org/date-method/
		date: function( value, element ) {
			return this.optional( element ) || !/Invalid|NaN/.test( new Date( value ).toString() );
		},

		// http://jqueryvalidation.org/dateISO-method/
		dateISO: function( value, element ) {
			return this.optional( element ) || /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test( value );
		},

		// http://jqueryvalidation.org/number-method/
		number: function( value, element ) {
			return this.optional( element ) || /^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test( value );
		},

		// http://jqueryvalidation.org/digits-method/
		digits: function( value, element ) {
			return this.optional( element ) || /^\d+$/.test( value );
		},

		// http://jqueryvalidation.org/creditcard-method/
		// based on http://en.wikipedia.org/wiki/Luhn_algorithm
		creditcard: function( value, element ) {
			if ( this.optional( element ) ) {
				return "dependency-mismatch";
			}
			// accept only spaces, digits and dashes
			if ( /[^0-9 \-]+/.test( value ) ) {
				return false;
			}
			var nCheck = 0,
				nDigit = 0,
				bEven = false,
				n, cDigit;

			value = value.replace( /\D/g, "" );

			// Basing min and max length on
			// http://developer.ean.com/general_info/Valid_Credit_Card_Types
			if ( value.length < 13 || value.length > 19 ) {
				return false;
			}

			for ( n = value.length - 1; n >= 0; n--) {
				cDigit = value.charAt( n );
				nDigit = parseInt( cDigit, 10 );
				if ( bEven ) {
					if ( ( nDigit *= 2 ) > 9 ) {
						nDigit -= 9;
					}
				}
				nCheck += nDigit;
				bEven = !bEven;
			}

			return ( nCheck % 10 ) === 0;
		},

		// http://jqueryvalidation.org/minlength-method/
		minlength: function( value, element, param ) {
			var length = $.isArray( value ) ? value.length : this.getLength( value, element );
			return this.optional( element ) || length >= param;
		},

		// http://jqueryvalidation.org/maxlength-method/
		maxlength: function( value, element, param ) {
			var length = $.isArray( value ) ? value.length : this.getLength( value, element );
			return this.optional( element ) || length <= param;
		},

		// http://jqueryvalidation.org/rangelength-method/
		rangelength: function( value, element, param ) {
			var length = $.isArray( value ) ? value.length : this.getLength( value, element );
			return this.optional( element ) || ( length >= param[ 0 ] && length <= param[ 1 ] );
		},

		// http://jqueryvalidation.org/min-method/
		min: function( value, element, param ) {
			return this.optional( element ) || value >= param;
		},

		// http://jqueryvalidation.org/max-method/
		max: function( value, element, param ) {
			return this.optional( element ) || value <= param;
		},

		// http://jqueryvalidation.org/range-method/
		range: function( value, element, param ) {
			return this.optional( element ) || ( value >= param[ 0 ] && value <= param[ 1 ] );
		},

		// http://jqueryvalidation.org/equalTo-method/
		equalTo: function( value, element, param ) {
			// bind to the blur event of the target in order to revalidate whenever the target field is updated
			// TODO find a way to bind the event just once, avoiding the unbind-rebind overhead
			var target = $( param );
			if ( this.settings.onfocusout ) {
				target.off( ".validate-equalTo" ).on( "blur.validate-equalTo", function() {
					$( element ).valid();
				});
			}
			return value === target.val();
		},

		// http://jqueryvalidation.org/remote-method/
		remote: function( value, element, param ) {
			if ( this.optional( element ) ) {
				return "dependency-mismatch";
			}

			var previous = this.previousValue( element ),
				validator, data;

			if (!this.settings.messages[ element.name ] ) {
				this.settings.messages[ element.name ] = {};
			}
			previous.originalMessage = this.settings.messages[ element.name ].remote;
			this.settings.messages[ element.name ].remote = previous.message;

			param = typeof param === "string" && { url: param } || param;

			if ( previous.old === value ) {
				return previous.valid;
			}

			previous.old = value;
			validator = this;
			this.startRequest( element );
			data = {};
			data[ element.name ] = value;
			$.ajax( $.extend( true, {
				mode: "abort",
				port: "validate" + element.name,
				dataType: "json",
				data: data,
				context: validator.currentForm,
				success: function( response ) {
					var valid = response === true || response === "true",
						errors, message, submitted;

					validator.settings.messages[ element.name ].remote = previous.originalMessage;
					if ( valid ) {
						submitted = validator.formSubmitted;
						validator.prepareElement( element );
						validator.formSubmitted = submitted;
						validator.successList.push( element );
						delete validator.invalid[ element.name ];
						validator.showErrors();
					} else {
						errors = {};
						message = response || validator.defaultMessage( element, "remote" );
						errors[ element.name ] = previous.message = $.isFunction( message ) ? message( value ) : message;
						validator.invalid[ element.name ] = true;
						validator.showErrors( errors );
					}
					previous.valid = valid;
					validator.stopRequest( element, valid );
				}
			}, param ) );
			return "pending";
		}
	}

});

// ajax mode: abort
// usage: $.ajax({ mode: "abort"[, port: "uniqueport"]});
// if mode:"abort" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()

var pendingRequests = {},
	ajax;
// Use a prefilter if available (1.5+)
if ( $.ajaxPrefilter ) {
	$.ajaxPrefilter(function( settings, _, xhr ) {
		var port = settings.port;
		if ( settings.mode === "abort" ) {
			if ( pendingRequests[port] ) {
				pendingRequests[port].abort();
			}
			pendingRequests[port] = xhr;
		}
	});
} else {
	// Proxy ajax
	ajax = $.ajax;
	$.ajax = function( settings ) {
		var mode = ( "mode" in settings ? settings : $.ajaxSettings ).mode,
			port = ( "port" in settings ? settings : $.ajaxSettings ).port;
		if ( mode === "abort" ) {
			if ( pendingRequests[port] ) {
				pendingRequests[port].abort();
			}
			pendingRequests[port] = ajax.apply(this, arguments);
			return pendingRequests[port];
		}
		return ajax.apply(this, arguments);
	};
}

}));
/* Tooltipster v3.3.0 */;(function(e,t,n){function s(t,n){this.bodyOverflowX;this.callbacks={hide:[],show:[]};this.checkInterval=null;this.Content;this.$el=e(t);this.$elProxy;this.elProxyPosition;this.enabled=true;this.options=e.extend({},i,n);this.mouseIsOverProxy=false;this.namespace="tooltipster-"+Math.round(Math.random()*1e5);this.Status="hidden";this.timerHide=null;this.timerShow=null;this.$tooltip;this.options.iconTheme=this.options.iconTheme.replace(".","");this.options.theme=this.options.theme.replace(".","");this._init()}function o(t,n){var r=true;e.each(t,function(e,i){if(typeof n[e]==="undefined"||t[e]!==n[e]){r=false;return false}});return r}function f(){return!a&&u}function l(){var e=n.body||n.documentElement,t=e.style,r="transition";if(typeof t[r]=="string"){return true}v=["Moz","Webkit","Khtml","O","ms"],r=r.charAt(0).toUpperCase()+r.substr(1);for(var i=0;i<v.length;i++){if(typeof t[v[i]+r]=="string"){return true}}return false}var r="tooltipster",i={animation:"fade",arrow:true,arrowColor:"",autoClose:true,content:null,contentAsHTML:false,contentCloning:true,debug:true,delay:200,minWidth:0,maxWidth:null,functionInit:function(e,t){},functionBefore:function(e,t){t()},functionReady:function(e,t){},functionAfter:function(e){},hideOnClick:false,icon:"(?)",iconCloning:true,iconDesktop:false,iconTouch:false,iconTheme:"tooltipster-icon",interactive:false,interactiveTolerance:350,multiple:false,offsetX:0,offsetY:0,onlyOne:false,position:"top",positionTracker:false,positionTrackerCallback:function(e){if(this.option("trigger")=="hover"&&this.option("autoClose")){this.hide()}},restoration:"current",speed:350,timer:0,theme:"tooltipster-default",touchDevices:true,trigger:"hover",updateAnimation:true};s.prototype={_init:function(){var t=this;if(n.querySelector){var r=null;if(t.$el.data("tooltipster-initialTitle")===undefined){r=t.$el.attr("title");if(r===undefined)r=null;t.$el.data("tooltipster-initialTitle",r)}if(t.options.content!==null){t._content_set(t.options.content)}else{t._content_set(r)}var i=t.options.functionInit.call(t.$el,t.$el,t.Content);if(typeof i!=="undefined")t._content_set(i);t.$el.removeAttr("title").addClass("tooltipstered");if(!u&&t.options.iconDesktop||u&&t.options.iconTouch){if(typeof t.options.icon==="string"){t.$elProxy=e('<span class="'+t.options.iconTheme+'"></span>');t.$elProxy.text(t.options.icon)}else{if(t.options.iconCloning)t.$elProxy=t.options.icon.clone(true);else t.$elProxy=t.options.icon}t.$elProxy.insertAfter(t.$el)}else{t.$elProxy=t.$el}if(t.options.trigger=="hover"){t.$elProxy.on("mouseenter."+t.namespace,function(){if(!f()||t.options.touchDevices){t.mouseIsOverProxy=true;t._show()}}).on("mouseleave."+t.namespace,function(){if(!f()||t.options.touchDevices){t.mouseIsOverProxy=false}});if(u&&t.options.touchDevices){t.$elProxy.on("touchstart."+t.namespace,function(){t._showNow()})}}else if(t.options.trigger=="click"){t.$elProxy.on("click."+t.namespace,function(){if(!f()||t.options.touchDevices){t._show()}})}}},_show:function(){var e=this;if(e.Status!="shown"&&e.Status!="appearing"){if(e.options.delay){e.timerShow=setTimeout(function(){if(e.options.trigger=="click"||e.options.trigger=="hover"&&e.mouseIsOverProxy){e._showNow()}},e.options.delay)}else e._showNow()}},_showNow:function(n){var r=this;r.options.functionBefore.call(r.$el,r.$el,function(){if(r.enabled&&r.Content!==null){if(n)r.callbacks.show.push(n);r.callbacks.hide=[];clearTimeout(r.timerShow);r.timerShow=null;clearTimeout(r.timerHide);r.timerHide=null;if(r.options.onlyOne){e(".tooltipstered").not(r.$el).each(function(t,n){var r=e(n),i=r.data("tooltipster-ns");e.each(i,function(e,t){var n=r.data(t),i=n.status(),s=n.option("autoClose");if(i!=="hidden"&&i!=="disappearing"&&s){n.hide()}})})}var i=function(){r.Status="shown";e.each(r.callbacks.show,function(e,t){t.call(r.$el)});r.callbacks.show=[]};if(r.Status!=="hidden"){var s=0;if(r.Status==="disappearing"){r.Status="appearing";if(l()){r.$tooltip.clearQueue().removeClass("tooltipster-dying").addClass("tooltipster-"+r.options.animation+"-show");if(r.options.speed>0)r.$tooltip.delay(r.options.speed);r.$tooltip.queue(i)}else{r.$tooltip.stop().fadeIn(i)}}else if(r.Status==="shown"){i()}}else{r.Status="appearing";var s=r.options.speed;r.bodyOverflowX=e("body").css("overflow-x");e("body").css("overflow-x","hidden");var o="tooltipster-"+r.options.animation,a="-webkit-transition-duration: "+r.options.speed+"ms; -webkit-animation-duration: "+r.options.speed+"ms; -moz-transition-duration: "+r.options.speed+"ms; -moz-animation-duration: "+r.options.speed+"ms; -o-transition-duration: "+r.options.speed+"ms; -o-animation-duration: "+r.options.speed+"ms; -ms-transition-duration: "+r.options.speed+"ms; -ms-animation-duration: "+r.options.speed+"ms; transition-duration: "+r.options.speed+"ms; animation-duration: "+r.options.speed+"ms;",f=r.options.minWidth?"min-width:"+Math.round(r.options.minWidth)+"px;":"",c=r.options.maxWidth?"max-width:"+Math.round(r.options.maxWidth)+"px;":"",h=r.options.interactive?"pointer-events: auto;":"";r.$tooltip=e('<div class="tooltipster-base '+r.options.theme+'" style="'+f+" "+c+" "+h+" "+a+'"><div class="tooltipster-content"></div></div>');if(l())r.$tooltip.addClass(o);r._content_insert();r.$tooltip.appendTo("body");r.reposition();r.options.functionReady.call(r.$el,r.$el,r.$tooltip);if(l()){r.$tooltip.addClass(o+"-show");if(r.options.speed>0)r.$tooltip.delay(r.options.speed);r.$tooltip.queue(i)}else{r.$tooltip.css("display","none").fadeIn(r.options.speed,i)}r._interval_set();e(t).on("scroll."+r.namespace+" resize."+r.namespace,function(){r.reposition()});if(r.options.autoClose){e("body").off("."+r.namespace);if(r.options.trigger=="hover"){if(u){setTimeout(function(){e("body").on("touchstart."+r.namespace,function(){r.hide()})},0)}if(r.options.interactive){if(u){r.$tooltip.on("touchstart."+r.namespace,function(e){e.stopPropagation()})}var p=null;r.$elProxy.add(r.$tooltip).on("mouseleave."+r.namespace+"-autoClose",function(){clearTimeout(p);p=setTimeout(function(){r.hide()},r.options.interactiveTolerance)}).on("mouseenter."+r.namespace+"-autoClose",function(){clearTimeout(p)})}else{r.$elProxy.on("mouseleave."+r.namespace+"-autoClose",function(){r.hide()})}if(r.options.hideOnClick){r.$elProxy.on("click."+r.namespace+"-autoClose",function(){r.hide()})}}else if(r.options.trigger=="click"){setTimeout(function(){e("body").on("click."+r.namespace+" touchstart."+r.namespace,function(){r.hide()})},0);if(r.options.interactive){r.$tooltip.on("click."+r.namespace+" touchstart."+r.namespace,function(e){e.stopPropagation()})}}}}if(r.options.timer>0){r.timerHide=setTimeout(function(){r.timerHide=null;r.hide()},r.options.timer+s)}}})},_interval_set:function(){var t=this;t.checkInterval=setInterval(function(){if(e("body").find(t.$el).length===0||e("body").find(t.$elProxy).length===0||t.Status=="hidden"||e("body").find(t.$tooltip).length===0){if(t.Status=="shown"||t.Status=="appearing")t.hide();t._interval_cancel()}else{if(t.options.positionTracker){var n=t._repositionInfo(t.$elProxy),r=false;if(o(n.dimension,t.elProxyPosition.dimension)){if(t.$elProxy.css("position")==="fixed"){if(o(n.position,t.elProxyPosition.position))r=true}else{if(o(n.offset,t.elProxyPosition.offset))r=true}}if(!r){t.reposition();t.options.positionTrackerCallback.call(t,t.$el)}}}},200)},_interval_cancel:function(){clearInterval(this.checkInterval);this.checkInterval=null},_content_set:function(e){if(typeof e==="object"&&e!==null&&this.options.contentCloning){e=e.clone(true)}this.Content=e},_content_insert:function(){var e=this,t=this.$tooltip.find(".tooltipster-content");if(typeof e.Content==="string"&&!e.options.contentAsHTML){t.text(e.Content)}else{t.empty().append(e.Content)}},_update:function(e){var t=this;t._content_set(e);if(t.Content!==null){if(t.Status!=="hidden"){t._content_insert();t.reposition();if(t.options.updateAnimation){if(l()){t.$tooltip.css({width:"","-webkit-transition":"all "+t.options.speed+"ms, width 0ms, height 0ms, left 0ms, top 0ms","-moz-transition":"all "+t.options.speed+"ms, width 0ms, height 0ms, left 0ms, top 0ms","-o-transition":"all "+t.options.speed+"ms, width 0ms, height 0ms, left 0ms, top 0ms","-ms-transition":"all "+t.options.speed+"ms, width 0ms, height 0ms, left 0ms, top 0ms",transition:"all "+t.options.speed+"ms, width 0ms, height 0ms, left 0ms, top 0ms"}).addClass("tooltipster-content-changing");setTimeout(function(){if(t.Status!="hidden"){t.$tooltip.removeClass("tooltipster-content-changing");setTimeout(function(){if(t.Status!=="hidden"){t.$tooltip.css({"-webkit-transition":t.options.speed+"ms","-moz-transition":t.options.speed+"ms","-o-transition":t.options.speed+"ms","-ms-transition":t.options.speed+"ms",transition:t.options.speed+"ms"})}},t.options.speed)}},t.options.speed)}else{t.$tooltip.fadeTo(t.options.speed,.5,function(){if(t.Status!="hidden"){t.$tooltip.fadeTo(t.options.speed,1)}})}}}}else{t.hide()}},_repositionInfo:function(e){return{dimension:{height:e.outerHeight(false),width:e.outerWidth(false)},offset:e.offset(),position:{left:parseInt(e.css("left")),top:parseInt(e.css("top"))}}},hide:function(n){var r=this;if(n)r.callbacks.hide.push(n);r.callbacks.show=[];clearTimeout(r.timerShow);r.timerShow=null;clearTimeout(r.timerHide);r.timerHide=null;var i=function(){e.each(r.callbacks.hide,function(e,t){t.call(r.$el)});r.callbacks.hide=[]};if(r.Status=="shown"||r.Status=="appearing"){r.Status="disappearing";var s=function(){r.Status="hidden";if(typeof r.Content=="object"&&r.Content!==null){r.Content.detach()}r.$tooltip.remove();r.$tooltip=null;e(t).off("."+r.namespace);e("body").off("."+r.namespace).css("overflow-x",r.bodyOverflowX);e("body").off("."+r.namespace);r.$elProxy.off("."+r.namespace+"-autoClose");r.options.functionAfter.call(r.$el,r.$el);i()};if(l()){r.$tooltip.clearQueue().removeClass("tooltipster-"+r.options.animation+"-show").addClass("tooltipster-dying");if(r.options.speed>0)r.$tooltip.delay(r.options.speed);r.$tooltip.queue(s)}else{r.$tooltip.stop().fadeOut(r.options.speed,s)}}else if(r.Status=="hidden"){i()}return r},show:function(e){this._showNow(e);return this},update:function(e){return this.content(e)},content:function(e){if(typeof e==="undefined"){return this.Content}else{this._update(e);return this}},reposition:function(){var n=this;if(e("body").find(n.$tooltip).length!==0){n.$tooltip.css("width","");n.elProxyPosition=n._repositionInfo(n.$elProxy);var r=null,i=e(t).width(),s=n.elProxyPosition,o=n.$tooltip.outerWidth(false),u=n.$tooltip.innerWidth()+1,a=n.$tooltip.outerHeight(false);if(n.$elProxy.is("area")){var f=n.$elProxy.attr("shape"),l=n.$elProxy.parent().attr("name"),c=e('img[usemap="#'+l+'"]'),h=c.offset().left,p=c.offset().top,d=n.$elProxy.attr("coords")!==undefined?n.$elProxy.attr("coords").split(","):undefined;if(f=="circle"){var v=parseInt(d[0]),m=parseInt(d[1]),g=parseInt(d[2]);s.dimension.height=g*2;s.dimension.width=g*2;s.offset.top=p+m-g;s.offset.left=h+v-g}else if(f=="rect"){var v=parseInt(d[0]),m=parseInt(d[1]),y=parseInt(d[2]),b=parseInt(d[3]);s.dimension.height=b-m;s.dimension.width=y-v;s.offset.top=p+m;s.offset.left=h+v}else if(f=="poly"){var w=[],E=[],S=0,x=0,T=0,N=0,C="even";for(var k=0;k<d.length;k++){var L=parseInt(d[k]);if(C=="even"){if(L>T){T=L;if(k===0){S=T}}if(L<S){S=L}C="odd"}else{if(L>N){N=L;if(k==1){x=N}}if(L<x){x=L}C="even"}}s.dimension.height=N-x;s.dimension.width=T-S;s.offset.top=p+x;s.offset.left=h+S}else{s.dimension.height=c.outerHeight(false);s.dimension.width=c.outerWidth(false);s.offset.top=p;s.offset.left=h}}var A=0,O=0,M=0,_=parseInt(n.options.offsetY),D=parseInt(n.options.offsetX),P=n.options.position;function H(){var n=e(t).scrollLeft();if(A-n<0){r=A-n;A=n}if(A+o-n>i){r=A-(i+n-o);A=i+n-o}}function B(n,r){if(s.offset.top-e(t).scrollTop()-a-_-12<0&&r.indexOf("top")>-1){P=n}if(s.offset.top+s.dimension.height+a+12+_>e(t).scrollTop()+e(t).height()&&r.indexOf("bottom")>-1){P=n;M=s.offset.top-a-_-12}}if(P=="top"){var j=s.offset.left+o-(s.offset.left+s.dimension.width);A=s.offset.left+D-j/2;M=s.offset.top-a-_-12;H();B("bottom","top")}if(P=="top-left"){A=s.offset.left+D;M=s.offset.top-a-_-12;H();B("bottom-left","top-left")}if(P=="top-right"){A=s.offset.left+s.dimension.width+D-o;M=s.offset.top-a-_-12;H();B("bottom-right","top-right")}if(P=="bottom"){var j=s.offset.left+o-(s.offset.left+s.dimension.width);A=s.offset.left-j/2+D;M=s.offset.top+s.dimension.height+_+12;H();B("top","bottom")}if(P=="bottom-left"){A=s.offset.left+D;M=s.offset.top+s.dimension.height+_+12;H();B("top-left","bottom-left")}if(P=="bottom-right"){A=s.offset.left+s.dimension.width+D-o;M=s.offset.top+s.dimension.height+_+12;H();B("top-right","bottom-right")}if(P=="left"){A=s.offset.left-D-o-12;O=s.offset.left+D+s.dimension.width+12;var F=s.offset.top+a-(s.offset.top+s.dimension.height);M=s.offset.top-F/2-_;if(A<0&&O+o>i){var I=parseFloat(n.$tooltip.css("border-width"))*2,q=o+A-I;n.$tooltip.css("width",q+"px");a=n.$tooltip.outerHeight(false);A=s.offset.left-D-q-12-I;F=s.offset.top+a-(s.offset.top+s.dimension.height);M=s.offset.top-F/2-_}else if(A<0){A=s.offset.left+D+s.dimension.width+12;r="left"}}if(P=="right"){A=s.offset.left+D+s.dimension.width+12;O=s.offset.left-D-o-12;var F=s.offset.top+a-(s.offset.top+s.dimension.height);M=s.offset.top-F/2-_;if(A+o>i&&O<0){var I=parseFloat(n.$tooltip.css("border-width"))*2,q=i-A-I;n.$tooltip.css("width",q+"px");a=n.$tooltip.outerHeight(false);F=s.offset.top+a-(s.offset.top+s.dimension.height);M=s.offset.top-F/2-_}else if(A+o>i){A=s.offset.left-D-o-12;r="right"}}if(n.options.arrow){var R="tooltipster-arrow-"+P;if(n.options.arrowColor.length<1){var U=n.$tooltip.css("background-color")}else{var U=n.options.arrowColor}if(!r){r=""}else if(r=="left"){R="tooltipster-arrow-right";r=""}else if(r=="right"){R="tooltipster-arrow-left";r=""}else{r="left:"+Math.round(r)+"px;"}if(P=="top"||P=="top-left"||P=="top-right"){var z=parseFloat(n.$tooltip.css("border-bottom-width")),W=n.$tooltip.css("border-bottom-color")}else if(P=="bottom"||P=="bottom-left"||P=="bottom-right"){var z=parseFloat(n.$tooltip.css("border-top-width")),W=n.$tooltip.css("border-top-color")}else if(P=="left"){var z=parseFloat(n.$tooltip.css("border-right-width")),W=n.$tooltip.css("border-right-color")}else if(P=="right"){var z=parseFloat(n.$tooltip.css("border-left-width")),W=n.$tooltip.css("border-left-color")}else{var z=parseFloat(n.$tooltip.css("border-bottom-width")),W=n.$tooltip.css("border-bottom-color")}if(z>1){z++}var X="";if(z!==0){var V="",J="border-color: "+W+";";if(R.indexOf("bottom")!==-1){V="margin-top: -"+Math.round(z)+"px;"}else if(R.indexOf("top")!==-1){V="margin-bottom: -"+Math.round(z)+"px;"}else if(R.indexOf("left")!==-1){V="margin-right: -"+Math.round(z)+"px;"}else if(R.indexOf("right")!==-1){V="margin-left: -"+Math.round(z)+"px;"}X='<span class="tooltipster-arrow-border" style="'+V+" "+J+';"></span>'}n.$tooltip.find(".tooltipster-arrow").remove();var K='<div class="'+R+' tooltipster-arrow" style="'+r+'">'+X+'<span style="border-color:'+U+';"></span></div>';n.$tooltip.append(K)}n.$tooltip.css({top:Math.round(M)+"px",left:Math.round(A)+"px"})}return n},enable:function(){this.enabled=true;return this},disable:function(){this.hide();this.enabled=false;return this},destroy:function(){var t=this;t.hide();if(t.$el[0]!==t.$elProxy[0]){t.$elProxy.remove()}t.$el.removeData(t.namespace).off("."+t.namespace);var n=t.$el.data("tooltipster-ns");if(n.length===1){var r=null;if(t.options.restoration==="previous"){r=t.$el.data("tooltipster-initialTitle")}else if(t.options.restoration==="current"){r=typeof t.Content==="string"?t.Content:e("<div></div>").append(t.Content).html()}if(r){t.$el.attr("title",r)}t.$el.removeClass("tooltipstered").removeData("tooltipster-ns").removeData("tooltipster-initialTitle")}else{n=e.grep(n,function(e,n){return e!==t.namespace});t.$el.data("tooltipster-ns",n)}return t},elementIcon:function(){return this.$el[0]!==this.$elProxy[0]?this.$elProxy[0]:undefined},elementTooltip:function(){return this.$tooltip?this.$tooltip[0]:undefined},option:function(e,t){if(typeof t=="undefined")return this.options[e];else{this.options[e]=t;return this}},status:function(){return this.Status}};e.fn[r]=function(){var t=arguments;if(this.length===0){if(typeof t[0]==="string"){var n=true;switch(t[0]){case"setDefaults":e.extend(i,t[1]);break;default:n=false;break}if(n)return true;else return this}else{return this}}else{if(typeof t[0]==="string"){var r="#*$~&";this.each(function(){var n=e(this).data("tooltipster-ns"),i=n?e(this).data(n[0]):null;if(i){if(typeof i[t[0]]==="function"){var s=i[t[0]](t[1],t[2])}else{throw new Error('Unknown method .tooltipster("'+t[0]+'")')}if(s!==i){r=s;return false}}else{throw new Error("You called Tooltipster's \""+t[0]+'" method on an uninitialized element')}});return r!=="#*$~&"?r:this}else{var o=[],u=t[0]&&typeof t[0].multiple!=="undefined",a=u&&t[0].multiple||!u&&i.multiple,f=t[0]&&typeof t[0].debug!=="undefined",l=f&&t[0].debug||!f&&i.debug;this.each(function(){var n=false,r=e(this).data("tooltipster-ns"),i=null;if(!r){n=true}else if(a){n=true}else if(l){console.log('Tooltipster: one or more tooltips are already attached to this element: ignoring. Use the "multiple" option to attach more tooltips.')}if(n){i=new s(this,t[0]);if(!r)r=[];r.push(i.namespace);e(this).data("tooltipster-ns",r);e(this).data(i.namespace,i)}o.push(i)});if(a)return o;else return this}}};var u=!!("ontouchstart"in t);var a=false;e("body").one("mousemove",function(){a=true})})(jQuery,window,document);
(function (angular, $) {
    angular.module('ngValidate', [])

        .directive('ngValidate', function () {
            return {
                require: 'form',
                restrict: 'A',
                scope: {
                    ngValidate: '='
                },
                link: function (scope, element, attrs, form) {
                    var validator = element.validate(scope.ngValidate);

                    form.validate = function (options) {
                        var oldSettings = validator.settings;

                        validator.settings = $.extend(true, {}, validator.settings, options);

                        var valid = validator.form();

                        validator.settings = oldSettings; // Reset to old settings

                        return valid;
                    };

                    form.numberOfInvalids = function () {
                        return validator.numberOfInvalids();
                    };

                    form.invalid = function () {
                        return validator.invalid;
                    };
                }
            };
        })

        .provider('$validator', function () {
            $.validator.setDefaults({
                onsubmit: false // to prevent validating twice
            });

            return {
                setDefaults: $.validator.setDefaults,
                addMethod: $.validator.addMethod,
                setDefaultMessages: function (messages) {
                    angular.extend($.validator.messages, messages);
                },
                format: $.validator.format,
                $get: function () {
                    return {};
                }
            };
        });
}(angular, jQuery));

/*
 * QRious v2.3.0
 * Copyright (C) 2017 Alasdair Mercer
 * Copyright (C) 2010 Tom Zerucha
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define('qrious', factory) :
	(global.QRious = factory());
}(this, (function () { 'use strict';

	function unwrapExports (x) {
		return x && x.__esModule ? x['default'] : x;
	}

	function createCommonjsModule(fn, module) {
		return module = { exports: {} }, fn(module, module.exports), module.exports;
	}

	// 7.2.1 RequireObjectCoercible(argument)
	var _defined = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

	// 7.1.13 ToObject(argument)

	var _toObject = function(it){
	  return Object(_defined(it));
	};

	var hasOwnProperty = {}.hasOwnProperty;
	var _has = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

	var _global = createCommonjsModule(function (module) {
	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef
	});

	var SHARED = '__core-js_shared__';
	var store  = _global[SHARED] || (_global[SHARED] = {});
	var _shared = function(key){
	  return store[key] || (store[key] = {});
	};

	var id = 0;
	var px = Math.random();
	var _uid = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

	var shared = _shared('keys');
	var _sharedKey = function(key){
	  return shared[key] || (shared[key] = _uid(key));
	};

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var IE_PROTO    = _sharedKey('IE_PROTO');
	var ObjectProto = Object.prototype;

	var _objectGpo = Object.getPrototypeOf || function(O){
	  O = _toObject(O);
	  if(_has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

	var _core = createCommonjsModule(function (module) {
	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef
	});

	var _aFunction = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

	// optional / simple context binding

	var _ctx = function(fn, that, length){
	  _aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

	var _isObject = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

	var _anObject = function(it){
	  if(!_isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

	var _fails = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

	// Thank's IE8 for his funny defineProperty
	var _descriptors = !_fails(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

	var document$1 = _global.document;
	var is = _isObject(document$1) && _isObject(document$1.createElement);
	var _domCreate = function(it){
	  return is ? document$1.createElement(it) : {};
	};

	var _ie8DomDefine = !_descriptors && !_fails(function(){
	  return Object.defineProperty(_domCreate('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

	// 7.1.1 ToPrimitive(input [, PreferredType])

	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	var _toPrimitive = function(it, S){
	  if(!_isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

	var dP             = Object.defineProperty;

	var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  _anObject(O);
	  P = _toPrimitive(P, true);
	  _anObject(Attributes);
	  if(_ie8DomDefine)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

	var _objectDp = {
		f: f
	};

	var _propertyDesc = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

	var _hide = _descriptors ? function(object, key, value){
	  return _objectDp.f(object, key, _propertyDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

	var PROTOTYPE = 'prototype';

	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , IS_WRAP   = type & $export.W
	    , exports   = IS_GLOBAL ? _core : _core[name] || (_core[name] = {})
	    , expProto  = exports[PROTOTYPE]
	    , target    = IS_GLOBAL ? _global : IS_STATIC ? _global[name] : (_global[name] || {})[PROTOTYPE]
	    , key, own, out;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if(own && key in exports)continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? _ctx(out, _global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function(C){
	      var F = function(a, b, c){
	        if(this instanceof C){
	          switch(arguments.length){
	            case 0: return new C;
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if(IS_PROTO){
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if(type & $export.R && expProto && !expProto[key])_hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library`
	var _export = $export;

	// most Object methods by ES6 should accept primitives

	var _objectSap = function(KEY, exec){
	  var fn  = (_core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  _export(_export.S + _export.F * _fails(function(){ fn(1); }), 'Object', exp);
	};

	// 19.1.2.9 Object.getPrototypeOf(O)


	_objectSap('getPrototypeOf', function(){
	  return function getPrototypeOf(it){
	    return _objectGpo(_toObject(it));
	  };
	});

	var getPrototypeOf$1 = _core.Object.getPrototypeOf;

	var getPrototypeOf = createCommonjsModule(function (module) {
	module.exports = { "default": getPrototypeOf$1, __esModule: true };
	});

	var _Object$getPrototypeOf = unwrapExports(getPrototypeOf);

	var classCallCheck = createCommonjsModule(function (module, exports) {
	"use strict";

	exports.__esModule = true;

	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};
	});

	var _classCallCheck = unwrapExports(classCallCheck);

	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	_export(_export.S + _export.F * !_descriptors, 'Object', {defineProperty: _objectDp.f});

	var $Object = _core.Object;
	var defineProperty$2 = function defineProperty(it, key, desc){
	  return $Object.defineProperty(it, key, desc);
	};

	var defineProperty = createCommonjsModule(function (module) {
	module.exports = { "default": defineProperty$2, __esModule: true };
	});

	var createClass = createCommonjsModule(function (module, exports) {
	"use strict";

	exports.__esModule = true;



	var _defineProperty2 = _interopRequireDefault(defineProperty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
	    }
	  }

	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();
	});

	var _createClass = unwrapExports(createClass);

	// 7.1.4 ToInteger
	var ceil  = Math.ceil;
	var floor = Math.floor;
	var _toInteger = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

	// true  -> String#at
	// false -> String#codePointAt
	var _stringAt = function(TO_STRING){
	  return function(that, pos){
	    var s = String(_defined(that))
	      , i = _toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

	var _library = true;

	var _redefine = _hide;

	var _iterators = {};

	var toString = {}.toString;

	var _cof = function(it){
	  return toString.call(it).slice(8, -1);
	};

	// fallback for non-array-like ES3 and non-enumerable old V8 strings

	var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return _cof(it) == 'String' ? it.split('') : Object(it);
	};

	// to indexed object, toObject with fallback for non-array-like ES3 strings

	var _toIobject = function(it){
	  return _iobject(_defined(it));
	};

	// 7.1.15 ToLength
	var min       = Math.min;
	var _toLength = function(it){
	  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

	var max       = Math.max;
	var min$1       = Math.min;
	var _toIndex = function(index, length){
	  index = _toInteger(index);
	  return index < 0 ? max(index + length, 0) : min$1(index, length);
	};

	// false -> Array#indexOf
	// true  -> Array#includes

	var _arrayIncludes = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = _toIobject($this)
	      , length = _toLength(O.length)
	      , index  = _toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

	var arrayIndexOf = _arrayIncludes(false);
	var IE_PROTO$2     = _sharedKey('IE_PROTO');

	var _objectKeysInternal = function(object, names){
	  var O      = _toIobject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO$2)_has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(_has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

	// IE 8- don't enum bug keys
	var _enumBugKeys = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)


	var _objectKeys = Object.keys || function keys(O){
	  return _objectKeysInternal(O, _enumBugKeys);
	};

	var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties){
	  _anObject(O);
	  var keys   = _objectKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)_objectDp.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

	var _html = _global.document && document.documentElement;

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var IE_PROTO$1    = _sharedKey('IE_PROTO');
	var Empty       = function(){ /* empty */ };
	var PROTOTYPE$1   = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = _domCreate('iframe')
	    , i      = _enumBugKeys.length
	    , lt     = '<'
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  _html.appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE$1][_enumBugKeys[i]];
	  return createDict();
	};

	var _objectCreate = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE$1] = _anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE$1] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO$1] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : _objectDps(result, Properties);
	};

	var _wks = createCommonjsModule(function (module) {
	var store      = _shared('wks')
	  , Symbol     = _global.Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';

	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));
	};

	$exports.store = store;
	});

	var def = _objectDp.f;
	var TAG = _wks('toStringTag');

	var _setToStringTag = function(it, tag, stat){
	  if(it && !_has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

	var IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	_hide(IteratorPrototype, _wks('iterator'), function(){ return this; });

	var _iterCreate = function(Constructor, NAME, next){
	  Constructor.prototype = _objectCreate(IteratorPrototype, {next: _propertyDesc(1, next)});
	  _setToStringTag(Constructor, NAME + ' Iterator');
	};

	var ITERATOR       = _wks('iterator');
	var BUGGY          = !([].keys && 'next' in [].keys());
	var FF_ITERATOR    = '@@iterator';
	var KEYS           = 'keys';
	var VALUES         = 'values';

	var returnThis = function(){ return this; };

	var _iterDefine = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  _iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = _objectGpo($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      _setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!_library && !_has(IteratorPrototype, ITERATOR))_hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    _hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  _iterators[NAME] = $default;
	  _iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))_redefine(proto, key, methods[key]);
	    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

	var $at  = _stringAt(true);

	// 21.1.3.27 String.prototype[@@iterator]()
	_iterDefine(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

	var _addToUnscopables = function(){ /* empty */ };

	var _iterStep = function(done, value){
	  return {value: value, done: !!done};
	};

	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	var es6_array_iterator = _iterDefine(Array, 'Array', function(iterated, kind){
	  this._t = _toIobject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return _iterStep(1);
	  }
	  if(kind == 'keys'  )return _iterStep(0, index);
	  if(kind == 'values')return _iterStep(0, O[index]);
	  return _iterStep(0, [index, O[index]]);
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	_iterators.Arguments = _iterators.Array;

	_addToUnscopables('keys');
	_addToUnscopables('values');
	_addToUnscopables('entries');

	var TO_STRING_TAG = _wks('toStringTag');

	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = _global[NAME]
	    , proto      = Collection && Collection.prototype;
	  if(proto && !proto[TO_STRING_TAG])_hide(proto, TO_STRING_TAG, NAME);
	  _iterators[NAME] = _iterators.Array;
	}

	var f$1 = _wks;

	var _wksExt = {
		f: f$1
	};

	var iterator$2 = _wksExt.f('iterator');

	var iterator = createCommonjsModule(function (module) {
	module.exports = { "default": iterator$2, __esModule: true };
	});

	var _meta = createCommonjsModule(function (module) {
	var META     = _uid('meta')
	  , setDesc  = _objectDp.f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !_fails(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!_isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!_has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!_has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !_has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};
	});

	var defineProperty$4 = _objectDp.f;
	var _wksDefine = function(name){
	  var $Symbol = _core.Symbol || (_core.Symbol = _library ? {} : _global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty$4($Symbol, name, {value: _wksExt.f(name)});
	};

	var _keyof = function(object, el){
	  var O      = _toIobject(object)
	    , keys   = _objectKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

	var f$2 = Object.getOwnPropertySymbols;

	var _objectGops = {
		f: f$2
	};

	var f$3 = {}.propertyIsEnumerable;

	var _objectPie = {
		f: f$3
	};

	// all enumerable object keys, includes symbols

	var _enumKeys = function(it){
	  var result     = _objectKeys(it)
	    , getSymbols = _objectGops.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = _objectPie.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

	// 7.2.2 IsArray(argument)

	var _isArray = Array.isArray || function isArray(arg){
	  return _cof(arg) == 'Array';
	};

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var hiddenKeys = _enumBugKeys.concat('length', 'prototype');

	var f$5 = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return _objectKeysInternal(O, hiddenKeys);
	};

	var _objectGopn = {
		f: f$5
	};

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var gOPN$1      = _objectGopn.f;
	var toString$1  = {}.toString;

	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];

	var getWindowNames = function(it){
	  try {
	    return gOPN$1(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};

	var f$4 = function getOwnPropertyNames(it){
	  return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : gOPN$1(_toIobject(it));
	};

	var _objectGopnExt = {
		f: f$4
	};

	var gOPD$1           = Object.getOwnPropertyDescriptor;

	var f$6 = _descriptors ? gOPD$1 : function getOwnPropertyDescriptor(O, P){
	  O = _toIobject(O);
	  P = _toPrimitive(P, true);
	  if(_ie8DomDefine)try {
	    return gOPD$1(O, P);
	  } catch(e){ /* empty */ }
	  if(_has(O, P))return _propertyDesc(!_objectPie.f.call(O, P), O[P]);
	};

	var _objectGopd = {
		f: f$6
	};

	// ECMAScript 6 symbols shim
	var META           = _meta.KEY;
	var gOPD           = _objectGopd.f;
	var dP$1             = _objectDp.f;
	var gOPN           = _objectGopnExt.f;
	var $Symbol        = _global.Symbol;
	var $JSON          = _global.JSON;
	var _stringify     = $JSON && $JSON.stringify;
	var PROTOTYPE$2      = 'prototype';
	var HIDDEN         = _wks('_hidden');
	var TO_PRIMITIVE   = _wks('toPrimitive');
	var isEnum         = {}.propertyIsEnumerable;
	var SymbolRegistry = _shared('symbol-registry');
	var AllSymbols     = _shared('symbols');
	var OPSymbols      = _shared('op-symbols');
	var ObjectProto$1    = Object[PROTOTYPE$2];
	var USE_NATIVE     = typeof $Symbol == 'function';
	var QObject        = _global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild;

	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = _descriptors && _fails(function(){
	  return _objectCreate(dP$1({}, 'a', {
	    get: function(){ return dP$1(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto$1, key);
	  if(protoDesc)delete ObjectProto$1[key];
	  dP$1(it, key, D);
	  if(protoDesc && it !== ObjectProto$1)dP$1(ObjectProto$1, key, protoDesc);
	} : dP$1;

	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);
	  sym._k = tag;
	  return sym;
	};

	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};

	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto$1)$defineProperty(OPSymbols, key, D);
	  _anObject(it);
	  key = _toPrimitive(key, true);
	  _anObject(D);
	  if(_has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!_has(it, HIDDEN))dP$1(it, HIDDEN, _propertyDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(_has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _objectCreate(D, {enumerable: _propertyDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP$1(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  _anObject(it);
	  var keys = _enumKeys(P = _toIobject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = _toPrimitive(key, true));
	  if(this === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key))return false;
	  return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = _toIobject(it);
	  key = _toPrimitive(key, true);
	  if(it === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(_toIobject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto$1
	    , names  = gOPN(IS_OP ? OPSymbols : _toIobject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto$1, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};

	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = _uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto$1)$set.call(OPSymbols, value);
	      if(_has(this, HIDDEN) && _has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, _propertyDesc(1, value));
	    };
	    if(_descriptors && setter)setSymbolDesc(ObjectProto$1, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  _redefine($Symbol[PROTOTYPE$2], 'toString', function toString(){
	    return this._k;
	  });

	  _objectGopd.f = $getOwnPropertyDescriptor;
	  _objectDp.f   = $defineProperty;
	  _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;
	  _objectPie.f  = $propertyIsEnumerable;
	  _objectGops.f = $getOwnPropertySymbols;

	  if(_descriptors && !_library){
	    _redefine(ObjectProto$1, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }

	  _wksExt.f = function(name){
	    return wrap(_wks(name));
	  };
	}

	_export(_export.G + _export.W + _export.F * !USE_NATIVE, {Symbol: $Symbol});

	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i$1 = 0; symbols.length > i$1; )_wks(symbols[i$1++]);

	for(var symbols = _objectKeys(_wks.store), i$1 = 0; symbols.length > i$1; )_wksDefine(symbols[i$1++]);

	_export(_export.S + _export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return _has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return _keyof(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});

	_export(_export.S + _export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});

	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && _export(_export.S + _export.F * (!USE_NATIVE || _fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !_isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});

	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	_setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	_setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	_setToStringTag(_global.JSON, 'JSON', true);

	_wksDefine('asyncIterator');

	_wksDefine('observable');

	var index = _core.Symbol;

	var symbol = createCommonjsModule(function (module) {
	module.exports = { "default": index, __esModule: true };
	});

	var _typeof_1 = createCommonjsModule(function (module, exports) {
	"use strict";

	exports.__esModule = true;



	var _iterator2 = _interopRequireDefault(iterator);



	var _symbol2 = _interopRequireDefault(symbol);

	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};
	});

	var possibleConstructorReturn = createCommonjsModule(function (module, exports) {
	"use strict";

	exports.__esModule = true;



	var _typeof3 = _interopRequireDefault(_typeof_1);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }

	  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
	};
	});

	var _possibleConstructorReturn = unwrapExports(possibleConstructorReturn);

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */

	var check = function(O, proto){
	  _anObject(O);
	  if(!_isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	var _setProto = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = _ctx(Function.call, _objectGopd.f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

	// 19.1.3.19 Object.setPrototypeOf(O, proto)

	_export(_export.S, 'Object', {setPrototypeOf: _setProto.set});

	var setPrototypeOf$2 = _core.Object.setPrototypeOf;

	var setPrototypeOf = createCommonjsModule(function (module) {
	module.exports = { "default": setPrototypeOf$2, __esModule: true };
	});

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	_export(_export.S, 'Object', {create: _objectCreate});

	var $Object$1 = _core.Object;
	var create$2 = function create(P, D){
	  return $Object$1.create(P, D);
	};

	var create = createCommonjsModule(function (module) {
	module.exports = { "default": create$2, __esModule: true };
	});

	var inherits = createCommonjsModule(function (module, exports) {
	"use strict";

	exports.__esModule = true;



	var _setPrototypeOf2 = _interopRequireDefault(setPrototypeOf);



	var _create2 = _interopRequireDefault(create);



	var _typeof3 = _interopRequireDefault(_typeof_1);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }

	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};
	});

	var _inherits = unwrapExports(inherits);

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/**
	 * Contains utility methods that are useful throughout the library.
	 *
	 * @public
	 */
	var Utilities = function () {
	  function Utilities() {
	    _classCallCheck(this, Utilities);
	  }

	  _createClass(Utilities, null, [{
	    key: "abs",


	    /**
	     * Returns the absolute value of a given number.
	     *
	     * This method is simply a convenient shorthand for <code>Math.abs</code> while ensuring that nulls are returned as
	     * <code>null</code> instead of zero.
	     *
	     * @param {number} value - the number whose absolute value is to be returned
	     * @return {number} The absolute value of <code>value</code> or <code>null</code> if <code>value</code> is
	     * <code>null</code>.
	     * @public
	     * @static
	     */
	    value: function abs(value) {
	      return value != null ? Math.abs(value) : null;
	    }

	    /**
	     * Returns whether the specified <code>object</code> has a property with the specified <code>name</code> as an own
	     * (not inherited) property.
	     *
	     * @param {Object} object - the object on which the property is to be checked
	     * @param {string} name - the name of the property to be checked
	     * @return {boolean} <code>true</code> if <code>object</code> has an own property with <code>name</code>.
	     * @public
	     * @static
	     */

	  }, {
	    key: "hasOwn",
	    value: function hasOwn(object, name) {
	      return Object.prototype.hasOwnProperty.call(object, name);
	    }

	    /**
	     * Throws an error indicating that the a given method on a specific class has not been implemented.
	     *
	     * @param {string} className - the name of the class on which the method has not been implemented
	     * @param {string} methodName - the name of the method which has not been implemented
	     * @return {void}
	     * @throws {Error} The error describing the class method which has not been implemented.
	     * @public
	     * @static
	     */

	  }, {
	    key: "throwUnimplemented",
	    value: function throwUnimplemented(className, methodName) {
	      throw new Error("\"" + methodName + "\" method must be implemented on the " + className + " class");
	    }

	    /**
	     * Transforms the specified <code>string</code> to upper case while remaining null-safe.
	     *
	     * @param {string} string - the string to be transformed to upper case
	     * @return {string} <code>string</code> transformed to upper case if <code>string</code> is not <code>null</code>.
	     * @public
	     * @static
	     */

	  }, {
	    key: "toUpperCase",
	    value: function toUpperCase(string) {
	      return string != null ? string.toUpperCase() : null;
	    }
	  }]);

	  return Utilities;
	}();

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/**
	 * Defines a service contract that must be met by all implementations.
	 *
	 * @public
	 */

	var Service = function () {
	  function Service() {
	    _classCallCheck(this, Service);
	  }

	  _createClass(Service, [{
	    key: 'getName',


	    /**
	     * Returns the name of this {@link Service}.
	     *
	     * @return {string} The service name.
	     * @public
	     */
	    value: function getName() {
	      Utilities.throwUnimplemented('Service', 'getName');
	    }
	  }]);

	  return Service;
	}();

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/**
	 * A service for working with elements.
	 *
	 * @public
	 * @extends Service
	 */

	var ElementService = function (_Service) {
	  _inherits(ElementService, _Service);

	  function ElementService() {
	    _classCallCheck(this, ElementService);

	    return _possibleConstructorReturn(this, (ElementService.__proto__ || _Object$getPrototypeOf(ElementService)).apply(this, arguments));
	  }

	  _createClass(ElementService, [{
	    key: 'createCanvas',


	    /**
	     * Creates an instance of a canvas element.
	     *
	     * @return {*} The newly created canvas element.
	     * @public
	     */
	    value: function createCanvas() {
	      Utilities.throwUnimplemented('ElementService', 'createCanvas');
	    }

	    /**
	     * Creates an instance of a image element.
	     *
	     * @return {*} The newly created image element.
	     * @public
	     */

	  }, {
	    key: 'createImage',
	    value: function createImage() {
	      Utilities.throwUnimplemented('ElementService', 'createImage');
	    }

	    /**
	     * @override
	     */

	  }, {
	    key: 'getName',
	    value: function getName() {
	      return 'element';
	    }

	    /**
	     * Returns whether the specified <code>element</code> is a canvas.
	     *
	     * @param {*} element - the element to be checked
	     * @return {boolean} <code>true</code> if <code>element</code> is a canvas; otherwise <code>false</code>.
	     * @public
	     */

	  }, {
	    key: 'isCanvas',
	    value: function isCanvas(element) {
	      Utilities.throwUnimplemented('ElementService', 'isCanvas');
	    }

	    /**
	     * Returns whether the specified <code>element</code> is an image.
	     *
	     * @param {*} element - the element to be checked
	     * @return {boolean} <code>true</code> if <code>element</code> is an image; otherwise <code>false</code>.
	     * @public
	     */

	  }, {
	    key: 'isImage',
	    value: function isImage(element) {
	      Utilities.throwUnimplemented('ElementService', 'isImage');
	    }
	  }]);

	  return ElementService;
	}(Service);

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/**
	 * An implementation of {@link ElementService} intended for use within a browser environment.
	 *
	 * @public
	 * @extends ElementService
	 */

	var BrowserElementService = function (_ElementService) {
	  _inherits(BrowserElementService, _ElementService);

	  function BrowserElementService() {
	    _classCallCheck(this, BrowserElementService);

	    return _possibleConstructorReturn(this, (BrowserElementService.__proto__ || _Object$getPrototypeOf(BrowserElementService)).apply(this, arguments));
	  }

	  _createClass(BrowserElementService, [{
	    key: 'createCanvas',


	    /**
	     * @override
	     */
	    value: function createCanvas() {
	      return document.createElement('canvas');
	    }

	    /**
	     * @override
	     */

	  }, {
	    key: 'createImage',
	    value: function createImage() {
	      return document.createElement('img');
	    }

	    /**
	     * @override
	     */

	  }, {
	    key: 'isCanvas',
	    value: function isCanvas(element) {
	      return element instanceof HTMLCanvasElement;
	    }

	    /**
	     * @override
	     */

	  }, {
	    key: 'isImage',
	    value: function isImage(element) {
	      return element instanceof HTMLImageElement;
	    }
	  }]);

	  return BrowserElementService;
	}(ElementService);

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/**
	 * Responsible for rendering a QR code {@link Frame} on a specific type of element.
	 *
	 * A renderer may be dependant on the rendering of another element, so the ordering of their execution is important.
	 *
	 * The rendering of a element can be deferred by disabling the renderer initially, however, any attempt get the element
	 * from the renderer will result in it being immediately enabled and the element being rendered.
	 *
	 * @public
	 */

	var Renderer = function () {

	  /**
	   * Creates a new instance of {@link Renderer} for the <code>qrious</code> instance and <code>element</code> provided.
	   *
	   * @param {QRious} qrious - the {@link QRious} instance to be used
	   * @param {*} element - the element onto which the QR code is to be rendered
	   * @param {boolean} [enabled] - <code>true</code> this {@link Renderer} is enabled; otherwise <code>false</code>.
	   * @public
	   */
	  function Renderer(qrious, element, enabled) {
	    _classCallCheck(this, Renderer);

	    /**
	     * The {@link QRious} instance.
	     *
	     * @protected
	     * @type {QRious}
	     */
	    this.qrious = qrious;

	    /**
	     * The element onto which this {@link Renderer} is rendering the QR code.
	     *
	     * @protected
	     * @type {*}
	     */
	    this.element = element;
	    this.element.qrious = qrious;

	    /**
	     * Whether this {@link Renderer} is enabled.
	     *
	     * @protected
	     * @type {boolean}
	     */
	    this.enabled = Boolean(enabled);
	  }

	  /**
	   * Draws the specified QR code <code>frame</code> on the underlying element.
	   *
	   * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.
	   *
	   * @param {Frame} frame - the {@link Frame} to be drawn
	   * @return {void}
	   * @protected
	   */


	  _createClass(Renderer, [{
	    key: 'draw',
	    value: function draw(frame) {
	      Utilities.throwUnimplemented('Renderer', 'draw');
	    }

	    /**
	     * Returns the element onto which this {@link Renderer} is rendering the QR code.
	     *
	     * If this method is called while this {@link Renderer} is disabled, it will be immediately enabled and rendered
	     * before the element is returned.
	     *
	     * @return {*} The element.
	     * @public
	     */

	  }, {
	    key: 'getElement',
	    value: function getElement() {
	      if (!this.enabled) {
	        this.enabled = true;
	        this.render();
	      }

	      return this.element;
	    }

	    /**
	     * Calculates the size (in pixel units) to represent an individual module within the QR code based on the
	     * <code>frame</code> provided.
	     *
	     * Any configured padding will be excluded from the returned size.
	     *
	     * The returned value will be at least one, even in cases where the size of the QR code does not fit its contents.
	     * This is done so that the inevitable clipping is handled more gracefully since this way at least something is
	     * displayed instead of just a blank space filled by the background color.
	     *
	     * @param {Frame} frame - the {@link Frame} from which the module size is to be derived
	     * @return {number} The pixel size for each module in the QR code which will be no less than one.
	     * @protected
	     */

	  }, {
	    key: 'getModuleSize',
	    value: function getModuleSize(frame) {
	      var qrious = this.qrious;
	      var padding = qrious.padding || 0;
	      var pixels = Math.floor((qrious.size - padding * 2) / frame.width);

	      return Math.max(1, pixels);
	    }

	    /**
	     * Calculates the offset/padding (in pixel units) to be inserted before the QR code based on the <code>frame</code>
	     * provided.
	     *
	     * The returned value will be zero if there is no available offset or if the size of the QR code does not fit its
	     * contents. It will never be a negative value. This is done so that the inevitable clipping appears more naturally
	     * and it is not clipped from all directions.
	     *
	     * @param {Frame} frame - the {@link Frame} from which the offset is to be derived
	     * @return {number} The pixel offset for the QR code which will be no less than zero.
	     * @protected
	     */

	  }, {
	    key: 'getOffset',
	    value: function getOffset(frame) {
	      var qrious = this.qrious;
	      var padding = qrious.padding;

	      if (padding != null) {
	        return padding;
	      }

	      var moduleSize = this.getModuleSize(frame);
	      var offset = Math.floor((qrious.size - moduleSize * frame.width) / 2);

	      return Math.max(0, offset);
	    }

	    /**
	     * Renders a QR code on the underlying element based on the <code>frame</code> provided.
	     *
	     * @param {Frame} frame - the {@link Frame} to be rendered
	     * @return {void}
	     * @public
	     */

	  }, {
	    key: 'render',
	    value: function render(frame) {
	      if (this.enabled) {
	        this.resize();
	        this.reset();
	        this.draw(frame);
	      }
	    }

	    /**
	     * Resets the underlying element, effectively clearing any previously rendered QR code.
	     *
	     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.
	     *
	     * @return {void}
	     * @protected
	     */

	  }, {
	    key: 'reset',
	    value: function reset() {
	      Utilities.throwUnimplemented('Renderer', 'reset');
	    }

	    /**
	     * Ensures that the size of the underlying element matches that defined on the associated {@link QRious} instance.
	     *
	     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.
	     *
	     * @return {void}
	     * @protected
	     */

	  }, {
	    key: 'resize',
	    value: function resize() {
	      Utilities.throwUnimplemented('Renderer', 'resize');
	    }
	  }]);

	  return Renderer;
	}();

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/**
	 * An implementation of {@link Renderer} for working with <code>canvas</code> elements.
	 *
	 * @public
	 * @extends Renderer
	 */

	var CanvasRenderer = function (_Renderer) {
	  _inherits(CanvasRenderer, _Renderer);

	  function CanvasRenderer() {
	    _classCallCheck(this, CanvasRenderer);

	    return _possibleConstructorReturn(this, (CanvasRenderer.__proto__ || _Object$getPrototypeOf(CanvasRenderer)).apply(this, arguments));
	  }

	  _createClass(CanvasRenderer, [{
	    key: 'draw',


	    /**
	     * @override
	     */
	    value: function draw(frame) {
	      var qrious = this.qrious;
	      var moduleSize = this.getModuleSize(frame);
	      var offset = this.getOffset(frame);
	      var context = this.element.getContext('2d');

	      context.fillStyle = qrious.foreground;
	      context.globalAlpha = qrious.foregroundAlpha;

	      for (var i = 0; i < frame.width; i++) {
	        for (var j = 0; j < frame.width; j++) {
	          if (frame.buffer[j * frame.width + i]) {
	            context.fillRect(moduleSize * i + offset, moduleSize * j + offset, moduleSize, moduleSize);
	          }
	        }
	      }
	    }

	    /**
	     * @override
	     */

	  }, {
	    key: 'reset',
	    value: function reset() {
	      var qrious = this.qrious;
	      var context = this.element.getContext('2d');
	      var size = qrious.size;

	      context.lineWidth = 1;
	      context.clearRect(0, 0, size, size);
	      context.fillStyle = qrious.background;
	      context.globalAlpha = qrious.backgroundAlpha;
	      context.fillRect(0, 0, size, size);
	    }

	    /**
	     * @override
	     */

	  }, {
	    key: 'resize',
	    value: function resize() {
	      this.element.width = this.element.height = this.qrious.size;
	    }
	  }]);

	  return CanvasRenderer;
	}(Renderer);

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/* eslint no-multi-spaces: "off" */

	/**
	 * Contains alignment pattern information.
	 *
	 * @public
	 */
	var Alignment = function () {
	  function Alignment() {
	    _classCallCheck(this, Alignment);
	  }

	  _createClass(Alignment, null, [{
	    key: "BLOCK",


	    /**
	     * Returns the alignment pattern block.
	     *
	     * @return {number[]} The alignment pattern block.
	     * @public
	     * @static
	     */
	    get: function get() {
	      return [0, 11, 15, 19, 23, 27, 31, 16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24, 26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28];
	    }
	  }]);

	  return Alignment;
	}();

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/* eslint no-multi-spaces: "off" */

	/**
	 * Contains error correction information.
	 *
	 * @public
	 */
	var ErrorCorrection = function () {
	  function ErrorCorrection() {
	    _classCallCheck(this, ErrorCorrection);
	  }

	  _createClass(ErrorCorrection, null, [{
	    key: "BLOCKS",


	    /**
	     * Returns the error correction blocks.
	     *
	     * There are four elements per version. The first two indicate the number of blocks, then the data width, and finally
	     * the ECC width.
	     *
	     * @return {number[]} The ECC blocks.
	     * @public
	     * @static
	     */
	    get: function get() {
	      return [1, 0, 19, 7, 1, 0, 16, 10, 1, 0, 13, 13, 1, 0, 9, 17, 1, 0, 34, 10, 1, 0, 28, 16, 1, 0, 22, 22, 1, 0, 16, 28, 1, 0, 55, 15, 1, 0, 44, 26, 2, 0, 17, 18, 2, 0, 13, 22, 1, 0, 80, 20, 2, 0, 32, 18, 2, 0, 24, 26, 4, 0, 9, 16, 1, 0, 108, 26, 2, 0, 43, 24, 2, 2, 15, 18, 2, 2, 11, 22, 2, 0, 68, 18, 4, 0, 27, 16, 4, 0, 19, 24, 4, 0, 15, 28, 2, 0, 78, 20, 4, 0, 31, 18, 2, 4, 14, 18, 4, 1, 13, 26, 2, 0, 97, 24, 2, 2, 38, 22, 4, 2, 18, 22, 4, 2, 14, 26, 2, 0, 116, 30, 3, 2, 36, 22, 4, 4, 16, 20, 4, 4, 12, 24, 2, 2, 68, 18, 4, 1, 43, 26, 6, 2, 19, 24, 6, 2, 15, 28, 4, 0, 81, 20, 1, 4, 50, 30, 4, 4, 22, 28, 3, 8, 12, 24, 2, 2, 92, 24, 6, 2, 36, 22, 4, 6, 20, 26, 7, 4, 14, 28, 4, 0, 107, 26, 8, 1, 37, 22, 8, 4, 20, 24, 12, 4, 11, 22, 3, 1, 115, 30, 4, 5, 40, 24, 11, 5, 16, 20, 11, 5, 12, 24, 5, 1, 87, 22, 5, 5, 41, 24, 5, 7, 24, 30, 11, 7, 12, 24, 5, 1, 98, 24, 7, 3, 45, 28, 15, 2, 19, 24, 3, 13, 15, 30, 1, 5, 107, 28, 10, 1, 46, 28, 1, 15, 22, 28, 2, 17, 14, 28, 5, 1, 120, 30, 9, 4, 43, 26, 17, 1, 22, 28, 2, 19, 14, 28, 3, 4, 113, 28, 3, 11, 44, 26, 17, 4, 21, 26, 9, 16, 13, 26, 3, 5, 107, 28, 3, 13, 41, 26, 15, 5, 24, 30, 15, 10, 15, 28, 4, 4, 116, 28, 17, 0, 42, 26, 17, 6, 22, 28, 19, 6, 16, 30, 2, 7, 111, 28, 17, 0, 46, 28, 7, 16, 24, 30, 34, 0, 13, 24, 4, 5, 121, 30, 4, 14, 47, 28, 11, 14, 24, 30, 16, 14, 15, 30, 6, 4, 117, 30, 6, 14, 45, 28, 11, 16, 24, 30, 30, 2, 16, 30, 8, 4, 106, 26, 8, 13, 47, 28, 7, 22, 24, 30, 22, 13, 15, 30, 10, 2, 114, 28, 19, 4, 46, 28, 28, 6, 22, 28, 33, 4, 16, 30, 8, 4, 122, 30, 22, 3, 45, 28, 8, 26, 23, 30, 12, 28, 15, 30, 3, 10, 117, 30, 3, 23, 45, 28, 4, 31, 24, 30, 11, 31, 15, 30, 7, 7, 116, 30, 21, 7, 45, 28, 1, 37, 23, 30, 19, 26, 15, 30, 5, 10, 115, 30, 19, 10, 47, 28, 15, 25, 24, 30, 23, 25, 15, 30, 13, 3, 115, 30, 2, 29, 46, 28, 42, 1, 24, 30, 23, 28, 15, 30, 17, 0, 115, 30, 10, 23, 46, 28, 10, 35, 24, 30, 19, 35, 15, 30, 17, 1, 115, 30, 14, 21, 46, 28, 29, 19, 24, 30, 11, 46, 15, 30, 13, 6, 115, 30, 14, 23, 46, 28, 44, 7, 24, 30, 59, 1, 16, 30, 12, 7, 121, 30, 12, 26, 47, 28, 39, 14, 24, 30, 22, 41, 15, 30, 6, 14, 121, 30, 6, 34, 47, 28, 46, 10, 24, 30, 2, 64, 15, 30, 17, 4, 122, 30, 29, 14, 46, 28, 49, 10, 24, 30, 24, 46, 15, 30, 4, 18, 122, 30, 13, 32, 46, 28, 48, 14, 24, 30, 42, 32, 15, 30, 20, 4, 117, 30, 40, 7, 47, 28, 43, 22, 24, 30, 10, 67, 15, 30, 19, 6, 118, 30, 18, 31, 47, 28, 34, 34, 24, 30, 20, 61, 15, 30];
	    }

	    /**
	     * Returns the final format bits with mask (level << 3 | mask).
	     *
	     * @return {number[]} The final format bits.
	     * @public
	     * @static
	     */

	  }, {
	    key: "FINAL_FORMAT",
	    get: function get() {
	      return [
	      // L
	      0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976,
	      // M
	      0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0,
	      // Q
	      0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed,
	      // H
	      0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b];
	    }

	    /**
	     * Returns a map of human-readable ECC levels.
	     *
	     * @return {Object<string, number>} A ECC level mapping.
	     * @public
	     * @static
	     */

	  }, {
	    key: "LEVELS",
	    get: function get() {
	      return {
	        L: 1,
	        M: 2,
	        Q: 3,
	        H: 4
	      };
	    }
	  }]);

	  return ErrorCorrection;
	}();

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/**
	 * Contains Galois field information.
	 *
	 * @public
	 */
	var Galois = function () {
	  function Galois() {
	    _classCallCheck(this, Galois);
	  }

	  _createClass(Galois, null, [{
	    key: "EXPONENT",


	    /**
	     * Returns the Galois field exponent table.
	     *
	     * @return {number[]} The Galois field exponent table.
	     * @public
	     * @static
	     */
	    get: function get() {
	      return [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1d, 0x3a, 0x74, 0xe8, 0xcd, 0x87, 0x13, 0x26, 0x4c, 0x98, 0x2d, 0x5a, 0xb4, 0x75, 0xea, 0xc9, 0x8f, 0x03, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x9d, 0x27, 0x4e, 0x9c, 0x25, 0x4a, 0x94, 0x35, 0x6a, 0xd4, 0xb5, 0x77, 0xee, 0xc1, 0x9f, 0x23, 0x46, 0x8c, 0x05, 0x0a, 0x14, 0x28, 0x50, 0xa0, 0x5d, 0xba, 0x69, 0xd2, 0xb9, 0x6f, 0xde, 0xa1, 0x5f, 0xbe, 0x61, 0xc2, 0x99, 0x2f, 0x5e, 0xbc, 0x65, 0xca, 0x89, 0x0f, 0x1e, 0x3c, 0x78, 0xf0, 0xfd, 0xe7, 0xd3, 0xbb, 0x6b, 0xd6, 0xb1, 0x7f, 0xfe, 0xe1, 0xdf, 0xa3, 0x5b, 0xb6, 0x71, 0xe2, 0xd9, 0xaf, 0x43, 0x86, 0x11, 0x22, 0x44, 0x88, 0x0d, 0x1a, 0x34, 0x68, 0xd0, 0xbd, 0x67, 0xce, 0x81, 0x1f, 0x3e, 0x7c, 0xf8, 0xed, 0xc7, 0x93, 0x3b, 0x76, 0xec, 0xc5, 0x97, 0x33, 0x66, 0xcc, 0x85, 0x17, 0x2e, 0x5c, 0xb8, 0x6d, 0xda, 0xa9, 0x4f, 0x9e, 0x21, 0x42, 0x84, 0x15, 0x2a, 0x54, 0xa8, 0x4d, 0x9a, 0x29, 0x52, 0xa4, 0x55, 0xaa, 0x49, 0x92, 0x39, 0x72, 0xe4, 0xd5, 0xb7, 0x73, 0xe6, 0xd1, 0xbf, 0x63, 0xc6, 0x91, 0x3f, 0x7e, 0xfc, 0xe5, 0xd7, 0xb3, 0x7b, 0xf6, 0xf1, 0xff, 0xe3, 0xdb, 0xab, 0x4b, 0x96, 0x31, 0x62, 0xc4, 0x95, 0x37, 0x6e, 0xdc, 0xa5, 0x57, 0xae, 0x41, 0x82, 0x19, 0x32, 0x64, 0xc8, 0x8d, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xdd, 0xa7, 0x53, 0xa6, 0x51, 0xa2, 0x59, 0xb2, 0x79, 0xf2, 0xf9, 0xef, 0xc3, 0x9b, 0x2b, 0x56, 0xac, 0x45, 0x8a, 0x09, 0x12, 0x24, 0x48, 0x90, 0x3d, 0x7a, 0xf4, 0xf5, 0xf7, 0xf3, 0xfb, 0xeb, 0xcb, 0x8b, 0x0b, 0x16, 0x2c, 0x58, 0xb0, 0x7d, 0xfa, 0xe9, 0xcf, 0x83, 0x1b, 0x36, 0x6c, 0xd8, 0xad, 0x47, 0x8e, 0x00];
	    }

	    /**
	     * Returns the Galois field log table.
	     *
	     * @return {number[]} The Galois field log table.
	     * @public
	     * @static
	     */

	  }, {
	    key: "LOG",
	    get: function get() {
	      return [0xff, 0x00, 0x01, 0x19, 0x02, 0x32, 0x1a, 0xc6, 0x03, 0xdf, 0x33, 0xee, 0x1b, 0x68, 0xc7, 0x4b, 0x04, 0x64, 0xe0, 0x0e, 0x34, 0x8d, 0xef, 0x81, 0x1c, 0xc1, 0x69, 0xf8, 0xc8, 0x08, 0x4c, 0x71, 0x05, 0x8a, 0x65, 0x2f, 0xe1, 0x24, 0x0f, 0x21, 0x35, 0x93, 0x8e, 0xda, 0xf0, 0x12, 0x82, 0x45, 0x1d, 0xb5, 0xc2, 0x7d, 0x6a, 0x27, 0xf9, 0xb9, 0xc9, 0x9a, 0x09, 0x78, 0x4d, 0xe4, 0x72, 0xa6, 0x06, 0xbf, 0x8b, 0x62, 0x66, 0xdd, 0x30, 0xfd, 0xe2, 0x98, 0x25, 0xb3, 0x10, 0x91, 0x22, 0x88, 0x36, 0xd0, 0x94, 0xce, 0x8f, 0x96, 0xdb, 0xbd, 0xf1, 0xd2, 0x13, 0x5c, 0x83, 0x38, 0x46, 0x40, 0x1e, 0x42, 0xb6, 0xa3, 0xc3, 0x48, 0x7e, 0x6e, 0x6b, 0x3a, 0x28, 0x54, 0xfa, 0x85, 0xba, 0x3d, 0xca, 0x5e, 0x9b, 0x9f, 0x0a, 0x15, 0x79, 0x2b, 0x4e, 0xd4, 0xe5, 0xac, 0x73, 0xf3, 0xa7, 0x57, 0x07, 0x70, 0xc0, 0xf7, 0x8c, 0x80, 0x63, 0x0d, 0x67, 0x4a, 0xde, 0xed, 0x31, 0xc5, 0xfe, 0x18, 0xe3, 0xa5, 0x99, 0x77, 0x26, 0xb8, 0xb4, 0x7c, 0x11, 0x44, 0x92, 0xd9, 0x23, 0x20, 0x89, 0x2e, 0x37, 0x3f, 0xd1, 0x5b, 0x95, 0xbc, 0xcf, 0xcd, 0x90, 0x87, 0x97, 0xb2, 0xdc, 0xfc, 0xbe, 0x61, 0xf2, 0x56, 0xd3, 0xab, 0x14, 0x2a, 0x5d, 0x9e, 0x84, 0x3c, 0x39, 0x53, 0x47, 0x6d, 0x41, 0xa2, 0x1f, 0x2d, 0x43, 0xd8, 0xb7, 0x7b, 0xa4, 0x76, 0xc4, 0x17, 0x49, 0xec, 0x7f, 0x0c, 0x6f, 0xf6, 0x6c, 0xa1, 0x3b, 0x52, 0x29, 0x9d, 0x55, 0xaa, 0xfb, 0x60, 0x86, 0xb1, 0xbb, 0xcc, 0x3e, 0x5a, 0xcb, 0x59, 0x5f, 0xb0, 0x9c, 0xa9, 0xa0, 0x51, 0x0b, 0xf5, 0x16, 0xeb, 0x7a, 0x75, 0x2c, 0xd7, 0x4f, 0xae, 0xd5, 0xe9, 0xe6, 0xe7, 0xad, 0xe8, 0x74, 0xd6, 0xf4, 0xea, 0xa8, 0x50, 0x58, 0xaf];
	    }
	  }]);

	  return Galois;
	}();

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/**
	 * Contains version pattern information.
	 *
	 * @public
	 */
	var Version = function () {
	  function Version() {
	    _classCallCheck(this, Version);
	  }

	  _createClass(Version, null, [{
	    key: "BLOCK",


	    /**
	     * Returns the version pattern block.
	     *
	     * @return {number[]} The version pattern block.
	     * @public
	     * @static
	     */
	    get: function get() {
	      return [0xc94, 0x5bc, 0xa99, 0x4d3, 0xbf6, 0x762, 0x847, 0x60d, 0x928, 0xb78, 0x45d, 0xa17, 0x532, 0x9a6, 0x683, 0x8c9, 0x7ec, 0xec4, 0x1e1, 0xfab, 0x08e, 0xc1a, 0x33f, 0xd75, 0x250, 0x9d5, 0x6f0, 0x8ba, 0x79f, 0xb0b, 0x42e, 0xa64, 0x541, 0xc69];
	    }
	  }]);

	  return Version;
	}();

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/**
	 * Generates information for a QR code frame based on a specific value to be encoded.
	 *
	 * @public
	 */

	var Frame = function () {
	  _createClass(Frame, null, [{
	    key: '_createArray',
	    value: function _createArray(length) {
	      var array = [];

	      for (var i = 0; i < length; i++) {
	        array[i] = 0;
	      }

	      return array;
	    }
	  }, {
	    key: '_getMaskBit',
	    value: function _getMaskBit(x, y) {
	      var bit = void 0;

	      if (x > y) {
	        bit = x;
	        x = y;
	        y = bit;
	      }

	      bit = y;
	      bit += y * y;
	      bit >>= 1;
	      bit += x;

	      return bit;
	    }
	  }, {
	    key: '_modN',
	    value: function _modN(x) {
	      while (x >= 255) {
	        x -= 255;
	        x = (x >> 8) + (x & 255);
	      }

	      return x;
	    }

	    // *Badness* coefficients.

	  }, {
	    key: 'N1',
	    get: function get() {
	      return 3;
	    }
	  }, {
	    key: 'N2',
	    get: function get() {
	      return 3;
	    }
	  }, {
	    key: 'N3',
	    get: function get() {
	      return 40;
	    }
	  }, {
	    key: 'N4',
	    get: function get() {
	      return 10;
	    }

	    /**
	     * Creates an instance of {@link Frame} based on the <code>options</code> provided.
	     *
	     * @param {Frame~Options} options - the options to be used
	     * @public
	     */

	  }]);

	  function Frame(options) {
	    _classCallCheck(this, Frame);

	    this._badness = [];
	    this._level = ErrorCorrection.LEVELS[options.level];
	    this._polynomial = [];
	    this._value = options.value;
	    this._valueLength = this._value.length;
	    this._version = 0;
	    this._stringBuffer = [];

	    var dataBlock = void 0;
	    var eccBlock = void 0;
	    var neccBlock1 = void 0;
	    var neccBlock2 = void 0;

	    while (this._version < 40) {
	      this._version++;

	      var index = (this._level - 1) * 4 + (this._version - 1) * 16;

	      neccBlock1 = ErrorCorrection.BLOCKS[index++];
	      neccBlock2 = ErrorCorrection.BLOCKS[index++];
	      dataBlock = ErrorCorrection.BLOCKS[index++];
	      eccBlock = ErrorCorrection.BLOCKS[index];

	      index = dataBlock * (neccBlock1 + neccBlock2) + neccBlock2 - 3 + (this._version <= 9);

	      if (this._valueLength <= index) {
	        break;
	      }
	    }

	    this._dataBlock = dataBlock;
	    this._eccBlock = eccBlock;
	    this._neccBlock1 = neccBlock1;
	    this._neccBlock2 = neccBlock2;

	    /**
	     * The data width is based on version.
	     *
	     * @public
	     * @type {number}
	     */
	    // FIXME: Ensure that it fits instead of being truncated.
	    this.width = 17 + 4 * this._version;

	    /**
	     * The image buffer.
	     *
	     * @public
	     * @type {number[]}
	     */
	    this.buffer = Frame._createArray(this.width * this.width);

	    this._ecc = Frame._createArray(this._dataBlock + (this._dataBlock + this._eccBlock) * (this._neccBlock1 + this._neccBlock2) + this._neccBlock2);
	    this._mask = Frame._createArray((this.width * (this.width + 1) + 1) / 2);

	    this._insertFinders();
	    this._insertAlignments();

	    // Insert single foreground cell.
	    this.buffer[8 + this.width * (this.width - 8)] = 1;

	    this._insertTimingGap();
	    this._reverseMask();
	    this._insertTimingRowAndColumn();
	    this._insertVersion();
	    this._syncMask();
	    this._convertBitStream(this._value.length);
	    this._calculatePolynomial();
	    this._appendEccToData();
	    this._interleaveBlocks();
	    this._pack();
	    this._finish();
	  }

	  _createClass(Frame, [{
	    key: '_addAlignment',
	    value: function _addAlignment(x, y) {
	      this.buffer[x + this.width * y] = 1;

	      for (var i = -2; i < 2; i++) {
	        this.buffer[x + i + this.width * (y - 2)] = 1;
	        this.buffer[x - 2 + this.width * (y + i + 1)] = 1;
	        this.buffer[x + 2 + this.width * (y + i)] = 1;
	        this.buffer[x + i + 1 + this.width * (y + 2)] = 1;
	      }

	      for (var _i = 0; _i < 2; _i++) {
	        this._setMask(x - 1, y + _i);
	        this._setMask(x + 1, y - _i);
	        this._setMask(x - _i, y - 1);
	        this._setMask(x + _i, y + 1);
	      }
	    }
	  }, {
	    key: '_appendData',
	    value: function _appendData(data, dataLength, ecc, eccLength) {
	      for (var i = 0; i < eccLength; i++) {
	        this._stringBuffer[ecc + i] = 0;
	      }

	      for (var _i2 = 0; _i2 < dataLength; _i2++) {
	        var bit = Galois.LOG[this._stringBuffer[data + _i2] ^ this._stringBuffer[ecc]];

	        if (bit !== 255) {
	          for (var j = 1; j < eccLength; j++) {
	            this._stringBuffer[ecc + j - 1] = this._stringBuffer[ecc + j] ^ Galois.EXPONENT[Frame._modN(bit + this._polynomial[eccLength - j])];
	          }
	        } else {
	          for (var _j = ecc; _j < ecc + eccLength; _j++) {
	            this._stringBuffer[_j] = this._stringBuffer[_j + 1];
	          }
	        }

	        this._stringBuffer[ecc + eccLength - 1] = bit === 255 ? 0 : Galois.EXPONENT[Frame._modN(bit + this._polynomial[0])];
	      }
	    }
	  }, {
	    key: '_appendEccToData',
	    value: function _appendEccToData() {
	      var data = 0;
	      var ecc = this._calculateMaxLength();

	      for (var i = 0; i < this._neccBlock1; i++) {
	        this._appendData(data, this._dataBlock, ecc, this._eccBlock);

	        data += this._dataBlock;
	        ecc += this._eccBlock;
	      }

	      for (var _i3 = 0; _i3 < this._neccBlock2; _i3++) {
	        this._appendData(data, this._dataBlock + 1, ecc, this._eccBlock);

	        data += this._dataBlock + 1;
	        ecc += this._eccBlock;
	      }
	    }
	  }, {
	    key: '_applyMask',
	    value: function _applyMask(mask) {
	      var width = this.width;

	      switch (mask) {
	        case 0:
	          for (var y = 0; y < width; y++) {
	            for (var x = 0; x < width; x++) {
	              if (!(x + y & 1) && !this._isMasked(x, y)) {
	                this.buffer[x + y * width] ^= 1;
	              }
	            }
	          }

	          break;
	        case 1:
	          for (var _y = 0; _y < width; _y++) {
	            for (var _x = 0; _x < width; _x++) {
	              if (!(_y & 1) && !this._isMasked(_x, _y)) {
	                this.buffer[_x + _y * width] ^= 1;
	              }
	            }
	          }

	          break;
	        case 2:
	          for (var _y2 = 0; _y2 < width; _y2++) {
	            for (var r3x = 0, _x2 = 0; _x2 < width; _x2++, r3x++) {
	              if (r3x === 3) {
	                r3x = 0;
	              }

	              if (!r3x && !this._isMasked(_x2, _y2)) {
	                this.buffer[_x2 + _y2 * width] ^= 1;
	              }
	            }
	          }

	          break;
	        case 3:
	          for (var r3y = 0, _y3 = 0; _y3 < width; _y3++, r3y++) {
	            if (r3y === 3) {
	              r3y = 0;
	            }

	            for (var _r3x = r3y, _x3 = 0; _x3 < width; _x3++, _r3x++) {
	              if (_r3x === 3) {
	                _r3x = 0;
	              }

	              if (!_r3x && !this._isMasked(_x3, _y3)) {
	                this.buffer[_x3 + _y3 * width] ^= 1;
	              }
	            }
	          }

	          break;
	        case 4:
	          for (var _y4 = 0; _y4 < width; _y4++) {
	            for (var _r3x2 = 0, _r3y = _y4 >> 1 & 1, _x4 = 0; _x4 < width; _x4++, _r3x2++) {
	              if (_r3x2 === 3) {
	                _r3x2 = 0;
	                _r3y = !_r3y;
	              }

	              if (!_r3y && !this._isMasked(_x4, _y4)) {
	                this.buffer[_x4 + _y4 * width] ^= 1;
	              }
	            }
	          }

	          break;
	        case 5:
	          for (var _r3y2 = 0, _y5 = 0; _y5 < width; _y5++, _r3y2++) {
	            if (_r3y2 === 3) {
	              _r3y2 = 0;
	            }

	            for (var _r3x3 = 0, _x5 = 0; _x5 < width; _x5++, _r3x3++) {
	              if (_r3x3 === 3) {
	                _r3x3 = 0;
	              }

	              if (!((_x5 & _y5 & 1) + !(!_r3x3 | !_r3y2)) && !this._isMasked(_x5, _y5)) {
	                this.buffer[_x5 + _y5 * width] ^= 1;
	              }
	            }
	          }

	          break;
	        case 6:
	          for (var _r3y3 = 0, _y6 = 0; _y6 < width; _y6++, _r3y3++) {
	            if (_r3y3 === 3) {
	              _r3y3 = 0;
	            }

	            for (var _r3x4 = 0, _x6 = 0; _x6 < width; _x6++, _r3x4++) {
	              if (_r3x4 === 3) {
	                _r3x4 = 0;
	              }

	              if (!((_x6 & _y6 & 1) + (_r3x4 && _r3x4 === _r3y3) & 1) && !this._isMasked(_x6, _y6)) {
	                this.buffer[_x6 + _y6 * width] ^= 1;
	              }
	            }
	          }

	          break;
	        case 7:
	          for (var _r3y4 = 0, _y7 = 0; _y7 < width; _y7++, _r3y4++) {
	            if (_r3y4 === 3) {
	              _r3y4 = 0;
	            }

	            for (var _r3x5 = 0, _x7 = 0; _x7 < width; _x7++, _r3x5++) {
	              if (_r3x5 === 3) {
	                _r3x5 = 0;
	              }

	              if (!((_r3x5 && _r3x5 === _r3y4) + (_x7 + _y7 & 1) & 1) && !this._isMasked(_x7, _y7)) {
	                this.buffer[_x7 + _y7 * width] ^= 1;
	              }
	            }
	          }

	          break;
	      }
	    }
	  }, {
	    key: '_calculateMaxLength',
	    value: function _calculateMaxLength() {
	      return this._dataBlock * (this._neccBlock1 + this._neccBlock2) + this._neccBlock2;
	    }
	  }, {
	    key: '_calculatePolynomial',
	    value: function _calculatePolynomial() {
	      this._polynomial[0] = 1;

	      for (var i = 0; i < this._eccBlock; i++) {
	        this._polynomial[i + 1] = 1;

	        for (var j = i; j > 0; j--) {
	          this._polynomial[j] = this._polynomial[j] ? this._polynomial[j - 1] ^ Galois.EXPONENT[Frame._modN(Galois.LOG[this._polynomial[j]] + i)] : this._polynomial[j - 1];
	        }

	        this._polynomial[0] = Galois.EXPONENT[Frame._modN(Galois.LOG[this._polynomial[0]] + i)];
	      }

	      // Use logs for generator polynomial to save calculation step.
	      for (var _i4 = 0; _i4 <= this._eccBlock; _i4++) {
	        this._polynomial[_i4] = Galois.LOG[this._polynomial[_i4]];
	      }
	    }
	  }, {
	    key: '_checkBadness',
	    value: function _checkBadness() {
	      var bad = 0;
	      var width = this.width;

	      // Blocks of same colour.
	      for (var y = 0; y < width - 1; y++) {
	        for (var x = 0; x < width - 1; x++) {
	          // All foreground colour.
	          if (this.buffer[x + width * y] && this.buffer[x + 1 + width * y] && this.buffer[x + width * (y + 1)] && this.buffer[x + 1 + width * (y + 1)] ||
	          // All background colour.
	          !(this.buffer[x + width * y] || this.buffer[x + 1 + width * y] || this.buffer[x + width * (y + 1)] || this.buffer[x + 1 + width * (y + 1)])) {
	            bad += Frame.N2;
	          }
	        }
	      }

	      var bw = 0;

	      // X runs.
	      for (var _y8 = 0; _y8 < width; _y8++) {
	        var h = 0;

	        this._badness[0] = 0;

	        for (var b = 0, _x8 = 0; _x8 < width; _x8++) {
	          var b1 = this.buffer[_x8 + width * _y8];

	          if (b === b1) {
	            this._badness[h]++;
	          } else {
	            this._badness[++h] = 1;
	          }

	          b = b1;
	          bw += b ? 1 : -1;
	        }

	        bad += this._getBadness(h);
	      }

	      if (bw < 0) {
	        bw = -bw;
	      }

	      var count = 0;
	      var big = bw;
	      big += big << 2;
	      big <<= 1;

	      while (big > width * width) {
	        big -= width * width;
	        count++;
	      }

	      bad += count * Frame.N4;

	      // Y runs.
	      for (var _x9 = 0; _x9 < width; _x9++) {
	        var _h = 0;

	        this._badness[0] = 0;

	        for (var _b = 0, _y9 = 0; _y9 < width; _y9++) {
	          var _b2 = this.buffer[_x9 + width * _y9];

	          if (_b === _b2) {
	            this._badness[_h]++;
	          } else {
	            this._badness[++_h] = 1;
	          }

	          _b = _b2;
	        }

	        bad += this._getBadness(_h);
	      }

	      return bad;
	    }
	  }, {
	    key: '_convertBitStream',
	    value: function _convertBitStream(length) {
	      // Convert string to bit stream. 8-bit data to QR-coded 8-bit data (numeric, alphanumeric, or kanji not supported).
	      for (var i = 0; i < length; i++) {
	        this._ecc[i] = this._value.charCodeAt(i);
	      }

	      this._stringBuffer = this._ecc.slice(0);

	      var maxLength = this._calculateMaxLength();

	      if (length >= maxLength - 2) {
	        length = maxLength - 2;

	        if (this._version > 9) {
	          length--;
	        }
	      }

	      // Shift and re-pack to insert length prefix.
	      var index = length;

	      if (this._version > 9) {
	        this._stringBuffer[index + 2] = 0;
	        this._stringBuffer[index + 3] = 0;

	        while (index--) {
	          var bit = this._stringBuffer[index];

	          this._stringBuffer[index + 3] |= 255 & bit << 4;
	          this._stringBuffer[index + 2] = bit >> 4;
	        }

	        this._stringBuffer[2] |= 255 & length << 4;
	        this._stringBuffer[1] = length >> 4;
	        this._stringBuffer[0] = 0x40 | length >> 12;
	      } else {
	        this._stringBuffer[index + 1] = 0;
	        this._stringBuffer[index + 2] = 0;

	        while (index--) {
	          var _bit = this._stringBuffer[index];

	          this._stringBuffer[index + 2] |= 255 & _bit << 4;
	          this._stringBuffer[index + 1] = _bit >> 4;
	        }

	        this._stringBuffer[1] |= 255 & length << 4;
	        this._stringBuffer[0] = 0x40 | length >> 4;
	      }

	      // Fill to end with pad pattern.
	      index = length + 3 - (this._version < 10);

	      while (index < maxLength) {
	        this._stringBuffer[index++] = 0xec;
	        this._stringBuffer[index++] = 0x11;
	      }
	    }
	  }, {
	    key: '_getBadness',
	    value: function _getBadness(length) {
	      var badRuns = 0;

	      for (var i = 0; i <= length; i++) {
	        if (this._badness[i] >= 5) {
	          badRuns += Frame.N1 + this._badness[i] - 5;
	        }
	      }

	      // FBFFFBF as in finder.
	      for (var _i5 = 3; _i5 < length - 1; _i5 += 2) {
	        if (this._badness[_i5 - 2] === this._badness[_i5 + 2] && this._badness[_i5 + 2] === this._badness[_i5 - 1] && this._badness[_i5 - 1] === this._badness[_i5 + 1] && this._badness[_i5 - 1] * 3 === this._badness[_i5] && (
	        // Background around the foreground pattern? Not part of the specs.
	        this._badness[_i5 - 3] === 0 || _i5 + 3 > length || this._badness[_i5 - 3] * 3 >= this._badness[_i5] * 4 || this._badness[_i5 + 3] * 3 >= this._badness[_i5] * 4)) {
	          badRuns += Frame.N3;
	        }
	      }

	      return badRuns;
	    }
	  }, {
	    key: '_finish',
	    value: function _finish() {
	      // Save pre-mask copy of frame.
	      this._stringBuffer = this.buffer.slice(0);

	      var bit = 0;
	      var i = void 0;
	      var mask = 30000;

	      /*
	       * Using for instead of while since in original Arduino code if an early mask was "good enough" it wouldn't try for
	       * a better one since they get more complex and take longer.
	       */
	      for (i = 0; i < 8; i++) {
	        // Returns foreground-background imbalance.
	        this._applyMask(i);

	        var currentMask = this._checkBadness();

	        // Is current mask better than previous best?
	        if (currentMask < mask) {
	          mask = currentMask;
	          bit = i;
	        }

	        // Don't increment "i" to a void redoing mask.
	        if (bit === 7) {
	          break;
	        }

	        // Reset for next pass.
	        this.buffer = this._stringBuffer.slice(0);
	      }

	      // Redo best mask as none were "good enough" (i.e. last wasn't bit).
	      if (bit !== i) {
	        this._applyMask(bit);
	      }

	      // Add in final mask/ECC level bytes.
	      mask = ErrorCorrection.FINAL_FORMAT[bit + (this._level - 1 << 3)];

	      // Low byte.
	      for (i = 0; i < 8; i++, mask >>= 1) {
	        if (mask & 1) {
	          this.buffer[this.width - 1 - i + this.width * 8] = 1;

	          if (i < 6) {
	            this.buffer[8 + this.width * i] = 1;
	          } else {
	            this.buffer[8 + this.width * (i + 1)] = 1;
	          }
	        }
	      }

	      // High byte.
	      for (i = 0; i < 7; i++, mask >>= 1) {
	        if (mask & 1) {
	          this.buffer[8 + this.width * (this.width - 7 + i)] = 1;

	          if (i) {
	            this.buffer[6 - i + this.width * 8] = 1;
	          } else {
	            this.buffer[7 + this.width * 8] = 1;
	          }
	        }
	      }
	    }
	  }, {
	    key: '_interleaveBlocks',
	    value: function _interleaveBlocks() {
	      var maxLength = this._calculateMaxLength();
	      var i = void 0;
	      var k = 0;

	      for (i = 0; i < this._dataBlock; i++) {
	        for (var j = 0; j < this._neccBlock1; j++) {
	          this._ecc[k++] = this._stringBuffer[i + j * this._dataBlock];
	        }

	        for (var _j2 = 0; _j2 < this._neccBlock2; _j2++) {
	          this._ecc[k++] = this._stringBuffer[this._neccBlock1 * this._dataBlock + i + _j2 * (this._dataBlock + 1)];
	        }
	      }

	      for (var _j3 = 0; _j3 < this._neccBlock2; _j3++) {
	        this._ecc[k++] = this._stringBuffer[this._neccBlock1 * this._dataBlock + i + _j3 * (this._dataBlock + 1)];
	      }

	      for (i = 0; i < this._eccBlock; i++) {
	        for (var _j4 = 0; _j4 < this._neccBlock1 + this._neccBlock2; _j4++) {
	          this._ecc[k++] = this._stringBuffer[maxLength + i + _j4 * this._eccBlock];
	        }
	      }

	      this._stringBuffer = this._ecc;
	    }
	  }, {
	    key: '_insertAlignments',
	    value: function _insertAlignments() {
	      var width = this.width;

	      if (this._version > 1) {
	        var i = Alignment.BLOCK[this._version];
	        var y = width - 7;

	        for (;;) {
	          var x = width - 7;

	          while (x > i - 3) {
	            this._addAlignment(x, y);

	            if (x < i) {
	              break;
	            }

	            x -= i;
	          }

	          if (y <= i + 9) {
	            break;
	          }

	          y -= i;

	          this._addAlignment(6, y);
	          this._addAlignment(y, 6);
	        }
	      }
	    }
	  }, {
	    key: '_insertFinders',
	    value: function _insertFinders() {
	      var width = this.width;

	      for (var i = 0; i < 3; i++) {
	        var j = 0;
	        var y = 0;

	        if (i === 1) {
	          j = width - 7;
	        }
	        if (i === 2) {
	          y = width - 7;
	        }

	        this.buffer[y + 3 + width * (j + 3)] = 1;

	        for (var x = 0; x < 6; x++) {
	          this.buffer[y + x + width * j] = 1;
	          this.buffer[y + width * (j + x + 1)] = 1;
	          this.buffer[y + 6 + width * (j + x)] = 1;
	          this.buffer[y + x + 1 + width * (j + 6)] = 1;
	        }

	        for (var _x10 = 1; _x10 < 5; _x10++) {
	          this._setMask(y + _x10, j + 1);
	          this._setMask(y + 1, j + _x10 + 1);
	          this._setMask(y + 5, j + _x10);
	          this._setMask(y + _x10 + 1, j + 5);
	        }

	        for (var _x11 = 2; _x11 < 4; _x11++) {
	          this.buffer[y + _x11 + width * (j + 2)] = 1;
	          this.buffer[y + 2 + width * (j + _x11 + 1)] = 1;
	          this.buffer[y + 4 + width * (j + _x11)] = 1;
	          this.buffer[y + _x11 + 1 + width * (j + 4)] = 1;
	        }
	      }
	    }
	  }, {
	    key: '_insertTimingGap',
	    value: function _insertTimingGap() {
	      var width = this.width;

	      for (var y = 0; y < 7; y++) {
	        this._setMask(7, y);
	        this._setMask(width - 8, y);
	        this._setMask(7, y + width - 7);
	      }

	      for (var x = 0; x < 8; x++) {
	        this._setMask(x, 7);
	        this._setMask(x + width - 8, 7);
	        this._setMask(x, width - 8);
	      }
	    }
	  }, {
	    key: '_insertTimingRowAndColumn',
	    value: function _insertTimingRowAndColumn() {
	      var width = this.width;

	      for (var x = 0; x < width - 14; x++) {
	        if (x & 1) {
	          this._setMask(8 + x, 6);
	          this._setMask(6, 8 + x);
	        } else {
	          this.buffer[8 + x + width * 6] = 1;
	          this.buffer[6 + width * (8 + x)] = 1;
	        }
	      }
	    }
	  }, {
	    key: '_insertVersion',
	    value: function _insertVersion() {
	      var width = this.width;

	      if (this._version > 6) {
	        var i = Version.BLOCK[this._version - 7];
	        var j = 17;

	        for (var x = 0; x < 6; x++) {
	          for (var y = 0; y < 3; y++, j--) {
	            if (1 & (j > 11 ? this._version >> j - 12 : i >> j)) {
	              this.buffer[5 - x + width * (2 - y + width - 11)] = 1;
	              this.buffer[2 - y + width - 11 + width * (5 - x)] = 1;
	            } else {
	              this._setMask(5 - x, 2 - y + width - 11);
	              this._setMask(2 - y + width - 11, 5 - x);
	            }
	          }
	        }
	      }
	    }
	  }, {
	    key: '_isMasked',
	    value: function _isMasked(x, y) {
	      var bit = Frame._getMaskBit(x, y);

	      return this._mask[bit] === 1;
	    }
	  }, {
	    key: '_pack',
	    value: function _pack() {
	      var x = this.width - 1;
	      var y = this.width - 1;
	      var k = 1;
	      var v = 1;

	      // Interleaved data and ECC codes.
	      var length = (this._dataBlock + this._eccBlock) * (this._neccBlock1 + this._neccBlock2) + this._neccBlock2;

	      for (var i = 0; i < length; i++) {
	        var bit = this._stringBuffer[i];

	        for (var j = 0; j < 8; j++, bit <<= 1) {
	          if (0x80 & bit) {
	            this.buffer[x + this.width * y] = 1;
	          }

	          // Find next fill position.
	          do {
	            if (v) {
	              x--;
	            } else {
	              x++;

	              if (k) {
	                if (y !== 0) {
	                  y--;
	                } else {
	                  x -= 2;
	                  k = !k;

	                  if (x === 6) {
	                    x--;
	                    y = 9;
	                  }
	                }
	              } else if (y !== this.width - 1) {
	                y++;
	              } else {
	                x -= 2;
	                k = !k;

	                if (x === 6) {
	                  x--;
	                  y -= 8;
	                }
	              }
	            }

	            v = !v;
	          } while (this._isMasked(x, y));
	        }
	      }
	    }
	  }, {
	    key: '_reverseMask',
	    value: function _reverseMask() {
	      var width = this.width;

	      for (var x = 0; x < 9; x++) {
	        this._setMask(x, 8);
	      }

	      for (var _x12 = 0; _x12 < 8; _x12++) {
	        this._setMask(_x12 + width - 8, 8);
	        this._setMask(8, _x12);
	      }

	      for (var y = 0; y < 7; y++) {
	        this._setMask(8, y + width - 7);
	      }
	    }
	  }, {
	    key: '_setMask',
	    value: function _setMask(x, y) {
	      var bit = Frame._getMaskBit(x, y);

	      this._mask[bit] = 1;
	    }
	  }, {
	    key: '_syncMask',
	    value: function _syncMask() {
	      var width = this.width;

	      for (var y = 0; y < width; y++) {
	        for (var x = 0; x <= y; x++) {
	          if (this.buffer[x + width * y]) {
	            this._setMask(x, y);
	          }
	        }
	      }
	    }
	  }]);

	  return Frame;
	}();



	/**
	 * The options used by {@link Frame}.
	 *
	 * @typedef {Object} Frame~Options
	 * @property {string} level - The ECC level to be used.
	 * @property {string} value - The value to be encoded.
	 */

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/**
	 * An implementation of {@link Renderer} for working with <code>img</code> elements.
	 *
	 * This depends on {@link CanvasRenderer} being executed first as this implementation simply applies the data URL from
	 * the rendered <code>canvas</code> element as the <code>src</code> for the <code>img</code> element being rendered.
	 *
	 * @public
	 * @extends Renderer
	 */

	var ImageRenderer = function (_Renderer) {
	  _inherits(ImageRenderer, _Renderer);

	  function ImageRenderer() {
	    _classCallCheck(this, ImageRenderer);

	    return _possibleConstructorReturn(this, (ImageRenderer.__proto__ || _Object$getPrototypeOf(ImageRenderer)).apply(this, arguments));
	  }

	  _createClass(ImageRenderer, [{
	    key: 'draw',


	    /**
	     * @override
	     */
	    value: function draw() {
	      this.element.src = this.qrious.toDataURL();
	    }

	    /**
	     * @override
	     */

	  }, {
	    key: 'reset',
	    value: function reset() {
	      this.element.src = '';
	    }

	    /**
	     * @override
	     */

	  }, {
	    key: 'resize',
	    value: function resize() {
	      this.element.width = this.element.height = this.qrious.size;
	    }
	  }]);

	  return ImageRenderer;
	}(Renderer);

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/**
	 * Defines an available option while also configuring how values are applied to the target object.
	 *
	 * While a value associated with an option can be changed on the target object, the option definition itself is
	 * immutable.
	 *
	 * @public
	 */
	var Option = function () {

	  /**
	   * Creates a new instance of {@link Option} based on the <code>name</code> provided.
	   *
	   * Optionally, a <code>defaultValue</code> can be specified as well a <code>valueTransformer</code> and
	   * <code>fieldNameResolver</code> for greater control over how the option value is applied.
	   *
	   * If no <code>valueTransformer</code> is specified, then any specified option will be applied directly.
	   *
	   * If no <code>fieldNameResolver</code> is specified, then the field name will be resolved to <code>name</code>
	   * prefixed with a single underscore when the option is applied.
	   *
	   * @param {string} name - the name to be used
	   * @param {*} [defaultValue] - the default value to be used
	   * @param {Option~ValueTransformer} [valueTransformer] - the value transformer to be used
	   * @param {Option~FieldNameResolver} [fieldNameResolver] - the field name resolver to be used
	   * @public
	   */
	  function Option(name, defaultValue, valueTransformer, fieldNameResolver) {
	    _classCallCheck(this, Option);

	    this._name = name;
	    this._defaultValue = defaultValue;
	    this._valueTransformer = valueTransformer;
	    this._fieldName = typeof fieldNameResolver === 'function' ? fieldNameResolver(this) : '_' + name;
	  }

	  /**
	   * Transforms the specified <code>value</code> so that it can be applied for this {@link Option}.
	   *
	   * If a value transformer has been specified for this {@link Option}, it will be called upon to transform
	   * <code>value</code>. Otherwise, <code>value</code> will be returned directly.
	   *
	   * @param {*} value - the value to be transformed
	   * @return {*} The transformed value or <code>value</code> if no value transformer is specified.
	   * @public
	   */


	  _createClass(Option, [{
	    key: 'transform',
	    value: function transform(value) {
	      var transformer = this._valueTransformer;
	      if (typeof transformer === 'function') {
	        return transformer(value, this);
	      }

	      return value;
	    }

	    /**
	     * Returns the field name for this {@link Option}.
	     *
	     * @return {string} The field name.
	     * @public
	     */

	  }, {
	    key: 'fieldName',
	    get: function get() {
	      return this._fieldName;
	    }

	    /**
	     * Returns the name for this {@link Option}.
	     *
	     * @return {string} The name.
	     * @public
	     */

	  }, {
	    key: 'name',
	    get: function get() {
	      return this._name;
	    }

	    /**
	     * Returns the default value for this {@link Option}.
	     *
	     * @return {*} The default value.
	     * @public
	     */

	  }, {
	    key: 'defaultValue',
	    get: function get() {
	      return this._defaultValue;
	    }
	  }]);

	  return Option;
	}();



	/**
	 * Returns the field name to which the specified <code>option</code> is associated on the target object.
	 *
	 * The resolved name will be used to identify the field that values for <code>option</code> are to be read from and
	 * written to.
	 *
	 * This function will only called once for <code>option</code>, upon initialization.
	 *
	 * @callback Option~FieldNameResolver
	 * @param {Option} option - the {@link Option} whose field name is to be resolved
	 * @return {string} The resolved field name for <code>option</code>.
	 */

	/**
	 * Returns a transformed value for the specified <code>value</code> to be applied for the <code>option</code> provided.
	 *
	 * @callback Option~ValueTransformer
	 * @param {*} value - the value to be transformed
	 * @param {Option} option - the {@link Option} for which <code>value</code> is being transformed
	 * @return {*} The transform value.
	 */

	var isEnum$1    = _objectPie.f;
	var _objectToArray = function(isEntries){
	  return function(it){
	    var O      = _toIobject(it)
	      , keys   = _objectKeys(O)
	      , length = keys.length
	      , i      = 0
	      , result = []
	      , key;
	    while(length > i)if(isEnum$1.call(O, key = keys[i++])){
	      result.push(isEntries ? [key, O[key]] : O[key]);
	    } return result;
	  };
	};

	// https://github.com/tc39/proposal-object-values-entries
	var $values = _objectToArray(false);

	_export(_export.S, 'Object', {
	  values: function values(it){
	    return $values(it);
	  }
	});

	var values$1 = _core.Object.values;

	var values = createCommonjsModule(function (module) {
	module.exports = { "default": values$1, __esModule: true };
	});

	var _Object$values = unwrapExports(values);

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/**
	 * Manages multiple {@link Option} instances that are intended to be used by multiple implementations.
	 *
	 * Although the option definitions are shared between targets, the values are maintained on the targets themselves.
	 *
	 * While a value associated with each option can be changed on the target objects, the manager and the option
	 * definitions themselves are immutable.
	 *
	 * @public
	 */

	var OptionManager = function () {
	  _createClass(OptionManager, null, [{
	    key: '_get',
	    value: function _get(option, target) {
	      return target[option.fieldName];
	    }
	  }, {
	    key: '_set',
	    value: function _set(option, value, target) {
	      var fieldName = option.fieldName;
	      var oldValue = target[fieldName];
	      var newValue = option.transform(value != null ? value : option.defaultValue);

	      target[fieldName] = newValue;

	      return newValue !== oldValue;
	    }

	    /**
	     * Creates a new instance of {@link OptionManager} for the specified available <code>options</code>.
	     *
	     * @param {Option[]} options - the options to be used
	     * @public
	     */

	  }]);

	  function OptionManager(options) {
	    var _this = this;

	    _classCallCheck(this, OptionManager);

	    this._options = {};

	    options.forEach(function (option) {
	      _this._options[option.name] = option;
	    });
	  }

	  /**
	   * Sets the default values for all of the available options on the <code>target</code> object provided.
	   *
	   * @param {Object} target - the object on which the default values are to be set for each available option
	   * @return {void}
	   * @public
	   */


	  _createClass(OptionManager, [{
	    key: 'applyDefaults',
	    value: function applyDefaults(target) {
	      var options = this._options;

	      for (var name in options) {
	        if (Utilities.hasOwn(options, name)) {
	          var option = options[name];

	          OptionManager._set(option, option.defaultValue, target);
	        }
	      }
	    }

	    /**
	     * Returns whether an option with the specified <code>name</code> is available.
	     *
	     * @param {string} name - the name of the {@link Option} whose existence is to be checked
	     * @return {boolean} <code>true</code> if an {@link Option} exists with <code>name</code>; otherwise
	     * <code>false</code>.
	     * @public
	     */

	  }, {
	    key: 'exists',
	    value: function exists(name) {
	      return this._options[name] != null;
	    }

	    /**
	     * Returns the value of the option with the specified <code>name</code> on the <code>target</code> object provided.
	     *
	     * @param {string} name - the name of the {@link Option} whose value on <code>target</code> is to be returned
	     * @param {Object} target - the object from which the value of the named {@link Option} is to be returned
	     * @return {*} The value of the {@link Option} with <code>name</code> on <code>target</code>.
	     * @public
	     */

	  }, {
	    key: 'get',
	    value: function get(name, target) {
	      return OptionManager._get(this._options[name], target);
	    }

	    /**
	     * Returns a copy of all of the available options on the <code>target</code> object provided.
	     *
	     * @param {Object} target - the object from which the option name/value pairs are to be returned
	     * @return {Object.<string, *>} A hash containing the name/value pairs of all options on <code>target</code>.
	     * @public
	     */

	  }, {
	    key: 'getAll',
	    value: function getAll(target) {
	      var options = this._options;
	      var result = {};

	      for (var name in options) {
	        if (Utilities.hasOwn(options, name)) {
	          result[name] = OptionManager._get(options[name], target);
	        }
	      }

	      return result;
	    }

	    /**
	     * Sets the value of the option with the specified <code>name</code> on the <code>target</code> object provided to
	     * <code>value</code>.
	     *
	     * This method will throw an error if <code>name</code> does not match an available option.
	     *
	     * If <code>value</code> is <code>null</code> and the {@link Option} has a default value configured, then that default
	     * value will be used instead. If the {@link Option} also has a value transformer configured, it will be used to
	     * transform whichever value was determined to be used.
	     *
	     * This method returns whether the value of the underlying field on <code>target</code> was changed as a result.
	     *
	     * @param {string} name - the name of the {@link Option} whose value is to be set
	     * @param {*} value - the value to be set for the named {@link Option} on <code>target</code>
	     * @param {Object} target - the object on which <code>value</code> is to be set for the named {@link Option}
	     * @return {boolean} <code>true</code> if the underlying field on <code>target</code> was changed; otherwise
	     * <code>false</code>.
	     * @throws {Error} If no {@link Option} is being managed with <code>name</code>.
	     * @public
	     */

	  }, {
	    key: 'set',
	    value: function set(name, value, target) {
	      var option = this._options[name];
	      if (!option) {
	        throw new Error('Invalid option: ' + name);
	      }

	      return OptionManager._set(option, value, target);
	    }

	    /**
	     * Sets all of the specified <code>options</code> on the <code>target</code> object provided to their corresponding
	     * values.
	     *
	     * This method will throw an error if any of the names within <code>options</code> does not match an available option.
	     *
	     * If any value within <code>options</code> is <code>null</code> and the corresponding {@link Option} has a default
	     * value configured, then that default value will be used instead. If an {@link Option} also has a value transformer
	     * configured, it will be used to transform whichever value was determined to be used.
	     *
	     * This method returns whether the value for any of the underlying fields on <code>target</code> were changed as a
	     * result.
	     *
	     * @param {Object.<string, *>} options - the name/value pairs of options to be set
	     * @param {Object} target - the object on which the options are to be set
	     * @return {boolean} <code>true</code> if any of the underlying fields on <code>target</code> were changed; otherwise
	     * <code>false</code>.
	     * @throws {Error} If no {@link Option} is being managed with for any of the names within <code>options</code>.
	     * @public
	     */

	  }, {
	    key: 'setAll',
	    value: function setAll(options, target) {
	      if (!options) {
	        return false;
	      }

	      var changed = false;

	      for (var name in options) {
	        if (Utilities.hasOwn(options, name) && this.set(name, options[name], target)) {
	          changed = true;
	        }
	      }

	      return changed;
	    }

	    /**
	     * Returns a copy of the available options for this {@link OptionManager}.
	     *
	     * @return {Option[]} The available options.
	     * @public
	     */

	  }, {
	    key: 'options',
	    get: function get() {
	      return _Object$values(this._options);
	    }
	  }]);

	  return OptionManager;
	}();

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	/**
	 * A basic manager for {@link Service} implementations that are mapped to simple names.
	 *
	 * @public
	 */
	var ServiceManager = function () {

	  /**
	   * Creates a new instance of {@link ServiceManager}.
	   *
	   * @public
	   */
	  function ServiceManager() {
	    _classCallCheck(this, ServiceManager);

	    this._services = {};
	  }

	  /**
	   * Returns the {@link Service} being managed with the specified <code>name</code>.
	   *
	   * @param {string} name - the name of the {@link Service} to be returned
	   * @return {Service} The {@link Service} is being managed with <code>name</code>.
	   * @throws {Error} If no {@link Service} is being managed with <code>name</code>.
	   * @public
	   */


	  _createClass(ServiceManager, [{
	    key: "getService",
	    value: function getService(name) {
	      var service = this._services[name];
	      if (!service) {
	        throw new Error("Service is not being managed with name: " + name);
	      }

	      return service;
	    }

	    /**
	     * Sets the {@link Service} implementation to be managed for the specified <code>name</code> to the
	     * <code>service</code> provided.
	     *
	     * @param {string} name - the name of the {@link Service} to be managed with <code>name</code>
	     * @param {Service} service - the {@link Service} implementation to be managed
	     * @return {void}
	     * @throws {Error} If a {@link Service} is already being managed with the same <code>name</code>.
	     * @public
	     */

	  }, {
	    key: "setService",
	    value: function setService(name, service) {
	      if (this._services[name]) {
	        throw new Error("Service is already managed with name: " + name);
	      }

	      if (service) {
	        this._services[name] = service;
	      }
	    }
	  }]);

	  return ServiceManager;
	}();

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	var optionManager = new OptionManager([new Option('background', 'white'), new Option('backgroundAlpha', 1, Utilities.abs), new Option('element'), new Option('foreground', 'black'), new Option('foregroundAlpha', 1, Utilities.abs), new Option('level', 'L', Utilities.toUpperCase), new Option('mime', 'image/png'), new Option('padding', null, Utilities.abs), new Option('size', 100, Utilities.abs), new Option('value', '')]);
	var serviceManager = new ServiceManager();

	/**
	 * Enables configuration of a QR code generator which uses HTML5 <code>canvas</code> for rendering.
	 *
	 * @public
	 */

	var QRious$1 = function () {
	  _createClass(QRious, null, [{
	    key: 'use',


	    /**
	     * Configures the <code>service</code> provided to be used by all {@link QRious} instances.
	     *
	     * @param {Service} service - the {@link Service} to be configured
	     * @return {void}
	     * @throws {Error} If a {@link Service} has already been configured with the same name.
	     * @public
	     * @static
	     */
	    value: function use(service) {
	      serviceManager.setService(service.getName(), service);
	    }

	    /**
	     * Creates a new instance of {@link QRious} based on the <code>options</code> provided.
	     *
	     * @param {QRious~Options} [options] - the options to be used
	     * @throws {Error} If any <code>options</code> are invalid.
	     * @public
	     */

	  }, {
	    key: 'DEFAULTS',


	    /**
	     * Returns the default options for {@link QRious}.
	     *
	     * @return {QRious~Options} The default options.
	     * @deprecated Since 2.3.0
	     * @public
	     * @static
	     */
	    get: function get() {
	      var result = {};

	      optionManager.options.forEach(function (option) {
	        result[option.name] = option.defaultValue;
	      });

	      return result;
	    }

	    /**
	     * Returns the current version of {@link QRious}.
	     *
	     * @return {string} The current version.
	     * @public
	     * @static
	     */

	  }, {
	    key: 'VERSION',
	    get: function get() {
	      return '2.3.0';
	    }
	  }]);

	  function QRious(options) {
	    _classCallCheck(this, QRious);

	    optionManager.applyDefaults(this);
	    optionManager.setAll(options, this);

	    var element = optionManager.get('element', this);
	    var elementService = serviceManager.getService('element');
	    var canvas = element && elementService.isCanvas(element) ? element : elementService.createCanvas();
	    var image = element && elementService.isImage(element) ? element : elementService.createImage();

	    this._canvasRenderer = new CanvasRenderer(this, canvas, true);
	    this._imageRenderer = new ImageRenderer(this, image, image === element);

	    this.update();
	  }

	  /**
	   * Returns all of the options configured for this {@link QRious}.
	   *
	   * Any changes made to the returned object will not be reflected in the options themselves or their corresponding
	   * underlying fields.
	   *
	   * @return {Object.<string, *>} A copy of the applied options.
	   * @public
	   */


	  _createClass(QRious, [{
	    key: 'get',
	    value: function get() {
	      return optionManager.getAll(this);
	    }

	    /**
	     * Sets all of the specified <code>options</code> and automatically updates this {@link QRious} if any of the
	     * underlying fields are changed as a result.
	     *
	     * This is the preferred method for updating multiple options at one time to avoid unnecessary updates between
	     * changes.
	     *
	     * @param {QRious~Options} options - the options to be set
	     * @return {void}
	     * @throws {Error} If any <code>options</code> are invalid.
	     * @public
	     */

	  }, {
	    key: 'set',
	    value: function set(options) {
	      if (optionManager.setAll(options, this)) {
	        this.update();
	      }
	    }

	    /**
	     * Returns the image data URI for the generated QR code using the <code>mime</code> provided.
	     *
	     * @param {string} [mime] - the MIME type for the image
	     * @return {string} The image data URI for the QR code.
	     * @public
	     */

	  }, {
	    key: 'toDataURL',
	    value: function toDataURL(mime) {
	      return this.canvas.toDataURL(mime || this.mime);
	    }

	    /**
	     * Updates this {@link QRious} by generating a new {@link Frame} and re-rendering the QR code.
	     *
	     * @return {void}
	     * @protected
	     */

	  }, {
	    key: 'update',
	    value: function update() {
	      var frame = new Frame({
	        level: this.level,
	        value: this.value
	      });

	      this._canvasRenderer.render(frame);
	      this._imageRenderer.render(frame);
	    }

	    /**
	     * Returns the background color for the QR code.
	     *
	     * @return {string} The background color.
	     * @public
	     */

	  }, {
	    key: 'background',
	    get: function get() {
	      return optionManager.get('background', this);
	    }

	    /**
	     * Sets the background color for the QR code to <code>background</code> and automatically updates this {@link QRious}
	     * if the underlying field is changed as a result.
	     *
	     * @param {string} [background="white"] - the background color to be set
	     * @public
	     */
	    ,
	    set: function set(background) {
	      if (optionManager.set('background', background, this)) {
	        this.update();
	      }
	    }

	    /**
	     * Returns the background alpha for the QR code.
	     *
	     * @return {number} The background alpha.
	     * @public
	     */

	  }, {
	    key: 'backgroundAlpha',
	    get: function get() {
	      return optionManager.get('backgroundAlpha', this);
	    }

	    /**
	     * Sets the background alpha for the QR code to <code>backgroundAlpha</code> and automatically updates this
	     * {@link QRious} if the underlying field is changed as a result.
	     *
	     * @param {number} [backgroundAlpha=1] - the background alpha to be set
	     * @public
	     */
	    ,
	    set: function set(backgroundAlpha) {
	      if (optionManager.set('backgroundAlpha', backgroundAlpha, this)) {
	        this.update();
	      }
	    }

	    /**
	     * Returns the <code>canvas</code> element being used to render the QR code for this {@link QRious}.
	     *
	     * @return {*} The <code>canvas</code> element.
	     * @public
	     */

	  }, {
	    key: 'canvas',
	    get: function get() {
	      return this._canvasRenderer.getElement();
	    }

	    /**
	     * Returns the foreground color for the QR code.
	     *
	     * @return {string} The foreground color.
	     * @public
	     */

	  }, {
	    key: 'foreground',
	    get: function get() {
	      return optionManager.get('foreground', this);
	    }

	    /**
	     * Sets the foreground color for the QR code to <code>foreground</code> and automatically updates this {@link QRious}
	     * if the underlying field is changed as a result.
	     *
	     * @param {string} [foreground="black"] - the foreground color to be set
	     * @public
	     */
	    ,
	    set: function set(foreground) {
	      if (optionManager.set('foreground', foreground, this)) {
	        this.update();
	      }
	    }

	    /**
	     * Returns the foreground alpha for the QR code.
	     *
	     * @return {number} The foreground alpha.
	     * @public
	     */

	  }, {
	    key: 'foregroundAlpha',
	    get: function get() {
	      return optionManager.get('foregroundAlpha', this);
	    }

	    /**
	     * Sets the foreground alpha for the QR code to <code>foregroundAlpha</code> and automatically updates this
	     * {@link QRious} if the underlying field is changed as a result.
	     *
	     * @param {number} [foregroundAlpha=1] - the foreground alpha to be set
	     * @public
	     */
	    ,
	    set: function set(foregroundAlpha) {
	      if (optionManager.set('foregroundAlpha', foregroundAlpha, this)) {
	        this.update();
	      }
	    }

	    /**
	     * Returns the <code>img</code> element being used to render the QR code for this {@link QRious}.
	     *
	     * @return {*} The <code>img</code> element.
	     * @public
	     */

	  }, {
	    key: 'image',
	    get: function get() {
	      return this._imageRenderer.getElement();
	    }

	    /**
	     * Returns the error correction level for the QR code.
	     *
	     * @return {string} The ECC level.
	     * @public
	     */

	  }, {
	    key: 'level',
	    get: function get() {
	      return optionManager.get('level', this);
	    }

	    /**
	     * Sets the error correction level for the QR code to <code>level</code> and automatically updates this {@link QRious}
	     * if the underlying field is changed as a result.
	     *
	     * <code>level</code> will be transformed to upper case to aid mapping to known ECC level blocks.
	     *
	     * @param {string} [level="L"] - the ECC level to be set
	     * @public
	     */
	    ,
	    set: function set(level) {
	      if (optionManager.set('level', level, this)) {
	        this.update();
	      }
	    }

	    /**
	     * Returns the MIME type for the image rendered for the QR code.
	     *
	     * @return {string} The image MIME type.
	     * @public
	     */

	  }, {
	    key: 'mime',
	    get: function get() {
	      return optionManager.get('mime', this);
	    }

	    /**
	     * Sets the MIME type for the image rendered for the QR code to <code>mime</code> and automatically updates this
	     * {@link QRious} if the underlying field is changed as a result.
	     *
	     * @param {string} [mime="image/png"] - the image MIME type to be set
	     * @public
	     */
	    ,
	    set: function set(mime) {
	      if (optionManager.set('mime', mime, this)) {
	        this.update();
	      }
	    }

	    /**
	     * Returns the padding for the QR code.
	     *
	     * @return {number} The padding in pixels.
	     * @public
	     */

	  }, {
	    key: 'padding',
	    get: function get() {
	      return optionManager.get('padding', this);
	    }

	    /**
	     * Sets the padding for the QR code to <code>padding</code> and automatically updates this {@link QRious} if the
	     * underlying field is changed as a result.
	     *
	     * <code>padding</code> will be transformed to ensure that it is always an absolute positive numbers (e.g.
	     * <code>-10</code> would become <code>10</code>).
	     *
	     * @param {number} [padding] - the padding in pixels to be set
	     * @public
	     */
	    ,
	    set: function set(padding) {
	      if (optionManager.set('padding', padding, this)) {
	        this.update();
	      }
	    }

	    /**
	     * Returns the size of the QR code.
	     *
	     * @return {number} The size in pixels.
	     * @public
	     */

	  }, {
	    key: 'size',
	    get: function get() {
	      return optionManager.get('size', this);
	    }

	    /**
	     * Sets the size of the QR code to <code>size</code> and automatically updates this {@link QRious} if the underlying
	     * field is changed as a result.
	     *
	     * <code>size</code> will be transformed to ensure that it is always an absolute positive numbers (e.g.
	     * <code>-100</code> would become <code>100</code>).
	     *
	     * @param {number} [size=100] - the size in pixels to be set
	     * @public
	     */
	    ,
	    set: function set(size) {
	      if (optionManager.set('size', size, this)) {
	        this.update();
	      }
	    }

	    /**
	     * Returns the value of the QR code.
	     *
	     * @return {string} The value.
	     * @public
	     */

	  }, {
	    key: 'value',
	    get: function get() {
	      return optionManager.get('value', this);
	    }

	    /**
	     * Sets the value of the QR code to <code>value</code> and automatically updates this {@link QRious} if the underlying
	     * field is changed as a result.
	     *
	     * @param {string} [value=""] - the value to be set
	     * @public
	     */
	    ,
	    set: function set(value) {
	      if (optionManager.set('value', value, this)) {
	        this.update();
	      }
	    }
	  }]);

	  return QRious;
	}();



	/**
	 * The options used by {@link QRious}.
	 *
	 * @typedef {Object} QRious~Options
	 * @property {string} [background="white"] - The background color to be applied to the QR code.
	 * @property {number} [backgroundAlpha=1] - The background alpha to be applied to the QR code.
	 * @property {*} [element] - The element to be used to render the QR code which may either be an <code>canvas</code> or
	 * <code>img</code>. The element(s) will be created if needed.
	 * @property {string} [foreground="black"] - The foreground color to be applied to the QR code.
	 * @property {number} [foregroundAlpha=1] - The foreground alpha to be applied to the QR code.
	 * @property {string} [level="L"] - The error correction level to be applied to the QR code.
	 * @property {string} [mime="image/png"] - The MIME type to be used to render the image for the QR code.
	 * @property {number} [padding] - The padding for the QR code in pixels.
	 * @property {number} [size=100] - The size of the QR code in pixels.
	 * @property {string} [value=""] - The value to be encoded within the QR code.
	 */

	/*
	 * QRious
	 * Copyright (C) 2017 Alasdair Mercer
	 * Copyright (C) 2010 Tom Zerucha
	 *
	 * This program is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU General Public License as published by
	 * the Free Software Foundation, either version 3 of the License, or
	 * (at your option) any later version.
	 *
	 * This program is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 * GNU General Public License for more details.
	 *
	 * You should have received a copy of the GNU General Public License
	 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

	QRious$1.use(new BrowserElementService());

	return QRious$1;

})));

//# sourceMappingURL=qrious.js.map
// https://d3js.org Version 4.2.8. Copyright 2016 Mike Bostock.
(function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n(t.d3=t.d3||{})})(this,function(t){"use strict";function n(t){return function(n,e){return bs(t(n),e)}}function e(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),o=r/i;return o>=Ds?i*=10:o>=Os?i*=5:o>=Fs&&(i*=2),n<t?-i:i}function r(t){return t.length}function i(){}function o(t,n){var e=new i;if(t instanceof i)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,o=-1,u=t.length;if(null==n)for(;++o<u;)e.set(o,t[o]);else for(;++o<u;)e.set(n(r=t[o],o,t),r)}else if(t)for(var a in t)e.set(a,t[a]);return e}function u(){return{}}function a(t,n,e){t[n]=e}function c(){return o()}function s(t,n,e){t.set(n,e)}function f(){}function l(t,n){var e=new f;if(t instanceof f)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}function h(t){return+t}function p(t){return t*t}function d(t){return t*(2-t)}function v(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function _(t){return t*t*t}function y(t){return--t*t*t+1}function g(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}function m(t){return 1-Math.cos(t*wf)}function x(t){return Math.sin(t*wf)}function b(t){return(1-Math.cos(bf*t))/2}function w(t){return Math.pow(2,10*t-10)}function M(t){return 1-Math.pow(2,-10*t)}function T(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function N(t){return 1-Math.sqrt(1-t*t)}function k(t){return Math.sqrt(1- --t*t)}function S(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}function A(t){return 1-E(1-t)}function E(t){return(t=+t)<Mf?Pf*t*t:t<Nf?Pf*(t-=Tf)*t+kf:t<Af?Pf*(t-=Sf)*t+Ef:Pf*(t-=Cf)*t+zf}function C(t){return((t*=2)<=1?1-E(1-t):E(t-1)+1)/2}function z(t,n){return t[0]-n[0]||t[1]-n[1]}function P(t){for(var n=t.length,e=[0,1],r=2,i=2;i<n;++i){for(;r>1&&Xf(t[e[r-2]],t[e[r-1]],t[i])<=0;)--r;e[r++]=i}return e.slice(0,r)}function q(){this._x0=this._y0=this._x1=this._y1=null,this._=[]}function L(){return new q}function R(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,o,u,a,c,s,f,l,h,p=t._root,d={data:r},v=t._x0,_=t._y0,y=t._x1,g=t._y1;if(!p)return t._root=d,t;for(;p.length;)if((s=n>=(o=(v+y)/2))?v=o:y=o,(f=e>=(u=(_+g)/2))?_=u:g=u,i=p,!(p=p[l=f<<1|s]))return i[l]=d,t;if(a=+t._x.call(null,p.data),c=+t._y.call(null,p.data),n===a&&e===c)return d.next=p,i?i[l]=d:t._root=d,t;do i=i?i[l]=new Array(4):t._root=new Array(4),(s=n>=(o=(v+y)/2))?v=o:y=o,(f=e>=(u=(_+g)/2))?_=u:g=u;while((l=f<<1|s)===(h=(c>=u)<<1|a>=o));return i[h]=p,i[l]=d,t}function U(t){var n,e,r,i,o=t.length,u=new Array(o),a=new Array(o),c=1/0,s=1/0,f=-(1/0),l=-(1/0);for(e=0;e<o;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(i=+this._y.call(null,n))||(u[e]=r,a[e]=i,r<c&&(c=r),r>f&&(f=r),i<s&&(s=i),i>l&&(l=i));for(f<c&&(c=this._x0,f=this._x1),l<s&&(s=this._y0,l=this._y1),this.cover(c,s).cover(f,l),e=0;e<o;++e)R(this,u[e],a[e],t[e]);return this}function D(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this}function O(t){return t[0]}function F(t){return t[1]}function I(t,n,e){var r=new Y(null==n?O:n,null==e?F:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function Y(t,n,e,r,i,o){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=o,this._root=void 0}function B(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}function j(t){if(!(t>=1))throw new Error;this._size=t,this._call=this._error=null,this._tasks=[],this._data=[],this._waiting=this._active=this._ended=this._start=0}function H(t){if(!t._start)try{X(t)}catch(n){if(t._tasks[t._ended+t._active-1])W(t,n);else if(!t._data)throw n}}function X(t){for(;t._start=t._waiting&&t._active<t._size;){var n=t._ended+t._active,e=t._tasks[n],r=e.length-1,i=e[r];e[r]=V(t,n),--t._waiting,++t._active,e=i.apply(null,e),t._tasks[n]&&(t._tasks[n]=e||dl)}}function V(t,n){return function(e,r){t._tasks[n]&&(--t._active,++t._ended,t._tasks[n]=null,null==t._error&&(null!=e?W(t,e):(t._data[n]=r,t._waiting?H(t):$(t))))}}function W(t,n){var e,r=t._tasks.length;for(t._error=n,t._data=void 0,t._waiting=NaN;--r>=0;)if((e=t._tasks[r])&&(t._tasks[r]=null,e.abort))try{e.abort()}catch(t){}t._active=NaN,$(t)}function $(t){if(!t._active&&t._call){var n=t._data;t._data=void 0,t._call(t._error,n)}}function Z(t){return new j(arguments.length?+t:1/0)}function G(t){return t.innerRadius}function J(t){return t.outerRadius}function Q(t){return t.startAngle}function K(t){return t.endAngle}function tt(t){return t&&t.padAngle}function nt(t){return t>=1?gl:t<=-1?-gl:Math.asin(t)}function et(t,n,e,r,i,o,u,a){var c=e-t,s=r-n,f=u-i,l=a-o,h=(f*(n-o)-l*(t-i))/(l*c-f*s);return[t+h*c,n+h*s]}function rt(t,n,e,r,i,o,u){var a=t-e,c=n-r,s=(u?o:-o)/Math.sqrt(a*a+c*c),f=s*c,l=-s*a,h=t+f,p=n+l,d=e+f,v=r+l,_=(h+d)/2,y=(p+v)/2,g=d-h,m=v-p,x=g*g+m*m,b=i-o,w=h*v-d*p,M=(m<0?-1:1)*Math.sqrt(Math.max(0,b*b*x-w*w)),T=(w*m-g*M)/x,N=(-w*g-m*M)/x,k=(w*m+g*M)/x,S=(-w*g+m*M)/x,A=T-_,E=N-y,C=k-_,z=S-y;return A*A+E*E>C*C+z*z&&(T=k,N=S),{cx:T,cy:N,x01:-f,y01:-l,x11:T*(i/b-1),y11:N*(i/b-1)}}function it(t){this._context=t}function ot(t){return t[0]}function ut(t){return t[1]}function at(t){this._curve=t}function ct(t){function n(n){return new at(t(n))}return n._curve=t,n}function st(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(ct(t)):n()._curve},t}function ft(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function lt(t){this._context=t}function ht(t){this._context=t}function pt(t){this._context=t}function dt(t,n){this._basis=new lt(t),this._beta=n}function vt(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function _t(t,n){this._context=t,this._k=(1-n)/6}function yt(t,n){this._context=t,this._k=(1-n)/6}function gt(t,n){this._context=t,this._k=(1-n)/6}function mt(t,n,e){var r=t._x1,i=t._y1,o=t._x2,u=t._y2;if(t._l01_a>_l){var a=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,c=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*a-t._x0*t._l12_2a+t._x2*t._l01_2a)/c,i=(i*a-t._y0*t._l12_2a+t._y2*t._l01_2a)/c}if(t._l23_a>_l){var s=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,f=3*t._l23_a*(t._l23_a+t._l12_a);o=(o*s+t._x1*t._l23_2a-n*t._l12_2a)/f,u=(u*s+t._y1*t._l23_2a-e*t._l12_2a)/f}t._context.bezierCurveTo(r,i,o,u,t._x2,t._y2)}function xt(t,n){this._context=t,this._alpha=n}function bt(t,n){this._context=t,this._alpha=n}function wt(t,n){this._context=t,this._alpha=n}function Mt(t){this._context=t}function Tt(t){return t<0?-1:1}function Nt(t,n,e){var r=t._x1-t._x0,i=n-t._x1,o=(t._y1-t._y0)/(r||i<0&&-0),u=(e-t._y1)/(i||r<0&&-0),a=(o*i+u*r)/(r+i);return(Tt(o)+Tt(u))*Math.min(Math.abs(o),Math.abs(u),.5*Math.abs(a))||0}function kt(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function St(t,n,e){var r=t._x0,i=t._y0,o=t._x1,u=t._y1,a=(o-r)/3;t._context.bezierCurveTo(r+a,i+a*n,o-a,u-a*e,o,u)}function At(t){this._context=t}function Et(t){this._context=new Ct(t)}function Ct(t){this._context=t}function zt(t){return new At(t)}function Pt(t){return new Et(t)}function qt(t){this._context=t}function Lt(t){var n,e,r=t.length-1,i=new Array(r),o=new Array(r),u=new Array(r);for(i[0]=0,o[0]=2,u[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,o[n]=4,u[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,o[r-1]=7,u[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/o[n-1],o[n]-=e,u[n]-=e*u[n-1];for(i[r-1]=u[r-1]/o[r-1],n=r-2;n>=0;--n)i[n]=(u[n]-i[n+1])/o[n];for(o[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)o[n]=2*t[n+1]-i[n+1];return[i,o]}function Rt(t,n){this._context=t,this._t=n}function Ut(t){return new Rt(t,0)}function Dt(t){return new Rt(t,1)}function Ot(t,n){return t[n]}function Ft(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}function It(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function Yt(){}function Bt(t){var n;return t=(t+"").trim().toLowerCase(),(n=Th.exec(t))?(n=parseInt(n[1],16),new Wt(n>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1)):(n=Nh.exec(t))?jt(parseInt(n[1],16)):(n=kh.exec(t))?new Wt(n[1],n[2],n[3],1):(n=Sh.exec(t))?new Wt(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=Ah.exec(t))?Ht(n[1],n[2],n[3],n[4]):(n=Eh.exec(t))?Ht(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=Ch.exec(t))?$t(n[1],n[2]/100,n[3]/100,1):(n=zh.exec(t))?$t(n[1],n[2]/100,n[3]/100,n[4]):Ph.hasOwnProperty(t)?jt(Ph[t]):"transparent"===t?new Wt(NaN,NaN,NaN,0):null}function jt(t){return new Wt(t>>16&255,t>>8&255,255&t,1)}function Ht(t,n,e,r){return r<=0&&(t=n=e=NaN),new Wt(t,n,e,r)}function Xt(t){return t instanceof Yt||(t=Bt(t)),t?(t=t.rgb(),new Wt(t.r,t.g,t.b,t.opacity)):new Wt}function Vt(t,n,e,r){return 1===arguments.length?Xt(t):new Wt(t,n,e,null==r?1:r)}function Wt(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function $t(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new Jt(t,n,e,r)}function Zt(t){if(t instanceof Jt)return new Jt(t.h,t.s,t.l,t.opacity);if(t instanceof Yt||(t=Bt(t)),!t)return new Jt;if(t instanceof Jt)return t;t=t.rgb();var n=t.r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),u=NaN,a=o-i,c=(o+i)/2;return a?(u=n===o?(e-r)/a+6*(e<r):e===o?(r-n)/a+2:(n-e)/a+4,a/=c<.5?o+i:2-o-i,u*=60):a=c>0&&c<1?0:u,new Jt(u,a,c,t.opacity)}function Gt(t,n,e,r){return 1===arguments.length?Zt(t):new Jt(t,n,e,null==r?1:r)}function Jt(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Qt(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}function Kt(t){if(t instanceof nn)return new nn(t.l,t.a,t.b,t.opacity);if(t instanceof sn){var n=t.h*qh;return new nn(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof Wt||(t=Xt(t));var e=un(t.r),r=un(t.g),i=un(t.b),o=en((.4124564*e+.3575761*r+.1804375*i)/Uh),u=en((.2126729*e+.7151522*r+.072175*i)/Dh),a=en((.0193339*e+.119192*r+.9503041*i)/Oh);return new nn(116*u-16,500*(o-u),200*(u-a),t.opacity)}function tn(t,n,e,r){return 1===arguments.length?Kt(t):new nn(t,n,e,null==r?1:r)}function nn(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function en(t){return t>Bh?Math.pow(t,1/3):t/Yh+Fh}function rn(t){return t>Ih?t*t*t:Yh*(t-Fh)}function on(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function un(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function an(t){if(t instanceof sn)return new sn(t.h,t.c,t.l,t.opacity);t instanceof nn||(t=Kt(t));var n=Math.atan2(t.b,t.a)*Lh;return new sn(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function cn(t,n,e,r){return 1===arguments.length?an(t):new sn(t,n,e,null==r?1:r)}function sn(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}function fn(t){if(t instanceof hn)return new hn(t.h,t.s,t.l,t.opacity);t instanceof Wt||(t=Xt(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(Gh*r+$h*n-Zh*e)/(Gh+$h-Zh),o=r-i,u=(Wh*(e-i)-Xh*o)/Vh,a=Math.sqrt(u*u+o*o)/(Wh*i*(1-i)),c=a?Math.atan2(u,o)*Lh-120:NaN;return new hn(c<0?c+360:c,a,i,t.opacity)}function ln(t,n,e,r){return 1===arguments.length?fn(t):new hn(t,n,e,null==r?1:r)}function hn(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function pn(t,n,e,r,i){var o=t*t,u=o*t;return((1-3*t+3*o-u)*n+(4-6*o+3*u)*e+(1+3*t+3*o-3*u)*r+u*i)/6}function dn(t,n){return function(e){return t+e*n}}function vn(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}function _n(t,n){var e=n-t;return e?dn(t,e>180||e<-180?e-360*Math.round(e/360):e):rp(isNaN(t)?n:t)}function yn(t){return 1===(t=+t)?gn:function(n,e){return e-n?vn(n,e,t):rp(isNaN(n)?e:n)}}function gn(t,n){var e=n-t;return e?dn(t,e):rp(isNaN(t)?n:t)}function mn(t){return function(n){var e,r,i=n.length,o=new Array(i),u=new Array(i),a=new Array(i);for(e=0;e<i;++e)r=Vt(n[e]),o[e]=r.r||0,u[e]=r.g||0,a[e]=r.b||0;return o=t(o),u=t(u),a=t(a),r.opacity=1,function(t){return r.r=o(t),r.g=u(t),r.b=a(t),r+""}}}function xn(t){return function(){return t}}function bn(t){return function(n){return t(n)+""}}function wn(t){return"none"===t?yp:(Jh||(Jh=document.createElement("DIV"),Qh=document.documentElement,Kh=document.defaultView),Jh.style.transform=t,t=Kh.getComputedStyle(Qh.appendChild(Jh),null).getPropertyValue("transform"),Qh.removeChild(Jh),t=t.slice(7,-1).split(","),gp(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))}function Mn(t){return null==t?yp:(tp||(tp=document.createElementNS("http://www.w3.org/2000/svg","g")),tp.setAttribute("transform",t),(t=tp.transform.baseVal.consolidate())?(t=t.matrix,gp(t.a,t.b,t.c,t.d,t.e,t.f)):yp)}function Tn(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}function o(t,r,i,o,u,a){if(t!==i||r!==o){var c=u.push("translate(",null,n,null,e);a.push({i:c-4,x:sp(t,i)},{i:c-2,x:sp(r,o)})}else(i||o)&&u.push("translate("+i+n+o+e)}function u(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:sp(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}function a(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:sp(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}function c(t,n,e,r,o,u){if(t!==e||n!==r){var a=o.push(i(o)+"scale(",null,",",null,")");u.push({i:a-4,x:sp(t,e)},{i:a-2,x:sp(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}return function(n,e){var r=[],i=[];return n=t(n),e=t(e),o(n.translateX,n.translateY,e.translateX,e.translateY,r,i),u(n.rotate,e.rotate,r,i),a(n.skewX,e.skewX,r,i),c(n.scaleX,n.scaleY,e.scaleX,e.scaleY,r,i),n=e=null,function(t){for(var n,e=-1,o=i.length;++e<o;)r[(n=i[e]).i]=n.x(t);return r.join("")}}}function Nn(t){return((t=Math.exp(t))+1/t)/2}function kn(t){return((t=Math.exp(t))-1/t)/2}function Sn(t){return((t=Math.exp(2*t))-1)/(t+1)}function An(t){return function(n,e){var r=t((n=Gt(n)).h,(e=Gt(e)).h),i=gn(n.s,e.s),o=gn(n.l,e.l),u=gn(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=o(t),n.opacity=u(t),n+""}}}function En(t,n){var e=gn((t=tn(t)).l,(n=tn(n)).l),r=gn(t.a,n.a),i=gn(t.b,n.b),o=gn(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=r(n),t.b=i(n),t.opacity=o(n),t+""}}function Cn(t){return function(n,e){var r=t((n=cn(n)).h,(e=cn(e)).h),i=gn(n.c,e.c),o=gn(n.l,e.l),u=gn(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=o(t),n.opacity=u(t),n+""}}}function zn(t){return function n(e){function r(n,r){var i=t((n=ln(n)).h,(r=ln(r)).h),o=gn(n.s,r.s),u=gn(n.l,r.l),a=gn(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=o(t),n.l=u(Math.pow(t,e)),n.opacity=a(t),n+""}}return e=+e,r.gamma=n,r}(1)}function Pn(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new qn(r)}function qn(t){this._=t}function Ln(t,n){return t.trim().split(/^|\s+/).map(function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}})}function Rn(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function Un(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=qp,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}function Dn(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+"]"}).join(",")+"}")}function On(t,n){var e=Dn(t);return function(r,i){return n(e(r),i,t)}}function Fn(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}function In(t){return function(n,e){t(null==n?e:null)}}function Yn(t){var n=t.responseType;return n&&"text"!==n?t.response:t.responseText}function Bn(t,n){return function(e){return t(e.responseText,n)}}function jn(){return ad||(fd(Hn),ad=sd.now()+cd)}function Hn(){ad=0}function Xn(){this._call=this._time=this._next=null}function Vn(t,n,e){var r=new Xn;return r.restart(t,n,e),r}function Wn(){jn(),++ed;for(var t,n=Lp;n;)(t=ad-n._time)>=0&&n._call.call(null,t),n=n._next;--ed}function $n(){ad=(ud=sd.now())+cd,ed=rd=0;try{Wn()}finally{ed=0,Gn(),ad=0}}function Zn(){var t=sd.now(),n=t-ud;n>od&&(cd-=n,ud=t)}function Gn(){for(var t,n,e=Lp,r=1/0;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:Lp=n);Rp=t,Jn(r)}function Jn(t){if(!ed){rd&&(rd=clearTimeout(rd));var n=t-ad;n>24?(t<1/0&&(rd=setTimeout($n,n)),id&&(id=clearInterval(id))):(id||(id=setInterval(Zn,od)),ed=1,fd($n))}}function Qn(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,o){var u=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return u;do u.push(new Date(+e));while(n(e,o),t(e),e<r);return u},i.filter=function(e){return Qn(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return pd.setTime(+n),dd.setTime(+r),t(pd),t(dd),Math.floor(e(pd,dd))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t===0}:function(n){return i.count(0,n)%t===0}):i:null}),i}function Kn(t){return Qn(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*gd)/bd})}function te(t){return Qn(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/bd})}function ne(t){if(!(n=kv.exec(t)))throw new Error("invalid format: "+t);var n,e=n[1]||" ",r=n[2]||">",i=n[3]||"-",o=n[4]||"",u=!!n[5],a=n[6]&&+n[6],c=!!n[7],s=n[8]&&+n[8].slice(1),f=n[9]||"";"n"===f?(c=!0,f="g"):Nv[f]||(f=""),(u||"0"===e&&"="===r)&&(u=!0,e="0",r="="),this.fill=e,this.align=r,this.sign=i,this.symbol=o,this.zero=u,this.width=a,this.comma=c,this.precision=s,this.type=f}function ee(t){return t}function re(n){return Av=Cv(n),t.format=Av.format,t.formatPrefix=Av.formatPrefix,Av}function ie(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function oe(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function ue(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}function ae(t){function n(t,n){return function(e){var r,i,o,u=[],a=-1,c=0,s=t.length;for(e instanceof Date||(e=new Date(+e));++a<s;)37===t.charCodeAt(a)&&(u.push(t.slice(c,a)),null!=(i=Rv[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),u.push(r),c=a+1);return u.push(t.slice(c,a)),u.join("")}}function e(t,n){return function(e){var i=ue(1900),o=r(i,t,e+="",0);if(o!=e.length)return null;if("p"in i&&(i.H=i.H%12+12*i.p),"W"in i||"U"in i){"w"in i||(i.w="W"in i?1:0);var u="Z"in i?oe(ue(i.y)).getUTCDay():n(ue(i.y)).getDay();i.m=0,i.d="W"in i?(i.w+6)%7+7*i.W-(u+5)%7:i.w+7*i.U-(u+6)%7}return"Z"in i?(i.H+=i.Z/100|0,i.M+=i.Z%100,oe(i)):n(i)}}function r(t,n,e,r){for(var i,o,u=0,a=n.length,c=e.length;u<a;){if(r>=c)return-1;if(i=n.charCodeAt(u++),37===i){if(i=n.charAt(u++),o=B[i in Rv?n.charAt(u++):i],!o||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}function i(t,n,e){var r=C.exec(n.slice(e));return r?(t.p=z[r[0].toLowerCase()],e+r[0].length):-1}function o(t,n,e){var r=L.exec(n.slice(e));return r?(t.w=R[r[0].toLowerCase()],e+r[0].length):-1}function u(t,n,e){var r=P.exec(n.slice(e));return r?(t.w=q[r[0].toLowerCase()],e+r[0].length):-1}function a(t,n,e){var r=O.exec(n.slice(e));return r?(t.m=F[r[0].toLowerCase()],e+r[0].length):-1}function c(t,n,e){var r=U.exec(n.slice(e));return r?(t.m=D[r[0].toLowerCase()],e+r[0].length):-1}function s(t,n,e){return r(t,w,n,e)}function f(t,n,e){return r(t,M,n,e)}function l(t,n,e){return r(t,T,n,e)}function h(t){return S[t.getDay()]}function p(t){return k[t.getDay()]}function d(t){return E[t.getMonth()]}function v(t){return A[t.getMonth()]}function _(t){return N[+(t.getHours()>=12)]}function y(t){return S[t.getUTCDay()]}function g(t){return k[t.getUTCDay()]}function m(t){return E[t.getUTCMonth()]}function x(t){return A[t.getUTCMonth()]}function b(t){return N[+(t.getUTCHours()>=12)]}var w=t.dateTime,M=t.date,T=t.time,N=t.periods,k=t.days,S=t.shortDays,A=t.months,E=t.shortMonths,C=fe(N),z=le(N),P=fe(k),q=le(k),L=fe(S),R=le(S),U=fe(A),D=le(A),O=fe(E),F=le(E),I={a:h,A:p,b:d,B:v,c:null,d:ke,e:ke,H:Se,I:Ae,j:Ee,L:Ce,m:ze,M:Pe,p:_,S:qe,U:Le,w:Re,W:Ue,x:null,X:null,y:De,Y:Oe,Z:Fe,"%":tr},Y={a:y,A:g,b:m,B:x,c:null,d:Ie,e:Ie,H:Ye,I:Be,j:je,L:He,m:Xe,M:Ve,p:b,S:We,U:$e,w:Ze,W:Ge,x:null,X:null,y:Je,Y:Qe,Z:Ke,"%":tr},B={a:o,A:u,b:a,B:c,c:s,d:me,e:me,H:be,I:be,j:xe,L:Te,m:ge,M:we,p:i,S:Me,U:pe,w:he,W:de,x:f,X:l,y:_e,Y:ve,Z:ye,"%":Ne};return I.x=n(M,I),I.X=n(T,I),I.c=n(w,I),Y.x=n(M,Y),Y.X=n(T,Y),Y.c=n(w,Y),{format:function(t){var e=n(t+="",I);return e.toString=function(){return t},e},parse:function(t){var n=e(t+="",ie);return n.toString=function(){return t},n},utcFormat:function(t){var e=n(t+="",Y);return e.toString=function(){return t},e},utcParse:function(t){var n=e(t,oe);return n.toString=function(){return t},n}}}function ce(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function se(t){return t.replace(Ov,"\\$&")}function fe(t){return new RegExp("^(?:"+t.map(se).join("|")+")","i")}function le(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function he(t,n,e){var r=Uv.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function pe(t,n,e){var r=Uv.exec(n.slice(e));return r?(t.U=+r[0],e+r[0].length):-1}function de(t,n,e){var r=Uv.exec(n.slice(e));return r?(t.W=+r[0],e+r[0].length):-1}function ve(t,n,e){var r=Uv.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function _e(t,n,e){var r=Uv.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function ye(t,n,e){var r=/^(Z)|([+-]\d\d)(?:\:?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function ge(t,n,e){var r=Uv.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function me(t,n,e){var r=Uv.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function xe(t,n,e){var r=Uv.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function be(t,n,e){var r=Uv.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function we(t,n,e){var r=Uv.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function Me(t,n,e){var r=Uv.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function Te(t,n,e){var r=Uv.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Ne(t,n,e){var r=Dv.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function ke(t,n){return ce(t.getDate(),n,2)}function Se(t,n){return ce(t.getHours(),n,2)}function Ae(t,n){return ce(t.getHours()%12||12,n,2)}function Ee(t,n){return ce(1+Ad.count(Vd(t),t),n,3)}function Ce(t,n){return ce(t.getMilliseconds(),n,3)}function ze(t,n){return ce(t.getMonth()+1,n,2)}function Pe(t,n){return ce(t.getMinutes(),n,2)}function qe(t,n){return ce(t.getSeconds(),n,2)}function Le(t,n){return ce(Cd.count(Vd(t),t),n,2)}function Re(t){return t.getDay()}function Ue(t,n){return ce(zd.count(Vd(t),t),n,2)}function De(t,n){return ce(t.getFullYear()%100,n,2)}function Oe(t,n){return ce(t.getFullYear()%1e4,n,4)}function Fe(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+ce(n/60|0,"0",2)+ce(n%60,"0",2)}function Ie(t,n){return ce(t.getUTCDate(),n,2)}function Ye(t,n){return ce(t.getUTCHours(),n,2)}function Be(t,n){return ce(t.getUTCHours()%12||12,n,2)}function je(t,n){return ce(1+Qd.count(_v(t),t),n,3)}function He(t,n){return ce(t.getUTCMilliseconds(),n,3)}function Xe(t,n){return ce(t.getUTCMonth()+1,n,2)}function Ve(t,n){return ce(t.getUTCMinutes(),n,2)}function We(t,n){return ce(t.getUTCSeconds(),n,2)}function $e(t,n){return ce(tv.count(_v(t),t),n,2)}function Ze(t){return t.getUTCDay()}function Ge(t,n){return ce(nv.count(_v(t),t),n,2)}function Je(t,n){return ce(t.getUTCFullYear()%100,n,2)}function Qe(t,n){return ce(t.getUTCFullYear()%1e4,n,4)}function Ke(){return"+0000"}function tr(){return"%"}function nr(n){return zv=ae(n),t.timeFormat=zv.format,t.timeParse=zv.parse,t.utcFormat=zv.utcFormat,t.utcParse=zv.utcParse,zv}function er(t){return t.toISOString()}function rr(t){var n=new Date(t);return isNaN(n)?null:n}function ir(t){function n(n){var o=n+"",u=e.get(o);if(!u){if(i!==Xv)return i;e.set(o,u=r.push(n))}return t[(u-1)%t.length]}var e=o(),r=[],i=Xv;return t=null==t?[]:Hv.call(t),n.domain=function(t){if(!arguments.length)return r.slice();r=[],e=o();for(var i,u,a=-1,c=t.length;++a<c;)e.has(u=(i=t[a])+"")||e.set(u,r.push(i));return n},n.range=function(e){return arguments.length?(t=Hv.call(e),n):t.slice()},n.unknown=function(t){return arguments.length?(i=t,n):i},n.copy=function(){return ir().domain(r).range(t).unknown(i)},n}function or(){function t(){var t=i().length,r=u[1]<u[0],l=u[r-0],h=u[1-r];n=(h-l)/Math.max(1,t-c+2*s),a&&(n=Math.floor(n)),l+=(h-l-n*(t-c))*f,e=n*(1-c),a&&(l=Math.round(l),e=Math.round(e));var p=Us(t).map(function(t){return l+n*t});return o(r?p.reverse():p)}var n,e,r=ir().unknown(void 0),i=r.domain,o=r.range,u=[0,1],a=!1,c=0,s=0,f=.5;return delete r.unknown,r.domain=function(n){return arguments.length?(i(n),t()):i()},r.range=function(n){return arguments.length?(u=[+n[0],+n[1]],t()):u.slice()},r.rangeRound=function(n){return u=[+n[0],+n[1]],a=!0,t()},r.bandwidth=function(){return e},r.step=function(){return n},r.round=function(n){return arguments.length?(a=!!n,t()):a},r.padding=function(n){return arguments.length?(c=s=Math.max(0,Math.min(1,n)),t()):c},r.paddingInner=function(n){return arguments.length?(c=Math.max(0,Math.min(1,n)),t()):c},r.paddingOuter=function(n){return arguments.length?(s=Math.max(0,Math.min(1,n)),t()):s},r.align=function(n){return arguments.length?(f=Math.max(0,Math.min(1,n)),t()):f},r.copy=function(){return or().domain(i()).range(u).round(a).paddingInner(c).paddingOuter(s).align(f)},t()}function ur(t){var n=t.copy;return t.padding=t.paddingOuter,delete t.paddingInner,delete t.paddingOuter,t.copy=function(){return ur(n())},t}function ar(){return ur(or().paddingInner(1))}function cr(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:Vv(n)}function sr(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:r(t)}}}function fr(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}function lr(t,n,e,r){var i=t[0],o=t[1],u=n[0],a=n[1];return o<i?(i=e(o,i),u=r(a,u)):(i=e(i,o),u=r(u,a)),function(t){return u(i(t))}}function hr(t,n,e,r){var i=Math.min(t.length,n.length)-1,o=new Array(i),u=new Array(i),a=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++a<i;)o[a]=e(t[a],t[a+1]),u[a]=r(n[a],n[a+1]);return function(n){var e=Ts(t,n,1,i)-1;return u[e](o[e](n))}}function pr(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())}function dr(t,n){function e(){return i=Math.min(a.length,c.length)>2?hr:lr,o=u=null,r}function r(n){return(o||(o=i(a,c,f?sr(t):t,s)))(+n)}var i,o,u,a=$v,c=$v,s=dp,f=!1;return r.invert=function(t){return(u||(u=i(c,a,cr,f?fr(n):n)))(+t)},r.domain=function(t){return arguments.length?(a=jv.call(t,Wv),e()):a.slice()},r.range=function(t){return arguments.length?(c=Hv.call(t),e()):c.slice()},r.rangeRound=function(t){return c=Hv.call(t),s=vp,e()},r.clamp=function(t){return arguments.length?(f=!!t,e()):f},r.interpolate=function(t){return arguments.length?(s=t,e()):s},e()}function vr(t){var n=t.domain;return t.ticks=function(t){var e=n();return Is(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){return Zv(n(),t,e)},t.nice=function(r){var i=n(),o=i.length-1,u=null==r?10:r,a=i[0],c=i[o],s=e(a,c,u);return s&&(s=e(Math.floor(a/s)*s,Math.ceil(c/s)*s,u),i[0]=Math.floor(a/s)*s,i[o]=Math.ceil(c/s)*s,n(i)),t},t}function _r(){var t=dr(cr,sp);return t.copy=function(){return pr(t,_r())},vr(t)}function yr(){function t(t){return+t}var n=[0,1];return t.invert=t,t.domain=t.range=function(e){return arguments.length?(n=jv.call(e,Wv),t):n.slice()},t.copy=function(){return yr().domain(n)},vr(t)}function gr(t,n){return(n=Math.log(n/t))?function(e){return Math.log(e/t)/n}:Vv(n)}function mr(t,n){return t<0?function(e){return-Math.pow(-n,e)*Math.pow(-t,1-e)}:function(e){return Math.pow(n,e)*Math.pow(t,1-e)}}function xr(t){return isFinite(t)?+("1e"+t):t<0?0:t}function br(t){return 10===t?xr:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}function wr(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}function Mr(t){return function(n){return-t(-n)}}function Tr(){function n(){return o=wr(i),u=br(i),r()[0]<0&&(o=Mr(o),u=Mr(u)),e}var e=dr(gr,mr).domain([1,10]),r=e.domain,i=10,o=wr(10),u=br(10);return e.base=function(t){return arguments.length?(i=+t,n()):i},e.domain=function(t){return arguments.length?(r(t),n()):r()},e.ticks=function(t){var n,e=r(),a=e[0],c=e[e.length-1];(n=c<a)&&(h=a,a=c,c=h);var s,f,l,h=o(a),p=o(c),d=null==t?10:+t,v=[];if(!(i%1)&&p-h<d){if(h=Math.round(h)-1,p=Math.round(p)+1,a>0){for(;h<p;++h)for(f=1,s=u(h);f<i;++f)if(l=s*f,!(l<a)){if(l>c)break;v.push(l)}}else for(;h<p;++h)for(f=i-1,s=u(h);f>=1;--f)if(l=s*f,!(l<a)){if(l>c)break;v.push(l)}}else v=Is(h,p,Math.min(p-h,d)).map(u);return n?v.reverse():v},e.tickFormat=function(n,r){if(null==r&&(r=10===i?".0e":","),"function"!=typeof r&&(r=t.format(r)),n===1/0)return r;null==n&&(n=10);var a=Math.max(1,i*n/e.ticks().length);return function(t){var n=t/u(Math.round(o(t)));return n*i<i-.5&&(n*=i),n<=a?r(t):""}},e.nice=function(){return r(Gv(r(),{floor:function(t){return u(Math.floor(o(t)))},ceil:function(t){return u(Math.ceil(o(t)))}}))},e.copy=function(){return pr(e,Tr().base(i))},e}function Nr(t,n){return t<0?-Math.pow(-t,n):Math.pow(t,n)}function kr(){function t(t,n){return(n=Nr(n,e)-(t=Nr(t,e)))?function(r){return(Nr(r,e)-t)/n}:Vv(n)}function n(t,n){return n=Nr(n,e)-(t=Nr(t,e)),function(r){return Nr(t+n*r,1/e)}}var e=1,r=dr(t,n),i=r.domain;return r.exponent=function(t){return arguments.length?(e=+t,i(i())):e},r.copy=function(){return pr(r,kr().exponent(e))},vr(r)}function Sr(){return kr().exponent(.5)}function Ar(){function t(){var t=0,o=Math.max(1,r.length);for(i=new Array(o-1);++t<o;)i[t-1]=js(e,t/o);return n}function n(t){if(!isNaN(t=+t))return r[Ts(i,t)]}var e=[],r=[],i=[];return n.invertExtent=function(t){var n=r.indexOf(t);return n<0?[NaN,NaN]:[n>0?i[n-1]:e[0],n<i.length?i[n]:e[e.length-1]]},n.domain=function(n){if(!arguments.length)return e.slice();e=[];for(var r,i=0,o=n.length;i<o;++i)r=n[i],null==r||isNaN(r=+r)||e.push(r);return e.sort(bs),t()},n.range=function(n){return arguments.length?(r=Hv.call(n),t()):r.slice()},n.quantiles=function(){return i.slice()},n.copy=function(){return Ar().domain(e).range(r)},n}function Er(){function t(t){if(t<=t)return u[Ts(o,t,0,i)]}function n(){var n=-1;for(o=new Array(i);++n<i;)o[n]=((n+1)*r-(n-i)*e)/(i+1);return t}var e=0,r=1,i=1,o=[.5],u=[0,1];return t.domain=function(t){return arguments.length?(e=+t[0],r=+t[1],n()):[e,r]},t.range=function(t){return arguments.length?(i=(u=Hv.call(t)).length-1,n()):u.slice()},t.invertExtent=function(t){var n=u.indexOf(t);return n<0?[NaN,NaN]:n<1?[e,o[0]]:n>=i?[o[i-1],r]:[o[n-1],o[n]]},t.copy=function(){return Er().domain([e,r]).range(u)},vr(t)}function Cr(){function t(t){if(t<=t)return e[Ts(n,t,0,r)]}var n=[.5],e=[0,1],r=1;return t.domain=function(i){return arguments.length?(n=Hv.call(i),r=Math.min(n.length,e.length-1),t):n.slice()},t.range=function(i){return arguments.length?(e=Hv.call(i),r=Math.min(n.length,e.length-1),t):e.slice()},t.invertExtent=function(t){var r=e.indexOf(t);return[n[r-1],n[r]]},t.copy=function(){return Cr().domain(n).range(e)},t}function zr(t){return new Date(t);
}function Pr(t){return t instanceof Date?+t:+new Date(+t)}function qr(t,n,r,i,o,u,a,c,s){function f(e){return(a(e)<e?v:u(e)<e?_:o(e)<e?y:i(e)<e?g:n(e)<e?r(e)<e?m:x:t(e)<e?b:w)(e)}function l(n,r,i,o){if(null==n&&(n=10),"number"==typeof n){var u=Math.abs(i-r)/n,a=ws(function(t){return t[2]}).right(M,u);a===M.length?(o=e(r/r_,i/r_,n),n=t):a?(a=M[u/M[a-1][2]<M[a][2]/u?a-1:a],o=a[1],n=a[0]):(o=e(r,i,n),n=c)}return null==o?n:n.every(o)}var h=dr(cr,sp),p=h.invert,d=h.domain,v=s(".%L"),_=s(":%S"),y=s("%I:%M"),g=s("%I %p"),m=s("%a %d"),x=s("%b %d"),b=s("%B"),w=s("%Y"),M=[[a,1,Jv],[a,5,5*Jv],[a,15,15*Jv],[a,30,30*Jv],[u,1,Qv],[u,5,5*Qv],[u,15,15*Qv],[u,30,30*Qv],[o,1,Kv],[o,3,3*Kv],[o,6,6*Kv],[o,12,12*Kv],[i,1,t_],[i,2,2*t_],[r,1,n_],[n,1,e_],[n,3,3*e_],[t,1,r_]];return h.invert=function(t){return new Date(p(t))},h.domain=function(t){return arguments.length?d(jv.call(t,Pr)):d().map(zr)},h.ticks=function(t,n){var e,r=d(),i=r[0],o=r[r.length-1],u=o<i;return u&&(e=i,i=o,o=e),e=l(t,i,o,n),e=e?e.range(i,o+1):[],u?e.reverse():e},h.tickFormat=function(t,n){return null==n?f:s(n)},h.nice=function(t,n){var e=d();return(t=l(t,e[0],e[e.length-1],n))?d(Gv(e,t)):h},h.copy=function(){return pr(h,qr(t,n,r,i,o,u,a,c,s))},h}function Lr(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}function Rr(t){function n(n){var o=(n-e)/(r-e);return t(i?Math.max(0,Math.min(1,o)):o)}var e=0,r=1,i=!1;return n.domain=function(t){return arguments.length?(e=+t[0],r=+t[1],n):[e,r]},n.clamp=function(t){return arguments.length?(i=!!t,n):i},n.interpolator=function(e){return arguments.length?(t=e,n):t},n.copy=function(){return Rr(t).domain([e,r]).clamp(i)},vr(n)}function Ur(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===x_&&n.documentElement.namespaceURI===x_?n.createElement(t):n.createElementNS(e,t)}}function Dr(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function Or(){return new Fr}function Fr(){this._="@"+(++T_).toString(36)}function Ir(t,n,e){return t=Yr(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function Yr(n,e,r){return function(i){var o=t.event;t.event=i;try{n.call(this,this.__data__,e,r)}finally{t.event=o}}}function Br(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}function jr(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function Hr(t,n,e){var r=E_.hasOwnProperty(t.type)?Ir:Yr;return function(i,o,u){var a,c=this.__on,s=r(n,o,u);if(c)for(var f=0,l=c.length;f<l;++f)if((a=c[f]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=s,a.capture=e),void(a.value=n);this.addEventListener(t.type,s,e),a={type:t.type,name:t.name,value:n,listener:s,capture:e},c?c.push(a):this.__on=[a]}}function Xr(n,e,r,i){var o=t.event;n.sourceEvent=t.event,t.event=n;try{return e.apply(r,i)}finally{t.event=o}}function Vr(){}function Wr(){return[]}function $r(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}function Zr(t,n,e,r,i,o){for(var u,a=0,c=n.length,s=o.length;a<s;++a)(u=n[a])?(u.__data__=o[a],r[a]=u):e[a]=new $r(t,o[a]);for(;a<c;++a)(u=n[a])&&(i[a]=u)}function Gr(t,n,e,r,i,o,u){var a,c,s,f={},l=n.length,h=o.length,p=new Array(l);for(a=0;a<l;++a)(c=n[a])&&(p[a]=s=j_+u.call(c,c.__data__,a,n),s in f?i[a]=c:f[s]=c);for(a=0;a<h;++a)s=j_+u.call(t,o[a],a,o),(c=f[s])?(r[a]=c,c.__data__=o[a],f[s]=null):e[a]=new $r(t,o[a]);for(a=0;a<l;++a)(c=n[a])&&f[p[a]]===c&&(i[a]=c)}function Jr(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}function Qr(t){return function(){this.removeAttribute(t)}}function Kr(t){return function(){this.removeAttributeNS(t.space,t.local)}}function ti(t,n){return function(){this.setAttribute(t,n)}}function ni(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}function ei(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}function ri(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}function ii(t){return function(){this.style.removeProperty(t)}}function oi(t,n,e){return function(){this.style.setProperty(t,n,e)}}function ui(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}function ai(t){return function(){delete this[t]}}function ci(t,n){return function(){this[t]=n}}function si(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}function fi(t){return t.trim().split(/^|\s+/)}function li(t){return t.classList||new hi(t)}function hi(t){this._node=t,this._names=fi(t.getAttribute("class")||"")}function pi(t,n){for(var e=li(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function di(t,n){for(var e=li(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}function vi(t){return function(){pi(this,t)}}function _i(t){return function(){di(this,t)}}function yi(t,n){return function(){(n.apply(this,arguments)?pi:di)(this,t)}}function gi(){this.textContent=""}function mi(t){return function(){this.textContent=t}}function xi(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}function bi(){this.innerHTML=""}function wi(t){return function(){this.innerHTML=t}}function Mi(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}function Ti(){this.nextSibling&&this.parentNode.appendChild(this)}function Ni(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function ki(){return null}function Si(){var t=this.parentNode;t&&t.removeChild(this)}function Ai(t,n,e){var r=ey(t),i=r.CustomEvent;i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}function Ei(t,n){return function(){return Ai(this,t,n)}}function Ci(t,n){return function(){return Ai(this,t,n.apply(this,arguments))}}function zi(t,n){this._groups=t,this._parents=n}function Pi(){return new zi([[document.documentElement]],vy)}function qi(t,n){var e=t.__transition;if(!e||!(e=e[n])||e.state>wy)throw new Error("too late");return e}function Li(t,n){var e=t.__transition;if(!e||!(e=e[n])||e.state>Ty)throw new Error("too late");return e}function Ri(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("too late");return e}function Ui(t,n,e){function r(t){e.state=My,e.timer.restart(i,e.delay,e.time),e.delay<=t&&i(t-e.delay)}function i(r){var s,f,l,h;if(e.state!==My)return u();for(s in c)if(h=c[s],h.name===e.name){if(h.state===Ny)return ld(i);h.state===ky?(h.state=Ay,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete c[s]):+s<n&&(h.state=Ay,h.timer.stop(),delete c[s])}if(ld(function(){e.state===Ny&&(e.state=ky,e.timer.restart(o,e.delay,e.time),o(r))}),e.state=Ty,e.on.call("start",t,t.__data__,e.index,e.group),e.state===Ty){for(e.state=Ny,a=new Array(l=e.tween.length),s=0,f=-1;s<l;++s)(h=e.tween[s].value.call(t,t.__data__,e.index,e.group))&&(a[++f]=h);a.length=f+1}}function o(n){for(var r=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(u),e.state=Sy,1),i=-1,o=a.length;++i<o;)a[i].call(null,r);e.state===Sy&&(e.on.call("end",t,t.__data__,e.index,e.group),u())}function u(){e.state=Ay,e.timer.stop(),delete c[n];for(var r in c)return;delete t.__transition}var a,c=t.__transition;c[n]=e,e.timer=Vn(r,0,e.time)}function Di(t,n){var e,r;return function(){var i=Li(this,t),o=i.tween;if(o!==e){r=e=o;for(var u=0,a=r.length;u<a;++u)if(r[u].name===n){r=r.slice(),r.splice(u,1);break}}i.tween=r}}function Oi(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=Li(this,t),u=o.tween;if(u!==r){i=(r=u).slice();for(var a={name:n,value:e},c=0,s=i.length;c<s;++c)if(i[c].name===n){i[c]=a;break}c===s&&i.push(a)}o.tween=i}}function Fi(t,n,e){var r=t._id;return t.each(function(){var t=Li(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return Ri(t,r).value[n]}}function Ii(t){return function(){this.removeAttribute(t)}}function Yi(t){return function(){this.removeAttributeNS(t.space,t.local)}}function Bi(t,n,e){var r,i;return function(){var o=this.getAttribute(t);return o===e?null:o===r?i:i=n(r=o,e)}}function ji(t,n,e){var r,i;return function(){var o=this.getAttributeNS(t.space,t.local);return o===e?null:o===r?i:i=n(r=o,e)}}function Hi(t,n,e){var r,i,o;return function(){var u,a=e(this);return null==a?void this.removeAttribute(t):(u=this.getAttribute(t),u===a?null:u===r&&a===i?o:o=n(r=u,i=a))}}function Xi(t,n,e){var r,i,o;return function(){var u,a=e(this);return null==a?void this.removeAttributeNS(t.space,t.local):(u=this.getAttributeNS(t.space,t.local),u===a?null:u===r&&a===i?o:o=n(r=u,i=a))}}function Vi(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}function Wi(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e}function $i(t,n){return function(){qi(this,t).delay=+n.apply(this,arguments)}}function Zi(t,n){return n=+n,function(){qi(this,t).delay=n}}function Gi(t,n){return function(){Li(this,t).duration=+n.apply(this,arguments)}}function Ji(t,n){return n=+n,function(){Li(this,t).duration=n}}function Qi(t,n){if("function"!=typeof n)throw new Error;return function(){Li(this,t).ease=n}}function Ki(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}function to(t,n,e){var r,i,o=Ki(n)?qi:Li;return function(){var u=o(this,t),a=u.on;a!==r&&(i=(r=a).copy()).on(n,e),u.on=i}}function no(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}function eo(t,n){var e,r,i;return function(){var o=ey(this).getComputedStyle(this,null),u=o.getPropertyValue(t),a=(this.style.removeProperty(t),o.getPropertyValue(t));return u===a?null:u===e&&a===r?i:i=n(e=u,r=a)}}function ro(t){return function(){this.style.removeProperty(t)}}function io(t,n,e){var r,i;return function(){var o=ey(this).getComputedStyle(this,null).getPropertyValue(t);return o===e?null:o===r?i:i=n(r=o,e)}}function oo(t,n,e){var r,i,o;return function(){var u=ey(this).getComputedStyle(this,null),a=u.getPropertyValue(t),c=e(this);return null==c&&(this.style.removeProperty(t),c=u.getPropertyValue(t)),a===c?null:a===r&&c===i?o:o=n(r=a,i=c)}}function uo(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}function ao(t){return function(){this.textContent=t}}function co(t){return function(){var n=t(this);this.textContent=null==n?"":n}}function so(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function fo(t){return Pi().transition(t)}function lo(){return++Jy}function ho(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return Ky.time=jn(),Ky;return e}function po(t,n,e){var r=t(e);return"translate("+(isFinite(r)?r:n(e))+",0)"}function vo(t,n,e){var r=t(e);return"translate(0,"+(isFinite(r)?r:n(e))+")"}function _o(t){var n=t.bandwidth()/2;return t.round()&&(n=Math.round(n)),function(e){return t(e)+n}}function yo(){return!this.__axis}function go(t,n){function e(e){var s,f=null==i?n.ticks?n.ticks.apply(n,r):n.domain():i,l=null==o?n.tickFormat?n.tickFormat.apply(n,r):ig:o,h=Math.max(u,0)+c,p=t===og||t===ag?po:vo,d=n.range(),v=d[0]+.5,_=d[d.length-1]+.5,y=(n.bandwidth?_o:ig)(n.copy()),g=e.selection?e.selection():e,m=g.selectAll(".domain").data([null]),x=g.selectAll(".tick").data(f,n).order(),b=x.exit(),w=x.enter().append("g").attr("class","tick"),M=x.select("line"),T=x.select("text"),N=t===og||t===cg?-1:1,k=t===cg||t===ug?(s="x","y"):(s="y","x");m=m.merge(m.enter().insert("path",".tick").attr("class","domain").attr("stroke","#000")),x=x.merge(w),M=M.merge(w.append("line").attr("stroke","#000").attr(s+"2",N*u).attr(k+"1",.5).attr(k+"2",.5)),T=T.merge(w.append("text").attr("fill","#000").attr(s,N*h).attr(k,.5).attr("dy",t===og?"0em":t===ag?"0.71em":"0.32em")),e!==g&&(m=m.transition(e),x=x.transition(e),M=M.transition(e),T=T.transition(e),b=b.transition(e).attr("opacity",sg).attr("transform",function(t){return p(y,this.parentNode.__axis||y,t)}),w.attr("opacity",sg).attr("transform",function(t){return p(this.parentNode.__axis||y,y,t)})),b.remove(),m.attr("d",t===cg||t==ug?"M"+N*a+","+v+"H0.5V"+_+"H"+N*a:"M"+v+","+N*a+"V0.5H"+_+"V"+N*a),x.attr("opacity",1).attr("transform",function(t){return p(y,y,t)}),M.attr(s+"2",N*u),T.attr(s,N*h).text(l),g.filter(yo).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===ug?"start":t===cg?"end":"middle"),g.each(function(){this.__axis=y})}var r=[],i=null,o=null,u=6,a=6,c=3;return e.scale=function(t){return arguments.length?(n=t,e):n},e.ticks=function(){return r=rg.call(arguments),e},e.tickArguments=function(t){return arguments.length?(r=null==t?[]:rg.call(t),e):r.slice()},e.tickValues=function(t){return arguments.length?(i=null==t?null:rg.call(t),e):i&&i.slice()},e.tickFormat=function(t){return arguments.length?(o=t,e):o},e.tickSize=function(t){return arguments.length?(u=a=+t,e):u},e.tickSizeInner=function(t){return arguments.length?(u=+t,e):u},e.tickSizeOuter=function(t){return arguments.length?(a=+t,e):a},e.tickPadding=function(t){return arguments.length?(c=+t,e):c},e}function mo(t){return go(og,t)}function xo(t){return go(ug,t)}function bo(t){return go(ag,t)}function wo(t){return go(cg,t)}function Mo(t,n){return t.parent===n.parent?1:2}function To(t){return t.reduce(No,0)/t.length}function No(t,n){return t+n.x}function ko(t){return 1+t.reduce(So,0)}function So(t,n){return Math.max(t,n.y)}function Ao(t){for(var n;n=t.children;)t=n[0];return t}function Eo(t){for(var n;n=t.children;)t=n[n.length-1];return t}function Co(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;for(t=e.pop(),n=r.pop();t===n;)i=t,t=e.pop(),n=r.pop();return i}function zo(t,n){var e,r,i,o,u,a=new Uo(t),c=+t.value&&(a.value=t.value),s=[a];for(null==n&&(n=qo);e=s.pop();)if(c&&(e.value=+e.data.value),(i=n(e.data))&&(u=i.length))for(e.children=new Array(u),o=u-1;o>=0;--o)s.push(r=e.children[o]=new Uo(i[o])),r.parent=e,r.depth=e.depth+1;return a.eachBefore(Ro)}function Po(){return zo(this).eachBefore(Lo)}function qo(t){return t.children}function Lo(t){t.data=t.data.data}function Ro(t){var n=0;do t.height=n;while((t=t.parent)&&t.height<++n)}function Uo(t){this.data=t,this.depth=this.height=0,this.parent=null}function Do(t){this._=t,this.next=null}function Oo(t,n){var e=n.x-t.x,r=n.y-t.y,i=t.r-n.r;return i*i+1e-6>e*e+r*r}function Fo(t,n){var e,r,i,o=null,u=t.head;switch(n.length){case 1:e=Io(n[0]);break;case 2:e=Yo(n[0],n[1]);break;case 3:e=Bo(n[0],n[1],n[2])}for(;u;)i=u._,r=u.next,e&&Oo(e,i)?o=u:(o?(t.tail=o,o.next=null):t.head=t.tail=null,n.push(i),e=Fo(t,n),n.pop(),t.head?(u.next=t.head,t.head=u):(u.next=null,t.head=t.tail=u),o=t.tail,o.next=r),u=r;return t.tail=o,e}function Io(t){return{x:t.x,y:t.y,r:t.r}}function Yo(t,n){var e=t.x,r=t.y,i=t.r,o=n.x,u=n.y,a=n.r,c=o-e,s=u-r,f=a-i,l=Math.sqrt(c*c+s*s);return{x:(e+o+c/l*f)/2,y:(r+u+s/l*f)/2,r:(l+i+a)/2}}function Bo(t,n,e){var r=t.x,i=t.y,o=t.r,u=n.x,a=n.y,c=n.r,s=e.x,f=e.y,l=e.r,h=2*(r-u),p=2*(i-a),d=2*(c-o),v=r*r+i*i-o*o-u*u-a*a+c*c,_=2*(r-s),y=2*(i-f),g=2*(l-o),m=r*r+i*i-o*o-s*s-f*f+l*l,x=_*p-h*y,b=(p*m-y*v)/x-r,w=(y*d-p*g)/x,M=(_*v-h*m)/x-i,T=(h*g-_*d)/x,N=w*w+T*T-1,k=2*(b*w+M*T+o),S=b*b+M*M-o*o,A=(-k-Math.sqrt(k*k-4*N*S))/(2*N);return{x:b+w*A+r,y:M+T*A+i,r:A}}function jo(t,n,e){var r=t.x,i=t.y,o=n.r+e.r,u=t.r+e.r,a=n.x-r,c=n.y-i,s=a*a+c*c;if(s){var f=.5+((u*=u)-(o*=o))/(2*s),l=Math.sqrt(Math.max(0,2*o*(u+s)-(u-=s)*u-o*o))/(2*s);e.x=r+f*a+l*c,e.y=i+f*c-l*a}else e.x=r+u,e.y=i}function Ho(t,n){var e=n.x-t.x,r=n.y-t.y,i=t.r+n.r;return i*i>e*e+r*r}function Xo(t,n,e){var r=t.x-n,i=t.y-e;return r*r+i*i}function Vo(t){this._=t,this.next=null,this.previous=null}function Wo(t){if(!(i=t.length))return 0;var n,e,r,i;if(n=t[0],n.x=0,n.y=0,!(i>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(i>2))return n.r+e.r;jo(e,n,r=t[2]);var o,u,a,c,s,f,l,h=n.r*n.r,p=e.r*e.r,d=r.r*r.r,v=h+p+d,_=h*n.x+p*e.x+d*r.x,y=h*n.y+p*e.y+d*r.y;n=new Vo(n),e=new Vo(e),r=new Vo(r),n.next=r.previous=e,e.next=n.previous=r,r.next=e.previous=n;t:for(a=3;a<i;++a){if(jo(n._,e._,r=t[a]),r=new Vo(r),(s=n.previous)===(c=e.next)){if(Ho(c._,r._)){n=e,e=c,--a;continue t}}else{f=c._.r,l=s._.r;do if(f<=l){if(Ho(c._,r._)){e=c,n.next=e,e.previous=n,--a;continue t}c=c.next,f+=c._.r}else{if(Ho(s._,r._)){n=s,n.next=e,e.previous=n,--a;continue t}s=s.previous,l+=s._.r}while(c!==s.next)}for(r.previous=n,r.next=e,n.next=e.previous=e=r,v+=d=r._.r*r._.r,_+=d*r._.x,y+=d*r._.y,h=Xo(n._,o=_/v,u=y/v);(r=r.next)!==e;)(d=Xo(r._,o,u))<h&&(n=r,h=d);e=n.next}for(n=[e._],r=e;(r=r.next)!==e;)n.push(r._);for(r=wg(n),a=0;a<i;++a)n=t[a],n.x-=r.x,n.y-=r.y;return r.r}function $o(t){return null==t?null:Zo(t)}function Zo(t){if("function"!=typeof t)throw new Error;return t}function Go(){return 0}function Jo(t){return Math.sqrt(t.value)}function Qo(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function Ko(t,n){return function(e){if(r=e.children){var r,i,o,u=r.length,a=t(e)*n||0;if(a)for(i=0;i<u;++i)r[i].r+=a;if(o=Wo(r),a)for(i=0;i<u;++i)r[i].r-=a;e.r=o+a}}}function tu(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}function nu(t){return t.id}function eu(t){return t.parentId}function ru(t,n){return t.parent===n.parent?1:2}function iu(t){var n=t.children;return n?n[0]:t.t}function ou(t){var n=t.children;return n?n[n.length-1]:t.t}function uu(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function au(t){for(var n,e=0,r=0,i=t.children,o=i.length;--o>=0;)n=i[o],n.z+=e,n.m+=e,e+=n.s+(r+=n.c)}function cu(t,n,e){return t.a.parent===n.parent?t.a:e}function su(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}function fu(t){for(var n,e,r,i,o,u=new su(t,0),a=[u];n=a.pop();)if(r=n._.children)for(n.children=new Array(o=r.length),i=o-1;i>=0;--i)a.push(e=n.children[i]=new su(r[i],i)),e.parent=n;return(u.parent=new su(null,0)).children=[u],u}function lu(t,n,e,r,i,o){for(var u,a,c,s,f,l,h,p,d,v,_,y,g=[],m=n.children,x=0,b=m.length,w=n.value;x<b;){for(s=i-e,f=o-r,h=p=l=m[x].value,_=Math.max(f/s,s/f)/(w*t),y=l*l*_,v=Math.max(p/y,y/h),c=x+1;c<b;++c){if(l+=a=m[c].value,a<h&&(h=a),a>p&&(p=a),y=l*l*_,d=Math.max(p/y,y/h),d>v){l-=a;break}v=d}g.push(u={value:l,dice:s<f,children:m.slice(x,c)}),u.dice?Sg(u,e,r,i,w?r+=f*l/w:o):Lg(u,e,r,w?e+=s*l/w:i,o),w-=l,x=c}return g}function hu(t){return t.x+t.vx}function pu(t){return t.y+t.vy}function du(t,n){return n}function vu(t,n){var e=t.get(n);if(!e)throw new Error("missing: "+n);return e}function _u(t){return t.x}function yu(t){return t.y}function gu(){t.event.stopImmediatePropagation()}function mu(t,n){var e=t.document.documentElement,r=_y(t).on("dragstart.drag",null);n&&(r.on("click.drag",Qg,!0),setTimeout(function(){r.on("click.drag",null)},0)),"onselectstart"in e?r.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}function xu(t,n,e,r,i,o,u,a,c,s){this.target=t,this.type=n,this.subject=e,this.identifier=r,this.active=i,this.x=o,this.y=u,this.dx=a,this.dy=c,this._=s}function bu(){return!t.event.button}function wu(){return this.parentNode}function Mu(n){return null==n?{x:t.event.x,y:t.event.y}:n}function Tu(t){return t[0]}function Nu(t){return t[1]}function ku(){this._=null}function Su(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function Au(t,n){var e=n,r=n.R,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function Eu(t,n){var e=n,r=n.L,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function Cu(t){for(;t.L;)t=t.L;return t}function zu(t,n,e,r){var i=[null,null],o=am.push(i)-1;return i.left=t,i.right=n,e&&qu(i,t,n,e),r&&qu(i,n,t,r),om[t.index].halfedges.push(o),om[n.index].halfedges.push(o),i}function Pu(t,n,e){var r=[n,e];return r.left=t,r}function qu(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function Lu(t,n,e,r,i){var o,u=t[0],a=t[1],c=u[0],s=u[1],f=a[0],l=a[1],h=0,p=1,d=f-c,v=l-s;if(o=n-c,d||!(o>0)){if(o/=d,d<0){if(o<h)return;o<p&&(p=o)}else if(d>0){if(o>p)return;o>h&&(h=o)}if(o=r-c,d||!(o<0)){if(o/=d,d<0){if(o>p)return;o>h&&(h=o)}else if(d>0){if(o<h)return;o<p&&(p=o)}if(o=e-s,v||!(o>0)){if(o/=v,v<0){if(o<h)return;o<p&&(p=o)}else if(v>0){if(o>p)return;o>h&&(h=o)}if(o=i-s,v||!(o<0)){if(o/=v,v<0){if(o>p)return;o>h&&(h=o)}else if(v>0){if(o<h)return;o<p&&(p=o)}return!(h>0||p<1)||(h>0&&(t[0]=[c+h*d,s+h*v]),p<1&&(t[1]=[c+p*d,s+p*v]),!0)}}}}}function Ru(t,n,e,r,i){var o=t[1];if(o)return!0;var u,a,c=t[0],s=t.left,f=t.right,l=s[0],h=s[1],p=f[0],d=f[1],v=(l+p)/2,_=(h+d)/2;if(d===h){if(v<n||v>=r)return;if(l>p){if(c){if(c[1]>=i)return}else c=[v,e];o=[v,i]}else{if(c){if(c[1]<e)return}else c=[v,i];o=[v,e]}}else if(u=(l-p)/(d-h),a=_-u*v,u<-1||u>1)if(l>p){if(c){if(c[1]>=i)return}else c=[(e-a)/u,e];o=[(i-a)/u,i]}else{if(c){if(c[1]<e)return}else c=[(i-a)/u,i];o=[(e-a)/u,e]}else if(h<d){if(c){if(c[0]>=r)return}else c=[n,u*n+a];o=[r,u*r+a]}else{if(c){if(c[0]<n)return}else c=[r,u*r+a];o=[n,u*n+a]}return t[0]=c,t[1]=o,!0}function Uu(t,n,e,r){for(var i,o=am.length;o--;)Ru(i=am[o],t,n,e,r)&&Lu(i,t,n,e,r)&&(Math.abs(i[0][0]-i[1][0])>fm||Math.abs(i[0][1]-i[1][1])>fm)||delete am[o]}function Du(t){return om[t.index]={site:t,halfedges:[]}}function Ou(t,n){var e=t.site,r=n.left,i=n.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function Fu(t,n){return n[+(n.left!==t.site)]}function Iu(t,n){return n[+(n.left===t.site)]}function Yu(){for(var t,n,e,r,i=0,o=om.length;i<o;++i)if((t=om[i])&&(r=(n=t.halfedges).length)){var u=new Array(r),a=new Array(r);for(e=0;e<r;++e)u[e]=e,a[e]=Ou(t,am[n[e]]);for(u.sort(function(t,n){return a[n]-a[t]}),e=0;e<r;++e)a[e]=n[u[e]];for(e=0;e<r;++e)n[e]=a[e]}}function Bu(t,n,e,r){var i,o,u,a,c,s,f,l,h,p,d,v,_=om.length,y=!0;for(i=0;i<_;++i)if(o=om[i]){for(u=o.site,c=o.halfedges,a=c.length;a--;)am[c[a]]||c.splice(a,1);for(a=0,s=c.length;a<s;)p=Iu(o,am[c[a]]),d=p[0],v=p[1],f=Fu(o,am[c[++a%s]]),l=f[0],h=f[1],(Math.abs(d-l)>fm||Math.abs(v-h)>fm)&&(c.splice(a,0,am.push(Pu(u,p,Math.abs(d-t)<fm&&r-v>fm?[t,Math.abs(l-t)<fm?h:r]:Math.abs(v-r)<fm&&e-d>fm?[Math.abs(h-r)<fm?l:e,r]:Math.abs(d-e)<fm&&v-n>fm?[e,Math.abs(l-e)<fm?h:n]:Math.abs(v-n)<fm&&d-t>fm?[Math.abs(h-n)<fm?l:t,n]:null))-1),++s);s&&(y=!1)}if(y){var g,m,x,b=1/0;for(i=0,y=null;i<_;++i)(o=om[i])&&(u=o.site,g=u[0]-t,m=u[1]-n,x=g*g+m*m,x<b&&(b=x,y=o));if(y){var w=[t,n],M=[t,r],T=[e,r],N=[e,n];y.halfedges.push(am.push(Pu(u=y.site,w,M))-1,am.push(Pu(u,M,T))-1,am.push(Pu(u,T,N))-1,am.push(Pu(u,N,w))-1)}}for(i=0;i<_;++i)(o=om[i])&&(o.halfedges.length||delete om[i])}function ju(){Su(this),this.x=this.y=this.arc=this.site=this.cy=null}function Hu(t){var n=t.P,e=t.N;if(n&&e){var r=n.site,i=t.site,o=e.site;if(r!==o){var u=i[0],a=i[1],c=r[0]-u,s=r[1]-a,f=o[0]-u,l=o[1]-a,h=2*(c*l-s*f);if(!(h>=-lm)){var p=c*c+s*s,d=f*f+l*l,v=(l*p-s*d)/h,_=(c*d-f*p)/h,y=cm.pop()||new ju;y.arc=t,y.site=i,y.x=v+u,y.y=(y.cy=_+a)+Math.sqrt(v*v+_*_),t.circle=y;for(var g=null,m=um._;m;)if(y.y<m.y||y.y===m.y&&y.x<=m.x){if(!m.L){g=m.P;break}m=m.L}else{if(!m.R){g=m;break}m=m.R}um.insert(g,y),g||(rm=y)}}}}function Xu(t){var n=t.circle;n&&(n.P||(rm=n.N),um.remove(n),cm.push(n),Su(n),t.circle=null)}function Vu(){Su(this),this.edge=this.site=this.circle=null}function Wu(t){var n=sm.pop()||new Vu;return n.site=t,n}function $u(t){Xu(t),im.remove(t),sm.push(t),Su(t)}function Zu(t){var n=t.circle,e=n.x,r=n.cy,i=[e,r],o=t.P,u=t.N,a=[t];$u(t);for(var c=o;c.circle&&Math.abs(e-c.circle.x)<fm&&Math.abs(r-c.circle.cy)<fm;)o=c.P,a.unshift(c),$u(c),c=o;a.unshift(c),Xu(c);for(var s=u;s.circle&&Math.abs(e-s.circle.x)<fm&&Math.abs(r-s.circle.cy)<fm;)u=s.N,a.push(s),$u(s),s=u;a.push(s),Xu(s);var f,l=a.length;for(f=1;f<l;++f)s=a[f],c=a[f-1],qu(s.edge,c.site,s.site,i);c=a[0],s=a[l-1],s.edge=zu(c.site,s.site,null,i),Hu(c),Hu(s)}function Gu(t){for(var n,e,r,i,o=t[0],u=t[1],a=im._;a;)if(r=Ju(a,u)-o,r>fm)a=a.L;else{if(i=o-Qu(a,u),!(i>fm)){r>-fm?(n=a.P,e=a):i>-fm?(n=a,e=a.N):n=e=a;break}if(!a.R){n=a;break}a=a.R}Du(t);var c=Wu(t);if(im.insert(n,c),n||e){if(n===e)return Xu(n),e=Wu(n.site),im.insert(c,e),c.edge=e.edge=zu(n.site,c.site),Hu(n),void Hu(e);if(!e)return void(c.edge=zu(n.site,c.site));Xu(n),Xu(e);var s=n.site,f=s[0],l=s[1],h=t[0]-f,p=t[1]-l,d=e.site,v=d[0]-f,_=d[1]-l,y=2*(h*_-p*v),g=h*h+p*p,m=v*v+_*_,x=[(_*g-p*m)/y+f,(h*m-v*g)/y+l];qu(e.edge,s,d,x),c.edge=zu(s,t,null,x),e.edge=zu(t,d,null,x),Hu(n),Hu(e)}}function Ju(t,n){var e=t.site,r=e[0],i=e[1],o=i-n;if(!o)return r;var u=t.P;if(!u)return-(1/0);e=u.site;var a=e[0],c=e[1],s=c-n;if(!s)return a;var f=a-r,l=1/o-1/s,h=f/s;return l?(-h+Math.sqrt(h*h-2*l*(f*f/(-2*s)-c+s/2+i-o/2)))/l+r:(r+a)/2}function Qu(t,n){var e=t.N;if(e)return Ju(e,n);var r=t.site;return r[1]===n?r[0]:1/0}function Ku(t,n,e){return(t[0]-e[0])*(n[1]-t[1])-(t[0]-n[0])*(e[1]-t[1])}function ta(t,n){return n[1]-t[1]||n[0]-t[0]}function na(t,n){var e,r,i,o=t.sort(ta).pop();for(am=[],om=new Array(t.length),im=new ku,um=new ku;;)if(i=rm,o&&(!i||o[1]<i.y||o[1]===i.y&&o[0]<i.x))o[0]===e&&o[1]===r||(Gu(o),e=o[0],r=o[1]),o=t.pop();else{if(!i)break;Zu(i.arc)}if(Yu(),n){var u=+n[0][0],a=+n[0][1],c=+n[1][0],s=+n[1][1];Uu(u,a,c,s),Bu(u,a,c,s)}this.edges=am,this.cells=om,im=um=am=om=null}function ea(t,n,e){this.target=t,this.type=n,this.transform=e}function ra(t,n,e){this.k=t,this.x=n,this.y=e}function ia(t){return t.__zoom||dm}function oa(){t.event.stopImmediatePropagation()}function ua(){return!t.event.button}function aa(){var t,n,e=this;return e instanceof SVGElement?(e=e.ownerSVGElement||e,t=e.width.baseVal.value,n=e.height.baseVal.value):(t=e.clientWidth,n=e.clientHeight),[[0,0],[t,n]]}function ca(){return this.__zoom||dm}function sa(){t.event.stopImmediatePropagation()}function fa(t){return{type:t}}function la(){return!t.event.button}function ha(){var t=this.ownerSVGElement||this;return[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function pa(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function da(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function va(t){var n=t.__brush;return n?n.dim.output(n.selection):null}function _a(){return ga(Tm)}function ya(){return ga(Nm)}function ga(n){function e(t){var e=t.property("__brush",a).selectAll(".overlay").data([fa("overlay")]);e.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",Sm.overlay).merge(e).each(function(){var t=pa(this).extent;_y(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])}),t.selectAll(".selection").data([fa("selection")]).enter().append("rect").attr("class","selection").attr("cursor",Sm.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var i=t.selectAll(".handle").data(n.handles,function(t){return t.type});i.exit().remove(),i.enter().append("rect").attr("class",function(t){return"handle handle--"+t.type}).attr("cursor",function(t){return Sm[t.type]}),t.each(r).attr("fill","none").attr("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush touchstart.brush",u)}function r(){var t=_y(this),n=pa(this).selection;n?(t.selectAll(".selection").style("display",null).attr("x",n[0][0]).attr("y",n[0][1]).attr("width",n[1][0]-n[0][0]).attr("height",n[1][1]-n[0][1]),t.selectAll(".handle").style("display",null).attr("x",function(t){return"e"===t.type[t.type.length-1]?n[1][0]-h/2:n[0][0]-h/2}).attr("y",function(t){return"s"===t.type[0]?n[1][1]-h/2:n[0][1]-h/2}).attr("width",function(t){return"n"===t.type||"s"===t.type?n[1][0]-n[0][0]+h:h}).attr("height",function(t){return"e"===t.type||"w"===t.type?n[1][1]-n[0][1]+h:h})):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function i(t,n){return t.__brush.emitter||new o(t,n)}function o(t,n){this.that=t,this.args=n,this.state=t.__brush,this.active=0}function u(){function e(){var t=L_(T);!U||w||M||(Math.abs(t[0]-O[0])>Math.abs(t[1]-O[1])?M=!0:w=!0),O=t,b=!0,mm(),o()}function o(){var t;switch(m=O[0]-D[0],x=O[1]-D[1],k){case bm:case xm:S&&(m=Math.max(P-l,Math.min(L-v,m)),h=l+m,_=v+m),A&&(x=Math.max(q-p,Math.min(R-y,x)),d=p+x,g=y+x);break;case wm:S<0?(m=Math.max(P-l,Math.min(L-l,m)),h=l+m,_=v):S>0&&(m=Math.max(P-v,Math.min(L-v,m)),h=l,_=v+m),A<0?(x=Math.max(q-p,Math.min(R-p,x)),d=p+x,g=y):A>0&&(x=Math.max(q-y,Math.min(R-y,x)),d=p,g=y+x);break;case Mm:S&&(h=Math.max(P,Math.min(L,l-m*S)),_=Math.max(P,Math.min(L,v+m*S))),A&&(d=Math.max(q,Math.min(R,p-x*A)),g=Math.max(q,Math.min(R,y+x*A)))}_<h&&(S*=-1,t=l,l=v,v=t,t=h,h=_,_=t,N in Am&&Y.attr("cursor",Sm[N=Am[N]])),g<d&&(A*=-1,t=p,p=y,y=t,t=d,d=g,g=t,N in Em&&Y.attr("cursor",Sm[N=Em[N]])),E.selection&&(z=E.selection),w&&(h=z[0][0],_=z[1][0]),M&&(d=z[0][1],g=z[1][1]),z[0][0]===h&&z[0][1]===d&&z[1][0]===_&&z[1][1]===g||(E.selection=[[h,d],[_,g]],r.call(T),F.brush())}function u(){if(sa(),t.event.touches){if(t.event.touches.length)return;c&&clearTimeout(c),c=setTimeout(function(){c=null},500),I.on("touchmove.brush touchend.brush touchcancel.brush",null)}else mu(t.event.view,b),B.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);I.attr("pointer-events","all"),Y.attr("cursor",Sm.overlay),E.selection&&(z=E.selection),da(z)&&(E.selection=null,r.call(T)),F.end()}function a(){switch(t.event.keyCode){case 16:U=S&&A;break;case 18:k===wm&&(S&&(v=_-m*S,l=h+m*S),A&&(y=g-x*A,p=d+x*A),k=Mm,o());break;case 32:k!==wm&&k!==Mm||(S<0?v=_-m:S>0&&(l=h-m),A<0?y=g-x:A>0&&(p=d-x),k=bm,Y.attr("cursor",Sm.selection),o());break;default:return}mm()}function s(){switch(t.event.keyCode){case 16:U&&(w=M=U=!1,o());break;case 18:k===Mm&&(S<0?v=_:S>0&&(l=h),A<0?y=g:A>0&&(p=d),k=wm,o());break;case 32:k===bm&&(t.event.altKey?(S&&(v=_-m*S,l=h+m*S),A&&(y=g-x*A,p=d+x*A),k=Mm):(S<0?v=_:S>0&&(l=h),A<0?y=g:A>0&&(p=d),k=wm),Y.attr("cursor",Sm[N]),o());break;default:return}mm()}if(t.event.touches){if(t.event.changedTouches.length<t.event.touches.length)return mm()}else if(c)return;if(f.apply(this,arguments)){var l,h,p,d,v,_,y,g,m,x,b,w,M,T=this,N=t.event.target.__data__.type,k="selection"===(t.event.metaKey?N="overlay":N)?xm:t.event.altKey?Mm:wm,S=n===Nm?null:Cm[N],A=n===Tm?null:zm[N],E=pa(T),C=E.extent,z=E.selection,P=C[0][0],q=C[0][1],L=C[1][0],R=C[1][1],U=S&&A&&t.event.shiftKey,D=L_(T),O=D,F=i(T,arguments).beforestart();"overlay"===N?E.selection=z=[[l=n===Nm?P:D[0],p=n===Tm?q:D[1]],[v=n===Nm?L:l,y=n===Tm?R:p]]:(l=z[0][0],p=z[0][1],v=z[1][0],y=z[1][1]),h=l,d=p,_=v,g=y;var I=_y(T).attr("pointer-events","none"),Y=I.selectAll(".overlay").attr("cursor",Sm[N]);if(t.event.touches)I.on("touchmove.brush",e,!0).on("touchend.brush touchcancel.brush",u,!0);else{var B=_y(t.event.view).on("keydown.brush",a,!0).on("keyup.brush",s,!0).on("mousemove.brush",e,!0).on("mouseup.brush",u,!0);Kg(t.event.view)}sa(),Cy(T),r.call(T),F.start()}}function a(){var t=this.__brush||{selection:null};return t.extent=s.apply(this,arguments),t.dim=n,t}var c,s=ha,f=la,l=Pn(e,"start","brush","end"),h=6;return e.move=function(t,e){t.selection?t.on("start.brush",function(){i(this,arguments).beforestart().start()}).on("interrupt.brush end.brush",function(){i(this,arguments).end()}).tween("brush",function(){function t(t){u.selection=1===t&&da(s)?null:f(t),r.call(o),a.brush()}var o=this,u=o.__brush,a=i(o,arguments),c=u.selection,s=n.input("function"==typeof e?e.apply(this,arguments):e,u.extent),f=dp(c,s);
return c&&s?t:t(1)}):t.each(function(){var t=this,o=arguments,u=t.__brush,a=n.input("function"==typeof e?e.apply(t,o):e,u.extent),c=i(t,o).beforestart();Cy(t),u.selection=null==a||da(a)?null:a,r.call(t),c.start().brush().end()})},o.prototype={beforestart:function(){return 1===++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit("start")),this},brush:function(){return this.emit("brush"),this},end:function(){return 0===--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(t){Xr(new gm(e,t,n.output(this.state.selection)),l.apply,l,[t,this.that,this.args])}},e.extent=function(t){return arguments.length?(s="function"==typeof t?t:ym([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),e):s},e.filter=function(t){return arguments.length?(f="function"==typeof t?t:ym(!!t),e):f},e.handleSize=function(t){return arguments.length?(h=+t,e):h},e.on=function(){var t=l.on.apply(l,arguments);return t===l?e:t},e}function ma(t){return function(n,e){return t(n.source.value+n.target.value,e.source.value+e.target.value)}}function xa(t){return t.source}function ba(t){return t.target}function wa(t){return t.radius}function Ma(t){return t.startAngle}function Ta(t){return t.endAngle}function Na(){this.reset()}function ka(t,n,e){var r=t.s=n+e,i=r-n,o=r-i;t.t=n-o+(e-i)}function Sa(t){return t>1?0:t<-1?Tx:Math.acos(t)}function Aa(t){return t>1?Nx:t<-1?-Nx:Math.asin(t)}function Ea(t){return(t=Ox(t/2))*t}function Ca(){}function za(t,n){t&&jx.hasOwnProperty(t.type)&&jx[t.type](t,n)}function Pa(t,n,e){var r,i=-1,o=t.length-e;for(n.lineStart();++i<o;)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function qa(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)Pa(t[e],n,1);n.polygonEnd()}function La(){Wx.point=Ua}function Ra(){Da(Hm,Xm)}function Ua(t,n){Wx.point=Da,Hm=t,Xm=n,t*=Ex,n*=Ex,Vm=t,Wm=qx(n=n/2+kx),$m=Ox(n)}function Da(t,n){t*=Ex,n*=Ex,n=n/2+kx;var e=t-Vm,r=e>=0?1:-1,i=r*e,o=qx(n),u=Ox(n),a=$m*u,c=Wm*o+a*qx(i),s=a*r*Ox(i);Xx.add(Px(s,c)),Vm=t,Wm=o,$m=u}function Oa(t){return[Px(t[1],t[0]),Aa(t[2])]}function Fa(t){var n=t[0],e=t[1],r=qx(e);return[r*qx(n),r*Ox(n),Ox(e)]}function Ia(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function Ya(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function Ba(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function ja(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function Ha(t){var n=Ix(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}function Xa(t,n){rx.push(ix=[Zm=t,Jm=t]),n<Gm&&(Gm=n),n>Qm&&(Qm=n)}function Va(t,n){var e=Fa([t*Ex,n*Ex]);if(ex){var r=Ya(ex,e),i=[r[1],-r[0],0],o=Ya(i,r);Ha(o),o=Oa(o);var u,a=t-Km,c=a>0?1:-1,s=o[0]*Ax*c,f=Cx(a)>180;f^(c*Km<s&&s<c*t)?(u=o[1]*Ax,u>Qm&&(Qm=u)):(s=(s+360)%360-180,f^(c*Km<s&&s<c*t)?(u=-o[1]*Ax,u<Gm&&(Gm=u)):(n<Gm&&(Gm=n),n>Qm&&(Qm=n))),f?t<Km?Qa(Zm,t)>Qa(Zm,Jm)&&(Jm=t):Qa(t,Jm)>Qa(Zm,Jm)&&(Zm=t):Jm>=Zm?(t<Zm&&(Zm=t),t>Jm&&(Jm=t)):t>Km?Qa(Zm,t)>Qa(Zm,Jm)&&(Jm=t):Qa(t,Jm)>Qa(Zm,Jm)&&(Zm=t)}else Xa(t,n);ex=e,Km=t}function Wa(){Gx.point=Va}function $a(){ix[0]=Zm,ix[1]=Jm,Gx.point=Xa,ex=null}function Za(t,n){if(ex){var e=t-Km;Zx.add(Cx(e)>180?e+(e>0?360:-360):e)}else tx=t,nx=n;Wx.point(t,n),Va(t,n)}function Ga(){Wx.lineStart()}function Ja(){Za(tx,nx),Wx.lineEnd(),Cx(Zx)>wx&&(Zm=-(Jm=180)),ix[0]=Zm,ix[1]=Jm,ex=null}function Qa(t,n){return(n-=t)<0?n+360:n}function Ka(t,n){return t[0]-n[0]}function tc(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}function nc(t,n){t*=Ex,n*=Ex;var e=qx(n);ec(e*qx(t),e*Ox(t),Ox(n))}function ec(t,n,e){++ox,ax+=(t-ax)/ox,cx+=(n-cx)/ox,sx+=(e-sx)/ox}function rc(){Qx.point=ic}function ic(t,n){t*=Ex,n*=Ex;var e=qx(n);gx=e*qx(t),mx=e*Ox(t),xx=Ox(n),Qx.point=oc,ec(gx,mx,xx)}function oc(t,n){t*=Ex,n*=Ex;var e=qx(n),r=e*qx(t),i=e*Ox(t),o=Ox(n),u=Px(Ix((u=mx*o-xx*i)*u+(u=xx*r-gx*o)*u+(u=gx*i-mx*r)*u),gx*r+mx*i+xx*o);ux+=u,fx+=u*(gx+(gx=r)),lx+=u*(mx+(mx=i)),hx+=u*(xx+(xx=o)),ec(gx,mx,xx)}function uc(){Qx.point=nc}function ac(){Qx.point=sc}function cc(){fc(_x,yx),Qx.point=nc}function sc(t,n){_x=t,yx=n,t*=Ex,n*=Ex,Qx.point=fc;var e=qx(n);gx=e*qx(t),mx=e*Ox(t),xx=Ox(n),ec(gx,mx,xx)}function fc(t,n){t*=Ex,n*=Ex;var e=qx(n),r=e*qx(t),i=e*Ox(t),o=Ox(n),u=mx*o-xx*i,a=xx*r-gx*o,c=gx*i-mx*r,s=Ix(u*u+a*a+c*c),f=gx*r+mx*i+xx*o,l=s&&-Sa(f)/s,h=Px(s,f);px+=l*u,dx+=l*a,vx+=l*c,ux+=h,fx+=h*(gx+(gx=r)),lx+=h*(mx+(mx=i)),hx+=h*(xx+(xx=o)),ec(gx,mx,xx)}function lc(t,n){return[t>Tx?t-Sx:t<-Tx?t+Sx:t,n]}function hc(t,n,e){return(t%=Sx)?n||e?nb(dc(t),vc(n,e)):dc(t):n||e?vc(n,e):lc}function pc(t){return function(n,e){return n+=t,[n>Tx?n-Sx:n<-Tx?n+Sx:n,e]}}function dc(t){var n=pc(t);return n.invert=pc(-t),n}function vc(t,n){function e(t,n){var e=qx(n),a=qx(t)*e,c=Ox(t)*e,s=Ox(n),f=s*r+a*i;return[Px(c*o-f*u,a*r-s*i),Aa(f*o+c*u)]}var r=qx(t),i=Ox(t),o=qx(n),u=Ox(n);return e.invert=function(t,n){var e=qx(n),a=qx(t)*e,c=Ox(t)*e,s=Ox(n),f=s*o-c*u;return[Px(c*o+s*u,a*r+f*i),Aa(f*r-a*i)]},e}function _c(t,n,e,r,i,o){if(e){var u=qx(n),a=Ox(n),c=r*e;null==i?(i=n+r*Sx,o=n-c/2):(i=yc(u,i),o=yc(u,o),(r>0?i<o:i>o)&&(i+=r*Sx));for(var s,f=i;r>0?f>o:f<o;f-=c)s=Oa([u,-a*qx(f),-a*Ox(f)]),t.point(s[0],s[1])}}function yc(t,n){n=Fa(n),n[0]-=t,Ha(n);var e=Sa(-n[1]);return((-n[2]<0?-e:e)+Sx-wx)%Sx}function gc(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function mc(t){if(n=t.length){for(var n,e,r=0,i=t[0];++r<n;)i.n=e=t[r],e.p=i,i=e;i.n=e=t[0],e.p=i}}function xc(t,n,e,r){function i(i,o){return t<=i&&i<=e&&n<=o&&o<=r}function o(i,o,a,s){var f=0,l=0;if(null==i||(f=u(i,a))!==(l=u(o,a))||c(i,o)<0^a>0){do s.point(0===f||3===f?t:e,f>1?r:n);while((f=(f+a+4)%4)!==l)}else s.point(o[0],o[1])}function u(r,i){return Cx(r[0]-t)<wx?i>0?0:3:Cx(r[0]-e)<wx?i>0?2:1:Cx(r[1]-n)<wx?i>0?1:0:i>0?3:2}function a(t,n){return c(t.x,n.x)}function c(t,n){var e=u(t,1),r=u(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(u){function c(t,n){i(t,n)&&k.point(t,n)}function s(){for(var n=0,e=0,i=_.length;e<i;++e)for(var o,u,a=_[e],c=1,s=a.length,f=a[0],l=f[0],h=f[1];c<s;++c)o=l,u=h,f=a[c],l=f[0],h=f[1],u<=r?h>r&&(l-o)*(r-u)>(h-u)*(t-o)&&++n:h<=r&&(l-o)*(r-u)<(h-u)*(t-o)&&--n;return n}function f(){k=S,v=[],_=[],N=!0}function l(){var t=s(),n=N&&t,e=(v=Zs(v)).length;(n||e)&&(u.polygonStart(),n&&(u.lineStart(),o(null,null,1,u),u.lineEnd()),e&&gb(v,a,t,o,u),u.polygonEnd()),k=u,v=_=y=null}function h(){A.point=d,_&&_.push(y=[]),T=!0,M=!1,b=w=NaN}function p(){v&&(d(g,m),x&&M&&S.rejoin(),v.push(S.result())),A.point=c,M&&k.lineEnd()}function d(o,u){var a=i(o,u);if(_&&y.push([o,u]),T)g=o,m=u,x=a,T=!1,a&&(k.lineStart(),k.point(o,u));else if(a&&M)k.point(o,u);else{var c=[b=Math.max(xb,Math.min(mb,b)),w=Math.max(xb,Math.min(mb,w))],s=[o=Math.max(xb,Math.min(mb,o)),u=Math.max(xb,Math.min(mb,u))];_b(c,s,t,n,e,r)?(M||(k.lineStart(),k.point(c[0],c[1])),k.point(s[0],s[1]),a||k.lineEnd(),N=!1):a&&(k.lineStart(),k.point(o,u),N=!1)}b=o,w=u,M=a}var v,_,y,g,m,x,b,w,M,T,N,k=u,S=vb(),A={point:c,lineStart:h,lineEnd:p,polygonStart:f,polygonEnd:l};return A}}function bc(){Mb.point=Mc,Mb.lineEnd=wc}function wc(){Mb.point=Mb.lineEnd=Ca}function Mc(t,n){t*=Ex,n*=Ex,eb=t,rb=Ox(n),ib=qx(n),Mb.point=Tc}function Tc(t,n){t*=Ex,n*=Ex;var e=Ox(n),r=qx(n),i=Cx(t-eb),o=qx(i),u=Ox(i),a=r*u,c=ib*e-rb*r*o,s=rb*e+ib*r*o;wb.add(Px(Ix(a*a+c*c),s)),eb=t,rb=e,ib=r}function Nc(t,n,e){var r=Us(t,n-wx,e).concat(n);return function(t){return r.map(function(n){return[t,n]})}}function kc(t,n,e){var r=Us(t,n-wx,e).concat(n);return function(t){return r.map(function(n){return[n,t]})}}function Sc(){qb.point=Ac}function Ac(t,n){qb.point=Ec,ob=ab=t,ub=cb=n}function Ec(t,n){Pb.add(cb*t-ab*n),ab=t,cb=n}function Cc(){Ec(ob,ub)}function zc(t,n){t<Lb&&(Lb=t),t>Ub&&(Ub=t),n<Rb&&(Rb=n),n>Db&&(Db=n)}function Pc(t,n){Fb+=t,Ib+=n,++Yb}function qc(){$b.point=Lc}function Lc(t,n){$b.point=Rc,Pc(lb=t,hb=n)}function Rc(t,n){var e=t-lb,r=n-hb,i=Ix(e*e+r*r);Bb+=i*(lb+t)/2,jb+=i*(hb+n)/2,Hb+=i,Pc(lb=t,hb=n)}function Uc(){$b.point=Pc}function Dc(){$b.point=Fc}function Oc(){Ic(sb,fb)}function Fc(t,n){$b.point=Ic,Pc(sb=lb=t,fb=hb=n)}function Ic(t,n){var e=t-lb,r=n-hb,i=Ix(e*e+r*r);Bb+=i*(lb+t)/2,jb+=i*(hb+n)/2,Hb+=i,i=hb*t-lb*n,Xb+=i*(lb+t),Vb+=i*(hb+n),Wb+=3*i,Pc(lb=t,hb=n)}function Yc(t){this._context=t}function Bc(){this._string=[]}function jc(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}function Hc(t){return t.length>1}function Xc(t,n){return((t=t.x)[0]<0?t[1]-Nx-wx:Nx-t[1])-((n=n.x)[0]<0?n[1]-Nx-wx:Nx-n[1])}function Vc(t){var n,e=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(o,u){var a=o>0?Tx:-Tx,c=Cx(o-e);Cx(c-Tx)<wx?(t.point(e,r=(r+u)/2>0?Nx:-Nx),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),t.point(o,r),n=0):i!==a&&c>=Tx&&(Cx(e-i)<wx&&(e-=i*wx),Cx(o-a)<wx&&(o-=a*wx),r=Wc(e,r,o,u),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),n=0),t.point(e=o,r=u),i=a},lineEnd:function(){t.lineEnd(),e=r=NaN},clean:function(){return 2-n}}}function Wc(t,n,e,r){var i,o,u=Ox(t-e);return Cx(u)>wx?zx((Ox(n)*(o=qx(r))*Ox(e)-Ox(r)*(i=qx(n))*Ox(t))/(i*o*u)):(n+r)/2}function $c(t,n,e,r){var i;if(null==t)i=e*Nx,r.point(-Tx,i),r.point(0,i),r.point(Tx,i),r.point(Tx,0),r.point(Tx,-i),r.point(0,-i),r.point(-Tx,-i),r.point(-Tx,0),r.point(-Tx,i);else if(Cx(t[0]-n[0])>wx){var o=t[0]<n[0]?Tx:-Tx;i=e*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(n[0],n[1])}function Zc(t){function n(){}var e=n.prototype=Object.create(Gc.prototype);for(var r in t)e[r]=t[r];return function(t){var e=new n;return e.stream=t,e}}function Gc(){}function Jc(t,n,e){var r=n[1][0]-n[0][0],i=n[1][1]-n[0][1],o=t.clipExtent&&t.clipExtent();t.scale(150).translate([0,0]),null!=o&&t.clipExtent(null),Hx(e,t.stream(Ob));var u=Ob.result(),a=Math.min(r/(u[1][0]-u[0][0]),i/(u[1][1]-u[0][1])),c=+n[0][0]+(r-a*(u[1][0]+u[0][0]))/2,s=+n[0][1]+(i-a*(u[1][1]+u[0][1]))/2;return null!=o&&t.clipExtent(o),t.scale(150*a).translate([c,s])}function Qc(t){return function(n,e){return Jc(t,[[0,0],n],e)}}function Kc(t){return function(n,e){return Jc(t,n,e)}}function ts(t){return Zc({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}function ns(t,n){function e(r,i,o,u,a,c,s,f,l,h,p,d,v,_){var y=s-r,g=f-i,m=y*y+g*g;if(m>4*n&&v--){var x=u+h,b=a+p,w=c+d,M=Ix(x*x+b*b+w*w),T=Aa(w/=M),N=Cx(Cx(w)-1)<wx||Cx(o-l)<wx?(o+l)/2:Px(b,x),k=t(N,T),S=k[0],A=k[1],E=S-r,C=A-i,z=g*E-y*C;(z*z/m>n||Cx((y*E+g*C)/m-.5)>.3||u*h+a*p+c*d<rw)&&(e(r,i,o,u,a,c,S,A,N,x/=M,b/=M,w,v,_),_.point(S,A),e(S,A,N,x,b,w,s,f,l,h,p,d,v,_))}}return function(n){function r(e,r){e=t(e,r),n.point(e[0],e[1])}function i(){y=NaN,w.point=o,n.lineStart()}function o(r,i){var o=Fa([r,i]),u=t(r,i);e(y,g,_,m,x,b,y=u[0],g=u[1],_=r,m=o[0],x=o[1],b=o[2],ew,n),n.point(y,g)}function u(){w.point=r,n.lineEnd()}function a(){i(),w.point=c,w.lineEnd=s}function c(t,n){o(f=t,n),l=y,h=g,p=m,d=x,v=b,w.point=o}function s(){e(y,g,_,m,x,b,l,h,f,p,d,v,ew,n),w.lineEnd=u,u()}var f,l,h,p,d,v,_,y,g,m,x,b,w={point:r,lineStart:i,lineEnd:u,polygonStart:function(){n.polygonStart(),w.lineStart=a},polygonEnd:function(){n.polygonEnd(),w.lineStart=i}};return w}}function es(t){return rs(function(){return t})()}function rs(t){function n(t){return t=f(t[0]*Ex,t[1]*Ex),[t[0]*_+a,c-t[1]*_]}function e(t){return t=f.invert((t[0]-a)/_,(c-t[1])/_),t&&[t[0]*Ax,t[1]*Ax]}function r(t,n){return t=u(t,n),[t[0]*_+a,c-t[1]*_]}function i(){f=nb(s=hc(b,w,M),u);var t=u(m,x);return a=y-t[0]*_,c=g+t[1]*_,o()}function o(){return d=v=null,n}var u,a,c,s,f,l,h,p,d,v,_=150,y=480,g=250,m=0,x=0,b=0,w=0,M=0,T=null,N=Kb,k=null,S=Cb,A=.5,E=iw(r,A);return n.stream=function(t){return d&&v===t?d:d=ow(N(s,E(S(v=t))))},n.clipAngle=function(t){return arguments.length?(N=+t?tw(T=t*Ex,6*Ex):(T=null,Kb),o()):T*Ax},n.clipExtent=function(t){return arguments.length?(S=null==t?(k=l=h=p=null,Cb):xc(k=+t[0][0],l=+t[0][1],h=+t[1][0],p=+t[1][1]),o()):null==k?null:[[k,l],[h,p]]},n.scale=function(t){return arguments.length?(_=+t,i()):_},n.translate=function(t){return arguments.length?(y=+t[0],g=+t[1],i()):[y,g]},n.center=function(t){return arguments.length?(m=t[0]%360*Ex,x=t[1]%360*Ex,i()):[m*Ax,x*Ax]},n.rotate=function(t){return arguments.length?(b=t[0]%360*Ex,w=t[1]%360*Ex,M=t.length>2?t[2]%360*Ex:0,i()):[b*Ax,w*Ax,M*Ax]},n.precision=function(t){return arguments.length?(E=iw(r,A=t*t),o()):Ix(A)},n.fitExtent=Kc(n),n.fitSize=Qc(n),function(){return u=t.apply(this,arguments),n.invert=u.invert&&e,i()}}function is(t){var n=0,e=Tx/3,r=rs(t),i=r(n,e);return i.parallels=function(t){return arguments.length?r(n=t[0]*Ex,e=t[1]*Ex):[n*Ax,e*Ax]},i}function os(t){function n(t,n){return[t*e,Ox(n)/e]}var e=qx(t);return n.invert=function(t,n){return[t/e,Aa(n*e)]},n}function us(t,n){function e(t,n){var e=Ix(o-2*i*Ox(n))/i;return[e*Ox(t*=i),u-e*qx(t)]}var r=Ox(t),i=(r+Ox(n))/2;if(Cx(i)<wx)return os(t);var o=1+r*(2*i-r),u=Ix(o)/i;return e.invert=function(t,n){var e=u-n;return[Px(t,Cx(e))/i*Fx(e),Aa((o-(t*t+e*e)*i*i)/(2*i))]},e}function as(t){var n=t.length;return{point:function(e,r){for(var i=-1;++i<n;)t[i].point(e,r)},sphere:function(){for(var e=-1;++e<n;)t[e].sphere()},lineStart:function(){for(var e=-1;++e<n;)t[e].lineStart()},lineEnd:function(){for(var e=-1;++e<n;)t[e].lineEnd()},polygonStart:function(){for(var e=-1;++e<n;)t[e].polygonStart()},polygonEnd:function(){for(var e=-1;++e<n;)t[e].polygonEnd()}}}function cs(t){return function(n,e){var r=qx(n),i=qx(e),o=t(r*i);return[o*i*Ox(n),o*Ox(e)]}}function ss(t){return function(n,e){var r=Ix(n*n+e*e),i=t(r),o=Ox(i),u=qx(i);return[Px(n*o,r*u),Aa(r&&e*o/r)]}}function fs(t,n){return[t,Ux(Yx((Nx+n)/2))]}function ls(t){var n,e=es(t),r=e.scale,i=e.translate,o=e.clipExtent;return e.scale=function(t){return arguments.length?(r(t),n&&e.clipExtent(null),e):r()},e.translate=function(t){return arguments.length?(i(t),n&&e.clipExtent(null),e):i()},e.clipExtent=function(t){if(!arguments.length)return n?null:o();if(n=null==t){var u=Tx*r(),a=i();t=[[a[0]-u,a[1]-u],[a[0]+u,a[1]+u]]}return o(t),e},e.clipExtent(null)}function hs(t){return Yx((Nx+t)/2)}function ps(t,n){function e(t,n){o>0?n<-Nx+wx&&(n=-Nx+wx):n>Nx-wx&&(n=Nx-wx);var e=o/Dx(hs(n),i);return[e*Ox(i*t),o-e*qx(i*t)]}var r=qx(t),i=t===n?Ox(t):Ux(r/qx(n))/Ux(hs(n)/hs(t)),o=r*Dx(hs(t),i)/i;return i?(e.invert=function(t,n){var e=o-n,r=Fx(i)*Ix(t*t+e*e);return[Px(t,Cx(e))/i*Fx(e),2*zx(Dx(o/r,1/i))-Nx]},e):fs}function ds(t,n){return[t,n]}function vs(t,n){function e(t,n){var e=o-n,r=i*t;return[e*Ox(r),o-e*qx(r)]}var r=qx(t),i=t===n?Ox(t):(r-qx(n))/(n-t),o=r/i+t;return Cx(i)<wx?ds:(e.invert=function(t,n){var e=o-n;return[Px(t,Cx(e))/i*Fx(e),o-Fx(i)*Ix(t*t+e*e)]},e)}function _s(t,n){var e=qx(n),r=qx(t)*e;return[e*Ox(t)/r,Ox(n)/r]}function ys(t,n){return[qx(n)*Ox(t),Ox(n)]}function gs(t,n){var e=qx(n),r=1+qx(t)*e;return[e*Ox(t)/r,Ox(n)/r]}function ms(t,n){return[Ux(Yx((Nx+n)/2)),-t]}var xs="4.2.8",bs=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},ws=function(t){return 1===t.length&&(t=n(t)),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)<0?r=o+1:i=o}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)>0?i=o:r=o+1}return r}}},Ms=ws(bs),Ts=Ms.right,Ns=Ms.left,ks=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},Ss=function(t){return null===t?NaN:+t},As=function(t,n){var e,r,i=t.length,o=0,u=0,a=-1,c=0;if(null==n)for(;++a<i;)isNaN(e=Ss(t[a]))||(r=e-o,o+=r/++c,u+=r*(e-o));else for(;++a<i;)isNaN(e=Ss(n(t[a],a,t)))||(r=e-o,o+=r/++c,u+=r*(e-o));if(c>1)return u/(c-1)},Es=function(t,n){var e=As(t,n);return e?Math.sqrt(e):e},Cs=function(t,n){var e,r,i,o=-1,u=t.length;if(null==n){for(;++o<u;)if(null!=(r=t[o])&&r>=r){e=i=r;break}for(;++o<u;)null!=(r=t[o])&&(e>r&&(e=r),i<r&&(i=r))}else{for(;++o<u;)if(null!=(r=n(t[o],o,t))&&r>=r){e=i=r;break}for(;++o<u;)null!=(r=n(t[o],o,t))&&(e>r&&(e=r),i<r&&(i=r))}return[e,i]},zs=Array.prototype,Ps=zs.slice,qs=zs.map,Ls=function(t){return function(){return t}},Rs=function(t){return t},Us=function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),o=new Array(i);++r<i;)o[r]=t+r*e;return o},Ds=Math.sqrt(50),Os=Math.sqrt(10),Fs=Math.sqrt(2),Is=function(t,n,r){var i=e(t,n,r);return Us(Math.ceil(t/i)*i,Math.floor(n/i)*i+i/2,i)},Ys=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1},Bs=function(){function t(t){var i,o,u=t.length,a=new Array(u);for(i=0;i<u;++i)a[i]=n(t[i],i,t);var c=e(a),s=c[0],f=c[1],l=r(a,s,f);Array.isArray(l)||(l=Is(s,f,l));for(var h=l.length;l[0]<=s;)l.shift(),--h;for(;l[h-1]>=f;)l.pop(),--h;var p,d=new Array(h+1);for(i=0;i<=h;++i)p=d[i]=[],p.x0=i>0?l[i-1]:s,p.x1=i<h?l[i]:f;for(i=0;i<u;++i)o=a[i],s<=o&&o<=f&&d[Ts(l,o,0,h)].push(t[i]);return d}var n=Rs,e=Cs,r=Ys;return t.value=function(e){return arguments.length?(n="function"==typeof e?e:Ls(e),t):n},t.domain=function(n){return arguments.length?(e="function"==typeof n?n:Ls([n[0],n[1]]),t):e},t.thresholds=function(n){return arguments.length?(r="function"==typeof n?n:Ls(Array.isArray(n)?Ps.call(n):n),t):r},t},js=function(t,n,e){if(null==e&&(e=Ss),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,o=Math.floor(i),u=+e(t[o],o,t),a=+e(t[o+1],o+1,t);return u+(a-u)*(i-o)}},Hs=function(t,n,e){return t=qs.call(t,Ss).sort(bs),Math.ceil((e-n)/(2*(js(t,.75)-js(t,.25))*Math.pow(t.length,-1/3)))},Xs=function(t,n,e){return Math.ceil((e-n)/(3.5*Es(t)*Math.pow(t.length,-1/3)))},Vs=function(t,n){var e,r,i=-1,o=t.length;if(null==n){for(;++i<o;)if(null!=(r=t[i])&&r>=r){e=r;break}for(;++i<o;)null!=(r=t[i])&&r>e&&(e=r)}else{for(;++i<o;)if(null!=(r=n(t[i],i,t))&&r>=r){e=r;break}for(;++i<o;)null!=(r=n(t[i],i,t))&&r>e&&(e=r)}return e},Ws=function(t,n){var e,r=0,i=t.length,o=-1,u=i;if(null==n)for(;++o<i;)isNaN(e=Ss(t[o]))?--u:r+=e;else for(;++o<i;)isNaN(e=Ss(n(t[o],o,t)))?--u:r+=e;if(u)return r/u},$s=function(t,n){var e,r=[],i=t.length,o=-1;if(null==n)for(;++o<i;)isNaN(e=Ss(t[o]))||r.push(e);else for(;++o<i;)isNaN(e=Ss(n(t[o],o,t)))||r.push(e);return js(r.sort(bs),.5)},Zs=function(t){for(var n,e,r,i=t.length,o=-1,u=0;++o<i;)u+=t[o].length;for(e=new Array(u);--i>=0;)for(r=t[i],n=r.length;--n>=0;)e[--u]=r[n];return e},Gs=function(t,n){var e,r,i=-1,o=t.length;if(null==n){for(;++i<o;)if(null!=(r=t[i])&&r>=r){e=r;break}for(;++i<o;)null!=(r=t[i])&&e>r&&(e=r)}else{for(;++i<o;)if(null!=(r=n(t[i],i,t))&&r>=r){e=r;break}for(;++i<o;)null!=(r=n(t[i],i,t))&&e>r&&(e=r)}return e},Js=function(t){for(var n=0,e=t.length-1,r=t[0],i=new Array(e<0?0:e);n<e;)i[n]=[r,r=t[++n]];return i},Qs=function(t,n){for(var e=n.length,r=new Array(e);e--;)r[e]=t[n[e]];return r},Ks=function(t,n){if(e=t.length){var e,r,i=0,o=0,u=t[o];for(n||(n=bs);++i<e;)(n(r=t[i],u)<0||0!==n(u,u))&&(u=r,o=i);return 0===n(u,u)?o:void 0}},tf=function(t,n,e){for(var r,i,o=(null==e?t.length:e)-(n=null==n?0:+n);o;)i=Math.random()*o--|0,r=t[o+n],t[o+n]=t[i+n],t[i+n]=r;return t},nf=function(t,n){var e,r=0,i=t.length,o=-1;if(null==n)for(;++o<i;)(e=+t[o])&&(r+=e);else for(;++o<i;)(e=+n(t[o],o,t))&&(r+=e);return r},ef=function(t){if(!(o=t.length))return[];for(var n=-1,e=Gs(t,r),i=new Array(e);++n<e;)for(var o,u=-1,a=i[n]=new Array(o);++u<o;)a[u]=t[u][n];return i},rf=function(){return ef(arguments)},of="$";i.prototype=o.prototype={constructor:i,has:function(t){return of+t in this},get:function(t){return this[of+t]},set:function(t,n){return this[of+t]=n,this},remove:function(t){var n=of+t;return n in this&&delete this[n]},clear:function(){for(var t in this)t[0]===of&&delete this[t]},keys:function(){var t=[];for(var n in this)n[0]===of&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)n[0]===of&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)n[0]===of&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)n[0]===of&&++t;return t},empty:function(){for(var t in this)if(t[0]===of)return!1;return!0},each:function(t){for(var n in this)n[0]===of&&t(this[n],n.slice(1),this)}};var uf=function(){function t(n,i,u,a){if(i>=f.length)return null!=r?r(n):null!=e?n.sort(e):n;for(var c,s,l,h=-1,p=n.length,d=f[i++],v=o(),_=u();++h<p;)(l=v.get(c=d(s=n[h])+""))?l.push(s):v.set(c,[s]);return v.each(function(n,e){a(_,e,t(n,i,u,a))}),_}function n(t,e){if(++e>f.length)return t;var i,o=l[e-1];return null!=r&&e>=f.length?i=t.entries():(i=[],t.each(function(t,r){i.push({key:r,values:n(t,e)})})),null!=o?i.sort(function(t,n){return o(t.key,n.key)}):i}var e,r,i,f=[],l=[];return i={object:function(n){return t(n,0,u,a)},map:function(n){return t(n,0,c,s)},entries:function(e){return n(t(e,0,c,s),0)},key:function(t){return f.push(t),i},sortKeys:function(t){return l[f.length-1]=t,i},sortValues:function(t){return e=t,i},rollup:function(t){return r=t,i}}},af=o.prototype;f.prototype=l.prototype={constructor:f,has:af.has,add:function(t){return t+="",this[of+t]=t,this},remove:af.remove,clear:af.clear,values:af.keys,size:af.size,empty:af.empty,each:af.each};var cf=function(t){var n=[];for(var e in t)n.push(e);return n},sf=function(t){var n=[];for(var e in t)n.push(t[e]);return n},ff=function(t){var n=[];for(var e in t)n.push({key:e,value:t[e]});return n},lf=function(t,n){return t=null==t?0:+t,n=null==n?1:+n,1===arguments.length?(n=t,t=0):n-=t,function(){return Math.random()*n+t}},hf=function(t,n){var e,r;return t=null==t?0:+t,n=null==n?1:+n,function(){var i;if(null!=e)i=e,e=null;else do e=2*Math.random()-1,i=2*Math.random()-1,r=e*e+i*i;while(!r||r>1);return t+n*i*Math.sqrt(-2*Math.log(r)/r)}},pf=function(){var t=hf.apply(this,arguments);return function(){return Math.exp(t())}},df=function(t){return function(){for(var n=0,e=0;e<t;++e)n+=Math.random();return n}},vf=function(t){var n=df(t);return function(){return n()/t}},_f=function(t){return function(){return-Math.log(1-Math.random())/t}},yf=3,gf=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(yf),mf=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(yf),xf=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(yf),bf=Math.PI,wf=bf/2,Mf=4/11,Tf=6/11,Nf=8/11,kf=.75,Sf=9/11,Af=10/11,Ef=.9375,Cf=21/22,zf=63/64,Pf=1/Mf/Mf,qf=1.70158,Lf=function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e}(qf),Rf=function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(qf),Uf=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(qf),Df=2*Math.PI,Of=1,Ff=.3,If=function t(n,e){function r(t){return n*Math.pow(2,10*--t)*Math.sin((i-t)/e)}var i=Math.asin(1/(n=Math.max(1,n)))*(e/=Df);return r.amplitude=function(n){return t(n,e*Df)},r.period=function(e){return t(n,e)},r}(Of,Ff),Yf=function t(n,e){function r(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+i)/e)}var i=Math.asin(1/(n=Math.max(1,n)))*(e/=Df);return r.amplitude=function(n){return t(n,e*Df)},r.period=function(e){return t(n,e)},r}(Of,Ff),Bf=function t(n,e){function r(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((i-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((i+t)/e))/2}var i=Math.asin(1/(n=Math.max(1,n)))*(e/=Df);return r.amplitude=function(n){return t(n,e*Df)},r.period=function(e){return t(n,e)},r}(Of,Ff),jf=function(t){for(var n,e=-1,r=t.length,i=t[r-1],o=0;++e<r;)n=i,i=t[e],o+=n[1]*i[0]-n[0]*i[1];return o/2},Hf=function(t){for(var n,e,r=-1,i=t.length,o=0,u=0,a=t[i-1],c=0;++r<i;)n=a,a=t[r],c+=e=n[0]*a[1]-a[0]*n[1],o+=(n[0]+a[0])*e,u+=(n[1]+a[1])*e;return c*=3,[o/c,u/c]},Xf=function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])-(n[1]-t[1])*(e[0]-t[0])},Vf=function(t){if((e=t.length)<3)return null;var n,e,r=new Array(e),i=new Array(e);for(n=0;n<e;++n)r[n]=[+t[n][0],+t[n][1],n];for(r.sort(z),n=0;n<e;++n)i[n]=[r[n][0],-r[n][1]];var o=P(r),u=P(i),a=u[0]===o[0],c=u[u.length-1]===o[o.length-1],s=[];for(n=o.length-1;n>=0;--n)s.push(t[r[o[n]][2]]);for(n=+a;n<u.length-c;++n)s.push(t[r[u[n]][2]]);return s},Wf=function(t,n){for(var e,r,i=t.length,o=t[i-1],u=n[0],a=n[1],c=o[0],s=o[1],f=!1,l=0;l<i;++l)o=t[l],e=o[0],r=o[1],r>a!=s>a&&u<(c-e)*(a-r)/(s-r)+e&&(f=!f),c=e,s=r;return f},$f=function(t){for(var n,e,r=-1,i=t.length,o=t[i-1],u=o[0],a=o[1],c=0;++r<i;)n=u,e=a,o=t[r],u=o[0],a=o[1],n-=u,e-=a,c+=Math.sqrt(n*n+e*e);return c},Zf=Math.PI,Gf=2*Zf,Jf=1e-6,Qf=Gf-Jf;q.prototype=L.prototype={constructor:q,moveTo:function(t,n){this._.push("M",this._x0=this._x1=+t,",",this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._.push("Z"))},lineTo:function(t,n){this._.push("L",this._x1=+t,",",this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._.push("Q",+t,",",+n,",",this._x1=+e,",",this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,o){this._.push("C",+t,",",+n,",",+e,",",+r,",",this._x1=+i,",",this._y1=+o)},arcTo:function(t,n,e,r,i){t=+t,n=+n,e=+e,r=+r,i=+i;var o=this._x1,u=this._y1,a=e-t,c=r-n,s=o-t,f=u-n,l=s*s+f*f;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._.push("M",this._x1=t,",",this._y1=n);else if(l>Jf)if(Math.abs(f*a-c*s)>Jf&&i){var h=e-o,p=r-u,d=a*a+c*c,v=h*h+p*p,_=Math.sqrt(d),y=Math.sqrt(l),g=i*Math.tan((Zf-Math.acos((d+l-v)/(2*_*y)))/2),m=g/y,x=g/_;Math.abs(m-1)>Jf&&this._.push("L",t+m*s,",",n+m*f),this._.push("A",i,",",i,",0,0,",+(f*h>s*p),",",this._x1=t+x*a,",",this._y1=n+x*c)}else this._.push("L",this._x1=t,",",this._y1=n);else;},arc:function(t,n,e,r,i,o){t=+t,n=+n,e=+e;var u=e*Math.cos(r),a=e*Math.sin(r),c=t+u,s=n+a,f=1^o,l=o?r-i:i-r;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._.push("M",c,",",s):(Math.abs(this._x1-c)>Jf||Math.abs(this._y1-s)>Jf)&&this._.push("L",c,",",s),e&&(l>Qf?this._.push("A",e,",",e,",0,1,",f,",",t-u,",",n-a,"A",e,",",e,",0,1,",f,",",this._x1=c,",",this._y1=s):(l<0&&(l=l%Gf+Gf),this._.push("A",e,",",e,",0,",+(l>=Zf),",",f,",",this._x1=t+e*Math.cos(i),",",this._y1=n+e*Math.sin(i))))},rect:function(t,n,e,r){this._.push("M",this._x0=this._x1=+t,",",this._y0=this._y1=+n,"h",+e,"v",+r,"h",-e,"Z")},toString:function(){return this._.join("")}};var Kf=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return R(this.cover(n,e),n,e,t)},tl=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,o=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,o=(r=Math.floor(n))+1;else{if(!(e>t||t>i||r>n||n>o))return this;var u,a,c=i-e,s=this._root;switch(a=(n<(r+o)/2)<<1|t<(e+i)/2){case 0:do u=new Array(4),u[a]=s,s=u;while(c*=2,i=e+c,o=r+c,t>i||n>o);break;case 1:do u=new Array(4),u[a]=s,s=u;while(c*=2,e=i-c,o=r+c,e>t||n>o);break;case 2:do u=new Array(4),u[a]=s,s=u;while(c*=2,i=e+c,r=o-c,t>i||r>n);break;case 3:do u=new Array(4),u[a]=s,s=u;while(c*=2,e=i-c,r=o-c,e>t||r>n)}this._root&&this._root.length&&(this._root=s)}return this._x0=e,this._y0=r,this._x1=i,this._y1=o,this},nl=function(){var t=[];return this.visit(function(n){if(!n.length)do t.push(n.data);while(n=n.next)}),t},el=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},rl=function(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i},il=function(t,n,e){var r,i,o,u,a,c,s,f=this._x0,l=this._y0,h=this._x1,p=this._y1,d=[],v=this._root;for(v&&d.push(new rl(v,f,l,h,p)),null==e?e=1/0:(f=t-e,l=n-e,h=t+e,p=n+e,e*=e);c=d.pop();)if(!(!(v=c.node)||(i=c.x0)>h||(o=c.y0)>p||(u=c.x1)<f||(a=c.y1)<l))if(v.length){var _=(i+u)/2,y=(o+a)/2;d.push(new rl(v[3],_,y,u,a),new rl(v[2],i,y,_,a),new rl(v[1],_,o,u,y),new rl(v[0],i,o,_,y)),(s=(n>=y)<<1|t>=_)&&(c=d[d.length-1],d[d.length-1]=d[d.length-1-s],d[d.length-1-s]=c)}else{var g=t-+this._x.call(null,v.data),m=n-+this._y.call(null,v.data),x=g*g+m*m;if(x<e){var b=Math.sqrt(e=x);f=t-b,l=n-b,h=t+b,p=n+b,r=v.data}}return r},ol=function(t){if(isNaN(o=+this._x.call(null,t))||isNaN(u=+this._y.call(null,t)))return this;var n,e,r,i,o,u,a,c,s,f,l,h,p=this._root,d=this._x0,v=this._y0,_=this._x1,y=this._y1;if(!p)return this;if(p.length)for(;;){if((s=o>=(a=(d+_)/2))?d=a:_=a,(f=u>=(c=(v+y)/2))?v=c:y=c,n=p,!(p=p[l=f<<1|s]))return this;if(!p.length)break;(n[l+1&3]||n[l+2&3]||n[l+3&3])&&(e=n,h=l)}for(;p.data!==t;)if(r=p,!(p=p.next))return this;return(i=p.next)&&delete p.next,r?(i?r.next=i:delete r.next,this):n?(i?n[l]=i:delete n[l],(p=n[0]||n[1]||n[2]||n[3])&&p===(n[3]||n[2]||n[1]||n[0])&&!p.length&&(e?e[h]=p:this._root=p),this):(this._root=i,this)},ul=function(){return this._root},al=function(){var t=0;return this.visit(function(n){if(!n.length)do++t;while(n=n.next)}),t},cl=function(t){var n,e,r,i,o,u,a=[],c=this._root;for(c&&a.push(new rl(c,this._x0,this._y0,this._x1,this._y1));n=a.pop();)if(!t(c=n.node,r=n.x0,i=n.y0,o=n.x1,u=n.y1)&&c.length){var s=(r+o)/2,f=(i+u)/2;(e=c[3])&&a.push(new rl(e,s,f,o,u)),(e=c[2])&&a.push(new rl(e,r,f,s,u)),(e=c[1])&&a.push(new rl(e,s,i,o,f)),(e=c[0])&&a.push(new rl(e,r,i,s,f))}return this},sl=function(t){var n,e=[],r=[];for(this._root&&e.push(new rl(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var o,u=n.x0,a=n.y0,c=n.x1,s=n.y1,f=(u+c)/2,l=(a+s)/2;(o=i[0])&&e.push(new rl(o,u,a,f,l)),(o=i[1])&&e.push(new rl(o,f,a,c,l)),(o=i[2])&&e.push(new rl(o,u,l,f,s)),(o=i[3])&&e.push(new rl(o,f,l,c,s))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this},fl=function(t){return arguments.length?(this._x=t,this):this._x},ll=function(t){return arguments.length?(this._y=t,this):this._y},hl=I.prototype=Y.prototype;hl.copy=function(){var t,n,e=new Y(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=B(r),e;for(t=[{source:r,target:e._root=new Array(4)}];r=t.pop();)for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?t.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=B(n));return e},hl.add=Kf,hl.addAll=U,hl.cover=tl,hl.data=nl,hl.extent=el,hl.find=il,hl.remove=ol,hl.removeAll=D,hl.root=ul,hl.size=al,hl.visit=cl,hl.visitAfter=sl,hl.x=fl,hl.y=ll;var pl=[].slice,dl={};j.prototype=Z.prototype={constructor:j,defer:function(t){if("function"!=typeof t||this._call)throw new Error;if(null!=this._error)return this;var n=pl.call(arguments,1);return n.push(t),++this._waiting,this._tasks.push(n),H(this),this},abort:function(){return null==this._error&&W(this,new Error("abort")),this},await:function(t){if("function"!=typeof t||this._call)throw new Error;return this._call=function(n,e){t.apply(null,[n].concat(e))},$(this),this},awaitAll:function(t){if("function"!=typeof t||this._call)throw new Error;return this._call=t,$(this),this}};var vl=function(t){return function(){return t}},_l=1e-12,yl=Math.PI,gl=yl/2,ml=2*yl,xl=function(){function t(){var t,s,f=+n.apply(this,arguments),l=+e.apply(this,arguments),h=o.apply(this,arguments)-gl,p=u.apply(this,arguments)-gl,d=Math.abs(p-h),v=p>h;if(c||(c=t=L()),l<f&&(s=l,l=f,f=s),l>_l)if(d>ml-_l)c.moveTo(l*Math.cos(h),l*Math.sin(h)),c.arc(0,0,l,h,p,!v),f>_l&&(c.moveTo(f*Math.cos(p),f*Math.sin(p)),c.arc(0,0,f,p,h,v));else{var _,y,g=h,m=p,x=h,b=p,w=d,M=d,T=a.apply(this,arguments)/2,N=T>_l&&(i?+i.apply(this,arguments):Math.sqrt(f*f+l*l)),k=Math.min(Math.abs(l-f)/2,+r.apply(this,arguments)),S=k,A=k;if(N>_l){var E=nt(N/f*Math.sin(T)),C=nt(N/l*Math.sin(T));(w-=2*E)>_l?(E*=v?1:-1,x+=E,b-=E):(w=0,x=b=(h+p)/2),(M-=2*C)>_l?(C*=v?1:-1,g+=C,m-=C):(M=0,g=m=(h+p)/2)}var z=l*Math.cos(g),P=l*Math.sin(g),q=f*Math.cos(b),R=f*Math.sin(b);if(k>_l){var U=l*Math.cos(m),D=l*Math.sin(m),O=f*Math.cos(x),F=f*Math.sin(x);if(d<yl){var I=w>_l?et(z,P,O,F,U,D,q,R):[q,R],Y=z-I[0],B=P-I[1],j=U-I[0],H=D-I[1],X=1/Math.sin(Math.acos((Y*j+B*H)/(Math.sqrt(Y*Y+B*B)*Math.sqrt(j*j+H*H)))/2),V=Math.sqrt(I[0]*I[0]+I[1]*I[1]);S=Math.min(k,(f-V)/(X-1)),A=Math.min(k,(l-V)/(X+1))}}M>_l?A>_l?(_=rt(O,F,z,P,l,A,v),y=rt(U,D,q,R,l,A,v),c.moveTo(_.cx+_.x01,_.cy+_.y01),A<k?c.arc(_.cx,_.cy,A,Math.atan2(_.y01,_.x01),Math.atan2(y.y01,y.x01),!v):(c.arc(_.cx,_.cy,A,Math.atan2(_.y01,_.x01),Math.atan2(_.y11,_.x11),!v),c.arc(0,0,l,Math.atan2(_.cy+_.y11,_.cx+_.x11),Math.atan2(y.cy+y.y11,y.cx+y.x11),!v),c.arc(y.cx,y.cy,A,Math.atan2(y.y11,y.x11),Math.atan2(y.y01,y.x01),!v))):(c.moveTo(z,P),
c.arc(0,0,l,g,m,!v)):c.moveTo(z,P),f>_l&&w>_l?S>_l?(_=rt(q,R,U,D,f,-S,v),y=rt(z,P,O,F,f,-S,v),c.lineTo(_.cx+_.x01,_.cy+_.y01),S<k?c.arc(_.cx,_.cy,S,Math.atan2(_.y01,_.x01),Math.atan2(y.y01,y.x01),!v):(c.arc(_.cx,_.cy,S,Math.atan2(_.y01,_.x01),Math.atan2(_.y11,_.x11),!v),c.arc(0,0,f,Math.atan2(_.cy+_.y11,_.cx+_.x11),Math.atan2(y.cy+y.y11,y.cx+y.x11),v),c.arc(y.cx,y.cy,S,Math.atan2(y.y11,y.x11),Math.atan2(y.y01,y.x01),!v))):c.arc(0,0,f,b,x,v):c.lineTo(q,R)}else c.moveTo(0,0);if(c.closePath(),t)return c=null,t+""||null}var n=G,e=J,r=vl(0),i=null,o=Q,u=K,a=tt,c=null;return t.centroid=function(){var t=(+n.apply(this,arguments)+ +e.apply(this,arguments))/2,r=(+o.apply(this,arguments)+ +u.apply(this,arguments))/2-yl/2;return[Math.cos(r)*t,Math.sin(r)*t]},t.innerRadius=function(e){return arguments.length?(n="function"==typeof e?e:vl(+e),t):n},t.outerRadius=function(n){return arguments.length?(e="function"==typeof n?n:vl(+n),t):e},t.cornerRadius=function(n){return arguments.length?(r="function"==typeof n?n:vl(+n),t):r},t.padRadius=function(n){return arguments.length?(i=null==n?null:"function"==typeof n?n:vl(+n),t):i},t.startAngle=function(n){return arguments.length?(o="function"==typeof n?n:vl(+n),t):o},t.endAngle=function(n){return arguments.length?(u="function"==typeof n?n:vl(+n),t):u},t.padAngle=function(n){return arguments.length?(a="function"==typeof n?n:vl(+n),t):a},t.context=function(n){return arguments.length?(c=null==n?null:n,t):c},t};it.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var bl=function(t){return new it(t)},wl=function(){function t(t){var a,c,s,f=t.length,l=!1;for(null==i&&(u=o(s=L())),a=0;a<=f;++a)!(a<f&&r(c=t[a],a,t))===l&&((l=!l)?u.lineStart():u.lineEnd()),l&&u.point(+n(c,a,t),+e(c,a,t));if(s)return u=null,s+""||null}var n=ot,e=ut,r=vl(!0),i=null,o=bl,u=null;return t.x=function(e){return arguments.length?(n="function"==typeof e?e:vl(+e),t):n},t.y=function(n){return arguments.length?(e="function"==typeof n?n:vl(+n),t):e},t.defined=function(n){return arguments.length?(r="function"==typeof n?n:vl(!!n),t):r},t.curve=function(n){return arguments.length?(o=n,null!=i&&(u=o(i)),t):o},t.context=function(n){return arguments.length?(null==n?i=u=null:u=o(i=n),t):i},t},Ml=function(){function t(t){var n,f,l,h,p,d=t.length,v=!1,_=new Array(d),y=new Array(d);for(null==a&&(s=c(p=L())),n=0;n<=d;++n){if(!(n<d&&u(h=t[n],n,t))===v)if(v=!v)f=n,s.areaStart(),s.lineStart();else{for(s.lineEnd(),s.lineStart(),l=n-1;l>=f;--l)s.point(_[l],y[l]);s.lineEnd(),s.areaEnd()}v&&(_[n]=+e(h,n,t),y[n]=+i(h,n,t),s.point(r?+r(h,n,t):_[n],o?+o(h,n,t):y[n]))}if(p)return s=null,p+""||null}function n(){return wl().defined(u).curve(c).context(a)}var e=ot,r=null,i=vl(0),o=ut,u=vl(!0),a=null,c=bl,s=null;return t.x=function(n){return arguments.length?(e="function"==typeof n?n:vl(+n),r=null,t):e},t.x0=function(n){return arguments.length?(e="function"==typeof n?n:vl(+n),t):e},t.x1=function(n){return arguments.length?(r=null==n?null:"function"==typeof n?n:vl(+n),t):r},t.y=function(n){return arguments.length?(i="function"==typeof n?n:vl(+n),o=null,t):i},t.y0=function(n){return arguments.length?(i="function"==typeof n?n:vl(+n),t):i},t.y1=function(n){return arguments.length?(o=null==n?null:"function"==typeof n?n:vl(+n),t):o},t.lineX0=t.lineY0=function(){return n().x(e).y(i)},t.lineY1=function(){return n().x(e).y(o)},t.lineX1=function(){return n().x(r).y(i)},t.defined=function(n){return arguments.length?(u="function"==typeof n?n:vl(!!n),t):u},t.curve=function(n){return arguments.length?(c=n,null!=a&&(s=c(a)),t):c},t.context=function(n){return arguments.length?(null==n?a=s=null:s=c(a=n),t):a},t},Tl=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},Nl=function(t){return t},kl=function(){function t(t){var a,c,s,f,l,h=t.length,p=0,d=new Array(h),v=new Array(h),_=+i.apply(this,arguments),y=Math.min(ml,Math.max(-ml,o.apply(this,arguments)-_)),g=Math.min(Math.abs(y)/h,u.apply(this,arguments)),m=g*(y<0?-1:1);for(a=0;a<h;++a)(l=v[d[a]=a]=+n(t[a],a,t))>0&&(p+=l);for(null!=e?d.sort(function(t,n){return e(v[t],v[n])}):null!=r&&d.sort(function(n,e){return r(t[n],t[e])}),a=0,s=p?(y-h*m)/p:0;a<h;++a,_=f)c=d[a],l=v[c],f=_+(l>0?l*s:0)+m,v[c]={data:t[c],index:a,value:l,startAngle:_,endAngle:f,padAngle:g};return v}var n=Nl,e=Tl,r=null,i=vl(0),o=vl(ml),u=vl(0);return t.value=function(e){return arguments.length?(n="function"==typeof e?e:vl(+e),t):n},t.sortValues=function(n){return arguments.length?(e=n,r=null,t):e},t.sort=function(n){return arguments.length?(r=n,e=null,t):r},t.startAngle=function(n){return arguments.length?(i="function"==typeof n?n:vl(+n),t):i},t.endAngle=function(n){return arguments.length?(o="function"==typeof n?n:vl(+n),t):o},t.padAngle=function(n){return arguments.length?(u="function"==typeof n?n:vl(+n),t):u},t},Sl=ct(bl);at.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};var Al=function(){return st(wl().curve(Sl))},El=function(){var t=Ml().curve(Sl),n=t.curve,e=t.lineX0,r=t.lineX1,i=t.lineY0,o=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return st(e())},delete t.lineX0,t.lineEndAngle=function(){return st(r())},delete t.lineX1,t.lineInnerRadius=function(){return st(i())},delete t.lineY0,t.lineOuterRadius=function(){return st(o())},delete t.lineY1,t.curve=function(t){return arguments.length?n(ct(t)):n()._curve},t},Cl={draw:function(t,n){var e=Math.sqrt(n/yl);t.moveTo(e,0),t.arc(0,0,e,0,ml)}},zl={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}},Pl=Math.sqrt(1/3),ql=2*Pl,Ll={draw:function(t,n){var e=Math.sqrt(n/ql),r=e*Pl;t.moveTo(0,-e),t.lineTo(r,0),t.lineTo(0,e),t.lineTo(-r,0),t.closePath()}},Rl=.8908130915292852,Ul=Math.sin(yl/10)/Math.sin(7*yl/10),Dl=Math.sin(ml/10)*Ul,Ol=-Math.cos(ml/10)*Ul,Fl={draw:function(t,n){var e=Math.sqrt(n*Rl),r=Dl*e,i=Ol*e;t.moveTo(0,-e),t.lineTo(r,i);for(var o=1;o<5;++o){var u=ml*o/5,a=Math.cos(u),c=Math.sin(u);t.lineTo(c*e,-a*e),t.lineTo(a*r-c*i,c*r+a*i)}t.closePath()}},Il={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}},Yl=Math.sqrt(3),Bl={draw:function(t,n){var e=-Math.sqrt(n/(3*Yl));t.moveTo(0,2*e),t.lineTo(-Yl*e,-e),t.lineTo(Yl*e,-e),t.closePath()}},jl=-.5,Hl=Math.sqrt(3)/2,Xl=1/Math.sqrt(12),Vl=3*(Xl/2+1),Wl={draw:function(t,n){var e=Math.sqrt(n/Vl),r=e/2,i=e*Xl,o=r,u=e*Xl+e,a=-o,c=u;t.moveTo(r,i),t.lineTo(o,u),t.lineTo(a,c),t.lineTo(jl*r-Hl*i,Hl*r+jl*i),t.lineTo(jl*o-Hl*u,Hl*o+jl*u),t.lineTo(jl*a-Hl*c,Hl*a+jl*c),t.lineTo(jl*r+Hl*i,jl*i-Hl*r),t.lineTo(jl*o+Hl*u,jl*u-Hl*o),t.lineTo(jl*a+Hl*c,jl*c-Hl*a),t.closePath()}},$l=[Cl,zl,Ll,Il,Fl,Bl,Wl],Zl=function(){function t(){var t;if(r||(r=t=L()),n.apply(this,arguments).draw(r,+e.apply(this,arguments)),t)return r=null,t+""||null}var n=vl(Cl),e=vl(64),r=null;return t.type=function(e){return arguments.length?(n="function"==typeof e?e:vl(e),t):n},t.size=function(n){return arguments.length?(e="function"==typeof n?n:vl(+n),t):e},t.context=function(n){return arguments.length?(r=null==n?null:n,t):r},t},Gl=function(){};lt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:ft(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:ft(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Jl=function(t){return new lt(t)};ht.prototype={areaStart:Gl,areaEnd:Gl,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:ft(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Ql=function(t){return new ht(t)};pt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:ft(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var Kl=function(t){return new pt(t)};dt.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],o=n[0],u=t[e]-i,a=n[e]-o,c=-1;++c<=e;)r=c/e,this._basis.point(this._beta*t[c]+(1-this._beta)*(i+r*u),this._beta*n[c]+(1-this._beta)*(o+r*a));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var th=function t(n){function e(t){return 1===n?new lt(t):new dt(t,n)}return e.beta=function(n){return t(+n)},e}(.85);_t.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:vt(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:vt(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var nh=function t(n){function e(t){return new _t(t,n)}return e.tension=function(n){return t(+n)},e}(0);yt.prototype={areaStart:Gl,areaEnd:Gl,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:vt(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var eh=function t(n){function e(t){return new yt(t,n)}return e.tension=function(n){return t(+n)},e}(0);gt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:vt(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var rh=function t(n){function e(t){return new gt(t,n)}return e.tension=function(n){return t(+n)},e}(0);xt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:mt(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var ih=function t(n){function e(t){return n?new xt(t,n):new _t(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);bt.prototype={areaStart:Gl,areaEnd:Gl,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:mt(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var oh=function t(n){function e(t){return n?new bt(t,n):new yt(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);wt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:mt(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var uh=function t(n){function e(t){return n?new wt(t,n):new gt(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);Mt.prototype={areaStart:Gl,areaEnd:Gl,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}};var ah=function(t){return new Mt(t)};At.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:St(this,this._t0,kt(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(t=+t,n=+n,t!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,St(this,kt(this,e=Nt(this,t,n)),e);break;default:St(this,this._t0,e=Nt(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(Et.prototype=Object.create(At.prototype)).point=function(t,n){At.prototype.point.call(this,n,t)},Ct.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,o){this._context.bezierCurveTo(n,t,r,e,o,i)}},qt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=Lt(t),i=Lt(n),o=0,u=1;u<e;++o,++u)this._context.bezierCurveTo(r[0][o],i[0][o],r[1][o],i[1][o],t[u],n[u]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var ch=function(t){return new qt(t)};Rt.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}};var sh=function(t){return new Rt(t,.5)},fh=Array.prototype.slice,lh=function(t,n){if((r=t.length)>1)for(var e,r,i=1,o=t[n[0]],u=o.length;i<r;++i){e=o,o=t[n[i]];for(var a=0;a<u;++a)o[a][1]+=o[a][0]=isNaN(e[a][1])?e[a][0]:e[a][1]}},hh=function(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e},ph=function(){function t(t){var o,u,a=n.apply(this,arguments),c=t.length,s=a.length,f=new Array(s);for(o=0;o<s;++o){for(var l,h=a[o],p=f[o]=new Array(c),d=0;d<c;++d)p[d]=l=[0,+i(t[d],h,d,t)],l.data=t[d];p.key=h}for(o=0,u=e(f);o<s;++o)f[u[o]].index=o;return r(f,u),f}var n=vl([]),e=hh,r=lh,i=Ot;return t.keys=function(e){return arguments.length?(n="function"==typeof e?e:vl(fh.call(e)),t):n},t.value=function(n){return arguments.length?(i="function"==typeof n?n:vl(+n),t):i},t.order=function(n){return arguments.length?(e=null==n?hh:"function"==typeof n?n:vl(fh.call(n)),t):e},t.offset=function(n){return arguments.length?(r=null==n?lh:n,t):r},t},dh=function(t,n){if((r=t.length)>0){for(var e,r,i,o=0,u=t[0].length;o<u;++o){for(i=e=0;e<r;++e)i+=t[e][o][1]||0;if(i)for(e=0;e<r;++e)t[e][o][1]/=i}lh(t,n)}},vh=function(t,n){if((e=t.length)>0){for(var e,r=0,i=t[n[0]],o=i.length;r<o;++r){for(var u=0,a=0;u<e;++u)a+=t[u][r][1]||0;i[r][1]+=i[r][0]=-a/2}lh(t,n)}},_h=function(t,n){if((i=t.length)>0&&(r=(e=t[n[0]]).length)>0){for(var e,r,i,o=0,u=1;u<r;++u){for(var a=0,c=0,s=0;a<i;++a){for(var f=t[n[a]],l=f[u][1]||0,h=f[u-1][1]||0,p=(l-h)/2,d=0;d<a;++d){var v=t[n[d]],_=v[u][1]||0,y=v[u-1][1]||0;p+=_-y}c+=l,s+=p*l}e[u-1][1]+=e[u-1][0]=o,c&&(o-=s/c)}e[u-1][1]+=e[u-1][0]=o,lh(t,n)}},yh=function(t){var n=t.map(Ft);return hh(t).sort(function(t,e){return n[t]-n[e]})},gh=function(t){return yh(t).reverse()},mh=function(t){var n,e,r=t.length,i=t.map(Ft),o=hh(t).sort(function(t,n){return i[n]-i[t]}),u=0,a=0,c=[],s=[];for(n=0;n<r;++n)e=o[n],u<a?(u+=i[e],c.push(e)):(a+=i[e],s.push(e));return s.reverse().concat(c)},xh=function(t){return hh(t).reverse()},bh=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t},wh=.7,Mh=1/wh,Th=/^#([0-9a-f]{3})$/,Nh=/^#([0-9a-f]{6})$/,kh=/^rgb\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*\)$/,Sh=/^rgb\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/,Ah=/^rgba\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/,Eh=/^rgba\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/,Ch=/^hsl\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/,zh=/^hsla\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/,Ph={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};bh(Yt,Bt,{displayable:function(){return this.rgb().displayable()},toString:function(){return this.rgb()+""}}),bh(Wt,Vt,It(Yt,{brighter:function(t){return t=null==t?Mh:Math.pow(Mh,t),new Wt(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?wh:Math.pow(wh,t),new Wt(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},toString:function(){var t=this.opacity;return t=isNaN(t)?1:Math.max(0,Math.min(1,t)),(1===t?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),bh(Jt,Gt,It(Yt,{brighter:function(t){return t=null==t?Mh:Math.pow(Mh,t),new Jt(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?wh:Math.pow(wh,t),new Jt(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new Wt(Qt(t>=240?t-240:t+120,i,r),Qt(t,i,r),Qt(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var qh=Math.PI/180,Lh=180/Math.PI,Rh=18,Uh=.95047,Dh=1,Oh=1.08883,Fh=4/29,Ih=6/29,Yh=3*Ih*Ih,Bh=Ih*Ih*Ih;bh(nn,tn,It(Yt,{brighter:function(t){return new nn(this.l+Rh*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new nn(this.l-Rh*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return t=Dh*rn(t),n=Uh*rn(n),e=Oh*rn(e),new Wt(on(3.2404542*n-1.5371385*t-.4985314*e),on(-.969266*n+1.8760108*t+.041556*e),on(.0556434*n-.2040259*t+1.0572252*e),this.opacity)}})),bh(sn,cn,It(Yt,{brighter:function(t){return new sn(this.h,this.c,this.l+Rh*(null==t?1:t),this.opacity)},darker:function(t){return new sn(this.h,this.c,this.l-Rh*(null==t?1:t),this.opacity)},rgb:function(){return Kt(this).rgb()}}));var jh=-.14861,Hh=1.78277,Xh=-.29227,Vh=-.90649,Wh=1.97294,$h=Wh*Vh,Zh=Wh*Hh,Gh=Hh*Xh-Vh*jh;bh(hn,ln,It(Yt,{brighter:function(t){return t=null==t?Mh:Math.pow(Mh,t),new hn(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?wh:Math.pow(wh,t),new hn(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*qh,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new Wt(255*(n+e*(jh*r+Hh*i)),255*(n+e*(Xh*r+Vh*i)),255*(n+e*(Wh*r)),this.opacity)}}));var Jh,Qh,Kh,tp,np=function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],u=r>0?t[r-1]:2*i-o,a=r<n-1?t[r+2]:2*o-i;return pn((e-r/n)*n,u,i,o,a)}},ep=function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],u=t[(r+1)%n],a=t[(r+2)%n];return pn((e-r/n)*n,i,o,u,a)}},rp=function(t){return function(){return t}},ip=function t(n){function e(t,n){var e=r((t=Vt(t)).r,(n=Vt(n)).r),i=r(t.g,n.g),o=r(t.b,n.b),u=r(t.opacity,n.opacity);return function(n){return t.r=e(n),t.g=i(n),t.b=o(n),t.opacity=u(n),t+""}}var r=yn(n);return e.gamma=t,e}(1),op=mn(np),up=mn(ep),ap=function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(r),u=new Array(r);for(e=0;e<i;++e)o[e]=dp(t[e],n[e]);for(;e<r;++e)u[e]=n[e];return function(t){for(e=0;e<i;++e)u[e]=o[e](t);return u}},cp=function(t,n){var e=new Date;return t=+t,n-=t,function(r){return e.setTime(t+n*r),e}},sp=function(t,n){return t=+t,n-=t,function(e){return t+n*e}},fp=function(t,n){var e,r={},i={};null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={});for(e in n)e in t?r[e]=dp(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}},lp=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,hp=new RegExp(lp.source,"g"),pp=function(t,n){var e,r,i,o=lp.lastIndex=hp.lastIndex=0,u=-1,a=[],c=[];for(t+="",n+="";(e=lp.exec(t))&&(r=hp.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),a[u]?a[u]+=i:a[++u]=i),(e=e[0])===(r=r[0])?a[u]?a[u]+=r:a[++u]=r:(a[++u]=null,c.push({i:u,x:sp(e,r)})),o=hp.lastIndex;return o<n.length&&(i=n.slice(o),a[u]?a[u]+=i:a[++u]=i),a.length<2?c[0]?bn(c[0].x):xn(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)a[(e=c[r]).i]=e.x(t);return a.join("")})},dp=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?rp(n):("number"===r?sp:"string"===r?(e=Bt(n))?(n=e,ip):pp:n instanceof Bt?ip:n instanceof Date?cp:Array.isArray(n)?ap:isNaN(n)?fp:sp)(t,n)},vp=function(t,n){return t=+t,n-=t,function(e){return Math.round(t+n*e)}},_p=180/Math.PI,yp={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},gp=function(t,n,e,r,i,o){var u,a,c;return(u=Math.sqrt(t*t+n*n))&&(t/=u,n/=u),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,c/=a),t*r<n*e&&(t=-t,n=-n,c=-c,u=-u),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*_p,skewX:Math.atan(c)*_p,scaleX:u,scaleY:a}},mp=Tn(wn,"px, ","px)","deg)"),xp=Tn(Mn,", ",")",")"),bp=Math.SQRT2,wp=2,Mp=4,Tp=1e-12,Np=function(t,n){var e,r,i=t[0],o=t[1],u=t[2],a=n[0],c=n[1],s=n[2],f=a-i,l=c-o,h=f*f+l*l;if(h<Tp)r=Math.log(s/u)/bp,e=function(t){return[i+t*f,o+t*l,u*Math.exp(bp*t*r)]};else{var p=Math.sqrt(h),d=(s*s-u*u+Mp*h)/(2*u*wp*p),v=(s*s-u*u-Mp*h)/(2*s*wp*p),_=Math.log(Math.sqrt(d*d+1)-d),y=Math.log(Math.sqrt(v*v+1)-v);r=(y-_)/bp,e=function(t){var n=t*r,e=Nn(_),a=u/(wp*p)*(e*Sn(bp*n+_)-kn(_));return[i+a*f,o+a*l,u*e/Nn(bp*n+_)]}}return e.duration=1e3*r,e},kp=An(_n),Sp=An(gn),Ap=Cn(_n),Ep=Cn(gn),Cp=zn(_n),zp=zn(gn),Pp=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e},qp={value:function(){}};qn.prototype=Pn.prototype={constructor:qn,on:function(t,n){var e,r=this._,i=Ln(t+"",r),o=-1,u=i.length;{if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++o<u;)if(e=(t=i[o]).type)r[e]=Un(r[e],t.name,n);else if(null==n)for(e in r)r[e]=Un(r[e],t.name,null);return this}for(;++o<u;)if((e=(t=i[o]).type)&&(e=Rn(r[e],t.name)))return e}},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new qn(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(r=this._[t],o=0,e=r.length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};var Lp,Rp,Up=function(t){function n(t,n){var r,i,o=e(t,function(t,e){return r?r(t,e-1):(i=t,void(r=n?On(t,n):Dn(t)))});return o.columns=i,o}function e(t,n){function e(){if(f>=s)return u;if(i)return i=!1,o;var n,e=f;if(34===t.charCodeAt(e)){for(var r=e;r++<s;)if(34===t.charCodeAt(r)){if(34!==t.charCodeAt(r+1))break;++r}return f=r+2,n=t.charCodeAt(r+1),13===n?(i=!0,10===t.charCodeAt(r+2)&&++f):10===n&&(i=!0),t.slice(e+1,r).replace(/""/g,'"')}for(;f<s;){var a=1;if(n=t.charCodeAt(f++),10===n)i=!0;else if(13===n)i=!0,10===t.charCodeAt(f)&&(++f,++a);else if(n!==c)continue;return t.slice(e,f-a)}return t.slice(e);
}for(var r,i,o={},u={},a=[],s=t.length,f=0,l=0;(r=e())!==u;){for(var h=[];r!==o&&r!==u;)h.push(r),r=e();n&&null==(h=n(h,l++))||a.push(h)}return a}function r(n,e){return null==e&&(e=Fn(n)),[e.map(u).join(t)].concat(n.map(function(n){return e.map(function(t){return u(n[t])}).join(t)})).join("\n")}function i(t){return t.map(o).join("\n")}function o(n){return n.map(u).join(t)}function u(t){return null==t?"":a.test(t+="")?'"'+t.replace(/\"/g,'""')+'"':t}var a=new RegExp('["'+t+"\n]"),c=t.charCodeAt(0);return{parse:n,parseRows:e,format:r,formatRows:i}},Dp=Up(","),Op=Dp.parse,Fp=Dp.parseRows,Ip=Dp.format,Yp=Dp.formatRows,Bp=Up("\t"),jp=Bp.parse,Hp=Bp.parseRows,Xp=Bp.format,Vp=Bp.formatRows,Wp=function(t,n){function e(t){var n,e=f.status;if(!e&&Yn(f)||e>=200&&e<300||304===e){if(u)try{n=u.call(r,f)}catch(t){return void c.call("error",r,t)}else n=f;c.call("load",r,n)}else c.call("error",r,t)}var r,i,u,a,c=Pn("beforesend","progress","load","error"),s=o(),f=new XMLHttpRequest,l=null,h=null,p=0;if("undefined"==typeof XDomainRequest||"withCredentials"in f||!/^(http(s)?:)?\/\//.test(t)||(f=new XDomainRequest),"onload"in f?f.onload=f.onerror=f.ontimeout=e:f.onreadystatechange=function(t){f.readyState>3&&e(t)},f.onprogress=function(t){c.call("progress",r,t)},r={header:function(t,n){return t=(t+"").toLowerCase(),arguments.length<2?s.get(t):(null==n?s.remove(t):s.set(t,n+""),r)},mimeType:function(t){return arguments.length?(i=null==t?null:t+"",r):i},responseType:function(t){return arguments.length?(a=t,r):a},timeout:function(t){return arguments.length?(p=+t,r):p},user:function(t){return arguments.length<1?l:(l=null==t?null:t+"",r)},password:function(t){return arguments.length<1?h:(h=null==t?null:t+"",r)},response:function(t){return u=t,r},get:function(t,n){return r.send("GET",t,n)},post:function(t,n){return r.send("POST",t,n)},send:function(n,e,o){return f.open(n,t,!0,l,h),null==i||s.has("accept")||s.set("accept",i+",*/*"),f.setRequestHeader&&s.each(function(t,n){f.setRequestHeader(n,t)}),null!=i&&f.overrideMimeType&&f.overrideMimeType(i),null!=a&&(f.responseType=a),p>0&&(f.timeout=p),null==o&&"function"==typeof e&&(o=e,e=null),null!=o&&1===o.length&&(o=In(o)),null!=o&&r.on("error",o).on("load",function(t){o(null,t)}),c.call("beforesend",r,f),f.send(null==e?null:e),r},abort:function(){return f.abort(),r},on:function(){var t=c.on.apply(c,arguments);return t===c?r:t}},null!=n){if("function"!=typeof n)throw new Error("invalid callback: "+n);return r.get(n)}return r},$p=function(t,n){return function(e,r){var i=Wp(e).mimeType(t).response(n);if(null!=r){if("function"!=typeof r)throw new Error("invalid callback: "+r);return i.get(r)}return i}},Zp=$p("text/html",function(t){return document.createRange().createContextualFragment(t.responseText)}),Gp=$p("application/json",function(t){return JSON.parse(t.responseText)}),Jp=$p("text/plain",function(t){return t.responseText}),Qp=$p("application/xml",function(t){var n=t.responseXML;if(!n)throw new Error("parse error");return n}),Kp=function(t,n){return function(e,r,i){arguments.length<3&&(i=r,r=null);var o=Wp(e).mimeType(t);return o.row=function(t){return arguments.length?o.response(Bn(n,r=t)):r},o.row(r),i?o.get(i):o}},td=Kp("text/csv",Op),nd=Kp("text/tab-separated-values",jp),ed=0,rd=0,id=0,od=1e3,ud=0,ad=0,cd=0,sd="object"==typeof performance&&performance.now?performance:Date,fd="function"==typeof requestAnimationFrame?requestAnimationFrame:function(t){setTimeout(t,17)};Xn.prototype=Vn.prototype={constructor:Xn,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?jn():+e)+(null==n?0:+n),this._next||Rp===this||(Rp?Rp._next=this:Lp=this,Rp=this),this._call=t,this._time=e,Jn()},stop:function(){this._call&&(this._call=null,this._time=1/0,Jn())}};var ld=function(t,n,e){var r=new Xn;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r},hd=function(t,n,e){var r=new Xn,i=n;return null==n?(r.restart(t,n,e),r):(n=+n,e=null==e?jn():+e,r.restart(function o(u){u+=i,r.restart(o,i+=n,e),t(u)},n,e),r)},pd=new Date,dd=new Date,vd=Qn(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});vd.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Qn(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):vd:null};var _d=vd.range,yd=1e3,gd=6e4,md=36e5,xd=864e5,bd=6048e5,wd=Qn(function(t){t.setTime(Math.floor(t/yd)*yd)},function(t,n){t.setTime(+t+n*yd)},function(t,n){return(n-t)/yd},function(t){return t.getUTCSeconds()}),Md=wd.range,Td=Qn(function(t){t.setTime(Math.floor(t/gd)*gd)},function(t,n){t.setTime(+t+n*gd)},function(t,n){return(n-t)/gd},function(t){return t.getMinutes()}),Nd=Td.range,kd=Qn(function(t){var n=t.getTimezoneOffset()*gd%md;n<0&&(n+=md),t.setTime(Math.floor((+t-n)/md)*md+n)},function(t,n){t.setTime(+t+n*md)},function(t,n){return(n-t)/md},function(t){return t.getHours()}),Sd=kd.range,Ad=Qn(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*gd)/xd},function(t){return t.getDate()-1}),Ed=Ad.range,Cd=Kn(0),zd=Kn(1),Pd=Kn(2),qd=Kn(3),Ld=Kn(4),Rd=Kn(5),Ud=Kn(6),Dd=Cd.range,Od=zd.range,Fd=Pd.range,Id=qd.range,Yd=Ld.range,Bd=Rd.range,jd=Ud.range,Hd=Qn(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()}),Xd=Hd.range,Vd=Qn(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()});Vd.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Qn(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var Wd=Vd.range,$d=Qn(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*gd)},function(t,n){return(n-t)/gd},function(t){return t.getUTCMinutes()}),Zd=$d.range,Gd=Qn(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+n*md)},function(t,n){return(n-t)/md},function(t){return t.getUTCHours()}),Jd=Gd.range,Qd=Qn(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/xd},function(t){return t.getUTCDate()-1}),Kd=Qd.range,tv=te(0),nv=te(1),ev=te(2),rv=te(3),iv=te(4),ov=te(5),uv=te(6),av=tv.range,cv=nv.range,sv=ev.range,fv=rv.range,lv=iv.range,hv=ov.range,pv=uv.range,dv=Qn(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()}),vv=dv.range,_v=Qn(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()});_v.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Qn(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var yv,gv=_v.range,mv=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},xv=function(t){return t=mv(Math.abs(t)),t?t[1]:NaN},bv=function(t,n){return function(e,r){for(var i=e.length,o=[],u=0,a=t[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),o.push(e.substring(i-=a,i+a)),!((c+=a+1)>r));)a=t[u=(u+1)%t.length];return o.reverse().join(n)}},wv=function(t,n){t=t.toPrecision(n);t:for(var e,r=t.length,i=1,o=-1;i<r;++i)switch(t[i]){case".":o=e=i;break;case"0":0===o&&(o=i),e=i;break;case"e":break t;default:o>0&&(o=0)}return o>0?t.slice(0,o)+t.slice(e+1):t},Mv=function(t,n){var e=mv(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(yv=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,u=r.length;return o===u?r:o>u?r+new Array(o-u+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+mv(t,Math.max(0,n+o-1))[0]},Tv=function(t,n){var e=mv(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},Nv={"":wv,"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return Tv(100*t,n)},r:Tv,s:Mv,X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},kv=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i,Sv=function(t){return new ne(t)};ne.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+this.type};var Av,Ev=["y","z","a","f","p","n","Âµ","m","","k","M","G","T","P","E","Z","Y"],Cv=function(t){function n(t){function n(t){var n,i,c,g=d,m=v;if("c"===p)m=_(t)+m,t="";else{t=+t;var x=(t<0||1/t<0)&&(t*=-1,!0);if(t=_(t,h),x)for(n=-1,i=t.length,x=!1;++n<i;)if(c=t.charCodeAt(n),48<c&&c<58||"x"===p&&96<c&&c<103||"X"===p&&64<c&&c<71){x=!0;break}if(g=(x?"("===a?a:"-":"-"===a||"("===a?"":a)+g,m=m+("s"===p?Ev[8+yv/3]:"")+(x&&"("===a?")":""),y)for(n=-1,i=t.length;++n<i;)if(c=t.charCodeAt(n),48>c||c>57){m=(46===c?o+t.slice(n+1):t.slice(n))+m,t=t.slice(0,n);break}}l&&!s&&(t=r(t,1/0));var b=g.length+t.length+m.length,w=b<f?new Array(f-b+1).join(e):"";switch(l&&s&&(t=r(w+t,w.length?f-m.length:1/0),w=""),u){case"<":return g+t+m+w;case"=":return g+w+t+m;case"^":return w.slice(0,b=w.length>>1)+g+t+m+w.slice(b)}return w+g+t+m}t=Sv(t);var e=t.fill,u=t.align,a=t.sign,c=t.symbol,s=t.zero,f=t.width,l=t.comma,h=t.precision,p=t.type,d="$"===c?i[0]:"#"===c&&/[boxX]/.test(p)?"0"+p.toLowerCase():"",v="$"===c?i[1]:/[%p]/.test(p)?"%":"",_=Nv[p],y=!p||/[defgprs%]/.test(p);return h=null==h?p?6:12:/[gprs]/.test(p)?Math.max(1,Math.min(21,h)):Math.max(0,Math.min(20,h)),n.toString=function(){return t+""},n}function e(t,e){var r=n((t=Sv(t),t.type="f",t)),i=3*Math.max(-8,Math.min(8,Math.floor(xv(e)/3))),o=Math.pow(10,-i),u=Ev[8+i/3];return function(t){return r(o*t)+u}}var r=t.grouping&&t.thousands?bv(t.grouping,t.thousands):ee,i=t.currency,o=t.decimal;return{format:n,formatPrefix:e}};re({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var zv,Pv=function(t){return Math.max(0,-xv(Math.abs(t)))},qv=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(xv(n)/3)))-xv(Math.abs(t)))},Lv=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,xv(n)-xv(t))+1},Rv={"-":"",_:" ",0:"0"},Uv=/^\s*\d+/,Dv=/^%/,Ov=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;nr({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var Fv="%Y-%m-%dT%H:%M:%S.%LZ",Iv=Date.prototype.toISOString?er:t.utcFormat(Fv),Yv=+new Date("2000-01-01T00:00:00.000Z")?rr:t.utcParse(Fv),Bv=Array.prototype,jv=Bv.map,Hv=Bv.slice,Xv={name:"implicit"},Vv=function(t){return function(){return t}},Wv=function(t){return+t},$v=[0,1],Zv=function(n,r,i){var o,u=n[0],a=n[n.length-1],c=e(u,a,null==r?10:r);switch(i=Sv(null==i?",f":i),i.type){case"s":var s=Math.max(Math.abs(u),Math.abs(a));return null!=i.precision||isNaN(o=qv(c,s))||(i.precision=o),t.formatPrefix(i,s);case"":case"e":case"g":case"p":case"r":null!=i.precision||isNaN(o=Lv(c,Math.max(Math.abs(u),Math.abs(a))))||(i.precision=o-("e"===i.type));break;case"f":case"%":null!=i.precision||isNaN(o=Pv(c))||(i.precision=o-2*("%"===i.type))}return t.format(i)},Gv=function(t,n){t=t.slice();var e,r=0,i=t.length-1,o=t[r],u=t[i];return u<o&&(e=r,r=i,i=e,e=o,o=u,u=e),t[r]=n.floor(o),t[i]=n.ceil(u),t},Jv=1e3,Qv=60*Jv,Kv=60*Qv,t_=24*Kv,n_=7*t_,e_=30*t_,r_=365*t_,i_=function(){return qr(Vd,Hd,Cd,Ad,kd,Td,wd,vd,t.timeFormat).domain([new Date(2e3,0,1),new Date(2e3,0,2)])},o_=function(){return qr(_v,dv,tv,Qd,Gd,$d,wd,vd,t.utcFormat).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)])},u_=function(t){return t.match(/.{6}/g).map(function(t){return"#"+t})},a_=u_("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),c_=u_("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6"),s_=u_("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9"),f_=u_("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5"),l_=zp(ln(300,.5,0),ln(-240,.5,1)),h_=zp(ln(-100,.75,.35),ln(80,1.5,.8)),p_=zp(ln(260,.75,.35),ln(80,1.5,.8)),d_=ln(),v_=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return d_.h=360*t-100,d_.s=1.5-1.5*n,d_.l=.8-.9*n,d_+""},__=Lr(u_("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")),y_=Lr(u_("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),g_=Lr(u_("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),m_=Lr(u_("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921")),x_="http://www.w3.org/1999/xhtml",b_={svg:"http://www.w3.org/2000/svg",xhtml:x_,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},w_=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),b_.hasOwnProperty(n)?{space:b_[n],local:t}:t},M_=function(t){var n=w_(t);return(n.local?Dr:Ur)(n)},T_=0;Fr.prototype=Or.prototype={constructor:Fr,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var N_=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var k_=document.documentElement;if(!k_.matches){var S_=k_.webkitMatchesSelector||k_.msMatchesSelector||k_.mozMatchesSelector||k_.oMatchesSelector;N_=function(t){return function(){return S_.call(this,t)}}}}var A_=N_,E_={};if(t.event=null,"undefined"!=typeof document){var C_=document.documentElement;"onmouseenter"in C_||(E_={mouseenter:"mouseover",mouseleave:"mouseout"})}var z_=function(t,n,e){var r,i,o=Br(t+""),u=o.length;{if(!(arguments.length<2)){for(a=n?Hr:jr,null==e&&(e=!1),r=0;r<u;++r)this.each(a(o[r],n,e));return this}var a=this.node().__on;if(a)for(var c,s=0,f=a.length;s<f;++s)for(r=0,c=a[s];r<u;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value}},P_=function(){for(var n,e=t.event;n=e.sourceEvent;)e=n;return e},q_=function(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,r=r.matrixTransform(t.getScreenCTM().inverse()),[r.x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]},L_=function(t){var n=P_();return n.changedTouches&&(n=n.changedTouches[0]),q_(t,n)},R_=function(t){return null==t?Vr:function(){return this.querySelector(t)}},U_=function(t){"function"!=typeof t&&(t=R_(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u,a=n[i],c=a.length,s=r[i]=new Array(c),f=0;f<c;++f)(o=a[f])&&(u=t.call(o,o.__data__,f,a))&&("__data__"in o&&(u.__data__=o.__data__),s[f]=u);return new zi(r,this._parents)},D_=function(t){return null==t?Wr:function(){return this.querySelectorAll(t)}},O_=function(t){"function"!=typeof t&&(t=D_(t));for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var u,a=n[o],c=a.length,s=0;s<c;++s)(u=a[s])&&(r.push(t.call(u,u.__data__,s,a)),i.push(u));return new zi(r,i)},F_=function(t){"function"!=typeof t&&(t=A_(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],s=0;s<a;++s)(o=u[s])&&t.call(o,o.__data__,s,u)&&c.push(o);return new zi(r,this._parents)},I_=function(t){return new Array(t.length)},Y_=function(){return new zi(this._enter||this._groups.map(I_),this._parents)};$r.prototype={constructor:$r,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var B_=function(t){return function(){return t}},j_="$",H_=function(t,n){if(!t)return p=new Array(this.size()),s=-1,this.each(function(t){p[++s]=t}),p;var e=n?Gr:Zr,r=this._parents,i=this._groups;"function"!=typeof t&&(t=B_(t));for(var o=i.length,u=new Array(o),a=new Array(o),c=new Array(o),s=0;s<o;++s){var f=r[s],l=i[s],h=l.length,p=t.call(f,f&&f.__data__,s,r),d=p.length,v=a[s]=new Array(d),_=u[s]=new Array(d),y=c[s]=new Array(h);e(f,l,v,_,y,p,n);for(var g,m,x=0,b=0;x<d;++x)if(g=v[x]){for(x>=b&&(b=x+1);!(m=_[b])&&++b<d;);g._next=m||null}}return u=new zi(u,r),u._enter=a,u._exit=c,u},X_=function(){return new zi(this._exit||this._groups.map(I_),this._parents)},V_=function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,s=n[a],f=e[a],l=s.length,h=u[a]=new Array(l),p=0;p<l;++p)(c=s[p]||f[p])&&(h[p]=c);for(;a<r;++a)u[a]=n[a];return new zi(u,this._parents)},W_=function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,u=i[o];--o>=0;)(r=i[o])&&(u&&u!==r.nextSibling&&u.parentNode.insertBefore(r,u),u=r);return this},$_=function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=Jr);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var u,a=e[o],c=a.length,s=i[o]=new Array(c),f=0;f<c;++f)(u=a[f])&&(s[f]=u);s.sort(n)}return new zi(i,this._parents).order()},Z_=function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},G_=function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},J_=function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var u=r[i];if(u)return u}return null},Q_=function(){var t=0;return this.each(function(){++t}),t},K_=function(){return!this.node()},ty=function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],u=0,a=o.length;u<a;++u)(i=o[u])&&t.call(i,i.__data__,u,o);return this},ny=function(t,n){var e=w_(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?Kr:Qr:"function"==typeof n?e.local?ri:ei:e.local?ni:ti)(e,n))},ey=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView},ry=function(t,n,e){var r;return arguments.length>1?this.each((null==n?ii:"function"==typeof n?ui:oi)(t,n,null==e?"":e)):ey(r=this.node()).getComputedStyle(r,null).getPropertyValue(t)},iy=function(t,n){return arguments.length>1?this.each((null==n?ai:"function"==typeof n?si:ci)(t,n)):this.node()[t]};hi.prototype={add:function(t){var n=this._names.indexOf(t);n<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};var oy=function(t,n){var e=fi(t+"");if(arguments.length<2){for(var r=li(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?yi:n?vi:_i)(e,n))},uy=function(t){return arguments.length?this.each(null==t?gi:("function"==typeof t?xi:mi)(t)):this.node().textContent},ay=function(t){return arguments.length?this.each(null==t?bi:("function"==typeof t?Mi:wi)(t)):this.node().innerHTML},cy=function(){return this.each(Ti)},sy=function(){return this.each(Ni)},fy=function(t){var n="function"==typeof t?t:M_(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},ly=function(t,n){var e="function"==typeof t?t:M_(t),r=null==n?ki:"function"==typeof n?n:R_(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},hy=function(){return this.each(Si)},py=function(t){return arguments.length?this.property("__data__",t):this.node().__data__},dy=function(t,n){return this.each(("function"==typeof n?Ci:Ei)(t,n))},vy=[null];zi.prototype=Pi.prototype={constructor:zi,select:U_,selectAll:O_,filter:F_,data:H_,enter:Y_,exit:X_,merge:V_,order:W_,sort:$_,call:Z_,nodes:G_,node:J_,size:Q_,empty:K_,each:ty,attr:ny,style:ry,property:iy,classed:oy,text:uy,html:ay,raise:cy,lower:sy,append:fy,insert:ly,remove:hy,datum:py,on:z_,dispatch:dy};var _y=function(t){return"string"==typeof t?new zi([[document.querySelector(t)]],[document.documentElement]):new zi([[t]],vy)},yy=function(t){return"string"==typeof t?new zi([document.querySelectorAll(t)],[document.documentElement]):new zi([null==t?[]:t],vy)},gy=function(t,n,e){arguments.length<3&&(e=n,n=P_().changedTouches);for(var r,i=0,o=n?n.length:0;i<o;++i)if((r=n[i]).identifier===e)return q_(t,r);return null},my=function(t,n){null==n&&(n=P_().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=q_(t,n[e]);return i},xy=Pn("start","end","interrupt"),by=[],wy=0,My=1,Ty=2,Ny=3,ky=4,Sy=5,Ay=6,Ey=function(t,n,e,r,i,o){var u=t.__transition;if(u){if(e in u)return}else t.__transition={};Ui(t,e,{name:n,index:r,group:i,on:xy,tween:by,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:wy})},Cy=function(t,n){var e,r,i,o=t.__transition,u=!0;if(o){n=null==n?null:n+"";for(i in o)(e=o[i]).name===n?(r=e.state>Ty&&e.state<Sy,e.state=Ay,e.timer.stop(),r&&e.on.call("interrupt",t,t.__data__,e.index,e.group),delete o[i]):u=!1;u&&delete t.__transition}},zy=function(t){return this.each(function(){Cy(this,t)})},Py=function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=Ri(this.node(),e).tween,o=0,u=i.length;o<u;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?Di:Oi)(e,t,n))},qy=function(t,n){var e;return("number"==typeof n?sp:n instanceof Bt?ip:(e=Bt(n))?(n=e,ip):pp)(t,n)},Ly=function(t,n){var e=w_(t),r="transform"===e?xp:qy;return this.attrTween(t,"function"==typeof n?(e.local?Xi:Hi)(e,r,Fi(this,"attr."+t,n)):null==n?(e.local?Yi:Ii)(e):(e.local?ji:Bi)(e,r,n))},Ry=function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=w_(t);return this.tween(e,(r.local?Vi:Wi)(r,n))},Uy=function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?$i:Zi)(n,t)):Ri(this.node(),n).delay},Dy=function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?Gi:Ji)(n,t)):Ri(this.node(),n).duration},Oy=function(t){var n=this._id;return arguments.length?this.each(Qi(n,t)):Ri(this.node(),n).ease},Fy=function(t){"function"!=typeof t&&(t=A_(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],s=0;s<a;++s)(o=u[s])&&t.call(o,o.__data__,s,u)&&c.push(o);return new so(r,this._parents,this._name,this._id)},Iy=function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,s=n[a],f=e[a],l=s.length,h=u[a]=new Array(l),p=0;p<l;++p)(c=s[p]||f[p])&&(h[p]=c);for(;a<r;++a)u[a]=n[a];return new so(u,this._parents,this._name,this._id)},Yy=function(t,n){var e=this._id;return arguments.length<2?Ri(this.node(),e).on.on(t):this.each(to(e,t,n))},By=function(){return this.on("end.remove",no(this._id))},jy=function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=R_(t));for(var r=this._groups,i=r.length,o=new Array(i),u=0;u<i;++u)for(var a,c,s=r[u],f=s.length,l=o[u]=new Array(f),h=0;h<f;++h)(a=s[h])&&(c=t.call(a,a.__data__,h,s))&&("__data__"in a&&(c.__data__=a.__data__),l[h]=c,Ey(l[h],n,e,h,l,Ri(a,e)));return new so(o,this._parents,n,e)},Hy=function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=D_(t));for(var r=this._groups,i=r.length,o=[],u=[],a=0;a<i;++a)for(var c,s=r[a],f=s.length,l=0;l<f;++l)if(c=s[l]){for(var h,p=t.call(c,c.__data__,l,s),d=Ri(c,e),v=0,_=p.length;v<_;++v)(h=p[v])&&Ey(h,n,e,v,p,d);o.push(p),u.push(c)}return new so(o,u,n,e)},Xy=Pi.prototype.constructor,Vy=function(){return new Xy(this._groups,this._parents)},Wy=function(t,n,e){var r="transform"==(t+="")?mp:qy;return null==n?this.styleTween(t,eo(t,r)).on("end.style."+t,ro(t)):this.styleTween(t,"function"==typeof n?oo(t,r,Fi(this,"style."+t,n)):io(t,r,n),e)},$y=function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,uo(t,n,null==e?"":e))},Zy=function(t){return this.tween("text","function"==typeof t?co(Fi(this,"text",t)):ao(null==t?"":t+""))},Gy=function(){for(var t=this._name,n=this._id,e=lo(),r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,s=0;s<c;++s)if(u=a[s]){var f=Ri(u,n);Ey(u,t,e,s,a,{time:f.time+f.delay+f.duration,delay:0,duration:f.duration,ease:f.ease})}return new so(r,this._parents,t,e)},Jy=0,Qy=Pi.prototype;so.prototype=fo.prototype={constructor:so,select:jy,selectAll:Hy,filter:Fy,merge:Iy,selection:Vy,transition:Gy,call:Qy.call,nodes:Qy.nodes,node:Qy.node,size:Qy.size,empty:Qy.empty,each:Qy.each,on:Yy,attr:Ly,attrTween:Ry,style:Wy,styleTween:$y,text:Zy,remove:By,tween:Py,delay:Uy,duration:Dy,ease:Oy};var Ky={time:null,delay:0,duration:250,ease:g
},tg=function(t){var n,e;t instanceof so?(n=t._id,t=t._name):(n=lo(),(e=Ky).time=jn(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,s=0;s<c;++s)(u=a[s])&&Ey(u,t,n,s,a,e||ho(u,n));return new so(r,this._parents,t,n)};Pi.prototype.interrupt=zy,Pi.prototype.transition=tg;var ng=[null],eg=function(t,n){var e,r,i=t.__transition;if(i){n=null==n?null:n+"";for(r in i)if((e=i[r]).state>My&&e.name===n)return new so([[t]],ng,n,+r)}return null},rg=Array.prototype.slice,ig=function(t){return t},og=1,ug=2,ag=3,cg=4,sg=1e-6,fg=function(){function t(t){var o,u=0;t.eachAfter(function(t){var e=t.children;e?(t.x=To(e),t.y=ko(e)):(t.x=o?u+=n(t,o):0,t.y=0,o=t)});var a=Ao(t),c=Eo(t),s=a.x-n(a,c)/2,f=c.x+n(c,a)/2;return t.eachAfter(i?function(n){n.x=(n.x-t.x)*e,n.y=(t.y-n.y)*r}:function(n){n.x=(n.x-s)/(f-s)*e,n.y=(1-(t.y?n.y/t.y:1))*r})}var n=Mo,e=1,r=1,i=!1;return t.separation=function(e){return arguments.length?(n=e,t):n},t.size=function(n){return arguments.length?(i=!1,e=+n[0],r=+n[1],t):i?null:[e,r]},t.nodeSize=function(n){return arguments.length?(i=!0,e=+n[0],r=+n[1],t):i?[e,r]:null},t},lg=function(t){var n,e,r,i,o=this,u=[o];do for(n=u.reverse(),u=[];o=n.pop();)if(t(o),e=o.children)for(r=0,i=e.length;r<i;++r)u.push(e[r]);while(u.length);return this},hg=function(t){for(var n,e,r=this,i=[r];r=i.pop();)if(t(r),n=r.children)for(e=n.length-1;e>=0;--e)i.push(n[e]);return this},pg=function(t){for(var n,e,r,i=this,o=[i],u=[];i=o.pop();)if(u.push(i),n=i.children)for(e=0,r=n.length;e<r;++e)o.push(n[e]);for(;i=u.pop();)t(i);return this},dg=function(t){return this.eachAfter(function(n){for(var e=+t(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)e+=r[i].value;n.value=e})},vg=function(t){return this.eachBefore(function(n){n.children&&n.children.sort(t)})},_g=function(t){for(var n=this,e=Co(n,t),r=[n];n!==e;)n=n.parent,r.push(n);for(var i=r.length;t!==e;)r.splice(i,0,t),t=t.parent;return r},yg=function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n},gg=function(){var t=[];return this.each(function(n){t.push(n)}),t},mg=function(){var t=[];return this.eachBefore(function(n){n.children||t.push(n)}),t},xg=function(){var t=this,n=[];return t.each(function(e){e!==t&&n.push({source:e.parent,target:e})}),n};Uo.prototype=zo.prototype={constructor:Uo,each:lg,eachAfter:pg,eachBefore:hg,sum:dg,sort:vg,path:_g,ancestors:yg,descendants:gg,leaves:mg,links:xg,copy:Po};var bg=function(t){for(var n,e=(t=t.slice()).length,r=null,i=r;e;){var o=new Do(t[e-1]);i=i?i.next=o:r=o,t[n]=t[--e]}return{head:r,tail:i}},wg=function(t){return Fo(bg(t),[])},Mg=function(t){return Wo(t),t},Tg=function(t){return function(){return t}},Ng=function(){function t(t){return t.x=e/2,t.y=r/2,n?t.eachBefore(Qo(n)).eachAfter(Ko(i,.5)).eachBefore(tu(1)):t.eachBefore(Qo(Jo)).eachAfter(Ko(Go,1)).eachAfter(Ko(i,t.r/Math.min(e,r))).eachBefore(tu(Math.min(e,r)/(2*t.r))),t}var n=null,e=1,r=1,i=Go;return t.radius=function(e){return arguments.length?(n=$o(e),t):n},t.size=function(n){return arguments.length?(e=+n[0],r=+n[1],t):[e,r]},t.padding=function(n){return arguments.length?(i="function"==typeof n?n:Tg(+n),t):i},t},kg=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)},Sg=function(t,n,e,r,i){for(var o,u=t.children,a=-1,c=u.length,s=t.value&&(r-n)/t.value;++a<c;)o=u[a],o.y0=e,o.y1=i,o.x0=n,o.x1=n+=o.value*s},Ag=function(){function t(t){var u=t.height+1;return t.x0=t.y0=i,t.x1=e,t.y1=r/u,t.eachBefore(n(r,u)),o&&t.eachBefore(kg),t}function n(t,n){return function(e){e.children&&Sg(e,e.x0,t*(e.depth+1)/n,e.x1,t*(e.depth+2)/n);var r=e.x0,o=e.y0,u=e.x1-i,a=e.y1-i;u<r&&(r=u=(r+u)/2),a<o&&(o=a=(o+a)/2),e.x0=r,e.y0=o,e.x1=u,e.y1=a}}var e=1,r=1,i=0,o=!1;return t.round=function(n){return arguments.length?(o=!!n,t):o},t.size=function(n){return arguments.length?(e=+n[0],r=+n[1],t):[e,r]},t.padding=function(n){return arguments.length?(i=+n,t):i},t},Eg="$",Cg={depth:-1},zg={},Pg=function(){function t(t){var r,i,o,u,a,c,s,f=t.length,l=new Array(f),h={};for(i=0;i<f;++i)r=t[i],a=l[i]=new Uo(r),null!=(c=n(r,i,t))&&(c+="")&&(s=Eg+(a.id=c),h[s]=s in h?zg:a);for(i=0;i<f;++i)if(a=l[i],c=e(t[i],i,t),null!=c&&(c+="")){if(u=h[Eg+c],!u)throw new Error("missing: "+c);if(u===zg)throw new Error("ambiguous: "+c);u.children?u.children.push(a):u.children=[a],a.parent=u}else{if(o)throw new Error("multiple roots");o=a}if(!o)throw new Error("no root");if(o.parent=Cg,o.eachBefore(function(t){t.depth=t.parent.depth+1,--f}).eachBefore(Ro),o.parent=null,f>0)throw new Error("cycle");return o}var n=nu,e=eu;return t.id=function(e){return arguments.length?(n=Zo(e),t):n},t.parentId=function(n){return arguments.length?(e=Zo(n),t):e},t};su.prototype=Object.create(Uo.prototype);var qg=function(){function t(t){var r=fu(t);if(r.eachAfter(n),r.parent.m=-r.z,r.eachBefore(e),c)t.eachBefore(i);else{var s=t,f=t,l=t;t.eachBefore(function(t){t.x<s.x&&(s=t),t.x>f.x&&(f=t),t.depth>l.depth&&(l=t)});var h=s===f?1:o(s,f)/2,p=h-s.x,d=u/(f.x+h+p),v=a/(l.depth||1);t.eachBefore(function(t){t.x=(t.x+p)*d,t.y=t.depth*v})}return t}function n(t){var n=t.children,e=t.parent.children,i=t.i?e[t.i-1]:null;if(n){au(t);var u=(n[0].z+n[n.length-1].z)/2;i?(t.z=i.z+o(t._,i._),t.m=t.z-u):t.z=u}else i&&(t.z=i.z+o(t._,i._));t.parent.A=r(t,i,t.parent.A||e[0])}function e(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function r(t,n,e){if(n){for(var r,i=t,u=t,a=n,c=i.parent.children[0],s=i.m,f=u.m,l=a.m,h=c.m;a=ou(a),i=iu(i),a&&i;)c=iu(c),u=ou(u),u.a=t,r=a.z+l-i.z-s+o(a._,i._),r>0&&(uu(cu(a,t,e),t,r),s+=r,f+=r),l+=a.m,s+=i.m,h+=c.m,f+=u.m;a&&!ou(u)&&(u.t=a,u.m+=l-f),i&&!iu(c)&&(c.t=i,c.m+=s-h,e=t)}return e}function i(t){t.x*=u,t.y=t.depth*a}var o=ru,u=1,a=1,c=null;return t.separation=function(n){return arguments.length?(o=n,t):o},t.size=function(n){return arguments.length?(c=!1,u=+n[0],a=+n[1],t):c?null:[u,a]},t.nodeSize=function(n){return arguments.length?(c=!0,u=+n[0],a=+n[1],t):c?[u,a]:null},t},Lg=function(t,n,e,r,i){for(var o,u=t.children,a=-1,c=u.length,s=t.value&&(i-e)/t.value;++a<c;)o=u[a],o.x0=n,o.x1=r,o.y0=e,o.y1=e+=o.value*s},Rg=(1+Math.sqrt(5))/2,Ug=function t(n){function e(t,e,r,i,o){lu(n,t,e,r,i,o)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Rg),Dg=function(){function t(t){return t.x0=t.y0=0,t.x1=i,t.y1=o,t.eachBefore(n),u=[0],r&&t.eachBefore(kg),t}function n(t){var n=u[t.depth],r=t.x0+n,i=t.y0+n,o=t.x1-n,h=t.y1-n;o<r&&(r=o=(r+o)/2),h<i&&(i=h=(i+h)/2),t.x0=r,t.y0=i,t.x1=o,t.y1=h,t.children&&(n=u[t.depth+1]=a(t)/2,r+=l(t)-n,i+=c(t)-n,o-=s(t)-n,h-=f(t)-n,o<r&&(r=o=(r+o)/2),h<i&&(i=h=(i+h)/2),e(t,r,i,o,h))}var e=Ug,r=!1,i=1,o=1,u=[0],a=Go,c=Go,s=Go,f=Go,l=Go;return t.round=function(n){return arguments.length?(r=!!n,t):r},t.size=function(n){return arguments.length?(i=+n[0],o=+n[1],t):[i,o]},t.tile=function(n){return arguments.length?(e=Zo(n),t):e},t.padding=function(n){return arguments.length?t.paddingInner(n).paddingOuter(n):t.paddingInner()},t.paddingInner=function(n){return arguments.length?(a="function"==typeof n?n:Tg(+n),t):a},t.paddingOuter=function(n){return arguments.length?t.paddingTop(n).paddingRight(n).paddingBottom(n).paddingLeft(n):t.paddingTop()},t.paddingTop=function(n){return arguments.length?(c="function"==typeof n?n:Tg(+n),t):c},t.paddingRight=function(n){return arguments.length?(s="function"==typeof n?n:Tg(+n),t):s},t.paddingBottom=function(n){return arguments.length?(f="function"==typeof n?n:Tg(+n),t):f},t.paddingLeft=function(n){return arguments.length?(l="function"==typeof n?n:Tg(+n),t):l},t},Og=function(t,n,e,r,i){function o(t,n,e,r,i,u,a){if(t>=n-1){var s=c[t];return s.x0=r,s.y0=i,s.x1=u,s.y1=a,void 0}for(var l=f[t],h=e/2+l,p=t+1,d=n-1;p<d;){var v=p+d>>>1;f[v]<h?p=v+1:d=v}var _=f[p]-l,y=e-_;if(a-i>u-r){var g=(i*y+a*_)/e;o(t,p,_,r,i,u,g),o(p,n,y,r,g,u,a)}else{var m=(r*y+u*_)/e;o(t,p,_,r,i,m,a),o(p,n,y,m,i,u,a)}}var u,a,c=t.children,s=c.length,f=new Array(s+1);for(f[0]=a=u=0;u<s;++u)f[u+1]=a+=c[u].value;o(0,s,t.value,n,e,r,i)},Fg=function(t,n,e,r,i){(1&t.depth?Lg:Sg)(t,n,e,r,i)},Ig=function t(n){function e(t,e,r,i,o){if((u=t._squarify)&&u.ratio===n)for(var u,a,c,s,f,l=-1,h=u.length,p=t.value;++l<h;){for(a=u[l],c=a.children,s=a.value=0,f=c.length;s<f;++s)a.value+=c[s].value;a.dice?Sg(a,e,r,i,r+=(o-r)*a.value/p):Lg(a,e,r,e+=(i-e)*a.value/p,o),p-=a.value}else t._squarify=u=lu(n,t,e,r,i,o),u.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(Rg),Yg=function(t,n){function e(){var e,i,o=r.length,u=0,a=0;for(e=0;e<o;++e)i=r[e],u+=i.x,a+=i.y;for(u=u/o-t,a=a/o-n,e=0;e<o;++e)i=r[e],i.x-=u,i.y-=a}var r;return null==t&&(t=0),null==n&&(n=0),e.initialize=function(t){r=t},e.x=function(n){return arguments.length?(t=+n,e):t},e.y=function(t){return arguments.length?(n=+t,e):n},e},Bg=function(t){return function(){return t}},jg=function(){return 1e-6*(Math.random()-.5)},Hg=function(t){function n(){function t(t,e,r,i,o){var a=t.data,p=t.r,d=l+p;{if(!a)return e>s+d||i<s-d||r>f+d||o<f-d;if(a.index>n){var v=s-a.x-a.vx,_=f-a.y-a.vy,y=v*v+_*_;y<d*d&&(0===v&&(v=jg(),y+=v*v),0===_&&(_=jg(),y+=_*_),y=(d-(y=Math.sqrt(y)))/y*u,c.vx+=(v*=y)*(d=(p*=p)/(h+p)),c.vy+=(_*=y)*d,a.vx-=v*(d=1-d),a.vy-=_*d)}}}for(var n,r,c,s,f,l,h,p=i.length,d=0;d<a;++d)for(r=I(i,hu,pu).visitAfter(e),n=0;n<p;++n)c=i[n],l=o[n],h=l*l,s=c.x+c.vx,f=c.y+c.vy,r.visit(t)}function e(t){if(t.data)return t.r=o[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}function r(){if(i){var n,e=i.length;for(o=new Array(e),n=0;n<e;++n)o[n]=+t(i[n],n,i)}}var i,o,u=1,a=1;return"function"!=typeof t&&(t=Bg(null==t?1:+t)),n.initialize=function(t){i=t,r()},n.iterations=function(t){return arguments.length?(a=+t,n):a},n.strength=function(t){return arguments.length?(u=+t,n):u},n.radius=function(e){return arguments.length?(t="function"==typeof e?e:Bg(+e),r(),n):t},n},Xg=function(t){function n(t){return 1/Math.min(f[t.source.index],f[t.target.index])}function e(n){for(var e=0,r=t.length;e<v;++e)for(var i,o,u,s,f,h,p,d=0;d<r;++d)i=t[d],o=i.source,u=i.target,s=u.x+u.vx-o.x-o.vx||jg(),f=u.y+u.vy-o.y-o.vy||jg(),h=Math.sqrt(s*s+f*f),h=(h-c[d])/h*n*a[d],s*=h,f*=h,u.vx-=s*(p=l[d]),u.vy-=f*p,o.vx+=s*(p=1-p),o.vy+=f*p}function r(){if(s){var n,e,r=s.length,p=t.length,d=o(s,h);for(n=0,f=new Array(r);n<r;++n)f[n]=0;for(n=0;n<p;++n)e=t[n],e.index=n,"object"!=typeof e.source&&(e.source=vu(d,e.source)),"object"!=typeof e.target&&(e.target=vu(d,e.target)),++f[e.source.index],++f[e.target.index];for(n=0,l=new Array(p);n<p;++n)e=t[n],l[n]=f[e.source.index]/(f[e.source.index]+f[e.target.index]);a=new Array(p),i(),c=new Array(p),u()}}function i(){if(s)for(var n=0,e=t.length;n<e;++n)a[n]=+p(t[n],n,t)}function u(){if(s)for(var n=0,e=t.length;n<e;++n)c[n]=+d(t[n],n,t)}var a,c,s,f,l,h=du,p=n,d=Bg(30),v=1;return null==t&&(t=[]),e.initialize=function(t){s=t,r()},e.links=function(n){return arguments.length?(t=n,r(),e):t},e.id=function(t){return arguments.length?(h=t,e):h},e.iterations=function(t){return arguments.length?(v=+t,e):v},e.strength=function(t){return arguments.length?(p="function"==typeof t?t:Bg(+t),i(),e):p},e.distance=function(t){return arguments.length?(d="function"==typeof t?t:Bg(+t),u(),e):d},e},Vg=10,Wg=Math.PI*(3-Math.sqrt(5)),$g=function(t){function n(){e(),d.call("tick",u),a<c&&(p.stop(),d.call("end",u))}function e(){var n,e,r=t.length;for(a+=(f-a)*s,h.each(function(t){t(a)}),n=0;n<r;++n)e=t[n],null==e.fx?e.x+=e.vx*=l:(e.x=e.fx,e.vx=0),null==e.fy?e.y+=e.vy*=l:(e.y=e.fy,e.vy=0)}function r(){for(var n,e=0,r=t.length;e<r;++e){if(n=t[e],n.index=e,isNaN(n.x)||isNaN(n.y)){var i=Vg*Math.sqrt(e),o=e*Wg;n.x=i*Math.cos(o),n.y=i*Math.sin(o)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function i(n){return n.initialize&&n.initialize(t),n}var u,a=1,c=.001,s=1-Math.pow(c,1/300),f=0,l=.6,h=o(),p=Vn(n),d=Pn("tick","end");return null==t&&(t=[]),r(),u={tick:e,restart:function(){return p.restart(n),u},stop:function(){return p.stop(),u},nodes:function(n){return arguments.length?(t=n,r(),h.each(i),u):t},alpha:function(t){return arguments.length?(a=+t,u):a},alphaMin:function(t){return arguments.length?(c=+t,u):c},alphaDecay:function(t){return arguments.length?(s=+t,u):+s},alphaTarget:function(t){return arguments.length?(f=+t,u):f},velocityDecay:function(t){return arguments.length?(l=1-t,u):1-l},force:function(t,n){return arguments.length>1?(null==n?h.remove(t):h.set(t,i(n)),u):h.get(t)},find:function(n,e,r){var i,o,u,a,c,s=0,f=t.length;for(null==r?r=1/0:r*=r,s=0;s<f;++s)a=t[s],i=n-a.x,o=e-a.y,u=i*i+o*o,u<r&&(c=a,r=u);return c},on:function(t,n){return arguments.length>1?(d.on(t,n),u):d.on(t)}}},Zg=function(){function t(t){var n,a=i.length,c=I(i,_u,yu).visitAfter(e);for(u=t,n=0;n<a;++n)o=i[n],c.visit(r)}function n(){if(i){var t,n=i.length;for(a=new Array(n),t=0;t<n;++t)a[t]=+c(i[t],t,i)}}function e(t){var n,e,r,i,o,u=0;if(t.length){for(r=i=o=0;o<4;++o)(n=t[o])&&(e=n.value)&&(u+=e,r+=e*n.x,i+=e*n.y);t.x=r/u,t.y=i/u}else{n=t,n.x=n.data.x,n.y=n.data.y;do u+=a[n.data.index];while(n=n.next)}t.value=u}function r(t,n,e,r){if(!t.value)return!0;var i=t.x-o.x,c=t.y-o.y,h=r-n,p=i*i+c*c;if(h*h/l<p)return p<f&&(0===i&&(i=jg(),p+=i*i),0===c&&(c=jg(),p+=c*c),p<s&&(p=Math.sqrt(s*p)),o.vx+=i*t.value*u/p,o.vy+=c*t.value*u/p),!0;if(!(t.length||p>=f)){(t.data!==o||t.next)&&(0===i&&(i=jg(),p+=i*i),0===c&&(c=jg(),p+=c*c),p<s&&(p=Math.sqrt(s*p)));do t.data!==o&&(h=a[t.data.index]*u/p,o.vx+=i*h,o.vy+=c*h);while(t=t.next)}}var i,o,u,a,c=Bg(-30),s=1,f=1/0,l=.81;return t.initialize=function(t){i=t,n()},t.strength=function(e){return arguments.length?(c="function"==typeof e?e:Bg(+e),n(),t):c},t.distanceMin=function(n){return arguments.length?(s=n*n,t):Math.sqrt(s)},t.distanceMax=function(n){return arguments.length?(f=n*n,t):Math.sqrt(f)},t.theta=function(n){return arguments.length?(l=n*n,t):Math.sqrt(l)},t},Gg=function(t){function n(t){for(var n,e=0,u=r.length;e<u;++e)n=r[e],n.vx+=(o[e]-n.x)*i[e]*t}function e(){if(r){var n,e=r.length;for(i=new Array(e),o=new Array(e),n=0;n<e;++n)i[n]=isNaN(o[n]=+t(r[n],n,r))?0:+u(r[n],n,r)}}var r,i,o,u=Bg(.1);return"function"!=typeof t&&(t=Bg(null==t?0:+t)),n.initialize=function(t){r=t,e()},n.strength=function(t){return arguments.length?(u="function"==typeof t?t:Bg(+t),e(),n):u},n.x=function(r){return arguments.length?(t="function"==typeof r?r:Bg(+r),e(),n):t},n},Jg=function(t){function n(t){for(var n,e=0,u=r.length;e<u;++e)n=r[e],n.vy+=(o[e]-n.y)*i[e]*t}function e(){if(r){var n,e=r.length;for(i=new Array(e),o=new Array(e),n=0;n<e;++n)i[n]=isNaN(o[n]=+t(r[n],n,r))?0:+u(r[n],n,r)}}var r,i,o,u=Bg(.1);return"function"!=typeof t&&(t=Bg(null==t?0:+t)),n.initialize=function(t){r=t,e()},n.strength=function(t){return arguments.length?(u="function"==typeof t?t:Bg(+t),e(),n):u},n.y=function(r){return arguments.length?(t="function"==typeof r?r:Bg(+r),e(),n):t},n},Qg=function(){t.event.preventDefault(),t.event.stopImmediatePropagation()},Kg=function(t){var n=t.document.documentElement,e=_y(t).on("dragstart.drag",Qg,!0);"onselectstart"in n?e.on("selectstart.drag",Qg,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")},tm=function(t){return function(){return t}};xu.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var nm=function(){function n(t){t.on("mousedown.drag",e).on("touchstart.drag",o).on("touchmove.drag",u).on("touchend.drag touchcancel.drag",a).style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function e(){if(!f&&l.apply(this,arguments)){var n=c("mouse",h.apply(this,arguments),L_,this,arguments);n&&(_y(t.event.view).on("mousemove.drag",r,!0).on("mouseup.drag",i,!0),Kg(t.event.view),gu(),s=!1,n("start"))}}function r(){Qg(),s=!0,d.mouse("drag")}function i(){_y(t.event.view).on("mousemove.drag mouseup.drag",null),mu(t.event.view,s),Qg(),d.mouse("end")}function o(){if(l.apply(this,arguments)){var n,e,r=t.event.changedTouches,i=h.apply(this,arguments),o=r.length;for(n=0;n<o;++n)(e=c(r[n].identifier,i,gy,this,arguments))&&(gu(),e("start"))}}function u(){var n,e,r=t.event.changedTouches,i=r.length;for(n=0;n<i;++n)(e=d[r[n].identifier])&&(Qg(),e("drag"))}function a(){var n,e,r=t.event.changedTouches,i=r.length;for(f&&clearTimeout(f),f=setTimeout(function(){f=null},500),n=0;n<i;++n)(e=d[r[n].identifier])&&(gu(),e("end"))}function c(e,r,i,o,u){var a,c,s,f=i(r,e),l=v.copy();if(Xr(new xu(n,"beforestart",a,e,_,f[0],f[1],0,0,l),function(){return null!=(t.event.subject=a=p.apply(o,u))&&(c=a.x-f[0]||0,s=a.y-f[1]||0,!0)}))return function t(h){var p,v=f;switch(h){case"start":d[e]=t,p=_++;break;case"end":delete d[e],--_;case"drag":f=i(r,e),p=_}Xr(new xu(n,h,a,e,p,f[0]+c,f[1]+s,f[0]-v[0],f[1]-v[1],l),l.apply,l,[h,o,u])}}var s,f,l=bu,h=wu,p=Mu,d={},v=Pn("start","drag","end"),_=0;return n.filter=function(t){return arguments.length?(l="function"==typeof t?t:tm(!!t),n):l},n.container=function(t){return arguments.length?(h="function"==typeof t?t:tm(t),n):h},n.subject=function(t){return arguments.length?(p="function"==typeof t?t:tm(t),n):p},n.on=function(){var t=v.on.apply(v,arguments);return t===v?n:t},n},em=function(t){return function(){return t}};ku.prototype={constructor:ku,insert:function(t,n){var e,r,i;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){for(t=t.R;t.L;)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=Cu(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);for(n.L=n.R=null,n.U=e,n.C=!0,t=n;e&&e.C;)r=e.U,e===r.L?(i=r.R,i&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.R&&(Au(this,e),t=e,e=t.U),e.C=!1,r.C=!0,Eu(this,r))):(i=r.L,i&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.L&&(Eu(this,e),t=e,e=t.U),e.C=!1,r.C=!0,Au(this,r))),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,i=t.U,o=t.L,u=t.R;if(e=o?u?Cu(u):o:u,i?i.L===t?i.L=e:i.R=e:this._=e,o&&u?(r=e.C,e.C=t.C,e.L=o,o.U=e,e!==u?(i=e.U,e.U=t.U,t=e.R,i.L=t,e.R=u,u.U=e):(e.U=i,i=e,t=e.R)):(r=t.C,t=e),t&&(t.U=i),!r){if(t&&t.C)return void(t.C=!1);do{if(t===this._)break;if(t===i.L){if(n=i.R,n.C&&(n.C=!1,i.C=!0,Au(this,i),n=i.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,Eu(this,n),n=i.R),n.C=i.C,i.C=n.R.C=!1,Au(this,i),t=this._;break}}else if(n=i.L,n.C&&(n.C=!1,i.C=!0,Eu(this,i),n=i.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,Au(this,n),n=i.L),n.C=i.C,i.C=n.L.C=!1,Eu(this,i),t=this._;break}n.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var rm,im,om,um,am,cm=[],sm=[],fm=1e-6,lm=1e-12;na.prototype={constructor:na,polygons:function(){var t=this.edges;return this.cells.map(function(n){var e=n.halfedges.map(function(e){return Fu(n,t[e])});return e.data=n.site.data,e})},triangles:function(){var t=[],n=this.edges;return this.cells.forEach(function(e,r){for(var i,o=e.site,u=e.halfedges,a=-1,c=u.length,s=n[u[c-1]],f=s.left===o?s.right:s.left;++a<c;)i=f,s=n[u[a]],f=s.left===o?s.right:s.left,r<i.index&&r<f.index&&Ku(o,i,f)<0&&t.push([o.data,i.data,f.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})}};var hm=function(){function t(t){return new na(t.map(function(r,i){var o=[Math.round(n(r,i,t)/fm)*fm,Math.round(e(r,i,t)/fm)*fm];return o.index=i,o.data=r,o}),r)}var n=Tu,e=Nu,r=null;return t.polygons=function(n){return t(n).polygons()},t.links=function(n){return t(n).links()},t.triangles=function(n){return t(n).triangles()},t.x=function(e){return arguments.length?(n="function"==typeof e?e:em(+e),t):n},t.y=function(n){return arguments.length?(e="function"==typeof n?n:em(+n),t):e},t.extent=function(n){return arguments.length?(r=null==n?null:[[+n[0][0],+n[0][1]],[+n[1][0],+n[1][1]]],t):r&&[[r[0][0],r[0][1]],[r[1][0],r[1][1]]]},t.size=function(n){return arguments.length?(r=null==n?null:[[0,0],[+n[0],+n[1]]],t):r&&[r[1][0]-r[0][0],r[1][1]-r[0][1]]},t},pm=function(t){return function(){return t}};ra.prototype={constructor:ra,scale:function(t){return 1===t?this:new ra(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new ra(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var dm=new ra(1,0,0);ia.prototype=ra.prototype;var vm=function(){t.event.preventDefault(),t.event.stopImmediatePropagation()},_m=function(){function n(t){t.on("wheel.zoom",s).on("mousedown.zoom",f).on("dblclick.zoom",l).on("touchstart.zoom",h).on("touchmove.zoom",p).on("touchend.zoom touchcancel.zoom",d).style("-webkit-tap-highlight-color","rgba(0,0,0,0)").property("__zoom",ca)}function e(t,n){return n=Math.max(m,Math.min(x,n)),n===t.k?t:new ra(n,t.x,t.y)}function r(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new ra(t.k,r,i)}function i(t,n){var e=Math.min(0,t.invertX(n[0][0])-b)||Math.max(0,t.invertX(n[1][0])-w),r=Math.min(0,t.invertY(n[0][1])-M)||Math.max(0,t.invertY(n[1][1])-T);return e||r?t.translate(e,r):t}function o(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function u(t,n,e){t.on("start.zoom",function(){a(this,arguments).start()}).on("interrupt.zoom end.zoom",function(){a(this,arguments).end()}).tween("zoom",function(){var t=this,r=arguments,i=a(t,r),u=g.apply(t,r),c=e||o(u),s=Math.max(u[1][0]-u[0][0],u[1][1]-u[0][1]),f=t.__zoom,l="function"==typeof n?n.apply(t,r):n,h=Np(f.invert(c).concat(s/f.k),l.invert(c).concat(s/l.k));return function(t){if(1===t)t=l;else{var n=h(t),e=s/n[2];t=new ra(e,c[0]-n[0]*e,c[1]-n[1]*e)}i.zoom(null,t)}})}function a(t,n){for(var e,r=0,i=k.length;r<i;++r)if((e=k[r]).that===t)return e;return new c(t,n)}function c(t,n){this.that=t,this.args=n,this.index=-1,this.active=0,this.extent=g.apply(t,n)}function s(){function n(){o.wheel=null,o.end()}if(y.apply(this,arguments)){var o=a(this,arguments),u=this.__zoom,c=Math.max(m,Math.min(x,u.k*Math.pow(2,-t.event.deltaY*(t.event.deltaMode?120:1)/500))),s=L_(this);if(o.wheel)o.mouse[0][0]===s[0]&&o.mouse[0][1]===s[1]||(o.mouse[1]=u.invert(o.mouse[0]=s)),clearTimeout(o.wheel);else{if(u.k===c)return;o.mouse=[s,u.invert(s)],Cy(this),o.start()}vm(),o.wheel=setTimeout(n,E),o.zoom("mouse",i(r(e(u,c),o.mouse[0],o.mouse[1]),o.extent))}}function f(){function n(){vm(),o.moved=!0,o.zoom("mouse",i(r(o.that.__zoom,o.mouse[0]=L_(o.that),o.mouse[1]),o.extent))}function e(){u.on("mousemove.zoom mouseup.zoom",null),mu(t.event.view,o.moved),vm(),o.end()}if(!_&&y.apply(this,arguments)){var o=a(this,arguments),u=_y(t.event.view).on("mousemove.zoom",n,!0).on("mouseup.zoom",e,!0),c=L_(this);Kg(t.event.view),oa(),o.mouse=[c,this.__zoom.invert(c)],Cy(this),o.start()}}function l(){if(y.apply(this,arguments)){var o=this.__zoom,a=L_(this),c=o.invert(a),s=o.k*(t.event.shiftKey?.5:2),f=i(r(e(o,s),a,c),g.apply(this,arguments));vm(),N>0?_y(this).transition().duration(N).call(u,f,a):_y(this).call(n.transform,f)}}function h(){if(y.apply(this,arguments)){var n,e,r,i=a(this,arguments),o=t.event.changedTouches,u=o.length;for(oa(),n=0;n<u;++n)e=o[n],r=gy(this,o,e.identifier),r=[r,this.__zoom.invert(r),e.identifier],i.touch0?i.touch1||(i.touch1=r):i.touch0=r;return v&&(v=clearTimeout(v),!i.touch1)?(i.end(),l.apply(this,arguments)):void(t.event.touches.length===u&&(v=setTimeout(function(){v=null},A),Cy(this),i.start()))}}function p(){var n,o,u,c,s=a(this,arguments),f=t.event.changedTouches,l=f.length;for(vm(),v&&(v=clearTimeout(v)),n=0;n<l;++n)o=f[n],u=gy(this,f,o.identifier),s.touch0&&s.touch0[2]===o.identifier?s.touch0[0]=u:s.touch1&&s.touch1[2]===o.identifier&&(s.touch1[0]=u);if(o=s.that.__zoom,s.touch1){var h=s.touch0[0],p=s.touch0[1],d=s.touch1[0],_=s.touch1[1],y=(y=d[0]-h[0])*y+(y=d[1]-h[1])*y,g=(g=_[0]-p[0])*g+(g=_[1]-p[1])*g;o=e(o,Math.sqrt(y/g)),u=[(h[0]+d[0])/2,(h[1]+d[1])/2],c=[(p[0]+_[0])/2,(p[1]+_[1])/2]}else{if(!s.touch0)return;u=s.touch0[0],c=s.touch0[1]}s.zoom("touch",i(r(o,u,c),s.extent))}function d(){var n,e,r=a(this,arguments),i=t.event.changedTouches,o=i.length;for(oa(),_&&clearTimeout(_),_=setTimeout(function(){_=null},A),n=0;n<o;++n)e=i[n],r.touch0&&r.touch0[2]===e.identifier?delete r.touch0:r.touch1&&r.touch1[2]===e.identifier&&delete r.touch1;r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0||r.end()}var v,_,y=ua,g=aa,m=0,x=1/0,b=-x,w=x,M=b,T=w,N=250,k=[],S=Pn("start","zoom","end"),A=500,E=150;return n.transform=function(t,n){var e=t.selection?t.selection():t;e.property("__zoom",ca),t!==e?u(t,n):e.interrupt().each(function(){a(this,arguments).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()})},n.scaleBy=function(t,e){n.scaleTo(t,function(){var t=this.__zoom.k,n="function"==typeof e?e.apply(this,arguments):e;return t*n})},n.scaleTo=function(t,u){n.transform(t,function(){var t=g.apply(this,arguments),n=this.__zoom,a=o(t),c=n.invert(a),s="function"==typeof u?u.apply(this,arguments):u;return i(r(e(n,s),a,c),t)})},n.translateBy=function(t,e,r){n.transform(t,function(){return i(this.__zoom.translate("function"==typeof e?e.apply(this,arguments):e,"function"==typeof r?r.apply(this,arguments):r),g.apply(this,arguments))})},c.prototype={start:function(){return 1===++this.active&&(this.index=k.push(this)-1,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0===--this.active&&(k.splice(this.index,1),this.index=-1,this.emit("end")),this},emit:function(t){Xr(new ea(n,t,this.that.__zoom),S.apply,S,[t,this.that,this.args])}},n.filter=function(t){return arguments.length?(y="function"==typeof t?t:pm(!!t),n):y},n.extent=function(t){return arguments.length?(g="function"==typeof t?t:pm([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),n):g},n.scaleExtent=function(t){return arguments.length?(m=+t[0],x=+t[1],n):[m,x]},n.translateExtent=function(t){return arguments.length?(b=+t[0][0],w=+t[1][0],M=+t[0][1],T=+t[1][1],n):[[b,M],[w,T]]},n.duration=function(t){return arguments.length?(N=+t,n):N},n.on=function(){var t=S.on.apply(S,arguments);return t===S?n:t},n},ym=function(t){return function(){return t}},gm=function(t,n,e){this.target=t,this.type=n,this.selection=e},mm=function(){t.event.preventDefault(),t.event.stopImmediatePropagation()},xm={name:"drag"},bm={name:"space"},wm={name:"handle"},Mm={name:"center"},Tm={name:"x",handles:["e","w"].map(fa),input:function(t,n){return t&&[[t[0],n[0][1]],[t[1],n[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},Nm={name:"y",handles:["n","s"].map(fa),input:function(t,n){return t&&[[n[0][0],t[0]],[n[1][0],t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},km={name:"xy",handles:["n","e","s","w","nw","ne","se","sw"].map(fa),input:function(t){return t},output:function(t){return t}},Sm={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Am={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},Em={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},Cm={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},zm={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1},Pm=function(){return ga(km)},qm=Math.cos,Lm=Math.sin,Rm=Math.PI,Um=Rm/2,Dm=2*Rm,Om=Math.max,Fm=function(){function t(t){var o,u,a,c,s,f,l=t.length,h=[],p=Us(l),d=[],v=[],_=v.groups=new Array(l),y=new Array(l*l);for(o=0,s=-1;++s<l;){for(u=0,f=-1;++f<l;)u+=t[s][f];h.push(u),d.push(Us(l)),o+=u}for(e&&p.sort(function(t,n){return e(h[t],h[n])}),r&&d.forEach(function(n,e){n.sort(function(n,i){return r(t[e][n],t[e][i])})}),o=Om(0,Dm-n*l)/o,c=o?n:Dm/l,u=0,s=-1;++s<l;){for(a=u,f=-1;++f<l;){var g=p[s],m=d[g][f],x=t[g][m],b=u,w=u+=x*o;y[m*l+g]={index:g,subindex:m,startAngle:b,endAngle:w,value:x}}_[g]={index:g,startAngle:a,endAngle:u,value:h[g]},u+=c}for(s=-1;++s<l;)for(f=s-1;++f<l;){var M=y[f*l+s],T=y[s*l+f];(M.value||T.value)&&v.push(M.value<T.value?{source:T,target:M}:{source:M,target:T})}return i?v.sort(i):v}var n=0,e=null,r=null,i=null;return t.padAngle=function(e){return arguments.length?(n=Om(0,e),t):n},t.sortGroups=function(n){return arguments.length?(e=n,t):e},t.sortSubgroups=function(n){return arguments.length?(r=n,t):r},t.sortChords=function(n){return arguments.length?(null==n?i=null:(i=ma(n))._=n,t):i&&i._},t},Im=Array.prototype.slice,Ym=function(t){return function(){return t}},Bm=function(){function t(){var t,a=Im.call(arguments),c=n.apply(this,a),s=e.apply(this,a),f=+r.apply(this,(a[0]=c,a)),l=i.apply(this,a)-Um,h=o.apply(this,a)-Um,p=f*qm(l),d=f*Lm(l),v=+r.apply(this,(a[0]=s,a)),_=i.apply(this,a)-Um,y=o.apply(this,a)-Um;if(u||(u=t=L()),u.moveTo(p,d),u.arc(0,0,f,l,h),l===_&&h===y||(u.quadraticCurveTo(0,0,v*qm(_),v*Lm(_)),u.arc(0,0,v,_,y)),u.quadraticCurveTo(0,0,p,d),u.closePath(),t)return u=null,t+""||null}var n=xa,e=ba,r=wa,i=Ma,o=Ta,u=null;return t.radius=function(n){return arguments.length?(r="function"==typeof n?n:Ym(+n),t):r},t.startAngle=function(n){return arguments.length?(i="function"==typeof n?n:Ym(+n),t):i},t.endAngle=function(n){return arguments.length?(o="function"==typeof n?n:Ym(+n),t):o},t.source=function(e){return arguments.length?(n=e,t):n},t.target=function(n){return arguments.length?(e=n,t):e},t.context=function(n){return arguments.length?(u=null==n?null:n,t):u},t},jm=function(){return new Na};Na.prototype={constructor:Na,reset:function(){this.s=this.t=0},add:function(t){ka(bx,t,this.t),ka(this,bx.s,this.s),this.s?this.t+=bx.t:this.s=bx.t},valueOf:function(){return this.s}};var Hm,Xm,Vm,Wm,$m,Zm,Gm,Jm,Qm,Km,tx,nx,ex,rx,ix,ox,ux,ax,cx,sx,fx,lx,hx,px,dx,vx,_x,yx,gx,mx,xx,bx=new Na,wx=1e-6,Mx=1e-12,Tx=Math.PI,Nx=Tx/2,kx=Tx/4,Sx=2*Tx,Ax=180/Tx,Ex=Tx/180,Cx=Math.abs,zx=Math.atan,Px=Math.atan2,qx=Math.cos,Lx=Math.ceil,Rx=Math.exp,Ux=Math.log,Dx=Math.pow,Ox=Math.sin,Fx=Math.sign||function(t){return t>0?1:t<0?-1:0},Ix=Math.sqrt,Yx=Math.tan,Bx={Feature:function(t,n){za(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)za(e[r].geometry,n)}},jx={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){Pa(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)Pa(e[r],n,0)},Polygon:function(t,n){qa(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)qa(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)za(e[r],n)}},Hx=function(t,n){t&&Bx.hasOwnProperty(t.type)?Bx[t.type](t,n):za(t,n)},Xx=jm(),Vx=jm(),Wx={point:Ca,lineStart:Ca,lineEnd:Ca,polygonStart:function(){Xx.reset(),Wx.lineStart=La,Wx.lineEnd=Ra},polygonEnd:function(){var t=+Xx;Vx.add(t<0?Sx+t:t),this.lineStart=this.lineEnd=this.point=Ca},sphere:function(){Vx.add(Sx)}},$x=function(t){return Vx.reset(),Hx(t,Wx),2*Vx},Zx=jm(),Gx={point:Xa,lineStart:Wa,lineEnd:$a,polygonStart:function(){Gx.point=Za,Gx.lineStart=Ga,Gx.lineEnd=Ja,Zx.reset(),Wx.polygonStart()},polygonEnd:function(){Wx.polygonEnd(),Gx.point=Xa,Gx.lineStart=Wa,Gx.lineEnd=$a,Xx<0?(Zm=-(Jm=180),Gm=-(Qm=90)):Zx>wx?Qm=90:Zx<-wx&&(Gm=-90),ix[0]=Zm,ix[1]=Jm}},Jx=function(t){var n,e,r,i,o,u,a;if(Qm=Jm=-(Zm=Gm=1/0),rx=[],Hx(t,Gx),e=rx.length){for(rx.sort(Ka),n=1,r=rx[0],o=[r];n<e;++n)i=rx[n],tc(r,i[0])||tc(r,i[1])?(Qa(r[0],i[1])>Qa(r[0],r[1])&&(r[1]=i[1]),Qa(i[0],r[1])>Qa(r[0],r[1])&&(r[0]=i[0])):o.push(r=i);for(u=-(1/0),e=o.length-1,n=0,r=o[e];n<=e;r=i,++n)i=o[n],(a=Qa(r[1],i[0]))>u&&(u=a,Zm=i[0],Jm=r[1])}return rx=ix=null,Zm===1/0||Gm===1/0?[[NaN,NaN],[NaN,NaN]]:[[Zm,Gm],[Jm,Qm]]},Qx={sphere:Ca,point:nc,lineStart:rc,
lineEnd:uc,polygonStart:function(){Qx.lineStart=ac,Qx.lineEnd=cc},polygonEnd:function(){Qx.lineStart=rc,Qx.lineEnd=uc}},Kx=function(t){ox=ux=ax=cx=sx=fx=lx=hx=px=dx=vx=0,Hx(t,Qx);var n=px,e=dx,r=vx,i=n*n+e*e+r*r;return i<Mx&&(n=fx,e=lx,r=hx,ux<wx&&(n=ax,e=cx,r=sx),i=n*n+e*e+r*r,i<Mx)?[NaN,NaN]:[Px(e,n)*Ax,Aa(r/Ix(i))*Ax]},tb=function(t){return function(){return t}},nb=function(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return e=n.invert(e,r),e&&t.invert(e[0],e[1])}),e};lc.invert=lc;var eb,rb,ib,ob,ub,ab,cb,sb,fb,lb,hb,pb=function(t){function n(n){return n=t(n[0]*Ex,n[1]*Ex),n[0]*=Ax,n[1]*=Ax,n}return t=hc(t[0]*Ex,t[1]*Ex,t.length>2?t[2]*Ex:0),n.invert=function(n){return n=t.invert(n[0]*Ex,n[1]*Ex),n[0]*=Ax,n[1]*=Ax,n},n},db=function(){function t(t,n){e.push(t=r(t,n)),t[0]*=Ax,t[1]*=Ax}function n(){var t=i.apply(this,arguments),n=o.apply(this,arguments)*Ex,c=u.apply(this,arguments)*Ex;return e=[],r=hc(-t[0]*Ex,-t[1]*Ex,0).invert,_c(a,n,c,1),t={type:"Polygon",coordinates:[e]},e=r=null,t}var e,r,i=tb([0,0]),o=tb(90),u=tb(6),a={point:t};return n.center=function(t){return arguments.length?(i="function"==typeof t?t:tb([+t[0],+t[1]]),n):i},n.radius=function(t){return arguments.length?(o="function"==typeof t?t:tb(+t),n):o},n.precision=function(t){return arguments.length?(u="function"==typeof t?t:tb(+t),n):u},n},vb=function(){var t,n=[];return{point:function(n,e){t.push([n,e])},lineStart:function(){n.push(t=[])},lineEnd:Ca,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}},_b=function(t,n,e,r,i,o){var u,a=t[0],c=t[1],s=n[0],f=n[1],l=0,h=1,p=s-a,d=f-c;if(u=e-a,p||!(u>0)){if(u/=p,p<0){if(u<l)return;u<h&&(h=u)}else if(p>0){if(u>h)return;u>l&&(l=u)}if(u=i-a,p||!(u<0)){if(u/=p,p<0){if(u>h)return;u>l&&(l=u)}else if(p>0){if(u<l)return;u<h&&(h=u)}if(u=r-c,d||!(u>0)){if(u/=d,d<0){if(u<l)return;u<h&&(h=u)}else if(d>0){if(u>h)return;u>l&&(l=u)}if(u=o-c,d||!(u<0)){if(u/=d,d<0){if(u>h)return;u>l&&(l=u)}else if(d>0){if(u<l)return;u<h&&(h=u)}return l>0&&(t[0]=a+l*p,t[1]=c+l*d),h<1&&(n[0]=a+h*p,n[1]=c+h*d),!0}}}}},yb=function(t,n){return Cx(t[0]-n[0])<wx&&Cx(t[1]-n[1])<wx},gb=function(t,n,e,r,i){var o,u,a=[],c=[];if(t.forEach(function(t){if(!((n=t.length-1)<=0)){var n,e,r=t[0],u=t[n];if(yb(r,u)){for(i.lineStart(),o=0;o<n;++o)i.point((r=t[o])[0],r[1]);return void i.lineEnd()}a.push(e=new gc(r,t,null,!0)),c.push(e.o=new gc(r,null,e,!1)),a.push(e=new gc(u,t,null,!1)),c.push(e.o=new gc(u,null,e,!0))}}),a.length){for(c.sort(n),mc(a),mc(c),o=0,u=c.length;o<u;++o)c[o].e=e=!e;for(var s,f,l=a[0];;){for(var h=l,p=!0;h.v;)if((h=h.n)===l)return;s=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(p)for(o=0,u=s.length;o<u;++o)i.point((f=s[o])[0],f[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(p)for(s=h.p.z,o=s.length-1;o>=0;--o)i.point((f=s[o])[0],f[1]);else r(h.x,h.p.x,-1,i);h=h.p}h=h.o,s=h.z,p=!p}while(!h.v);i.lineEnd()}}},mb=1e9,xb=-mb,bb=function(){var t,n,e,r=0,i=0,o=960,u=500;return e={stream:function(e){return t&&n===e?t:t=xc(r,i,o,u)(n=e)},extent:function(a){return arguments.length?(r=+a[0][0],i=+a[0][1],o=+a[1][0],u=+a[1][1],t=n=null,e):[[r,i],[o,u]]}}},wb=jm(),Mb={sphere:Ca,point:Ca,lineStart:bc,lineEnd:Ca,polygonStart:Ca,polygonEnd:Ca},Tb=function(t){return wb.reset(),Hx(t,Mb),+wb},Nb=[null,null],kb={type:"LineString",coordinates:Nb},Sb=function(t,n){return Nb[0]=t,Nb[1]=n,Tb(kb)},Ab=function(){function t(){return{type:"MultiLineString",coordinates:n()}}function n(){return Us(Lx(o/_)*_,i,_).map(h).concat(Us(Lx(s/y)*y,c,y).map(p)).concat(Us(Lx(r/d)*d,e,d).filter(function(t){return Cx(t%_)>wx}).map(f)).concat(Us(Lx(a/v)*v,u,v).filter(function(t){return Cx(t%y)>wx}).map(l))}var e,r,i,o,u,a,c,s,f,l,h,p,d=10,v=d,_=90,y=360,g=2.5;return t.lines=function(){return n().map(function(t){return{type:"LineString",coordinates:t}})},t.outline=function(){return{type:"Polygon",coordinates:[h(o).concat(p(c).slice(1),h(i).reverse().slice(1),p(s).reverse().slice(1))]}},t.extent=function(n){return arguments.length?t.extentMajor(n).extentMinor(n):t.extentMinor()},t.extentMajor=function(n){return arguments.length?(o=+n[0][0],i=+n[1][0],s=+n[0][1],c=+n[1][1],o>i&&(n=o,o=i,i=n),s>c&&(n=s,s=c,c=n),t.precision(g)):[[o,s],[i,c]]},t.extentMinor=function(n){return arguments.length?(r=+n[0][0],e=+n[1][0],a=+n[0][1],u=+n[1][1],r>e&&(n=r,r=e,e=n),a>u&&(n=a,a=u,u=n),t.precision(g)):[[r,a],[e,u]]},t.step=function(n){return arguments.length?t.stepMajor(n).stepMinor(n):t.stepMinor()},t.stepMajor=function(n){return arguments.length?(_=+n[0],y=+n[1],t):[_,y]},t.stepMinor=function(n){return arguments.length?(d=+n[0],v=+n[1],t):[d,v]},t.precision=function(n){return arguments.length?(g=+n,f=Nc(a,u,90),l=kc(r,e,g),h=Nc(s,c,90),p=kc(o,i,g),t):g},t.extentMajor([[-180,-90+wx],[180,90-wx]]).extentMinor([[-180,-80-wx],[180,80+wx]])},Eb=function(t,n){var e=t[0]*Ex,r=t[1]*Ex,i=n[0]*Ex,o=n[1]*Ex,u=qx(r),a=Ox(r),c=qx(o),s=Ox(o),f=u*qx(e),l=u*Ox(e),h=c*qx(i),p=c*Ox(i),d=2*Aa(Ix(Ea(o-r)+u*c*Ea(i-e))),v=Ox(d),_=d?function(t){var n=Ox(t*=d)/v,e=Ox(d-t)/v,r=e*f+n*h,i=e*l+n*p,o=e*a+n*s;return[Px(i,r)*Ax,Px(o,Ix(r*r+i*i))*Ax]}:function(){return[e*Ax,r*Ax]};return _.distance=d,_},Cb=function(t){return t},zb=jm(),Pb=jm(),qb={point:Ca,lineStart:Ca,lineEnd:Ca,polygonStart:function(){qb.lineStart=Sc,qb.lineEnd=Cc},polygonEnd:function(){qb.lineStart=qb.lineEnd=qb.point=Ca,zb.add(Cx(Pb)),Pb.reset()},result:function(){var t=zb/2;return zb.reset(),t}},Lb=1/0,Rb=Lb,Ub=-Lb,Db=Ub,Ob={point:zc,lineStart:Ca,lineEnd:Ca,polygonStart:Ca,polygonEnd:Ca,result:function(){var t=[[Lb,Rb],[Ub,Db]];return Ub=Db=-(Rb=Lb=1/0),t}},Fb=0,Ib=0,Yb=0,Bb=0,jb=0,Hb=0,Xb=0,Vb=0,Wb=0,$b={point:Pc,lineStart:qc,lineEnd:Uc,polygonStart:function(){$b.lineStart=Dc,$b.lineEnd=Oc},polygonEnd:function(){$b.point=Pc,$b.lineStart=qc,$b.lineEnd=Uc},result:function(){var t=Wb?[Xb/Wb,Vb/Wb]:Hb?[Bb/Hb,jb/Hb]:Yb?[Fb/Yb,Ib/Yb]:[NaN,NaN];return Fb=Ib=Yb=Bb=jb=Hb=Xb=Vb=Wb=0,t}};Yc.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._context.moveTo(t,n),this._point=1;break;case 1:this._context.lineTo(t,n);break;default:this._context.moveTo(t+this._radius,n),this._context.arc(t,n,this._radius,0,Sx)}},result:Ca},Bc.prototype={_circle:jc(4.5),pointRadius:function(t){return this._circle=jc(t),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._string.push("M",t,",",n),this._point=1;break;case 1:this._string.push("L",t,",",n);break;default:this._string.push("M",t,",",n,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}}};var Zb=function(){function t(t){return t&&("function"==typeof o&&i.pointRadius(+o.apply(this,arguments)),Hx(t,e(i))),i.result()}var n,e,r,i,o=4.5;return t.area=function(t){return Hx(t,e(qb)),qb.result()},t.bounds=function(t){return Hx(t,e(Ob)),Ob.result()},t.centroid=function(t){return Hx(t,e($b)),$b.result()},t.projection=function(r){return arguments.length?(e=null==(n=r)?Cb:r.stream,t):n},t.context=function(n){return arguments.length?(i=null==(r=n)?new Bc:new Yc(n),"function"!=typeof o&&i.pointRadius(o),t):r},t.pointRadius=function(n){return arguments.length?(o="function"==typeof n?n:(i.pointRadius(+n),+n),t):o},t.projection(null).context(null)},Gb=jm(),Jb=function(t,n){var e=n[0],r=n[1],i=[Ox(e),-qx(e),0],o=0,u=0;Gb.reset();for(var a=0,c=t.length;a<c;++a)if(f=(s=t[a]).length)for(var s,f,l=s[f-1],h=l[0],p=l[1]/2+kx,d=Ox(p),v=qx(p),_=0;_<f;++_,h=g,d=x,v=b,l=y){var y=s[_],g=y[0],m=y[1]/2+kx,x=Ox(m),b=qx(m),w=g-h,M=w>=0?1:-1,T=M*w,N=T>Tx,k=d*x;if(Gb.add(Px(k*M*Ox(T),v*b+k*qx(T))),o+=N?w+M*Sx:w,N^h>=e^g>=e){var S=Ya(Fa(l),Fa(y));Ha(S);var A=Ya(i,S);Ha(A);var E=(N^w>=0?-1:1)*Aa(A[2]);(r>E||r===E&&(S[0]||S[1]))&&(u+=N^w>=0?1:-1)}}return(o<-wx||o<wx&&Gb<-wx)^1&u},Qb=function(t,n,e,r){return function(i,o){function u(n,e){var r=i(n,e);t(n=r[0],e=r[1])&&o.point(n,e)}function a(t,n){var e=i(t,n);_.point(e[0],e[1])}function c(){b.point=a,_.lineStart()}function s(){b.point=u,_.lineEnd()}function f(t,n){v.push([t,n]);var e=i(t,n);m.point(e[0],e[1])}function l(){m.lineStart(),v=[]}function h(){f(v[0][0],v[0][1]),m.lineEnd();var t,n,e,r,i=m.clean(),u=g.result(),a=u.length;if(v.pop(),p.push(v),v=null,a)if(1&i){if(e=u[0],(n=e.length-1)>0){for(x||(o.polygonStart(),x=!0),o.lineStart(),t=0;t<n;++t)o.point((r=e[t])[0],r[1]);o.lineEnd()}}else a>1&&2&i&&u.push(u.pop().concat(u.shift())),d.push(u.filter(Hc))}var p,d,v,_=n(o),y=i.invert(r[0],r[1]),g=vb(),m=n(g),x=!1,b={point:u,lineStart:c,lineEnd:s,polygonStart:function(){b.point=f,b.lineStart=l,b.lineEnd=h,d=[],p=[]},polygonEnd:function(){b.point=u,b.lineStart=c,b.lineEnd=s,d=Zs(d);var t=Jb(p,y);d.length?(x||(o.polygonStart(),x=!0),gb(d,Xc,t,e,o)):t&&(x||(o.polygonStart(),x=!0),o.lineStart(),e(null,null,1,o),o.lineEnd()),x&&(o.polygonEnd(),x=!1),d=p=null},sphere:function(){o.polygonStart(),o.lineStart(),e(null,null,1,o),o.lineEnd(),o.polygonEnd()}};return b}},Kb=Qb(function(){return!0},Vc,$c,[-Tx,-Nx]),tw=function(t,n){function e(e,r,i,o){_c(o,t,n,i,e,r)}function r(t,n){return qx(t)*qx(n)>a}function i(t){var n,e,i,a,f;return{lineStart:function(){a=i=!1,f=1},point:function(l,h){var p,d=[l,h],v=r(l,h),_=c?v?0:u(l,h):v?u(l+(l<0?Tx:-Tx),h):0;if(!n&&(a=i=v)&&t.lineStart(),v!==i&&(p=o(n,d),(yb(n,p)||yb(d,p))&&(d[0]+=wx,d[1]+=wx,v=r(d[0],d[1]))),v!==i)f=0,v?(t.lineStart(),p=o(d,n),t.point(p[0],p[1])):(p=o(n,d),t.point(p[0],p[1]),t.lineEnd()),n=p;else if(s&&n&&c^v){var y;_&e||!(y=o(d,n,!0))||(f=0,c?(t.lineStart(),t.point(y[0][0],y[0][1]),t.point(y[1][0],y[1][1]),t.lineEnd()):(t.point(y[1][0],y[1][1]),t.lineEnd(),t.lineStart(),t.point(y[0][0],y[0][1])))}!v||n&&yb(n,d)||t.point(d[0],d[1]),n=d,i=v,e=_},lineEnd:function(){i&&t.lineEnd(),n=null},clean:function(){return f|(a&&i)<<1}}}function o(t,n,e){var r=Fa(t),i=Fa(n),o=[1,0,0],u=Ya(r,i),c=Ia(u,u),s=u[0],f=c-s*s;if(!f)return!e&&t;var l=a*c/f,h=-a*s/f,p=Ya(o,u),d=ja(o,l),v=ja(u,h);Ba(d,v);var _=p,y=Ia(d,_),g=Ia(_,_),m=y*y-g*(Ia(d,d)-1);if(!(m<0)){var x=Ix(m),b=ja(_,(-y-x)/g);if(Ba(b,d),b=Oa(b),!e)return b;var w,M=t[0],T=n[0],N=t[1],k=n[1];T<M&&(w=M,M=T,T=w);var S=T-M,A=Cx(S-Tx)<wx,E=A||S<wx;if(!A&&k<N&&(w=N,N=k,k=w),E?A?N+k>0^b[1]<(Cx(b[0]-M)<wx?N:k):N<=b[1]&&b[1]<=k:S>Tx^(M<=b[0]&&b[0]<=T)){var C=ja(_,(-y+x)/g);return Ba(C,d),[b,Oa(C)]}}}function u(n,e){var r=c?t:Tx-t,i=0;return n<-r?i|=1:n>r&&(i|=2),e<-r?i|=4:e>r&&(i|=8),i}var a=qx(t),c=a>0,s=Cx(a)>wx;return Qb(r,i,e,c?[0,-t]:[-Tx,t-Tx])},nw=function(t){return{stream:Zc(t)}};Gc.prototype={point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var ew=16,rw=qx(30*Ex),iw=function(t,n){return+n?ns(t,n):ts(t)},ow=Zc({point:function(t,n){this.stream.point(t*Ex,n*Ex)}}),uw=function(){return is(us).scale(155.424).center([0,33.6442])},aw=function(){return uw().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])},cw=function(){function t(t){var n=t[0],e=t[1];return a=null,i.point(n,e),a||(o.point(n,e),a)||(u.point(n,e),a)}function n(){return e=r=null,t}var e,r,i,o,u,a,c=aw(),s=uw().rotate([154,0]).center([-2,58.5]).parallels([55,65]),f=uw().rotate([157,0]).center([-3,19.9]).parallels([8,18]),l={point:function(t,n){a=[t,n]}};return t.invert=function(t){var n=c.scale(),e=c.translate(),r=(t[0]-e[0])/n,i=(t[1]-e[1])/n;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?s:i>=.166&&i<.234&&r>=-.214&&r<-.115?f:c).invert(t)},t.stream=function(t){return e&&r===t?e:e=as([c.stream(r=t),s.stream(t),f.stream(t)])},t.precision=function(t){return arguments.length?(c.precision(t),s.precision(t),f.precision(t),n()):c.precision()},t.scale=function(n){return arguments.length?(c.scale(n),s.scale(.35*n),f.scale(n),t.translate(c.translate())):c.scale()},t.translate=function(t){if(!arguments.length)return c.translate();var e=c.scale(),r=+t[0],a=+t[1];return i=c.translate(t).clipExtent([[r-.455*e,a-.238*e],[r+.455*e,a+.238*e]]).stream(l),o=s.translate([r-.307*e,a+.201*e]).clipExtent([[r-.425*e+wx,a+.12*e+wx],[r-.214*e-wx,a+.234*e-wx]]).stream(l),u=f.translate([r-.205*e,a+.212*e]).clipExtent([[r-.214*e+wx,a+.166*e+wx],[r-.115*e-wx,a+.234*e-wx]]).stream(l),n()},t.fitExtent=Kc(t),t.fitSize=Qc(t),t.scale(1070)},sw=cs(function(t){return Ix(2/(1+t))});sw.invert=ss(function(t){return 2*Aa(t/2)});var fw=function(){return es(sw).scale(124.75).clipAngle(179.999)},lw=cs(function(t){return(t=Sa(t))&&t/Ox(t)});lw.invert=ss(function(t){return t});var hw=function(){return es(lw).scale(79.4188).clipAngle(179.999)};fs.invert=function(t,n){return[t,2*zx(Rx(n))-Nx]};var pw=function(){return ls(fs).scale(961/Sx)},dw=function(){return is(ps).scale(109.5).parallels([30,30])};ds.invert=ds;var vw=function(){return es(ds).scale(152.63)},_w=function(){return is(vs).scale(131.154).center([0,13.9389])};_s.invert=ss(zx);var yw=function(){return es(_s).scale(144.049).clipAngle(60)};ys.invert=ss(Aa);var gw=function(){return es(ys).scale(249.5).clipAngle(90+wx)};gs.invert=ss(function(t){return 2*zx(t)});var mw=function(){return es(gs).scale(250).clipAngle(142)};ms.invert=function(t,n){return[-n,2*zx(Rx(t))-Nx]};var xw=function(){var t=ls(ms),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):(t=n(),[t[1],-t[0]])},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):(t=e(),[t[0],t[1],t[2]-90])},e([0,0,90]).scale(159.155)};t.version=xs,t.bisect=Ts,t.bisectRight=Ts,t.bisectLeft=Ns,t.ascending=bs,t.bisector=ws,t.descending=ks,t.deviation=Es,t.extent=Cs,t.histogram=Bs,t.thresholdFreedmanDiaconis=Hs,t.thresholdScott=Xs,t.thresholdSturges=Ys,t.max=Vs,t.mean=Ws,t.median=$s,t.merge=Zs,t.min=Gs,t.pairs=Js,t.permute=Qs,t.quantile=js,t.range=Us,t.scan=Ks,t.shuffle=tf,t.sum=nf,t.ticks=Is,t.tickStep=e,t.transpose=ef,t.variance=As,t.zip=rf,t.entries=ff,t.keys=cf,t.values=sf,t.map=o,t.set=l,t.nest=uf,t.randomUniform=lf,t.randomNormal=hf,t.randomLogNormal=pf,t.randomBates=vf,t.randomIrwinHall=df,t.randomExponential=_f,t.easeLinear=h,t.easeQuad=v,t.easeQuadIn=p,t.easeQuadOut=d,t.easeQuadInOut=v,t.easeCubic=g,t.easeCubicIn=_,t.easeCubicOut=y,t.easeCubicInOut=g,t.easePoly=xf,t.easePolyIn=gf,t.easePolyOut=mf,t.easePolyInOut=xf,t.easeSin=b,t.easeSinIn=m,t.easeSinOut=x,t.easeSinInOut=b,t.easeExp=T,t.easeExpIn=w,t.easeExpOut=M,t.easeExpInOut=T,t.easeCircle=S,t.easeCircleIn=N,t.easeCircleOut=k,t.easeCircleInOut=S,t.easeBounce=E,t.easeBounceIn=A,t.easeBounceOut=E,t.easeBounceInOut=C,t.easeBack=Uf,t.easeBackIn=Lf,t.easeBackOut=Rf,t.easeBackInOut=Uf,t.easeElastic=Yf,t.easeElasticIn=If,t.easeElasticOut=Yf,t.easeElasticInOut=Bf,t.polygonArea=jf,t.polygonCentroid=Hf,t.polygonHull=Vf,t.polygonContains=Wf,t.polygonLength=$f,t.path=L,t.quadtree=I,t.queue=Z,t.arc=xl,t.area=Ml,t.line=wl,t.pie=kl,t.radialArea=El,t.radialLine=Al,t.symbol=Zl,t.symbols=$l,t.symbolCircle=Cl,t.symbolCross=zl,t.symbolDiamond=Ll,t.symbolSquare=Il,t.symbolStar=Fl,t.symbolTriangle=Bl,t.symbolWye=Wl,t.curveBasisClosed=Ql,t.curveBasisOpen=Kl,t.curveBasis=Jl,t.curveBundle=th,t.curveCardinalClosed=eh,t.curveCardinalOpen=rh,t.curveCardinal=nh,t.curveCatmullRomClosed=oh,t.curveCatmullRomOpen=uh,t.curveCatmullRom=ih,t.curveLinearClosed=ah,t.curveLinear=bl,t.curveMonotoneX=zt,t.curveMonotoneY=Pt,t.curveNatural=ch,t.curveStep=sh,t.curveStepAfter=Dt,t.curveStepBefore=Ut,t.stack=ph,t.stackOffsetExpand=dh,t.stackOffsetNone=lh,t.stackOffsetSilhouette=vh,t.stackOffsetWiggle=_h,t.stackOrderAscending=yh,t.stackOrderDescending=gh,t.stackOrderInsideOut=mh,t.stackOrderNone=hh,t.stackOrderReverse=xh,t.color=Bt,t.rgb=Vt,t.hsl=Gt,t.lab=tn,t.hcl=cn,t.cubehelix=ln,t.interpolate=dp,t.interpolateArray=ap,t.interpolateDate=cp,t.interpolateNumber=sp,t.interpolateObject=fp,t.interpolateRound=vp,t.interpolateString=pp,t.interpolateTransformCss=mp,t.interpolateTransformSvg=xp,t.interpolateZoom=Np,t.interpolateRgb=ip,t.interpolateRgbBasis=op,t.interpolateRgbBasisClosed=up,t.interpolateHsl=kp,t.interpolateHslLong=Sp,t.interpolateLab=En,t.interpolateHcl=Ap,t.interpolateHclLong=Ep,t.interpolateCubehelix=Cp,t.interpolateCubehelixLong=zp,t.interpolateBasis=np,t.interpolateBasisClosed=ep,t.quantize=Pp,t.dispatch=Pn,t.dsvFormat=Up,t.csvParse=Op,t.csvParseRows=Fp,t.csvFormat=Ip,t.csvFormatRows=Yp,t.tsvParse=jp,t.tsvParseRows=Hp,t.tsvFormat=Xp,t.tsvFormatRows=Vp,t.request=Wp,t.html=Zp,t.json=Gp,t.text=Jp,t.xml=Qp,t.csv=td,t.tsv=nd,t.now=jn,t.timer=Vn,t.timerFlush=Wn,t.timeout=ld,t.interval=hd,t.timeInterval=Qn,t.timeMillisecond=vd,t.timeMilliseconds=_d,t.timeSecond=wd,t.timeSeconds=Md,t.timeMinute=Td,t.timeMinutes=Nd,t.timeHour=kd,t.timeHours=Sd,t.timeDay=Ad,t.timeDays=Ed,t.timeWeek=Cd,t.timeWeeks=Dd,t.timeSunday=Cd,t.timeSundays=Dd,t.timeMonday=zd,t.timeMondays=Od,t.timeTuesday=Pd,t.timeTuesdays=Fd;t.timeWednesday=qd;t.timeWednesdays=Id,t.timeThursday=Ld,t.timeThursdays=Yd,t.timeFriday=Rd,t.timeFridays=Bd,t.timeSaturday=Ud,t.timeSaturdays=jd,t.timeMonth=Hd,t.timeMonths=Xd,t.timeYear=Vd,t.timeYears=Wd,t.utcMillisecond=vd,t.utcMilliseconds=_d,t.utcSecond=wd,t.utcSeconds=Md,t.utcMinute=$d,t.utcMinutes=Zd,t.utcHour=Gd,t.utcHours=Jd,t.utcDay=Qd,t.utcDays=Kd,t.utcWeek=tv,t.utcWeeks=av,t.utcSunday=tv,t.utcSundays=av,t.utcMonday=nv,t.utcMondays=cv,t.utcTuesday=ev,t.utcTuesdays=sv,t.utcWednesday=rv,t.utcWednesdays=fv,t.utcThursday=iv,t.utcThursdays=lv,t.utcFriday=ov,t.utcFridays=hv,t.utcSaturday=uv,t.utcSaturdays=pv,t.utcMonth=dv,t.utcMonths=vv,t.utcYear=_v,t.utcYears=gv,t.formatLocale=Cv,t.formatDefaultLocale=re,t.formatSpecifier=Sv,t.precisionFixed=Pv,t.precisionPrefix=qv,t.precisionRound=Lv,t.isoFormat=Iv,t.isoParse=Yv,t.timeFormatLocale=ae,t.timeFormatDefaultLocale=nr,t.scaleBand=or,t.scalePoint=ar,t.scaleIdentity=yr,t.scaleLinear=_r,t.scaleLog=Tr,t.scaleOrdinal=ir,t.scaleImplicit=Xv,t.scalePow=kr,t.scaleSqrt=Sr,t.scaleQuantile=Ar,t.scaleQuantize=Er,t.scaleThreshold=Cr,t.scaleTime=i_,t.scaleUtc=o_,t.schemeCategory10=a_,t.schemeCategory20b=c_,t.schemeCategory20c=s_,t.schemeCategory20=f_,t.scaleSequential=Rr,t.interpolateCubehelixDefault=l_,t.interpolateRainbow=v_,t.interpolateWarm=h_,t.interpolateCool=p_,t.interpolateViridis=__,t.interpolateMagma=y_,t.interpolateInferno=g_,t.interpolatePlasma=m_,t.creator=M_,t.customEvent=Xr,t.local=Or,t.matcher=A_,t.mouse=L_,t.namespace=w_,t.namespaces=b_,t.select=_y,t.selectAll=yy,t.selection=Pi,t.selector=R_,t.selectorAll=D_,t.touch=gy,t.touches=my,t.window=ey,t.active=eg,t.interrupt=Cy,t.transition=fo,t.axisTop=mo,t.axisRight=xo,t.axisBottom=bo,t.axisLeft=wo,t.cluster=fg,t.hierarchy=zo,t.pack=Ng,t.packSiblings=Mg,t.packEnclose=wg,t.partition=Ag,t.stratify=Pg,t.tree=qg,t.treemap=Dg,t.treemapBinary=Og,t.treemapDice=Sg,t.treemapSlice=Lg,t.treemapSliceDice=Fg,t.treemapSquarify=Ug,t.treemapResquarify=Ig,t.forceCenter=Yg,t.forceCollide=Hg,t.forceLink=Xg,t.forceManyBody=Zg,t.forceSimulation=$g,t.forceX=Gg,t.forceY=Jg,t.drag=nm,t.dragDisable=Kg,t.dragEnable=mu,t.voronoi=hm,t.zoom=_m,t.zoomIdentity=dm,t.zoomTransform=ia,t.brush=Pm,t.brushX=_a,t.brushY=ya,t.brushSelection=va,t.chord=Fm,t.ribbon=Bm,t.geoAlbers=aw,t.geoAlbersUsa=cw,t.geoArea=$x,t.geoAzimuthalEqualArea=fw,t.geoAzimuthalEqualAreaRaw=sw,t.geoAzimuthalEquidistant=hw,t.geoAzimuthalEquidistantRaw=lw,t.geoBounds=Jx,t.geoCentroid=Kx,t.geoCircle=db,t.geoClipExtent=bb,t.geoConicConformal=dw,t.geoConicConformalRaw=ps,t.geoConicEqualArea=uw,t.geoConicEqualAreaRaw=us,t.geoConicEquidistant=_w,t.geoConicEquidistantRaw=vs,t.geoDistance=Sb,t.geoEquirectangular=vw,t.geoEquirectangularRaw=ds,t.geoGnomonic=yw,t.geoGnomonicRaw=_s,t.geoGraticule=Ab,t.geoInterpolate=Eb,t.geoLength=Tb,t.geoMercator=pw,t.geoMercatorRaw=fs,t.geoOrthographic=gw,t.geoOrthographicRaw=ys,t.geoPath=Zb,t.geoProjection=es,t.geoProjectionMutator=rs,t.geoRotation=pb,t.geoStereographic=mw,t.geoStereographicRaw=gs,t.geoStream=Hx,t.geoTransform=nw,t.geoTransverseMercator=xw,t.geoTransverseMercatorRaw=ms,Object.defineProperty(t,"__esModule",{value:!0})});
/*
 TechanJS v0.8.0
 (c) 2014 - 2016 Andre Dumas | https://github.com/andredumas/techan.js
*/
!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.techan=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";b.exports="0.8.0"},{}],2:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.r(b)}function b(){return a.d=c,a.adx=d,a.plusDi=e,a.minusDi=f,a}var c=function(a){return a.date},d=function(a){return a.adx},e=function(a){return a.plusDi},f=function(a){return a.minusDi};return a.date=function(a){return arguments.length?(c=a,b()):c},a.adx=function(a){return arguments.length?(d=a,b()):d},a.plusDi=function(a){return arguments.length?(e=a,b()):e},a.minusDi=function(a){return arguments.length?(f=a,b()):f},b()}},{}],3:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.r(b)}function b(){return a.d=c,a.up=d,a.down=e,a.oscillator=f,a.ob=g,a.os=h,a.m=i,a}var c=function(a){return a.date},d=function(a){return a.up},e=function(a){return a.down},f=function(a){return a.oscillator},g=function(a){return a.overbought},h=function(a){return a.oversold},i=function(a){return a.middle};return a.date=function(a){return arguments.length?(c=a,b()):c},a.up=function(a){return arguments.length?(d=a,b()):d},a.down=function(a){return arguments.length?(e=a,b()):e},a.oscillator=function(a){return arguments.length?(f=a,b()):f},a.overbought=function(a){return arguments.length?(g=a,b()):g},a.oversold=function(a){return arguments.length?(h=a,b()):h},a.middle=function(a){return arguments.length?(i=a,b()):i},b()}},{}],4:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.up(b)}function b(){return a.d=c,a.up=d,a.dn=e,a}var c=function(a){return a.date},d=function(a){return a.up},e=function(a){return a.down};return a.date=function(a){return arguments.length?(c=a,b()):c},a.up=function(a){return arguments.length?(d=a,b()):d},a.down=function(a){return arguments.length?(e=a,b()):e},b()}},{}],5:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.r(b)}function b(){return a.d=c,a.middle=d,a.upper=e,a.lower=f,a}var c=function(a){return a.date},d=function(a){return a.middleBand},e=function(a){return a.upperBand},f=function(a){return a.lowerBand};return a.date=function(a){return arguments.length?(c=a,b()):c},a.middle=function(a){return arguments.length?(d=a,b()):d},a.upper=function(a){return arguments.length?(e=a,b()):e},a.lower=function(a){return arguments.length?(f=a,b()):f},b()}},{}],6:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.xv(b)}function b(){return a.xv=c,a.yv=d,a}var c=function(b,c){return arguments.length<2?b.x:(b.x=c,a)},d=function(b,c){return arguments.length<2?b.y:(b.y=c,a)};return a.x=function(a){return arguments.length?(c=a,b()):c},a.y=function(a){return arguments.length?(d=a,b()):d},b()}},{}],7:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.ts(b)}function b(){return a.d=c,a.ts=d,a.ks=e,a.sa=f,a.sb=g,a.c=h,a.pts=i,a.pks=j,a.pssb=k,a}var c=function(a){return a.date},d=function(a){return a.tenkanSen},e=function(a){return a.kijunSen},f=function(a){return a.senkouSpanA},g=function(a){return a.senkouSpanB},h=function(a){return a.chikouSpan},i=function(a){return a.parameters.tenkanSen},j=function(a){return a.parameters.kijunSen},k=function(a){return a.parameters.senkouSpanB};return a.date=function(a){return arguments.length?(c=a,b()):c},a.tenkanSen=function(a){return arguments.length?(d=a,b()):d},a.kijunSen=function(a){return arguments.length?(e=a,b()):e},a.senkouSpanA=function(a){return arguments.length?(f=a,b()):f},a.senkouSpanB=function(a){return arguments.length?(g=a,b()):g},a.chikouSpan=function(a){return arguments.length?(h=a,b()):h},a.ptenanSen=function(a){return arguments.length?(i=a,b()):i},a.pkijunSen=function(a){return arguments.length?(j=a,b()):j},a.psenkouSpanB=function(a){return arguments.length?(k=a,b()):k},b()}},{}],8:[function(a,b,c){"use strict";b.exports=function(){return{atrtrailingstop:a("./atrtrailingstop"),crosshair:a("./crosshair"),ichimoku:a("./ichimoku"),macd:a("./macd"),ohlc:a("./ohlc"),rsi:a("./rsi"),trendline:a("./trendline"),value:a("./value"),volume:a("./volume"),tick:a("./tick"),trade:a("./trade"),adx:a("./adx"),aroon:a("./aroon"),stochastic:a("./stochastic"),supstance:a("./supstance"),williams:a("./williams"),bollinger:a("./bollinger")}}},{"./adx":2,"./aroon":3,"./atrtrailingstop":4,"./bollinger":5,"./crosshair":6,"./ichimoku":7,"./macd":9,"./ohlc":10,"./rsi":11,"./stochastic":12,"./supstance":13,"./tick":14,"./trade":15,"./trendline":16,"./value":17,"./volume":18,"./williams":19}],9:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.m(b)}function b(){return a.d=c,a.m=d,a.s=f,a.dif=g,a.z=e,a}var c=function(a){return a.date},d=function(a){return a.macd},e=function(a){return a.zero},f=function(a){return a.signal},g=function(a){return a.difference};return a.date=function(a){return arguments.length?(c=a,b()):c},a.macd=function(a){return arguments.length?(d=a,b()):d},a.signal=function(a){return arguments.length?(f=a,b()):f},a.difference=function(a){return arguments.length?(g=a,b()):g},b()}},{}],10:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.c(b)}function b(){return a.d=c,a.o=d,a.h=e,a.l=f,a.c=g,a.v=h,a}var c=function(a){return a.date},d=function(a){return a.open},e=function(a){return a.high},f=function(a){return a.low},g=function(a){return a.close},h=function(a){return a.volume};return a.date=function(a){return arguments.length?(c=a,b()):c},a.open=function(a){return arguments.length?(d=a,b()):d},a.high=function(a){return arguments.length?(e=a,b()):e},a.low=function(a){return arguments.length?(f=a,b()):f},a.close=function(a){return arguments.length?(g=a,b()):g},a.volume=function(a){return arguments.length?(h=a,b()):h},b()}},{}],11:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.r(b)}function b(){return a.d=c,a.r=d,a.ob=e,a.os=f,a.m=g,a}var c=function(a){return a.date},d=function(a){return a.rsi},e=function(a){return a.overbought},f=function(a){return a.oversold},g=function(a){return a.middle};return a.date=function(a){return arguments.length?(c=a,b()):c},a.rsi=function(a){return arguments.length?(d=a,b()):d},a.overbought=function(a){return arguments.length?(e=a,b()):e},a.oversold=function(a){return arguments.length?(f=a,b()):f},a.middle=function(a){return arguments.length?(g=a,b()):g},b()}},{}],12:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.r(b)}function b(){return a.d=c,a.k=d,a.sd=e,a.ob=f,a.os=g,a.m=h,a}var c=function(a){return a.date},d=function(a){return a.stochasticK},e=function(a){return a.stochasticD},f=function(a){return a.overbought},g=function(a){return a.oversold},h=function(a){return a.middle};return a.date=function(a){return arguments.length?(c=a,b()):c},a.stochasticK=function(a){return arguments.length?(d=a,b()):d},a.stochasticD=function(a){return arguments.length?(e=a,b()):e},a.overbought=function(a){return arguments.length?(f=a,b()):f},a.oversold=function(a){return arguments.length?(g=a,b()):g},a.middle=function(a){return arguments.length?(h=a,b()):h},b()}},{}],13:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.v(b)}function b(){return a.s=c,a.e=d,a.v=e,a}var c=function(a){return a.start},d=function(a){return a.end},e=function(b,c){return arguments.length<2?b.value:(b.value=c,a)};return a.start=function(a){return arguments.length?(c=a,b()):c},a.end=function(a){return arguments.length?(d=a,b()):d},a.value=function(a){return arguments.length?(e=a,b()):e},b()}},{}],14:[function(a,b,c){"use strict";b.exports=function(){function a(a){b()}function b(){return a.d=c,a.h=d,a.l=e,a.s=f,a}var c=function(a){return a.date},d=function(a){return a.high},e=function(a){return a.low},f=function(a){return a.spread};return a.date=function(a){return arguments.length?(c=a,b()):c},a.high=function(a){return arguments.length?(d=a,b()):d},a.low=function(a){return arguments.length?(e=a,b()):e},a.spread=function(a){return arguments.length?(f=a,b()):f},b()}},{}],15:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.p(b)}function b(){return a.d=c,a.t=d,a.p=e,a}var c=function(a){return a.date},d=function(a){return a.type},e=function(a){return a.price};return a.date=function(a){return arguments.length?(c=a,b()):c},a.type=function(a){return arguments.length?(d=a,b()):d},a.price=function(a){return arguments.length?(e=a,b()):e},b()}},{}],16:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.sv(b)}function b(){return a.sd=c,a.sv=d,a.ed=e,a.ev=f,a}var c=function(a,b){return arguments.length<2?a.start.date:void(a.start.date=b)},d=function(a,b){return arguments.length<2?a.start.value:void(a.start.value=b)},e=function(a,b){return arguments.length<2?a.end.date:void(a.end.date=b)},f=function(a,b){return arguments.length<2?a.end.value:void(a.end.value=b)};return a.startDate=function(a){return arguments.length?(c=a,b()):c},a.startValue=function(a){return arguments.length?(d=a,b()):d},a.endDate=function(a){return arguments.length?(e=a,b()):e},a.endValue=function(a){return arguments.length?(f=a,b()):f},b()}},{}],17:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.v(b)}function b(){return a.d=c,a.v=d,a.z=e,a}var c=function(a){return a.date},d=function(b,c){return arguments.length<2?b.value:(b.value=c,a)},e=function(a){return a.zero};return a.date=function(a){return arguments.length?(c=a,b()):c},a.value=function(a){return arguments.length?(d=a,b()):d},a.zero=function(a){return arguments.length?(e=a,b()):e},b()}},{}],18:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.v(b)}function b(){return a.d=c,a.v=d,a}var c=function(a){return a.date},d=function(a){return a.volume};return a.date=function(a){return arguments.length?(c=a,b()):c},a.volume=function(a){return arguments.length?(d=a,b()):d},b()}},{}],19:[function(a,b,c){"use strict";b.exports=function(){function a(b){return a.r(b)}function b(){return a.d=c,a.w=d,a}var c=function(a){return a.date},d=function(a){return a.williams};return a.date=function(a){return arguments.length?(c=a,b()):c},a.williams=function(a){return arguments.length?(d=a,b()):d},b()}},{}],20:[function(a,b,c){"use strict";function d(a,b,c,d){return c?{date:a,adx:b,plusDi:c,minusDi:d}:{date:a,adx:null,plusDi:null,minusDi:null}}b.exports=function(a,b,c,e){return function(){function f(b){var c=e().accessor(f.accessor()).period(h).init(),i=e().accessor(f.accessor()).period(h).init(),j=e().accessor(f.accessor()).period(h).init(),k=e().accessor(f.accessor()).period(h).init();return h=parseInt(h),b.map(function(e,f){if(f<1)return d(g.accessor.d(e));var l=g.accessor.h(b[f])-g.accessor.h(b[f-1]),m=g.accessor.l(b[f-1])-g.accessor.l(b[f]),n=0;l>m&&l>0&&(n=l);var o=0;m>l&&m>0&&(o=m);var p=a([g.accessor.h(e)-g.accessor.l(e),Math.abs(g.accessor.h(e)-g.accessor.c(b[f-1])),Math.abs(g.accessor.l(e)-g.accessor.c(b[f-1]))]),q=c.average(n),r=i.average(o),s=j.average(p);if(f>h){var t=100*q/s,u=100*r/s,v=0;t-u!==0&&(v=Math.abs((t-u)/(t+u)));var w=100*k.average(v);return f>=2*h?d(g.accessor.d(e),w,t,u):d(g.accessor.d(e))}return d(g.accessor.d(e))}).filter(function(a){return a.adx})}var g={},h=14;return f.period=function(a){return arguments.length?(h=a,f):h},b(f,g).accessor(c()),f}}},{}],21:[function(a,b,c){"use strict";function d(a,b,c,d,e,f,g){return b?{date:a,up:b,down:c,oscillator:d,middle:e,overbought:f,oversold:g}:{date:a,up:null,down:null,oscillator:null,middle:null,overbought:null,oversold:null}}b.exports=function(a,b){return function(){function c(a){return a.map(function(b,c){if(c>=f-1){for(var j=0,k=0,l=1e4,m=0,n=0;n<f;n++)e.accessor.h(a[c-n])>j&&(j=e.accessor.h(a[c-n]),k=n),e.accessor.l(a[c-n])<l&&(l=e.accessor.l(a[c-n]),m=n);var o=(f-k)/f*100,p=(f-m)/f*100,q=o-p;return d(e.accessor.d(b),o,p,q,h,g,i)}return d(e.accessor.d(b))}).filter(function(a){return a.up})}var e={},f=20,g=70,h=0,i=30;return c.period=function(a){return arguments.length?(f=a,c):f},c.overbought=function(a){return arguments.length?(g=a,c):g},c.middle=function(a){return arguments.length?(h=a,c):h},c.oversold=function(a){return arguments.length?(i=a,c):i},a(c,e).accessor(b()),c}}},{}],22:[function(a,b,c){"use strict";function d(a,b){return b?{date:a,value:b}:{date:a,value:null}}b.exports=function(a,b,c){return function(){function e(a){return e.init(),a.map(function(a,b){var c=e.atr(a);return b>=f.period?d(f.accessor.d(a),c):d(f.accessor.d(a))}).filter(function(a){return null!==a.value})}var f={},g=c(),h=null,i=0,j=0;return e.init=function(){return g.accessor(e.accessor()).period(f.period).init(),h=null,i=0,j=0,e},e.atr=function(a){var b=null===h?f.accessor.h(a)-f.accessor.l(a):Math.max(f.accessor.h(a)-f.accessor.l(a),Math.abs(f.accessor.h(a)-f.accessor.c(h)),Math.abs(f.accessor.l(a)-f.accessor.c(h)));return h=a,i=j++<=f.period?g.average(b):(i*(f.period-1)+b)/f.period},a(e,f).accessor(b()).period(14),e}}},{}],23:[function(a,b,c){"use strict";b.exports=function(a,b,c){return function(){function d(a){return g.accessor(e.accessor).period(e.period).init(),a.map(function(a,b){var c=e.accessor.c(a),d=g.atr(a)*f;return b>=e.period?{date:e.accessor.d(a),close:c,up:c-d,down:c+d}:{date:e.accessor.d(a),up:null,down:null}}).filter(function(a){return null!==a.up&&null!==a.down}).reduce(function(a,b,c){var d=a[c-1],e=0===c?b.up:null,f=null;return d&&null!==d.up&&(b.close>d.up?e=Math.max(b.up,d.up):f=b.down),d&&null!==d.down&&(b.close<d.down?f=Math.min(b.down,d.down):e=b.up),a.push({date:b.date,up:e,down:f}),a},[])}var e={},f=3,g=c();return d.multiplier=function(a){return arguments.length?(f=a,d):f},a(d,e).accessor(b()).period(14),d}}},{}],24:[function(a,b,c){"use strict";function d(a,b,c,d){return b?{date:a,middleBand:b,upperBand:c,lowerBand:d}:{date:a,middleBand:null,upperBand:null,lowerBand:null}}b.exports=function(a,b,c){return function(){function e(a){var b,j=c().accessor(e.accessor()).period(h).init();return a.map(function(c,e){var k=j.average(g.accessor(c));if(e>=h){var l=0;for(b=0;b<h;b++)l+=Math.pow(g.accessor.c(a[e-b])-k,2);f=Math.sqrt(l/h);var m=k+i*f,n=k-i*f;return d(g.accessor.d(c),k,m,n)}return d(g.accessor.d(c))}).filter(function(a){return a.middleBand})}var f,g={},h=20,i=2;return e.period=function(a){return arguments.length?(h=a,e):h},e.sdMultiplication=function(a){return arguments.length?(i=a,e):i},a(e,g).accessor(b()),e}}},{}],25:[function(a,b,c){"use strict";b.exports=function(a,b,c){return function(){function d(a){return d.init(),a.map(e).filter(function(a){return null!==a.value})}function e(a,b){var c=d.average(j.accessor(a));return b+1<j.period&&(c=null),{date:j.accessor.d(a),value:c}}var f,g,h,i,j={};return d.init=function(){return f=null,g=c(j.period),h=0,i=0,d},d.average=function(a){return i<j.period?f=(h+=a)/++i:f+=g*(a-f)},a(d,j).accessor(b()).period(10),d}}},{}],26:[function(a,b,c){"use strict";b.exports=function(a,b,c,d){return function(){function e(a){var b;return a.map(function(a){var e={date:f.accessor.d(a),open:(void 0===b?f.accessor.o(a)+f.accessor.c(a):b.open+b.close)/2,close:(f.accessor.o(a)+f.accessor.h(a)+f.accessor.l(a)+f.accessor.c(a))/4};return e.high=d([e.open,e.close,f.accessor.h(a)]),e.low=c([e.open,e.close,f.accessor.l(a)]),void 0!==f.accessor.v&&void 0!==f.accessor.v(a)&&(e.volume=f.accessor.v(a)),b=e})}var f={};return a(e,f).accessor(b()),e}}},{}],27:[function(a,b,c){"use strict";function d(a,b,c){return{parameters:a,date:b,chikouSpan:c,tenkanSen:null,kijunSen:null,senkouSpanA:null,senkouSpanB:null}}function e(a,b){return null!==a&&null!==b?f(a,b):null}function f(a,b){return(a+b)/2}b.exports=function(a,b){return function(){function c(a){for(var b={tenkanSen:i,kijunSen:j,senkouSpanB:k},c=new Array(a.length),d=c.length-1;d>=0;d--)c[d]=g(b,a,d);return c}function g(a,b,c){for(var g=b[c],i=h.accessor.l(g),j=h.accessor.h(g),k=d(a,h.accessor.d(g),h.accessor.c(g)),l=0,m=l+1;l<a.senkouSpanB&&c-l>=0;l++,m=l+1)g=b[c-l],i=Math.min(i,h.accessor.l(g)),j=Math.max(j,h.accessor.h(g)),k.tenkanSen=m===a.tenkanSen?f(i,j):k.tenkanSen,k.kijunSen=m===a.kijunSen?f(i,j):k.kijunSen,k.senkouSpanB=m===a.senkouSpanB?f(i,j):k.senkouSpanB;return k.senkouSpanA=e(k.tenkanSen,k.kijunSen),k}var h={},i=9,j=26,k=52;return c.tenkanSen=function(a){return arguments.length?(i=a,c):i},c.kijunSen=function(a){return arguments.length?(j=a,c):j},c.senkouSpanB=function(a){return arguments.length?(k=a,c):k},a(c,h).accessor(b()),c}}},{}],28:[function(a,b,c){"use strict";function d(a){return 2/(a+1)}function e(a){return 1/a}b.exports=function(b){var c=a("./indicatormixin")(),f=a("../accessor")(),g=a("./ema"),h=g(c,f.ohlc,d),i=a("./sma")(c,f.ohlc),j=a("./atr")(c,f.ohlc,i),k=a("./vwap")(c,f.ohlc);return{atr:j,atrtrailingstop:a("./atrtrailingstop")(c,f.ohlc,j),ema:h,heikinashi:a("./heikinashi")(c,f.ohlc,b.min,b.max),ichimoku:a("./ichimoku")(c,f.ohlc),macd:a("./macd")(c,f.ohlc,h),rsi:a("./rsi")(c,f.ohlc,h),sma:i,wilderma:g(c,f.ohlc,e),aroon:a("./aroon")(c,f.ohlc),stochastic:a("./stochastic")(c,f.ohlc,h),williams:a("./williams")(c,f.ohlc,h),adx:a("./adx")(b.max,c,f.ohlc,h),bollinger:a("./bollinger")(c,f.ohlc,i),vwap:k}}},{"../accessor":8,"./adx":20,"./aroon":21,"./atr":22,"./atrtrailingstop":23,"./bollinger":24,"./ema":25,"./heikinashi":26,"./ichimoku":27,"./indicatormixin":29,"./macd":30,"./rsi":31,"./sma":32,"./stochastic":33,"./vwap":34,"./williams":35}],29:[function(a,b,c){"use strict";b.exports=function(){return function(a,b){var c={};return c.period=function(d){return b.period=d,a.period=function(c){return arguments.length?(b.period=+c,a):b.period},c},c.accessor=function(d){return b.accessor=d,a.accessor=function(c){return arguments.length?(b.accessor=c,a):b.accessor},c},c}}},{}],30:[function(a,b,c){"use strict";function d(a,b,c,d,e){return b?{date:a,macd:b,signal:c,difference:d,zero:e}:{date:a,macd:null,signal:null,difference:null,zero:null}}b.exports=function(a,b,c){return function(){function e(a){var b=Math.max(g,h)-1,c=b+i-1;return j.accessor(e.accessor()).period(i).init(),k.accessor(e.accessor()).period(g).init(),l.accessor(e.accessor()).period(h).init(),a.map(function(a,e){var g=k.average(f.accessor(a))-l.average(f.accessor(a)),h=e>=b?j.average(g):null;return e>=c?d(f.accessor.d(a),g,h,g-h,0):d(f.accessor.d(a))}).filter(function(a){return null!==a.macd})}var f={},g=12,h=26,i=9,j=c(),k=c(),l=c();return e.fast=function(a){return arguments.length?(g=a,e):g},e.slow=function(a){return arguments.length?(h=a,e):h},e.signal=function(a){return arguments.length?(i=a,e):i},a(e,f).accessor(b()),e}}},{}],31:[function(a,b,c){"use strict";function d(a,b,c,d,e){return b?{date:a,rsi:b,middle:c,overbought:d,oversold:e}:{date:a,rsi:null,middle:null,overbought:null,oversold:null}}b.exports=function(a,b,c){return function(){function e(a){return j.accessor(e.accessor()).period(f.period).init(),k.accessor(e.accessor()).period(f.period).init(),a.map(function(b,c){if(c<1)return d(f.accessor.d(b));var e=f.accessor(b)-f.accessor(a[c-1]),l=k.average(Math.max(e,0)),m=Math.abs(j.average(Math.min(e,0)));if(c>=f.period){var n=100-100/(1+l/m);return d(f.accessor.d(b),n,h,g,i)}return d(f.accessor.d(b))}).filter(function(a){return null!==a.rsi})}var f={},g=70,h=50,i=30,j=c(),k=c();return e.overbought=function(a){return arguments.length?(g=a,e):g},e.middle=function(a){return arguments.length?(h=a,e):h},e.oversold=function(a){return arguments.length?(i=a,e):i},a(e,f).accessor(b()).period(14),e}}},{}],32:[function(a,b,c){"use strict";b.exports=function(a,b){return function(){function c(a){return c.init(),a.map(d).filter(function(a){return null!==a.value})}function d(a,b){var d=c.average(h.accessor(a));return b+1<h.period&&(d=null),{date:h.accessor.d(a),value:d}}var e,f,g,h={};return c.init=function(){return g=0,e=[],f=0,c},c.average=function(a){return g+=a,e.length+1<h.period?(e.push(a),g/++f):(e.length<h.period&&(e.push(a),g+=a),g-=e[f],e[f]=a,++f===h.period&&(f=0),g/h.period)},a(c,h).accessor(b()).period(10),c}}},{}],33:[function(a,b,c){"use strict";function d(a,b,c,d,e,f){return b?{date:a,stochasticK:b,stochasticD:c,middle:d,overbought:e,oversold:f}:{date:a,stochasticK:null,stochasticD:null,middle:d,overbought:e,oversold:f}}b.exports=function(a,b){return function(){function c(a){var b=parseInt(f)+parseInt(g);return a.map(function(c,k){if(k>=b){for(var l=[],m=[],n=[],o=0;o<g;o++)l.push(0),m.push(1e4),n.push(0);for(var p=0,q=0;q<g;q++){for(var r=0;r<f;r++)e.accessor.h(a[k-r-q])>l[q]&&(l[q]=e.accessor.h(a[k-r-q])),e.accessor.l(a[k-r-q])<m[q]&&(m[q]=e.accessor.l(a[k-r-q]));var s=l[q]-m[q];s>0?n[q]=(e.accessor.c(a[k-q])-m[q])/(l[q]-m[q])*100:n[q]=50,p+=n[q]}var t=n[0];return p/=g,d(e.accessor.d(c),t,p,i,h,j)}return d(e.accessor.d(c),null,null,i,h,j)}).filter(function(a){return a.stochasticK})}var e={},f=20,g=3,h=80,i=50,j=20;return c.period=function(a){return arguments.length?(f=a,c):f},c.periodD=function(a){return arguments.length?(g=a,c):g},c.overbought=function(a){return arguments.length?(h=a,c):h},c.middle=function(a){return arguments.length?(i=a,c):i},c.oversold=function(a){return arguments.length?(j=a,c):j},a(c,e).accessor(b()),c}}},{}],34:[function(a,b,c){"use strict";b.exports=function(a,b){return function(){function c(a){return c.init(),a.map(d).filter(function(a){return null!==a.value})}function d(a,b){b>0&&g.getDate()!=h.accessor.d(a).getDate()&&(e=0,f=0);var c=(h.accessor.h(a)+h.accessor.l(a)+h.accessor.c(a))/3;return e+=c*h.accessor.v(a),f+=h.accessor.v(a),g=h.accessor.d(a),{date:h.accessor.d(a),value:e/f}}var e,f,g,h={};return c.init=function(){return e=0,f=0,c},a(c,h).accessor(b()).period(1),c}}},{}],35:[function(a,b,c){"use strict";function d(a,b,c,d,e){return b?{date:a,williams:b,middle:c,overbought:d,oversold:e}:{date:a,williams:null,middle:null,overbought:null,oversold:null}}b.exports=function(a,b){return function(){function c(a){return a.map(function(b,c){if(c>=f){for(var j=0,k=0,l=1e4,m=0,n=0;n<f;n++)e.accessor.h(a[c-n])>j&&(j=e.accessor.h(a[c-n]),k=n),e.accessor.l(a[c-n])<l&&(l=e.accessor.l(a[c-n]),m=n);var o=(e.accessor.c(a[c])-l)/(j-l)*100;return d(e.accessor.d(b),o,h,g,i)}return d(e.accessor.d(b))}).filter(function(a){return a.williams})}var e={},f=20,g=80,h=50,i=20;return c.period=function(a){return arguments.length?(f=a,c):f},c.overbought=function(a){return arguments.length?(g=a,c):g},c.middle=function(a){return arguments.length?(h=a,c):h},c.oversold=function(a){return arguments.length?(i=a,c):i},a(c,e).accessor(b()),c}}},{}],36:[function(a,b,c){"use strict";function d(a,b,c,d){a.select("path.adx").attr("d",b),a.select("path.plusDi").attr("d",c),a.select("path.minusDi").attr("d",d)}b.exports=function(a,b,c){return function(){function e(a){var b=g.dataSelector(a);b.entry.append("path").attr("class","adx"),b.entry.append("path").attr("class","plusDi"),b.entry.append("path").attr("class","minusDi"),e.refresh(a)}function f(){h.init(g.accessor.d,g.xScale,g.accessor.adx,g.yScale),i.init(g.accessor.d,g.xScale,g.accessor.plusDi,g.yScale),j.init(g.accessor.d,g.xScale,g.accessor.minusDi,g.yScale)}var g={},h=b.pathLine(),i=b.pathLine(),j=b.pathLine();return e.refresh=function(a){d(g.dataSelector.select(a),h,i,j)},c(e,g).plot(a(),f).dataSelector(c.dataMapper.array),f(),e}}},{}],37:[function(a,b,c){"use strict";function d(a,b,c,d,e,f,g,h,i,j){a.select("path.overbought").attr("d",e.horizontalPathLine(b.d,c,b.ob,d)),a.select("path.oversold").attr("d",e.horizontalPathLine(b.d,c,b.os,d)),a.select("path.aroon.oscillator").attr("d",f),a.select("path.aroon.oscillatorArea").attr("d",g),a.select("path.aroon.middle").attr("d",h),a.select("path.aroon.up").attr("d",i),a.select("path.aroon.down").attr("d",j)}b.exports=function(a,b,c){return function(){function e(a){var b=g.dataSelector(a);b.entry.append("path").attr("class","overbought"),b.entry.append("path").attr("class","oversold"),b.entry.append("path").attr("class","aroon oscillator"),b.entry.append("path").attr("class","aroon oscillatorArea"),b.entry.append("path").attr("class","aroon middle"),b.entry.append("path").attr("class","aroon up"),b.entry.append("path").attr("class","aroon down"),e.refresh(a)}function f(){h.init(g.accessor.d,g.xScale,g.accessor.oscillator,g.yScale),i.init(g.accessor.d,g.xScale,g.accessor.oscillator,g.yScale,0),j.init(g.accessor.d,g.xScale,g.accessor.m,g.yScale),k.init(g.accessor.d,g.xScale,g.accessor.up,g.yScale),l.init(g.accessor.d,g.xScale,g.accessor.down,g.yScale)}var g={},h=b.pathLine(),i=b.pathArea(),j=b.pathLine(),k=b.pathLine(),l=b.pathLine();return e.refresh=function(a){d(g.dataSelector.select(a),g.accessor,g.xScale,g.yScale,b,h,i,j,k,l)},c(e,g).plot(a(),f).dataSelector(c.dataMapper.array),f(),e}}},{}],38:[function(a,b,c){"use strict";function d(a,b,c){a.select("path.up").attr("d",b),a.select("path.down").attr("d",c)}b.exports=function(a,b,c){return function(){function e(a){var b=g.dataSelector(a);b.entry.append("path").attr("class","up"),b.entry.append("path").attr("class","down"),e.refresh(a)}function f(){h.init(g.accessor.d,g.xScale,g.accessor.up,g.yScale),i.init(g.accessor.d,g.xScale,g.accessor.dn,g.yScale)}var g={},h=b.pathLine(),i=b.pathLine();return e.refresh=function(a){d(g.dataSelector.select(a),h,i)},c(e,g).plot(a(),f).dataSelector(c.dataMapper.array),f(),e}}},{}],39:[function(a,b,c){"use strict";function d(a,b,c,d,e,g,j,k,l){var m="left"===d||"top"===d?-1:1;a.attr("transform","translate("+l[0]+","+l[1]+")"),a.select("path").attr("d",i(b,c,d,g,j,k,m)),a.select("text").text(h(b,e)).call(f,b,c,d,m)}function e(a,b){return function(c){var d=b.range(),e=d[0],f=d[d.length-1];return d=e<f?[e,f]:[f,e],c.filter(function(c){if(null===a(c)||void 0===a(c))return!1;var e=b(a(c));return null!==e&&!isNaN(e)&&d[0]<=e&&e<=d[1]})}}function f(a,b,c,d,e){var f=c.scale();switch(d){case"left":case"right":a.attr("x",e*(Math.max(c.tickSizeInner(),0)+c.tickPadding())).attr("y",g(b,f)).attr("dy",".32em").style("text-anchor",e<0?"end":"start");break;case"top":case"bottom":a.attr("x",g(b,f)).attr("y",e*(Math.max(c.tickSizeInner(),0)+c.tickPadding())).attr("dy",e<0?"0em":".72em").style("text-anchor","middle")}}function g(a,b){return function(c){return b(a(c))}}function h(a,b){return function(c){return b(a(c))}}function i(a,b,c,d,e,f,g){return function(h){var i=b.scale(),j=i(a(h)),k=f;switch(c){case"left":case"right":var l=0;return d/2<f?k=d/2:l=d/2-f,"M 0 "+j+" l "+g*Math.max(b.tickSizeInner(),1)+" "+-k+" l 0 "+-l+" l "+g*e+" 0 l 0 "+d+" l "+g*-e+" 0 l 0 "+-l;case"top":case"bottom":var m=0;return e/2<f?k=e/2:m=e/2-f,"M "+j+" 0 l "+-k+" "+g*Math.max(b.tickSizeInner(),1)+" l "+-m+" 0 l 0 "+g*d+" l "+e+" 0 l 0 "+g*-d+" l "+-m+" 0";default:throw"Unsupported orient value: axisannotation.orient("+c+"). Set to one of: 'top', 'bottom', 'left', 'right'"}}}b.exports=function(a,b,c,f,g){return function(){function f(a){var b=i.dataSelector.mapper(e(i.accessor,j.scale()))(a);b.entry.append("path"),b.entry.append("text"),f.refresh(a)}var h,i={},j=a(b()),k=4,l=14,m=50,n=[0,0],o="bottom";return f.refresh=function(a){var b=h?h:j.tickFormat()?j.tickFormat():j.scale().tickFormat();d(i.dataSelector.select(a),i.accessor,j,o,b,l,m,k,n)},f.axis=function(a){return arguments.length?(j=a,f):j},f.orient=function(a){return arguments.length?(o=a,f):o},f.format=function(a){return arguments.length?(h=a,f):h},f.height=function(a){return arguments.length?(l=a,f):l},f.width=function(a){return arguments.length?(m=a,f):m},f.translate=function(a){return arguments.length?(n=a,f):n},g(f,i).accessor(c()).dataSelector(),f}}},{}],40:[function(a,b,c){"use strict";function d(a,b,c,d){a.select("path.upper").attr("d",b),a.select("path.middle").attr("d",c),a.select("path.lower").attr("d",d)}b.exports=function(a,b,c){return function(){function e(a){var b=g.dataSelector(a);b.entry.append("path").attr("class","upper"),b.entry.append("path").attr("class","middle"),b.entry.append("path").attr("class","lower"),e.refresh(a)}function f(){h.init(g.accessor.d,g.xScale,g.accessor.upper,g.yScale),i.init(g.accessor.d,g.xScale,g.accessor.middle,g.yScale),j.init(g.accessor.d,g.xScale,g.accessor.lower,g.yScale)}var g={},h=b.pathLine(),i=b.pathLine(),j=b.pathLine();return e.refresh=function(a){d(g.dataSelector.select(a),h,i,j)},c(e,g).plot(a(),f).dataSelector(c.dataMapper.array),f(),e}}},{}],41:[function(a,b,c){"use strict";b.exports=function(a,b,c,d,e){return function(){function a(b){var c=k.dataSelector(b);d.appendPathsUpDownEqual(c.selection,k.accessor,["candle","body"]),d.appendPathsUpDownEqual(c.selection,k.accessor,["candle","wick"]),a.refresh(b)}function b(){h=d.joinPath(f),i=d.joinPath(g),j=d.scaledStrokeWidth(k.xScale,1,4)}function f(){var a=k.accessor,b=k.xScale,c=k.yScale,d=k.width(b);return function(e){var f=c(a.o(e)),g=c(a.c(e)),h=b(a.d(e))-d/2,i="M "+h+" "+f+" l "+d+" 0";return f!=g&&(i+=" L "+(h+d)+" "+g+" l "+-d+" 0 L "+h+" "+f),i}}function g(){var a=k.accessor,b=k.xScale,c=k.yScale,d=k.width(b);return function(e){var f=c(a.o(e)),g=c(a.c(e)),h=b(a.d(e)),i=h-d/2,j="M "+h+" "+c(a.h(e))+" L "+h+" "+Math.min(f,g);return f==g&&(j+=" M "+i+" "+f+" l "+d+" 0"),j+" M "+h+" "+Math.max(f,g)+" L "+h+" "+c(a.l(e))}}var h,i,j,k={};return a.refresh=function(a){a.selectAll("path.candle.body").attr("d",h),a.selectAll("path.candle.wick").attr("d",i).style("stroke-width",j)},e(a,k).plot(c(),b).width(b).dataSelector(e.dataMapper.array),b(),a}}},{}],42:[function(a,b,c){"use strict";b.exports=function(a,b,c,d,e,f,g){return function(){function a(b){var c=s.dataSelector(b);c.entry.append("path").attr("class","horizontal wire"),c.entry.append("path").attr("class","vertical wire"),c.entry.append("g").attr("class","axisannotation x").call(u),c.entry.append("g").attr("class","axisannotation y").call(v),b.selectAll("rect").data([void 0]).enter().append("rect").style("fill","none").style("pointer-events","all"),a.refresh(b)}function b(a,b,d,e,f){return function(){a.node().__coord__=c(this),h(a,b,d,e,f)}}function h(a,b,c,d,e){var f=a.node().__coord__;if(void 0!==f){var g=a.datum(),h=s.xScale.invert(f[0]),i=s.yScale.invert(f[1]),j=null!==h&&null!==i&&(s.accessor.xv(g)!==h||s.accessor.yv(g)!==i);s.accessor.xv(g,h),s.accessor.yv(g,i),j&&t.call("move",a.node(),g)}b.attr("d",o),c.attr("d",p),d.call(u.refresh),e.call(v.refresh),a.attr("display",n)}function i(){return o=k(),p=j(),u.accessor(s.accessor.xv).scale(s.xScale),v.accessor(s.accessor.yv).scale(s.yScale),a}function j(){var a=r||s.xScale.range();return function(b){if(null===s.accessor.yv(b))return null;var c=s.yScale(s.accessor.yv(b));return isNaN(c)?null:"M "+a[0]+" "+c+" L "+a[a.length-1]+" "+c}}function k(){var a=q||s.yScale.range();return function(b){if(null===s.accessor.xv(b))return null;var c=s.xScale(s.accessor.xv(b)),d=s.xScale.range();return c<Math.min(d[0],d[d.length-1])||c>Math.max(d[0],d[d.length-1])?null:"M "+c+" "+a[0]+" L "+c+" "+a[a.length-1]}}function l(a){return a=a||{},s.accessor.xv(a,null),s.accessor.yv(a,null),a}function m(a){return void 0===a||null===s.accessor.xv(a)||null===s.accessor.yv(a)}function n(a){return m(a)?"none":null}var o,p,q,r,s={},t=d("enter","out","move"),u=f.plotComposer().scope("composed-annotation").plotScale(function(a){return a.axis().scale()}),v=f.plotComposer().scope("composed-annotation").plotScale(function(a){return a.axis().scale()});return a.refresh=function(a){var c=s.xScale.range(),d=s.yScale.range(),e=s.dataSelector.select(a),f=e.select("path.vertical"),g=e.select("path.horizontal"),i=e.select("g.axisannotation.x"),j=e.select("g.axisannotation.y");a.selectAll("rect").attr("x",Math.min.apply(null,c)).attr("y",Math.min.apply(null,d)).attr("height",Math.abs(d[d.length-1]-d[0])).attr("width",Math.abs(c[c.length-1]-c[0])).on("mouseenter",function(){
t.call("enter",this)}).on("mouseout",function(){t.call("out",this),delete e.node().__coord__,l(e.datum()),h(e,f,g,i,j)}).on("mousemove",b(e,f,g,i,j)),h(e,f,g,i,j)},a.xAnnotation=function(a){return arguments.length?(u.plots(a instanceof Array?a:[a]),i()):u.plots()},a.yAnnotation=function(a){return arguments.length?(v.plots(a instanceof Array?a:[a]),i()):v.plots()},a.verticalWireRange=function(a){return arguments.length?(q=a,i()):q},a.horizontalWireRange=function(a){return arguments.length?(r=a,i()):r},g(a,s).plot(e(),i).dataSelector(function(a){return m(a)?[l()]:[a]}).on(t),s.dataSelector.scope("crosshair"),i()}}},{}],43:[function(a,b,c){"use strict";function d(a){return function(b){return-a(b)}}function e(){return Math.random().toString(36).substr(2,9)}b.exports=function(a,b,c,f,g){return function(){function h(a){var b=m.dataSelector(a),c="kumoclipup-"+e(),d="kumoclipdown-"+e();b.entry.append("clipPath").attr("id",d).attr("class","kumoclipdown").append("path"),b.entry.append("clipPath").attr("id",c).attr("class","kumoclipup").append("path"),b.entry.append("path").attr("class","kumo down").attr("clip-path","url(#"+d+")"),b.entry.append("path").attr("class","kumo up").attr("clip-path","url(#"+c+")"),b.entry.append("path").attr("class","senkouspanb"),b.entry.append("path").attr("class","senkouspana"),b.entry.append("path").attr("class","chikouspan"),b.entry.append("path").attr("class","kijunsen"),b.entry.append("path").attr("class","tenkansen"),h.refresh(a)}function i(a,b){a.select(".kumoclipdown path").attr("d",n.y1(b.range()[0])),a.select(".kumoclipup path").attr("d",n.y1(b.range()[1])),a.select("path.kumo.down").attr("d",o),a.select("path.kumo.up").attr("d",o),a.select("path.senkouspanb").attr("d",q),a.select("path.senkouspana").attr("d",p),a.select("path.chikouspan").attr("d",r),a.select("path.kijunsen").attr("d",t),a.select("path.tenkansen").attr("d",s)}function j(){p.init(m.accessor.d,m.xScale,m.accessor.sa,m.yScale,m.accessor.pks),q.init(m.accessor.d,m.xScale,m.accessor.sb,m.yScale,m.accessor.pks),r.init(m.accessor.d,m.xScale,m.accessor.c,m.yScale,d(m.accessor.pks)),s.init(m.accessor.d,m.xScale,m.accessor.ts,m.yScale),t.init(m.accessor.d,m.xScale,m.accessor.ks,m.yScale)}function k(){return a().curve(b).defined(function(a){return null!==m.accessor.sb(a)}).x(function(a){return m.xScale(m.accessor.d(a),m.accessor.pks(a))}).y0(function(a){return m.yScale(m.accessor.sb(a))})}function l(){return a().curve(b).defined(function(a){return null!==m.accessor.sa(a)&&null!==m.accessor.sb(a)}).x(function(a){return m.xScale(m.accessor.d(a),m.accessor.pks(a))}).y0(function(a){return m.yScale(m.accessor.sa(a))}).y1(function(a){return m.yScale(m.accessor.sb(a))})}var m={},n=k(),o=l(),p=f.pathLine(),q=f.pathLine(),r=f.pathLine(),s=f.pathLine(),t=f.pathLine();return h.refresh=function(a){i(m.dataSelector.select(a),m.yScale)},g(h,m).plot(c(),j).dataSelector(g.dataMapper.array),j(),h}}},{}],44:[function(a,b,c){"use strict";function d(){return d3.event}b.exports=function(b){var c=a("../scale")(b),e=a("../accessor")(),f=a("./plot")(b.line,b.area,b.curveMonotoneX,b.select),g=a("../util")().functor,h=a("./plotmixin")(b.scaleLinear,g,c.financetime,f.dataSelector,f.barWidth),i=a("./candlestick")(b.scaleLinear,b.extent,e.ohlc,f,h),j=a("./line"),k=a("./axisannotation")(b.axisTop,b.scaleLinear,e.value,f,h),l=a("../svg")(b);return{tradearrow:a("./tradearrow")(b.select,g,b.mouse,b.dispatch,e.trade,f,h,l.arrow),atr:j(e.value,f,h),atrtrailingstop:a("./atrtrailingstop")(e.atrtrailingstop,f,h),axisannotation:k,candlestick:i,crosshair:a("./crosshair")(b.select,d,b.mouse,b.dispatch,e.crosshair,f,h),ema:j(e.value,f,h),heikinashi:i,ichimoku:a("./ichimoku")(b.area,b.curveMonotoneX,e.ichimoku,f,h),ohlc:a("./ohlc")(b.scaleLinear,b.extent,e.ohlc,f,h),tick:a("./tick")(b.scaleLinear,b.extent,e.tick,f,h),close:j(e.ohlc,f,h),volume:a("./volume")(e.volume,f,h),rsi:a("./rsi")(e.rsi,f,h),macd:a("./macd")(e.macd,f,h),momentum:j(e.value,f,h,!0),moneyflow:j(e.value,f,h,!0),sma:j(e.value,f,h),supstance:a("./supstance")(b.drag,d,b.select,b.dispatch,e.supstance,f,h),trendline:a("./trendline")(b.drag,d,b.select,b.dispatch,e.trendline,f,h),wilderma:j(e.value,f,h),adx:a("./adx")(e.adx,f,h),aroon:a("./aroon")(e.aroon,f,h),stochastic:a("./stochastic")(e.stochastic,f,h),williams:a("./williams")(e.williams,f,h),bollinger:a("./bollinger")(e.bollinger,f,h),vwap:j(e.value,f,h)}}},{"../accessor":8,"../scale":59,"../svg":62,"../util":64,"./adx":36,"./aroon":37,"./atrtrailingstop":38,"./axisannotation":39,"./bollinger":40,"./candlestick":41,"./crosshair":42,"./ichimoku":43,"./line":45,"./macd":46,"./ohlc":47,"./plot":48,"./plotmixin":49,"./rsi":50,"./stochastic":51,"./supstance":52,"./tick":53,"./tradearrow":54,"./trendline":55,"./volume":56,"./williams":57}],45:[function(a,b,c){"use strict";function d(a,b,c,d,e,f,g){a.select("path.line").attr("d",f),g&&a.select("path.zero").attr("d",e.horizontalPathLine(c,b.z,d))}b.exports=function(a,b,c,e){return e=e||!1,function(){function f(a){var b=h.dataSelector(a);b.entry.append("path").attr("class","line"),e&&b.selection.append("path").attr("class","zero"),f.refresh(a)}function g(){i.init(h.accessor.d,h.xScale,h.accessor,h.yScale)}var h={},i=b.pathLine();return f.refresh=function(a){d(h.dataSelector.select(a),h.accessor,h.xScale,h.yScale,b,i,e)},c(f,h).plot(a(),g).dataSelector(c.dataMapper.array),g(),f}}},{}],46:[function(a,b,c){"use strict";function d(a,b,c,d,e,f,g,h){a.select("path.difference").attr("d",f),a.select("path.zero").attr("d",e.horizontalPathLine(b.d,c,b.z,d)),a.select("path.macd").attr("d",g),a.select("path.signal").attr("d",h)}b.exports=function(a,b,c){return function(){function e(a){var b=i.dataSelector(a);b.selection.append("path").attr("class","difference"),b.selection.append("path").attr("class","zero"),b.selection.append("path").attr("class","macd"),b.selection.append("path").attr("class","signal"),e.refresh(a)}function f(){h=b.joinPath(g),j.init(i.accessor.d,i.xScale,i.accessor.m,i.yScale),k.init(i.accessor.d,i.xScale,i.accessor.s,i.yScale)}function g(){var a=i.accessor,b=i.xScale,c=i.yScale,d=i.width(b);return function(e){var f=c(0),g=c(a.dif(e))-f,h=b(a.d(e))-d/2;return"M "+h+" "+f+" l 0 "+g+" l "+d+" 0 l 0 "+-g}}var h,i={},j=b.pathLine(),k=b.pathLine();return e.refresh=function(a){d(i.dataSelector.select(a),i.accessor,i.xScale,i.yScale,b,h,j,k)},c(e,i).plot(a(),f).width(f).dataSelector(c.dataMapper.array),f(),e}}},{}],47:[function(a,b,c){"use strict";b.exports=function(a,b,c,d,e){return function(){function a(b){d.appendPathsUpDownEqual(i.dataSelector(b).selection,i.accessor,"ohlc"),a.refresh(b)}function b(){g=d.joinPath(f),h=d.scaledStrokeWidth(i.xScale,1,2)}function f(){var a=i.accessor,b=i.xScale,c=i.yScale,d=i.width(b);return function(e){var f=c(a.o(e)),g=c(a.c(e)),h=b(a.d(e)),i=h-d/2;return"M "+i+" "+f+" l "+d/2+" 0 M "+h+" "+c(a.h(e))+" L "+h+" "+c(a.l(e))+" M "+h+" "+g+" l "+d/2+" 0"}}var g,h,i={};return a.refresh=function(a){a.selectAll("path.ohlc").attr("d",g).style("stroke-width",h)},e(a,i).plot(c(),b).width(b).dataSelector(e.dataMapper.array),b(),a}}},{}],48:[function(a,b,c){"use strict";b.exports=function(a,b,c,d){function e(){function b(a){return d(a)}var d=a().curve(c);return b.init=function(a,b,c,e,f){return d.defined(function(a){return null!==c(a)}).x(function(c){return b(a(c),void 0===f?f:f(c))}).y(function(a){return e(c(a))})},b.d3=function(){return d},b}function f(){function a(a){return d(a)}var d=b().curve(c);return a.init=function(a,b,c,e,f){return d.defined(function(a){return null!==c(a)}).x(function(c){return b(a(c))}).y0(function(a){return e(f)}).y1(function(a){return e(c(a))})},a.d3=function(){return d},a}function g(a){return{up:function(b){return a.o(b)<a.c(b)},down:function(b){return a.o(b)>a.c(b)},equal:function(b){return a.o(b)===a.c(b)}}}function h(a,b,c,d){var e=c instanceof Array?c:[c];d=d||g(b),Object.keys(d).forEach(function(b){j(a,d[b],e,b)})}function i(a,b,c){h(a,b,c,g(b))}function j(a,b,c,d){a.selectAll("path."+l(c,".")+"."+d).data(function(a){return[a.filter(b)]}).enter().append("path").attr("class",l(c," ")+" "+d)}function k(a){return void 0!==a.band?Math.max(a.band(),1):3}function l(a,b){if(a.length){for(var c=a[0],d=1;d<a.length;d++)c+=b+a[d];return c}}function m(){function a(b){var c=e.mapper(function(){return f.map(function(){return[]})})(b);c.selection.each(function(a,b){f[b](d(this))}),a.refresh(b)}var b,c,e=n(),f=[],g=function(a){return a.scale()};return a.refresh=function(a){e.select(a).data(function(a){var d=c(a);if(null===d||void 0===d)return f.map(function(){return[]});var e=b(d);return f.map(function(a){var c=g(a)===b?d:g(a).invert(e);return[{value:c}]})}).each(function(a,b){f[b](d(this))})},a.plots=function(b){return arguments.length?(f=b,a):f},a.scale=function(c){return arguments.length?(b=c,a):b},a.accessor=function(b){return arguments.length?(c=b,a):c},a.scope=function(b){return arguments.length?(e.scope(b),a):e.scope()},a.plotScale=function(b){return arguments.length?(g=b,a):g},a}var n=function(a){function b(d){var f=b.select(d).data(a,c),g=f.enter().append("g").attr("class",l(e," "));return f.exit().remove(),{entry:g,selection:g.merge(f)}}var c,d,e=["data"];return b.select=function(a){return a.selectAll("g."+l(e,"."))},b.mapper=function(c){return arguments.length?(a=c,b):a},b.scope=function(a){return arguments.length?(d=a,e=["data","scope-"+d],b):d},b.key=function(a){return arguments.length?(c=a,b):c},b};return n.mapper={unity:function(a){return a},array:function(a){return[a]}},{dataSelector:n,appendPathsGroupBy:h,appendPathsUpDownEqual:i,horizontalPathLine:function(a,b,c,d){return function(e){if(!e.length)return null;var f=e[0],g=e[e.length-1];return"M "+b(a(f))+" "+d(c(f))+" L "+b(a(g))+" "+d(c(g))}},pathLine:e,pathArea:f,barWidth:k,scaledStrokeWidth:function(a,b,c){return b=b||1,c=c||1,function(){return Math.min(b,k(a)/c)+"px"}},joinPath:function(a){return function(b){return l(b.map(a())," ")}},interaction:{mousedispatch:function(a){return function(b){return b.on("mouseenter",function(b){d(this.parentNode).classed("mouseover",!0),a.call("mouseenter",this,b)}).on("mouseleave",function(b){var c=d(this.parentNode);c.classed("dragging")||(c.classed("mouseover",!1),a.call("mouseout",this,b))}).on("mousemove",function(b){a.call("mousemove",this,b)})}},dragStartEndDispatch:function(a,b){return a.on("start",function(a){d(this.parentNode.parentNode).classed("dragging",!0),b.call("dragstart",this,a)}).on("end",function(a){d(this.parentNode.parentNode).classed("dragging",!1),b.call("dragend",this,a)})}},plotComposer:m}}},{}],49:[function(a,b,c){"use strict";b.exports=function(a,b,c,d,e){var f=function(f,g){var h={};return h.dataSelector=function(a,b){return g.dataSelector=d(a).key(b),h},h.xScale=function(a){return g.xScale=c(),f.xScale=function(b){return arguments.length?(g.xScale=b,a&&a(),f):g.xScale},h},h.yScale=function(b){return g.yScale=a(),f.yScale=function(a){return arguments.length?(g.yScale=a,b&&b(),f):g.yScale},h},h.accessor=function(a,b){return g.accessor=a,f.accessor=function(a){return arguments.length?(g.accessor=a,b&&b(),f):g.accessor},h},h.width=function(a){return g.width=e,f.width=function(c){return arguments.length?(g.width=b(c),a&&a(),f):g.width},h},h.on=function(a,b){return f.on=function(c,d){return a.on(c,d),b&&b(),f},h},h.plot=function(a,b){return h.xScale(b).yScale(b).accessor(a,b)},h};return f.dataMapper=d.mapper,f}},{}],50:[function(a,b,c){"use strict";function d(a,b,c,d,e,f){a.select("path.overbought").attr("d",e.horizontalPathLine(b.d,c,b.ob,d)),a.select("path.middle").attr("d",e.horizontalPathLine(b.d,c,b.m,d)),a.select("path.oversold").attr("d",e.horizontalPathLine(b.d,c,b.os,d)),a.select("path.rsi").attr("d",f)}b.exports=function(a,b,c){return function(){function e(a){var b=g.dataSelector(a);b.entry.append("path").attr("class","overbought"),b.entry.append("path").attr("class","middle"),b.entry.append("path").attr("class","oversold"),b.entry.append("path").attr("class","rsi"),e.refresh(a)}function f(){h.init(g.accessor.d,g.xScale,g.accessor.r,g.yScale)}var g={},h=b.pathLine();return e.refresh=function(a){d(g.dataSelector.select(a),g.accessor,g.xScale,g.yScale,b,h)},c(e,g).plot(a(),f).dataSelector(c.dataMapper.array),f(),e}}},{}],51:[function(a,b,c){"use strict";function d(a,b,c,d,e,f,g){a.select("path.overbought").attr("d",e.horizontalPathLine(b.d,c,b.ob,d)),a.select("path.oversold").attr("d",e.horizontalPathLine(b.d,c,b.os,d)),a.select("path.stochastic.up").attr("d",f),a.select("path.stochastic.down").attr("d",g)}b.exports=function(a,b,c){return function(){function e(a){var b=g.dataSelector(a);b.entry.append("path").attr("class","overbought"),b.entry.append("path").attr("class","oversold"),b.entry.append("path").attr("class","stochastic up"),b.entry.append("path").attr("class","stochastic down"),e.refresh(a)}function f(){h.init(g.accessor.d,g.xScale,g.accessor.k,g.yScale),i.init(g.accessor.d,g.xScale,g.accessor.sd,g.yScale)}var g={},h=b.pathLine(),i=b.pathLine();return e.refresh=function(a){d(g.dataSelector.select(a),g.accessor,g.xScale,g.yScale,b,h,i)},c(e,g).plot(a(),f).dataSelector(c.dataMapper.array),f(),e}}},{}],52:[function(a,b,c){"use strict";function d(a,b,c,d,f){a.select(".supstance path").attr("d",e(b,c,d)),a.select(".interaction path").attr("d",e(b,c,d)),a.select(".axisannotation.y").call(f.refresh)}function e(a,b,c){return function(d){var e;return f(a)?(e=[a.s(d),a.e(d)],e[0]=void 0!==e[0]?b(e[0]):b.range()[0],e[1]=void 0!==e[1]?b(e[1]):b.range()[1]):e=b.range(),"M "+e[0]+" "+c(a(d))+" L "+e[e.length-1]+" "+c(a(d))}}function f(a){return void 0!==a.s&&void 0!==a.e}b.exports=function(a,b,c,e,f,g,h){function i(){function a(b){var d=c.dataSelector(b);d.entry.append("g").attr("class","supstance").append("path"),d.entry.append("g").attr("class","axisannotation y").call(k);var e=d.entry.append("g").attr("class","interaction").style("opacity",0).style("fill","none").call(g.interaction.mousedispatch(i));e.append("path").style("stroke-width","16px"),a.refresh(b)}function b(){return k.accessor(c.accessor.v).scale(c.yScale),a}var c={},i=e("mouseenter","mouseout","mousemove","drag","dragstart","dragend"),k=g.plotComposer().scope("composed-annotation").plotScale(function(a){return a.axis().scale()});return a.refresh=function(a){d(c.dataSelector.select(a),c.accessor,c.xScale,c.yScale,k)},a.drag=function(a){a.selectAll(".interaction path").call(j(i,c.accessor,c.xScale,c.yScale,k))},a.annotation=function(b){return arguments.length?(k.plots(b instanceof Array?b:[b]),a):k.plots()},h(a,c).dataSelector(h.dataMapper.unity).plot(f(),b).on(i),c.dataSelector.scope("supstance"),b()}function j(e,f,h,i,j){var k=a().subject(function(a){return{x:0,y:i(f(a))}}).on("drag",function(a){var g=i.invert(b().y),k=c(this.parentNode.parentNode);f.v(a,g),d(k,f,h,i,j),e.call("drag",this,a)});return g.interaction.dragStartEndDispatch(k,e)}return i}},{}],53:[function(a,b,c){"use strict";b.exports=function(a,b,c,d,e){return function(){function a(b){i.dataSelector(b).entry.append("path").attr("class","tick"),a.refresh(b)}function b(){g=d.joinPath(f),h=d.scaledStrokeWidth(i.xScale,1,2)}function f(){var a=i.accessor,b=i.xScale,c=i.yScale,d=i.width(b);return function(e){var f=c(a.h(e)),g=c(a.l(e)),h=b(a.d(e)),i=h-d/2;return"M "+i+" "+f+" l "+d+" 0 M "+h+" "+f+" L "+h+" "+g+" M "+i+" "+g+" l "+d+" 0"}}var g,h,i={};return a.refresh=function(a){i.dataSelector.select(a).select("path.tick").attr("d",g).style("stroke-width",h)},e(a,i).plot(c(),b).width(b).dataSelector(e.dataMapper.array),b(),a}}},{}],54:[function(a,b,c){"use strict";function d(a,b){Object.keys(b).forEach(function(c){a.classed(c,b[c])})}b.exports=function(a,b,c,e,f,g,h,i){return function(){function j(b){var e=o.dataSelector(b),f=m(b.datum());g.appendPathsGroupBy(e.selection,o.accessor,"tradearrow",f),e.entry.append("path").attr("class","highlight").style("pointer-events","none"),e.selection.selectAll("path.tradearrow").on("mouseenter",function(b){var e=l(b,c(this)[0]);a(this.parentNode).select("path.highlight").datum(e.d).attr("d",r).call(d,f),p.call("mouseenter",this,e.d,e.i)}).on("mouseout",function(b){a(this.parentNode).selectAll("path.highlight").datum([]).attr("d",null).attr("class","highlight");var d=l(b,c(this)[0]);p.call("mouseout",this,d.d,d.i)}),j.refresh(b)}function k(){return r.x(function(a){return o.xScale(o.accessor.d(a))}).y(q),n=g.joinPath(function(){return r}),j}function l(a,b){return a.map(function(a,b){return{d:a,i:b,x:o.xScale(o.accessor.d(a))}}).reduce(function(a,c){return Math.abs(a.x-b)<Math.abs(c.x-b)?a:c})}function m(a){return a.map(function(a){return o.accessor.t(a)}).reduce(function(a,b){return void 0===a[b]&&(a[b]=function(a){return b===o.accessor.t(a)}),a},{})}var n,o={},p=e("mouseenter","mouseout"),q=function(a){return o.yScale(o.accessor.p(a))},r=i().orient(function(a){return"buy"===o.accessor.t(a)?"up":"down"});return j.refresh=function(a){a.selectAll("path.tradearrow").attr("d",n)},j.orient=function(a){return arguments.length?(r.orient(a),k()):r.orient()},j.y=function(a){return arguments.length?(q=b(a),k()):q},j.arrow=function(){return r},h(j,o).plot(f(),k).on(p).dataSelector(h.dataMapper.array),k(),j}}},{}],55:[function(a,b,c){"use strict";function d(a,b,c,d){a.selectAll("path.body").attr("d",e(b,c,d)),a.selectAll("circle.start").attr("cx",f(b.sd,c)).attr("cy",g(b.sv,d)),a.selectAll("circle.end").attr("cx",f(b.ed,c)).attr("cy",g(b.ev,d))}function e(a,b,c){return function(d){return"M "+b(a.sd(d))+" "+c(a.sv(d))+" L "+b(a.ed(d))+" "+c(a.ev(d))}}function f(a,b){return function(c){return b(a(c))}}function g(a,b){return function(c){return b(a(c))}}b.exports=function(a,b,c,e,f,g,h){function i(){function a(d){var e=b.dataSelector(d),f=e.entry.append("g").attr("class","trendline");f.append("path").attr("class","body"),f.append("circle").attr("class","start").attr("r",1),f.append("circle").attr("class","end").attr("r",1);var h=e.entry.append("g").attr("class","interaction").style("opacity",0).style("fill","none").call(g.interaction.mousedispatch(c));h.append("path").attr("class","body").style("stroke-width","16px"),h.append("circle").attr("class","start").attr("r",8),h.append("circle").attr("class","end").attr("r",8),a.refresh(d)}var b={},c=e("mouseenter","mouseout","mousemove","drag","dragstart","dragend");return a.refresh=function(a){d(b.dataSelector.select(a),b.accessor,b.xScale,b.yScale)},a.drag=function(a){a.selectAll(".interaction circle.start").call(j(c,b.accessor,b.accessor.sd,b.xScale,b.accessor.sv,b.yScale)),a.selectAll(".interaction circle.end").call(j(c,b.accessor,b.accessor.ed,b.xScale,b.accessor.ev,b.yScale)),a.selectAll(".interaction path.body").call(k(c,b.accessor,b.xScale,b.yScale))},h(a,b).dataSelector(h.dataMapper.unity).plot(f()).on(c),a}function j(e,f,h,i,j,k){var m=a();return m.subject(function(a){return{x:i(h(a)),y:k(j(a))}}).on("drag",function(a){l(h,i,b().x,j,k,b().y,a),d(c(this.parentNode.parentNode.parentNode),f,i,k),e.call("drag",this,a)}),g.interaction.dragStartEndDispatch(m,e)}function k(e,f,h,i){var j={},k=a();return k.subject(function(a){return j.start={date:h(f.sd(a)),value:i(f.sv(a))},j.end={date:h(f.ed(a)),value:i(f.ev(a))},{x:0,y:0}}).on("drag",function(a){l(f.sd,h,b().x+j.start.date,f.sv,i,b().y+j.start.value,a),l(f.ed,h,b().x+j.end.date,f.ev,i,b().y+j.end.value,a),d(c(this.parentNode.parentNode.parentNode),f,h,i),e.call("drag",this,a)}),g.interaction.dragStartEndDispatch(k,e)}function l(a,b,c,d,e,f,g){var h=b.invert(c);null!==h&&void 0!==h&&a(g,h),d(g,e.invert(f))}return i}},{}],56:[function(a,b,c){"use strict";b.exports=function(a,b,c){return function(){function d(a){var c=i.dataSelector(a);f()?b.appendPathsUpDownEqual(c.selection,i.accessor,"volume"):c.entry.append("path").attr("class","volume"),d.refresh(a)}function e(){h=b.joinPath(g)}function f(){return i.accessor.o&&i.accessor.c}function g(){var a=i.accessor,b=i.xScale,c=i.yScale,d=i.width(b);return function(e){var f=a.v(e);if(isNaN(f))return null;var g=c(0),h=c(f)-g,i=b(a.d(e))-d/2;return"M "+i+" "+g+" l 0 "+h+" l "+d+" 0 l 0 "+-h}}var h,i={};return d.refresh=function(a){f()?a.selectAll("path.volume").attr("d",h):i.dataSelector.select(a).select("path.volume").attr("d",h)},c(d,i).plot(a(),e).width(e).dataSelector(c.dataMapper.array),e(),d}}},{}],57:[function(a,b,c){"use strict";b.exports=function(a,b,c){return function(){function d(a){f.dataSelector(a).entry.append("path").attr("class","williams up"),d.refresh(a)}function e(){g.init(f.accessor.d,f.xScale,f.accessor.w,f.yScale)}var f={},g=b.pathLine();return d.refresh=function(a){f.dataSelector.select(a).select("path.williams.up").attr("d",g)},c(d,f).plot(a(),e).dataSelector(c.dataMapper.array),e(),d}}},{}],58:[function(a,b,c){"use strict";function d(a){return function(b){for(var c=0;c<a.length;c++)if(a[c][1](b))return a[c][0](b)}}b.exports=function(a,b,c,e,f,g){function h(b,d,n,r,s,t,u,v,w){function x(a,b){var d=C[a instanceof Date?a.getTime():+a];return b=b||0,void 0===d&&(d=r[0]>a?-1:c(r,a)),n(d+b)}function y(){return E=i(n,r,s),x}function z(){C=k(r)}function A(){return z(),n.domain([0,r.length-1]),y(),n.domain(n.range().map(f(t,E)).map(n.invert)),u.domain=n.domain(),y()}function B(a,e,f){if(1==a.length)return d;var g=a[a.length-1]-a[0],h=g/o<1,i=h?b.intraday:b.daily,k=h?q:p,l=Math.min(Math.round(j(a,e)*f),f),m=g/l,n=c(k,m);return n==i.length?i[n-1]:n?i[m/k[n-1]<k[n]/m?n-1:n]:i[n]}var C,D={tickFormat:b.daily[b.daily.length-1][2]},E=3;return n=n||a(),r=r||[new Date(0),new Date(1)],s=void 0===s?.2:s,t=void 0===t?.65:t,u=u||{domain:n.domain()},v=v||!1,w=w||g(n,y,u),x.invert=function(a){var b=r[x.invertToIndex(a)];return b?b:null},x.invertToIndex=function(a){return Math.round(n.invert(a))},x.domain=function(a){if(!arguments.length){var b=n.domain();return b[0]<0&&b[b.length-1]<0?[]:(b=[Math.max(Math.ceil(b[0]),0),Math.min(Math.floor(b[b.length-1]),r.length-1)],r.slice(b[0],b[b.length-1]+1))}return r=a,A()},x.copy=function(){return h(b,d,n.copy(),r,s,t,u,v,w)},x.band=function(){return E},x.outerPadding=function(a){return arguments.length?(t=a,A()):t},x.padding=function(a){return arguments.length?(s=a,A()):s},x.zoomable=function(){return w},x.ticks=function(a,b){var c=x.domain(),d=n.domain();if(!c.length)return[];var e=void 0===a?B(c,d,10):"number"==typeof a?B(c,d,a):null;D.tickFormat=e?e[2]:B(c,d,10)[2],e&&(a=e[0],b=e[1]);var f=a.every(b).range(c[0],+c[c.length-1]+1);return f.map(l(c,v)).reduce(m,[])},x.closestTicks=function(a){return arguments.length?(v=a,x):v},x.tickFormat=function(){return function(a){return D.tickFormat(a)}},e(x,n,y,"range"),z(),y()}function i(a,b,c){return Math.abs(a(b.length-1)-a(0))/Math.max(1,b.length-1)*(1-c)}function j(a,b){return a.length/(b[b.length-1]-b[0])}function k(a){var b={};return a.forEach(function(a,c){b[+a]=c}),b}function l(a,b){var d=k(a);return function(e){var f=d[+e];if(void 0!==f)return a[f];var g=c(a,e);return b&&g>0&&+e-+a[g-1]<+a[g]-+e&&g--,a[g]}}function m(a,b){return 0!==a.length&&a[a.length-1]===b||a.push(b),a}function n(){return h({daily:z,intraday:A},u)}var o=864e5,p=[o,6048e5,2592e6,7776e6,31536e6],q=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5],r=b.timeFormat("%b %e"),s=d([[b.timeFormat("%b %Y"),function(a){return a.getMonth()}],[b.timeFormat("%Y"),function(){return!0}]]),t=d([[b.timeFormat(":%S"),function(a){return a.getSeconds()}],[b.timeFormat("%I:%M"),function(a){return a.getMinutes()}],[b.timeFormat("%I %p"),function(){return!0}]]),u=[b.timeSecond,1,d([[b.timeFormat(":%S"),function(a){return a.getSeconds()}],[b.timeFormat("%I:%M"),function(a){return a.getMinutes()}],[b.timeFormat("%I %p"),function(a){return a.getHours()}],[b.timeFormat("%b %e"),function(){return!0}]])],v=b.utcFormat("%b %e"),w=d([[b.utcFormat("%b %Y"),function(a){return a.getUTCMonth()}],[b.utcFormat("%Y"),function(){return!0}]]),x=d([[b.utcFormat(":%S"),function(a){return a.getUTCSeconds()}],[b.utcFormat("%I:%M"),function(a){return a.getUTCMinutes()}],[b.utcFormat("%I %p"),function(){return!0}]]),y=[b.timeSecond,1,d([[b.utcFormat(":%S"),function(a){return a.getUTCSeconds()}],[b.utcFormat("%I:%M"),function(a){return a.getUTCMinutes()}],[b.utcFormat("%I %p"),function(a){return a.getUTCHours()}],[b.utcFormat("%b %e"),function(){return!0}]])],z=[[b.timeDay,1,r],[b.timeMonday,1,r],[b.timeMonth,1,s],[b.timeMonth,3,s],[b.timeYear,1,s]],A=[[b.timeSecond,1,t],[b.timeSecond,5,t],[b.timeSecond,15,t],[b.timeSecond,30,t],[b.timeMinute,1,t],[b.timeMinute,5,t],[b.timeMinute,15,t],[b.timeMinute,30,t],[b.timeHour,1,t],[b.timeHour,3,t],[b.timeHour,6,t],[b.timeHour,12,t],[b.timeDay,1,r]],B=[[b.utcDay,1,v],[b.utcMonday,1,v],[b.utcMonth,1,w],[b.utcMonth,3,w],[b.utcYear,1,w]],C=[[b.utcSecond,1,x],[b.utcSecond,5,x],[b.utcSecond,15,x],[b.utcSecond,30,x],[b.utcMinute,1,x],[b.utcMinute,5,x],[b.utcMinute,15,x],[b.utcMinute,30,x],[b.utcHour,1,x],[b.utcHour,3,x],[b.utcHour,6,x],[b.utcHour,12,x],[b.utcDay,1,v]];return n.utc=function(){return h({daily:B,intraday:C},y)},n}},{}],59:[function(a,b,c){"use strict";function d(a,b,c,d){return b.length>0?a.extent(b,c).map(f(d)):[]}function e(a,b,c,e){return a.scaleLinear().domain(d(a,b,c,e)).range([1,0])}function f(a,b){return a=a||0,function(c,d,e){if(e.length>2)throw"array.length > 2 unsupported. array.length = "+e.length;return b=b||e[e.length-1]-e[0],c+(2*d-1)*b*a}}function g(a,b){return a.map(b).reduce(function(a,b){return a.concat(b)}).filter(function(a){return null!==a})}b.exports=function(b){var c=a("./zoomable")(),d=a("../util")(),h=a("../accessor")(),i=a("./financetime")(b.scaleLinear,b,b.bisect,d.rebindCallback,f,c);return{financetime:i,analysis:{supstance:function(a,c){return b.scaleLinear()},trendline:function(a,c){return b.scaleLinear()}},plot:{time:function(a,b){return b=b||h.value(),i().domain(a.map(b.d))},atr:function(a,c){return c=c||h.value(),e(b,a,c,.04)},ichimoku:function(a,c){c=c||h.ichimoku();var d=g(a,function(b,d){var e=a[d+c.pks(b)],f=a[d-c.pks(b)];return[c.ts(b),c.ks(b),f?c.sa(f):null,f?c.sb(f):null,e?c.c(e):null]});return b.scaleLinear().domain(b.extent(d).map(f(.02))).range([1,0])},percent:function(a,b){var c=a.domain();return b=b||c[0],a.copy().domain([c[0],c[c.length-1]].map(function(a){return(a-b)/b}))},ohlc:function(a,c){return c=c||h.ohlc(),b.scaleLinear().domain([b.min(a.map(c.low())),b.max(a.map(c.high()))].map(f(.02))).range([1,0])},volume:function(a,c){return c=c||h.ohlc().v,b.scaleLinear().domain([0,1.15*b.max(a.map(c))]).range([1,0])},atrtrailingstop:function(a,c){c=c||h.atrtrailingstop();var d=g(a,function(a){return[c.up(a),c.dn(a)]});return b.scaleLinear().domain(b.extent(d).map(f(.04))).range([1,0])},rsi:function(){return b.scaleLinear().domain([0,100]).range([1,0])},momentum:function(a,c){return c=c||h.value(),e(b,a,c,.04)},moneyflow:function(a,c){return c=c||h.value(),e(b,a,c,.04)},macd:function(a,c){return c=c||h.macd(),e(b,a,c,.04)},movingaverage:function(a,c){return c=c||h.value(),e(b,a,c)},adx:function(){return b.scaleLinear().domain([0,100]).range([1,0])},aroon:function(){return b.scaleLinear().domain([-100,100]).range([1,0])},stochastic:function(){return b.scaleLinear().domain([0,100]).range([1,0])},williams:function(){return b.scaleLinear().domain([0,100]).range([1,0])},bollinger:function(a,c){return c=c||h.bollinger(),b.scaleLinear().domain([b.min(a.map(function(a){return c.lower(a)})),b.max(a.map(function(a){return c.upper(a)}))].map(f(.02))).range([1,0])}},position:{}}}},{"../accessor":8,"../util":64,"./financetime":58,"./zoomable":60}],60:[function(a,b,c){"use strict";b.exports=function(){function a(b,c,d,e){function f(a){return b.apply(b,arguments)}return e=void 0===e||e,f.invert=b.invert,f.domain=function(a){return arguments.length?(e?b.domain([Math.max(d.domain[0],a[0]),Math.min(d.domain[1],a[1])]):b.domain(a),c&&c(),f):b.domain()},f.range=function(a){if(!arguments.length)return b.range();throw"zoomable is a read only range. Use this scale for zooming only"},f.copy=function(){return a(b.copy(),c,d,e)},f.clamp=function(a){return arguments.length?(e=a,f):e},f}return a}},{}],61:[function(a,b,c){"use strict";b.exports=function(a){return function(){function b(a,b){var i,j=c(a,b),k=d(a,b),l=e(a,b),m=f(a,b),n=g(a,b),o=h(a,b),p="left"===n||"up"===n?1:-1,q=l/3,r=l/2,s=o?m/2:m;switch(i="M "+j+" "+k,n){case"up":case"down":i+=" l "+-r+" "+p*s+" l "+q+" 0",o&&(i+=" l 0 "+p*s),i+=" l "+q+" 0",o&&(i+=" l 0 "+-p*s),i+=" l "+q+" 0";break;case"left":case"right":i+=" l "+p*s+" "+-r+" l 0 "+q,o&&(i+=" l "+p*s+" 0"),i+=" l 0 "+q,o&&(i+=" l "+-p*s+" 0"),i+=" l 0 "+q;break;default:throw"Unsupported arrow.orient() = "+g}return i+" z"}var c=a(0),d=a(0),e=a(12),f=a(15),g=a("up"),h=a(!0);return b.x=function(d){return arguments.length?(c=a(d),b):c},b.y=function(c){return arguments.length?(d=a(c),b):d},b.height=function(c){return arguments.length?(f=a(c),b):f},b.width=function(c){return arguments.length?(e=a(c),b):e},b.orient=function(c){return arguments.length?(g=a(c),b):g},b.tail=function(c){return arguments.length?(h=a(c),b):h},b}}},{}],62:[function(a,b,c){"use strict";b.exports=function(b){return{arrow:a("./arrow")(a("../util")().functor)}}},{"../util":64,"./arrow":61}],63:[function(a,b,c){"use strict";var d;if("undefined"!=typeof window)d=window.d3;else{if("object"!=typeof b)throw"Unsupported runtime environment: Could not find d3. Ensure defined globally on window, or available as dependency.";d=a("d3")}b.exports=function(b){return{version:a("../build/version"),accessor:a("./accessor")(),indicator:a("./indicator")(b),plot:a("./plot")(b),scale:a("./scale")(b),svg:a("./svg")(b)}}(d)},{"../build/version":1,"./accessor":8,"./indicator":28,"./plot":44,"./scale":59,"./svg":62,d3:"d3"}],64:[function(a,b,c){"use strict";function d(a,b,c){for(var d,f=2,g=arguments.length;++f<g;)a[d=arguments[f]]=e(a,b,b[d],c);return a}function e(a,b,c,d){return function(){var e=c.apply(b,arguments);return d&&e===b&&d(),e===b?a:e}}b.exports=function(){return{rebindCallback:d,rebind:function(a,b){var c=Array.prototype.slice.call(arguments,0);return c.splice(2,0,void 0),d.apply(this,c)},functor:function(a){return"function"==typeof a?a:function(){return a}}}}},{}]},{},[63])(63)});
//# sourceMappingURL=techan.min.js.map
/*
    A simple jQuery modal (http://github.com/kylefox/jquery-modal)
    Version 0.7.0
*/
(function($) {

  var modals = [],
      getCurrent = function() {
        return modals.length ? modals[modals.length - 1] : null;
      },
      selectCurrent = function() {
        var i,
            selected = false;
        for (i=modals.length-1; i>=0; i--) {
          if (modals[i].$blocker) {
            modals[i].$blocker.toggleClass('current',!selected).toggleClass('behind',selected);
            selected = true;
          }
        }
      };

  $.modal = function(el, options) {
    var remove, target;
    this.$body = $('body');
    this.options = $.extend({}, $.modal.defaults, options);
    this.options.doFade = !isNaN(parseInt(this.options.fadeDuration, 10));
    this.$blocker = null;
    if (this.options.closeExisting)
      while ($.modal.isActive())
        $.modal.close(); // Close any open modals.
    modals.push(this);
    if (el.is('a')) {
      target = el.attr('href');
      //Select element by id from href
      if (/^#/.test(target)) {
        this.$elm = $(target);
        if (this.$elm.length !== 1) return null;
        this.$body.append(this.$elm);
        this.open();
      //AJAX
      } else {
        this.$elm = $('<div>');
        this.$body.append(this.$elm);
        remove = function(event, modal) { modal.elm.remove(); };
        this.showSpinner();
        el.trigger($.modal.AJAX_SEND);
        $.get(target).done(function(html) {
          if (!$.modal.isActive()) return;
          el.trigger($.modal.AJAX_SUCCESS);
          var current = getCurrent();
          current.$elm.empty().append(html).on($.modal.CLOSE, remove);
          current.hideSpinner();
          current.open();
          el.trigger($.modal.AJAX_COMPLETE);
        }).fail(function() {
          el.trigger($.modal.AJAX_FAIL);
          var current = getCurrent();
          current.hideSpinner();
          modals.pop(); // remove expected modal from the list
          el.trigger($.modal.AJAX_COMPLETE);
        });
      }
    } else {
      this.$elm = el;
      this.$body.append(this.$elm);
      this.open();
    }
  };

  $.modal.prototype = {
    constructor: $.modal,

    open: function() {
      var m = this;
      this.block();
      if(this.options.doFade) {
        setTimeout(function() {
          if ($.modal.isActive()) {
            m.show();
          };
        }, this.options.fadeDuration * this.options.fadeDelay);
      } else {
        this.show();
      }
      $(document).off('keydown.modal').on('keydown.modal', function(event) {
        var current = getCurrent();
        if (event.which == 27 && current.options.escapeClose) current.close();
      });
      if (this.options.clickClose)
        this.$blocker.click(function(e) {
          if (e.target==this)
            $.modal.close();
        });
    },

    close: function() {
      modals.pop();
      this.unblock();
      this.hide();
      if (!$.modal.isActive())
        $(document).off('keydown.modal');
    },

    block: function() {
      this.$elm.trigger($.modal.BEFORE_BLOCK, [this._ctx()]);
      this.$body.css('overflow','hidden');
      this.$blocker = $('<div class="jquery-modal blocker current"></div>').appendTo(this.$body);
      selectCurrent();
      if(this.options.doFade) {
        this.$blocker.css('opacity',0).animate({opacity: 1}, this.options.fadeDuration);
      }
      this.$elm.trigger($.modal.BLOCK, [this._ctx()]);
    },

    unblock: function(now) {
      if (!now && this.options.doFade)
        this.$blocker.fadeOut(this.options.fadeDuration, this.unblock.bind(this,true));
      else {
        this.$blocker.children().appendTo(this.$body);
        this.$blocker.remove();
        this.$blocker = null;
        selectCurrent();
        if (!$.modal.isActive())
          this.$body.css('overflow','');
      }
    },

    show: function() {
      this.$elm.trigger($.modal.BEFORE_OPEN, [this._ctx()]);
      if (this.options.showClose) {
        this.closeButton = $('<a href="#close-modal" rel="modal:close" class="close-modal ' + this.options.closeClass + '">' + this.options.closeText + '</a>');
        this.$elm.append(this.closeButton);
      }
      this.$elm.addClass(this.options.modalClass).appendTo(this.$blocker);
      if(this.options.doFade) {
        this.$elm.css('opacity',0).show().animate({opacity: 1}, this.options.fadeDuration);
      } else {
        this.$elm.show();
      }
      this.$elm.trigger($.modal.OPEN, [this._ctx()]);
    },

    hide: function() {
      this.$elm.trigger($.modal.BEFORE_CLOSE, [this._ctx()]);
      if (this.closeButton) this.closeButton.remove();
      var _this = this;
      if(this.options.doFade) {
        this.$elm.fadeOut(this.options.fadeDuration, function () {
          _this.$elm.trigger($.modal.AFTER_CLOSE, [_this._ctx()]);
        });
      } else {
        this.$elm.hide(0, function () {
          _this.$elm.trigger($.modal.AFTER_CLOSE, [_this._ctx()]);
        });
      }
      this.$elm.trigger($.modal.CLOSE, [this._ctx()]);
    },

    showSpinner: function() {
      if (!this.options.showSpinner) return;
      this.spinner = this.spinner || $('<div class="' + this.options.modalClass + '-spinner"></div>')
        .append(this.options.spinnerHtml);
      this.$body.append(this.spinner);
      this.spinner.show();
    },

    hideSpinner: function() {
      if (this.spinner) this.spinner.remove();
    },

    //Return context for custom events
    _ctx: function() {
      return { elm: this.$elm, $blocker: this.$blocker, options: this.options };
    }
  };

  $.modal.close = function(event) {
    if (!$.modal.isActive()) return;
    if (event) event.preventDefault();
    var current = getCurrent();
    current.close();
    return current.$elm;
  };

  // Returns if there currently is an active modal
  $.modal.isActive = function () {
    return modals.length > 0;
  }

  $.modal.defaults = {
    closeExisting: true,
    escapeClose: true,
    clickClose: true,
    closeText: 'Close',
    closeClass: '',
    modalClass: "modal",
    spinnerHtml: null,
    showSpinner: true,
    showClose: true,
    fadeDuration: 200,   // Number of milliseconds the fade animation takes.
    fadeDelay: 1.0        // Point during the overlay's fade-in that the modal begins to fade in (.5 = 50%, 1.5 = 150%, etc.)
  };

  // Event constants
  $.modal.BEFORE_BLOCK = 'modal:before-block';
  $.modal.BLOCK = 'modal:block';
  $.modal.BEFORE_OPEN = 'modal:before-open';
  $.modal.OPEN = 'modal:open';
  $.modal.BEFORE_CLOSE = 'modal:before-close';
  $.modal.CLOSE = 'modal:close';
  $.modal.AFTER_CLOSE = 'modal:after-close';
  $.modal.AJAX_SEND = 'modal:ajax:send';
  $.modal.AJAX_SUCCESS = 'modal:ajax:success';
  $.modal.AJAX_FAIL = 'modal:ajax:fail';
  $.modal.AJAX_COMPLETE = 'modal:ajax:complete';

  $.fn.modal = function(options){
    if (this.length === 1) {
      new $.modal(this, options);
    }
    return this;
  };

  // Automatically bind links with rel="modal:close" to, well, close the modal.
  $(document).on('click.modal', 'a[rel="modal:close"]', $.modal.close);
  $(document).on('click.modal', 'a[rel="modal:open"]', function(event) {
    event.preventDefault();
    $(this).modal();
  });
})(jQuery);

// Blake2B in pure Javascript
// Adapted from the reference implementation in RFC7693
// Ported to Javascript by DC - https://github.com/dcposch

/* util */
var ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'

// For convenience, let people hash a string, not just a Uint8Array
function normalizeInput (input) {
    var ret
    if (input instanceof Uint8Array) {
        ret = input
    } else if (input instanceof Buffer) {
        ret = new Uint8Array(input)
    } else if (typeof (input) === 'string') {
        ret = new Uint8Array(new Buffer(input, 'utf8'))
    } else {
        throw new Error(ERROR_MSG_INPUT)
    }
    return ret
}

// Converts a Uint8Array to a hexadecimal string
// For example, toHex([255, 0, 255]) returns "ff00ff"
function toHex (bytes) {
    return Array.prototype.map.call(bytes, function (n) {
        return (n < 16 ? '0' : '') + n.toString(16)
    }).join('')
}

// Converts any value in [0...2^32-1] to an 8-character hex string
function uint32ToHex (val) {
    return (0x100000000 + val).toString(16).substring(1)
}

// For debugging: prints out hash state in the same format as the RFC
// sample computation exactly, so that you can diff
function debugPrint (label, arr, size) {
    var msg = '\n' + label + ' = '
    for (var i = 0; i < arr.length; i += 2) {
        if (size === 32) {
            msg += uint32ToHex(arr[i]).toUpperCase()
            msg += ' '
            msg += uint32ToHex(arr[i + 1]).toUpperCase()
        } else if (size === 64) {
            msg += uint32ToHex(arr[i + 1]).toUpperCase()
            msg += uint32ToHex(arr[i]).toUpperCase()
        } else throw new Error('Invalid size ' + size)
        if (i % 6 === 4) {
            msg += '\n' + new Array(label.length + 4).join(' ')
        } else if (i < arr.length - 2) {
            msg += ' '
        }
    }
    console.log(msg)
}

// For performance testing: generates N bytes of input, hashes M times
// Measures and prints MB/second hash performance each time
function testSpeed (hashFn, N, M) {
    var startMs = new Date().getTime()

    var input = new Uint8Array(N)
    for (var i = 0; i < N; i++) {
        input[i] = i % 256
    }
    var genMs = new Date().getTime()
    console.log('Generated random input in ' + (genMs - startMs) + 'ms')
    startMs = genMs

    for (i = 0; i < M; i++) {
        var hashHex = hashFn(input)
        var hashMs = new Date().getTime()
        var ms = hashMs - startMs
        startMs = hashMs
        console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')
        console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')
    }
}


/********/

// 64-bit unsigned addition
// Sets v[a,a+1] += v[b,b+1]
// v should be a Uint32Array
function ADD64AA (v, a, b) {
    var o0 = v[a] + v[b]
    var o1 = v[a + 1] + v[b + 1]
    if (o0 >= 0x100000000) {
        o1++
    }
    v[a] = o0
    v[a + 1] = o1
}

// 64-bit unsigned addition
// Sets v[a,a+1] += b
// b0 is the low 32 bits of b, b1 represents the high 32 bits
function ADD64AC (v, a, b0, b1) {
    var o0 = v[a] + b0
    if (b0 < 0) {
        o0 += 0x100000000
    }
    var o1 = v[a + 1] + b1
    if (o0 >= 0x100000000) {
        o1++
    }
    v[a] = o0
    v[a + 1] = o1
}

// Little-endian byte access
function B2B_GET32 (arr, i) {
    return (arr[i] ^
    (arr[i + 1] << 8) ^
    (arr[i + 2] << 16) ^
    (arr[i + 3] << 24))
}

// G Mixing function
// The ROTRs are inlined for speed
function B2B_G (a, b, c, d, ix, iy) {
    var x0 = m[ix]
    var x1 = m[ix + 1]
    var y0 = m[iy]
    var y1 = m[iy + 1]

    ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s
    ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits

    // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits
    var xor0 = v[d] ^ v[a]
    var xor1 = v[d + 1] ^ v[a + 1]
    v[d] = xor1
    v[d + 1] = xor0

    ADD64AA(v, c, d)

    // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits
    xor0 = v[b] ^ v[c]
    xor1 = v[b + 1] ^ v[c + 1]
    v[b] = (xor0 >>> 24) ^ (xor1 << 8)
    v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)

    ADD64AA(v, a, b)
    ADD64AC(v, a, y0, y1)

    // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits
    xor0 = v[d] ^ v[a]
    xor1 = v[d + 1] ^ v[a + 1]
    v[d] = (xor0 >>> 16) ^ (xor1 << 16)
    v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)

    ADD64AA(v, c, d)

    // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits
    xor0 = v[b] ^ v[c]
    xor1 = v[b + 1] ^ v[c + 1]
    v[b] = (xor1 >>> 31) ^ (xor0 << 1)
    v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)
}

// Initialization Vector
var BLAKE2B_IV32 = new Uint32Array([
    0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,
    0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,
    0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,
    0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19
])

var SIGMA8 = [
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,
    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,
    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,
    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,
    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,
    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,
    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,
    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,
    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,
    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3
]

// These are offsets into a uint64 buffer.
// Multiply them all by 2 to make them offsets into a uint32 buffer,
// because this is Javascript and we don't have uint64s
var SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))

// Compression function. 'last' flag indicates last block.
// Note we're representing 16 uint64s as 32 uint32s
var v = new Uint32Array(32)
var m = new Uint32Array(32)
function blake2b_compress (ctx, last) {
    var i = 0

    // init work variables
    for (i = 0; i < 16; i++) {
        v[i] = ctx.h[i]
        v[i + 16] = BLAKE2B_IV32[i]
    }

    // low 64 bits of offset
    v[24] = v[24] ^ ctx.t
    v[25] = v[25] ^ (ctx.t / 0x100000000)
    // high 64 bits not supported, offset may not be higher than 2**53-1

    // last block flag set ?
    if (last) {
        v[28] = ~v[28]
        v[29] = ~v[29]
    }

    // get little-endian words
    for (i = 0; i < 32; i++) {
        m[i] = B2B_GET32(ctx.b, 4 * i)
    }

    // twelve rounds of mixing
    // uncomment the DebugPrint calls to log the computation
    // and match the RFC sample documentation
    // util.debugPrint('          m[16]', m, 64)
    for (i = 0; i < 12; i++) {
        // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)
        B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])
        B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])
        B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])
        B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])
        B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])
        B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])
        B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])
        B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])
    }
    // util.debugPrint('   (i=12) v[16]', v, 64)

    for (i = 0; i < 16; i++) {
        ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]
    }
    // util.debugPrint('h[8]', ctx.h, 64)
}

// Creates a BLAKE2b hashing context
// Requires an output length between 1 and 64 bytes
// Takes an optional Uint8Array key
function blake2b_init (outlen, key) {
    if (outlen === 0 || outlen > 64) {
        throw new Error('Illegal output length, expected 0 < length <= 64')
    }
    if (key && key.length > 64) {
        throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')
    }

    // state, 'param block'
    var ctx = {
        b: new Uint8Array(128),
        h: new Uint32Array(16),
        t: 0, // input count
        c: 0, // pointer within buffer
        outlen: outlen // output length in bytes
    }

    // initialize hash state
    for (var i = 0; i < 16; i++) {
        ctx.h[i] = BLAKE2B_IV32[i]
    }
    var keylen = key ? key.length : 0
    ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen

    // key the hash, if applicable
    if (key) {
        blake2b_update(ctx, key)
        // at the end
        ctx.c = 128
    }

    return ctx
}

// Updates a BLAKE2b streaming hash
// Requires hash context and Uint8Array (byte array)
function blake2b_update (ctx, input) {
    for (var i = 0; i < input.length; i++) {
        if (ctx.c === 128) { // buffer full ?
            ctx.t += ctx.c // add counters
            blake2b_compress(ctx, false) // compress (not last)
            ctx.c = 0 // counter to zero
        }
        ctx.b[ctx.c++] = input[i]
    }
}

// Completes a BLAKE2b streaming hash
// Returns a Uint8Array containing the message digest
function blake2b_final (ctx) {
    ctx.t += ctx.c // mark last block offset

    while (ctx.c < 128) { // fill up with zeros
        ctx.b[ctx.c++] = 0
    }
    blake2b_compress(ctx, true) // final block flag = 1

    // little endian convert and store
    var out = new Uint8Array(ctx.outlen)
    for (var i = 0; i < ctx.outlen; i++) {
        out[i] = ctx.h[i >> 2] >> (8 * (i & 3))
    }
    return out
}

// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array
//
// Returns a n-byte Uint8Array
//
// Parameters:
// - input - the input bytes, as a string, Buffer or Uint8Array
// - key - optional key Uint8Array, up to 64 bytes
// - outlen - optional output length in bytes, default 64
function blake2b (input, key, outlen) {
    // preprocess inputs
    outlen = outlen || 64
    input = normalizeInput(input)

    // do the math
    var ctx = blake2b_init(outlen, key)
    blake2b_update(ctx, input)
    return blake2b_final(ctx)
}

// Computes the BLAKE2B hash of a string or byte array
//
// Returns an n-byte hash in hex, all lowercase
//
// Parameters:
// - input - the input bytes, as a string, Buffer, or Uint8Array
// - key - optional key Uint8Array, up to 64 bytes
// - outlen - optional output length in bytes, default 64
function blake2bHex (input, key, outlen) {
    var output = blake2b(input, key, outlen)
    return toHex(output)
}



/******************************************************************************
 * Copyright Â© 2013-2016 The Nxt Core Developers.                             *
 *                                                                            *
 * See the AUTHORS.txt, DEVELOPER-AGREEMENT.txt and LICENSE.txt files at      *
 * the top-level directory of this distribution for the individual copyright  *
 * holder information and the developer policies on copyright and licensing.  *
 *                                                                            *
 * Unless otherwise agreed in a custom licensing agreement, no part of the    *
 * Nxt software, including this file, may be copied, modified, propagated,    *
 * or distributed except according to the terms contained in the LICENSE.txt  *
 * file.                                                                      *
 *                                                                            *
 * Removal or modification of this copyright notice is prohibited.            *
 *                                                                            *
 ******************************************************************************/

var converters = function() {
	var charToNibble = {};
	var nibbleToChar = [];
	var i;
	for (i = 0; i <= 9; ++i) {
		var character = i.toString();
		charToNibble[character] = i;
		nibbleToChar.push(character);
	}

	for (i = 10; i <= 15; ++i) {
		var lowerChar = String.fromCharCode('a'.charCodeAt(0) + i - 10);
		var upperChar = String.fromCharCode('A'.charCodeAt(0) + i - 10);

		charToNibble[lowerChar] = i;
		charToNibble[upperChar] = i;
		nibbleToChar.push(lowerChar);
	}

	return {
		byteArrayToHexString: function(bytes) {
			var str = '';
			for (var i = 0; i < bytes.length; ++i) {
				if (bytes[i] < 0) {
					bytes[i] += 256;
				}
				str += nibbleToChar[bytes[i] >> 4] + nibbleToChar[bytes[i] & 0x0F];
			}

			return str;
		},
		stringToByteArray: function(str) {
			str = unescape(encodeURIComponent(str));

			var bytes = new Array(str.length);
			for (var i = 0; i < str.length; ++i)
				bytes[i] = str.charCodeAt(i);

			return bytes;
		},
		hexStringToByteArray: function(str) {
			var bytes = [];
			var i = 0;
			if (0 !== str.length % 2) {
				bytes.push(charToNibble[str.charAt(0)]);
				++i;
			}

			for (; i < str.length - 1; i += 2)
				bytes.push((charToNibble[str.charAt(i)] << 4) + charToNibble[str.charAt(i + 1)]);

			return bytes;
		},
		stringToHexString: function(str) {
			return this.byteArrayToHexString(this.stringToByteArray(str));
		},
		hexStringToString: function(hex) {
			return this.byteArrayToString(this.hexStringToByteArray(hex));
		},
		checkBytesToIntInput: function(bytes, numBytes, opt_startIndex) {
			var startIndex = opt_startIndex || 0;
			if (startIndex < 0) {
				throw new Error('Start index should not be negative');
			}

			if (bytes.length < startIndex + numBytes) {
				throw new Error('Need at least ' + (numBytes) + ' bytes to convert to an integer');
			}
			return startIndex;
		},
		byteArrayToSignedShort: function(bytes, opt_startIndex) {
			var index = this.checkBytesToIntInput(bytes, 2, opt_startIndex);
			var value = bytes[index];
			value += bytes[index + 1] << 8;
			return value;
		},
		byteArrayToSignedInt32: function(bytes, opt_startIndex) {
			var index = this.checkBytesToIntInput(bytes, 4, opt_startIndex);
			value = bytes[index];
			value += bytes[index + 1] << 8;
			value += bytes[index + 2] << 16;
			value += bytes[index + 3] << 24;
			return value;
		},
		byteArrayToBigInteger: function(bytes, opt_startIndex) {
			var index = this.checkBytesToIntInput(bytes, 8, opt_startIndex);

			var value = new BigInteger("0", 10);

			var temp1, temp2;

			for (var i = 7; i >= 0; i--) {
				temp1 = value.multiply(new BigInteger("256", 10));
				temp2 = temp1.add(new BigInteger(bytes[opt_startIndex + i].toString(10), 10));
				value = temp2;
			}

			return value;
		},
		// create a wordArray that is Big-Endian
		byteArrayToWordArray: function(byteArray) {
			var i = 0,
				offset = 0,
				word = 0,
				len = byteArray.length;
			var words = new Uint32Array(((len / 4) | 0) + (len % 4 == 0 ? 0 : 1));

			while (i < (len - (len % 4))) {
				words[offset++] = (byteArray[i++] << 24) | (byteArray[i++] << 16) | (byteArray[i++] << 8) | (byteArray[i++]);
			}
			if (len % 4 != 0) {
				word = byteArray[i++] << 24;
				if (len % 4 > 1) {
					word = word | byteArray[i++] << 16;
				}
				if (len % 4 > 2) {
					word = word | byteArray[i++] << 8;
				}
				words[offset] = word;
			}
			var wordArray = new Object();
			wordArray.sigBytes = len;
			wordArray.words = words;

			return wordArray;
		},
		// assumes wordArray is Big-Endian
		wordArrayToByteArray: function(wordArray) {
			return converters.wordArrayToByteArrayImpl(wordArray, true);
		},
		wordArrayToByteArrayImpl: function(wordArray, isFirstByteHasSign) {
			var len = wordArray.words.length;
			if (len == 0) {
				return new Array(0);
			}
			var byteArray = new Array(wordArray.sigBytes);
			var offset = 0,
				word, i;
			for (i = 0; i < len - 1; i++) {
				word = wordArray.words[i];
				byteArray[offset++] = isFirstByteHasSign ? word >> 24 : (word >> 24) & 0xff;
				byteArray[offset++] = (word >> 16) & 0xff;
				byteArray[offset++] = (word >> 8) & 0xff;
				byteArray[offset++] = word & 0xff;
			}
			word = wordArray.words[len - 1];
			byteArray[offset++] = isFirstByteHasSign ? word >> 24 : (word >> 24) & 0xff;
			if (wordArray.sigBytes % 4 == 0) {
				byteArray[offset++] = (word >> 16) & 0xff;
				byteArray[offset++] = (word >> 8) & 0xff;
				byteArray[offset++] = word & 0xff;
			}
			if (wordArray.sigBytes % 4 > 1) {
				byteArray[offset++] = (word >> 16) & 0xff;
			}
			if (wordArray.sigBytes % 4 > 2) {
				byteArray[offset++] = (word >> 8) & 0xff;
			}
			return byteArray;
		},
		byteArrayToString: function(bytes, opt_startIndex, length) {
			if (length == 0) {
				return "";
			}

			if (opt_startIndex && length) {
				var index = this.checkBytesToIntInput(bytes, parseInt(length, 10), parseInt(opt_startIndex, 10));

				bytes = bytes.slice(opt_startIndex, opt_startIndex + length);
			}

			return decodeURIComponent(escape(String.fromCharCode.apply(null, bytes)));
		},
		byteArrayToShortArray: function(byteArray) {
			var shortArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
			var i;
			for (i = 0; i < 16; i++) {
				shortArray[i] = byteArray[i * 2] | byteArray[i * 2 + 1] << 8;
			}
			return shortArray;
		},
		shortArrayToByteArray: function(shortArray) {
			var byteArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
			var i;
			for (i = 0; i < 16; i++) {
				byteArray[2 * i] = shortArray[i] & 0xff;
				byteArray[2 * i + 1] = shortArray[i] >> 8;
			}

			return byteArray;
		},
		shortArrayToHexString: function(ary) {
			var res = "";
			for (var i = 0; i < ary.length; i++) {
				res += nibbleToChar[(ary[i] >> 4) & 0x0f] + nibbleToChar[ary[i] & 0x0f] + nibbleToChar[(ary[i] >> 12) & 0x0f] + nibbleToChar[(ary[i] >> 8) & 0x0f];
			}
			return res;
		},
		/**
		 * Produces an array of the specified number of bytes to represent the integer
		 * value. Default output encodes ints in little endian format. Handles signed
		 * as well as unsigned integers. Due to limitations in JavaScript's number
		 * format, x cannot be a true 64 bit integer (8 bytes).
		 */
		intToBytes_: function(x, numBytes, unsignedMax, opt_bigEndian) {
			var signedMax = Math.floor(unsignedMax / 2);
			var negativeMax = (signedMax + 1) * -1;
			if (x != Math.floor(x) || x < negativeMax || x > unsignedMax) {
				throw new Error(
					x + ' is not a ' + (numBytes * 8) + ' bit integer');
			}
			var bytes = [];
			var current;
			// Number type 0 is in the positive int range, 1 is larger than signed int,
			// and 2 is negative int.
			var numberType = x >= 0 && x <= signedMax ? 0 :
				x > signedMax && x <= unsignedMax ? 1 : 2;
			if (numberType == 2) {
				x = (x * -1) - 1;
			}
			for (var i = 0; i < numBytes; i++) {
				if (numberType == 2) {
					current = 255 - (x % 256);
				} else {
					current = x % 256;
				}

				if (opt_bigEndian) {
					bytes.unshift(current);
				} else {
					bytes.push(current);
				}

				if (numberType == 1) {
					x = Math.floor(x / 256);
				} else {
					x = x >> 8;
				}
			}
			return bytes;

		},
		int32ToBytes: function(x, opt_bigEndian) {
			return converters.intToBytes_(x, 4, 4294967295, opt_bigEndian);
		},
		int16ToBytes: function(x, opt_bigEndian) {
			return converters.intToBytes_(x, 2, 65535, opt_bigEndian);
		},
		/**
         * Based on https://groups.google.com/d/msg/crypto-js/TOb92tcJlU0/Eq7VZ5tpi-QJ
         * Converts a word array to a Uint8Array.
         * @param {WordArray} wordArray The word array.
         * @return {Uint8Array} The Uint8Array.
         */
        wordArrayToByteArrayEx: function (wordArray) {
            // Shortcuts
            var words = wordArray.words;
            var sigBytes = wordArray.sigBytes;

            // Convert
            var u8 = new Uint8Array(sigBytes);
            for (var i = 0; i < sigBytes; i++) {
                var byte = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
                u8[i]=byte;
            }

            return u8;
        },
        /**
         * Converts a Uint8Array to a word array.
         * @param {string} u8Str The Uint8Array.
         * @return {WordArray} The word array.
         */
        byteArrayToWordArrayEx: function (u8arr) {
            // Shortcut
            var len = u8arr.length;

            // Convert
            var words = [];
            for (var i = 0; i < len; i++) {
                words[i >>> 2] |= (u8arr[i] & 0xff) << (24 - (i % 4) * 8);
            }

            return CryptoJS.lib.WordArray.create(words, len);
        }
	}
}();
/******************************************************************************
 * Copyright Â© 2016 The Waves Developers.                                *
 *                                                                            *
 * See the LICENSE files at                                                   *
 * the top-level directory of this distribution for the individual copyright  *
 * holder information and the developer policies on copyright and licensing.  *
 *                                                                            *
 * Unless otherwise agreed in a custom licensing agreement, no part of the    *
 * Waves software, including this file, may be copied, modified, propagated,  *
 * or distributed except according to the terms contained in the LICENSE      *
 * file.                                                                      *
 *                                                                            *
 * Removal or modification of this copyright notice is prohibited.            *
 *                                                                            *
 ******************************************************************************/

/**
 * @requires {decimal.js}
 */

var Currency = (function () {
    var currencyCache = {};

    function Currency(data) {
        data = data || {};

        this.id = data.id; // base58 encoded asset id of the currency
        this.displayName = data.displayName;
        this.shortName = data.shortName || data.displayName;
        this.precision = data.precision; // number of decimal places after a decimal point
        this.verified = data.verified || false;

        if (data.roundingMode !== undefined) {
            this.roundingMode = data.roundingMode;
        } else {
            this.roundingMode = Decimal.ROUND_HALF_UP;
        }

        return this;
    }

    Currency.prototype.toString = function () {
        if (this.shortName)
            return this.shortName;

        return this.displayName;
    };

    var WAVES = new Currency({
        id: '',
        displayName: 'Waves',
        shortName: 'WAVES',
        precision: 8,
        verified: true
    });

    var BTC = new Currency({
        id: '8LQW8f7P5d5PZM7GtZEBgaqRPGSzS3DfPuiXrURJ4AJS',
        displayName: 'Bitcoin',
        shortName: 'BTC',
        precision: 8,
        verified: true
    });

    var BCH = new Currency({
        id: 'zMFqXuoyrn5w17PFurTqxB7GsS71fp9dfk6XFwxbPCy',
        displayName: 'Bitcoin Cash',
        shortName: 'BCH',
        precision: 8,
        verified: true
    });

    var ETH = new Currency({
        id: '474jTeYx2r2Va35794tCScAXWJG9hU2HcgxzMowaZUnu',
        displayName: 'Ethereum',
        shortName: 'ETH',
        precision: 8,
        verified: true
    });

    var LTC = new Currency({
        id: 'HZk1mbfuJpmxU1Fs4AX5MWLVYtctsNcg6e2C6VKqK8zk',
        displayName: 'Litecoin',
        shortName: 'LTC',
        precision: 8,
        verified: true
    });

    var ZEC = new Currency({
        id: 'BrjUWjndUanm5VsJkbUip8VRYy6LWJePtxya3FNv4TQa',
        displayName: 'ZCash',
        shortName: 'ZEC',
        precision: 8,
        verified: true
    });

    var USD = new Currency({
        id: 'Ft8X1v1LTa1ABafufpaCWyVj8KkaxUWE6xBhW6sNFJck',
        displayName: 'US Dollar',
        shortName: 'USD',
        precision: 2,
        verified: true
    });

    var EUR = new Currency({
        id: 'Gtb1WRznfchDnTh37ezoDTJ4wcoKaRsKqKjJjy7nm2zU',
        displayName: 'Euro',
        shortName: 'EUR',
        precision: 2,
        verified: true
    });

    var CNY = new Currency({
        id: 'DEJbZipbKQjwEiRjx2AqQFucrj5CZ3rAc4ZvFM8nAsoA',
        displayName: 'Chinese Yuan',
        shortName: 'CNY',
        precision: 2,
        verified: true
    });

    var WCT = new Currency({
        id: 'DHgwrRvVyqJsepd32YbBqUeDH4GJ1N984X8QoekjgH8J',
        displayName: 'Waves Community',
        shortName: 'WCT',
        precision: 2,
        verified: true
    });

    var MRT = new Currency({
        id: '4uK8i4ThRGbehENwa6MxyLtxAjAo1Rj9fduborGExarC',
        displayName: 'Miner Reward',
        shortName: 'MRT',
        precision: 2,
        verified: true
    });

    var WGO = new Currency({
        id: '4eT6R8R2XuTcBuTHiXVQsh2dN2mg3c2Qnp95EWBNHygg',
        displayName: 'WavesGo',
        shortName: 'WGO',
        precision: 8,
        verified: true
    });

    var INCNT = new Currency({
        id: 'FLbGXzrpqkvucZqsHDcNxePTkh2ChmEi4GdBfDRRJVof',
        displayName: 'Incent',
        shortName: 'INCNT',
        precision: 8,
        verified: true
    });

    var RBX = new Currency({
        id: 'AnERqFRffNVrCbviXbDEdzrU6ipXCP5Y1PKpFdRnyQAy',
        displayName: 'Ripto Bux',
        shortName: 'RBX',
        precision: 8,
        verified: true
    });

    var MER = new Currency({
        id: 'HzfaJp8YQWLvQG4FkUxq2Q7iYWMYQ2k8UF89vVJAjWPj',
        displayName: 'Mercury',
        shortName: 'MER',
        precision: 8,
        verified: true
    });

    var BAt = new Currency({
        id: 'APz41KyoKuBBh8t3oZjqvhbbsg6f63tpZM5Ck5LYx6h',
        displayName: 'B@nkcoin',
        shortName: 'B@',
        precision: 8,
        verified: true
    });

    var UPC = new Currency({
        id: '4764Pr9DpKQAHAjAVA2uqnrYidLMnM7vpDDLCDWujFTt',
        displayName: 'Upcoin',
        shortName: 'UPC',
        precision: 2,
        verified: true
    });

    var MIR = new Currency({
        id: 'HdPJha3Ekn1RUR2K9RrY7SG9xK1b21AHPwkL8pcwTmSZ',
        displayName: 'МИР',
        shortName: 'MIR',
        precision: 8,
        verified: true
    });

		var YL = new Currency({
        id: '8LnR5BZBQeZwcxmBTcsASX7vfcvx3eCLgPPZsVaBEAT5',
        displayName: 'Ярослав Логинов',
        shortName: 'Yaroslav Loginov',
        precision: 0,
        verified: true
    });

		var MP = new Currency({
        id: 'HZjK697zLbTE3SPJEypRqZDDJD4zkP6HTxW4wBVbKU1Q',
        displayName: 'Мария Парамонова',
        shortName: 'Marusya Paramon',
        precision: 0,
        verified: true
    });

		var RI = new Currency({
        id: '96Ayvy9nYg8kRAPHE4fjPhnewmMLxRc7YiZD3bAnwZzj',
        displayName: 'Роман Иноземцев',
        shortName: 'Roman Inozemtsev',
        precision: 0,
        verified: true
    });

		var GS = new Currency({
        id: 'H2Q2sTDaMGfYrVY5x8R3f1NUC13BgtWLTeykzfTrEgLq',
        displayName: 'Григорий Слынько',
        shortName: 'Grigory Slynko',
        precision: 0,
        verified: true
    });

		var BA = new Currency({
        id: 'B3XuGipDviHtp2xnjyEC4zLsHqRknGVJuRBfnHyxcPEe',
        displayName: 'Борис Акимов',
        shortName: 'Boris Akimov',
        precision: 6,
        verified: true
    });

    var TKS = new Currency({
        id: 'BDMRyZsmDZpgKhdM7fUTknKcUbVVkDpMcqEj31PUzjMy',
        displayName: 'Tokes',
        shortName: 'TKS',
        precision: 8,
        verified: true
    });

    var WPN = new Currency({
        id: 'BkFyeRdrLquxds5FenxyonyfTwMVJJ6o6L7VTaPr5fs3',
        displayName: 'WavesPool.NET',
        shortName: 'WPN',
        precision: 8,
        verified: true
    });

    var EFYT = new Currency({
        id: '725Yv9oceWsB4GsYwyy4A52kEwyVrL5avubkeChSnL46',
        displayName: 'Ergo First Year Token',
        shortName: 'EFYT',
        precision: 8,
        verified: true
    });

    var MGO = new Currency({
        id: '2Y8eFFXDTkxgCvXbMT5K4J38cpDYYbQdciJEZb48vTDj',
        displayName: 'Mobile Go Token',
        shortName: 'MGO',
        precision: 8,
        verified: true
    });

    var ETT = new Currency({
        id: '8ofu3VpEaVCFjRqLLqzTMNs5URKUUQMrPp3k6oFmiCc6',
        displayName: 'EncryptoTel',
        shortName: 'ETT',
        precision: 8,
        verified: true
    });

    var ZRC = new Currency({
        id: '5ZPuAVxAwYvptbCgSVKdTzeud9dhbZ7vvxHVnZUoxf4h',
        displayName: 'ZrCoin',
        shortName: 'ZRC',
        precision: 8,
        verified: true
    });

    var PBKX = new Currency({
        id: '39wcSXj4MdRNRJXA88rVxF7EXWjYixaA3J3EteoN6DMM',
        displayName: 'privateBANKX',
        shortName: 'PBKX',
        precision: 0,
        verified: true
    });

    var PING = new Currency({
        id: 'Bi4w2UuGRt2jAJFfRb8b3SwDUV5x8krCzX2zZHcRfPNc',
        displayName: 'CryptoPing',
        shortName: 'PING',
        precision: 8,
        verified: true
    });

    var STAR = new Currency({
        id: 'BTfuGGoeA934Ta1fgcehQ5UhbHuWKj4don64ZNBuMT38',
        displayName: 'Starrie',
        shortName: 'STAR',
        precision: 8,
        verified: true
    });

    var BEAR = new Currency({
        id: '9gnc5UCY6RxtSi9FEJkcD57r5NBgdr45DVYtunyDLrgC',
        displayName: 'BearWaves',
        shortName: 'BEAR',
        precision: 2,
        verified: true
    });

    var DAR = new Currency({
        id: 'K5JcgN8UdwNdh5sbdAuPMm5XEd5aFvoXaC3iHsHVz1d',
        displayName: 'Darcrus',
        shortName: 'DAR',
        precision: 6,
        verified: true
    });

    var GLIPP = new Currency({
        id: '9g5JiYThxFTxknSMA3TT5xoXG7GYjRrTJxxLeeoQ36kJ',
        displayName: 'GLIPP',
        shortName: 'GLIPP',
        precision: 8,
        verified: true
    });

    var mTNT = new Currency({
        id: '8HYDtqEuHj3RDcwR8yxEvPq1qQSB9FazC8wMHtRb2TFe',
        displayName: 'MyTrackNet',
        shortName: 'mTNT',
        precision: 6,
        verified: true
    });

    var BKT = new Currency({
        id: '9c7U7bXdP23oHpmGKwGfSsjFrpxdRcp3tp28qbfhEc3d',
        displayName: '$bkt',
        shortName: 'BKT',
        precision: 0,
        verified: true
    });

    var WGR = new Currency({
        id: '8t8DMJFQu5GEhvAetiA8aHa3yPjxLj54sBnZsjnJ5dsw',
        displayName: 'Wagerr',
        shortName: 'WGR',
        precision: 8,
        verified: true
    });

    var PBT = new Currency({
        id: 'EdDvbhk4wJ1kL6pMCq1V36GbQE2nGE7Metb87zbaY2JL',
        displayName: 'Primalbase Token',
        shortName: 'PBT',
        precision: 4,
        verified: true
    });

    var PPIO = new Currency({
        id: '8UHSg6jCDTUvKT3LmeDjoaPxKmnJhdLEgBHU3vUrojSm',
        displayName: 'pospool_io',
        shortName: 'PPIO',
        precision: 2,
        verified: true
    });

    var STA = new Currency({
        id: '3SdrmU1GGZRiZz12MrMcfUz4JksTzvcU25cLFXpZy1qz',
        displayName: 'Starta',
        shortName: 'STA',
        precision: 2,
        verified: true
    });

    var CORE = new Currency({
        id: '3MyMJ9pXLTDnMQhNgoDUBtcfmaGVgnaZNARZwcZzMFk7',
        displayName: 'CORE',
        shortName: 'CORE',
        precision: 8,
        verified: true
    });

    var KSS = new Currency({
        id: 'Dq6ku3HyiMfKvorz2PLRAPwa9ykF78V1uiBhXtMbL2f2',
        displayName: 'Krosscoin',
        shortName: 'KSS',
        precision: 3,
        verified: true
    });

    var WFN = new Currency({
        id: '7yXJqP2zpXTiXuS2o25seUHYxdDnfSPZJ3SEm5DrQ7cx',
        displayName: 'WavesFullNode',
        shortName: 'WFN',
        precision: 8,
        verified: true
    });

    var GRPH = new Currency({
        id: '13QuhSAkAueic5ncc8YRwyNxGQ6tRwVSS44a7uFgWsnk',
        displayName: 'Graph',
        shortName: 'GRPH',
        precision: 8,
        verified: true
    });

    var ESC = new Currency({
        id: 'FoKiAEqHSit88f4iu1neKkzsanYHQqLRyR4DXucRGKbW',
        displayName: 'EstateCoin',
        shortName: 'ESC',
        precision: 2,
        verified: true
    });

    var AGRO = new Currency({
        id: 'J8mgyjKQb4M7DjEKvewBSvKZULMZMDpUtua9VtByLbVD',
        displayName: 'Agro token',
        shortName: 'AGRO',
        precision: 8,
        verified: true
    });

    var KING = new Currency({
        id: 'CHUTTYkDd9qFmQthCL7eHTDHwYudfthqwYCYsdvpCZbf',
        displayName: 'King93',
        shortName: 'KING',
        precision: 8,
        verified: true
    });

    var ARNA = new Currency({
        id: 'BsDmB74Y1PvtVrE741i5CJThChQHHF96hDL5nXwv7JdS',
        displayName: 'Arena',
        shortName: 'ARNA',
        precision: 8,
        verified: true
    });

    var WNET = new Currency({
        id: 'AxAmJaro7BJ4KasYiZhw7HkjwgYtt2nekPuF2CN9LMym',
        displayName: 'Wavesnode.NET',
        shortName: 'WNET',
        precision: 8,
        verified: true
    });

    var PBK = new Currency({
        id: '3eBcKvyMavxACq54yvXk1rCAP4E475NCwGKV6AmQQNaw',
        displayName: 'PeerBanks',
        shortName: 'PBK',
        precision: 8,
        verified: true
    });

    var TOM = new Currency({
        id: '3e7aYkysNohFDonLVaUFGgZ46mV3Y3r7Rqzi95GYGxeK',
        displayName: 'Tomahawkcoin',
        shortName: 'TOM',
        precision: 0,
        verified: true
    });

    var ViC = new Currency({
        id: 'Gh8Ed6n1y9wscFHT6s4EH6uhKajvNQ88oPkkFkYkgXyX',
        displayName: 'WaVialcoin',
        shortName: 'ViC',
        precision: 8,
        verified: true
    });

    var EQ = new Currency({
        id: 'DoL6wC5a72Fuxg7FtfUMWbJB9kjRuvQ3BQKrgjym3gh6',
        displayName: 'EQUI Token',
        shortName: 'EQ',
        precision: 8,
        verified: true
    });

    var SHDW = new Currency({
        id: 'ETLzrCpBqTrpyuMGdiVLBPZnUoKwte88oVdJjoFi5R2h',
        displayName: 'ShadowToken',
        shortName: 'SHDW',
        precision: 8,
        verified: true
    });

    var GIN = new Currency({
        id: '9x9ATvB61fE5TU1zRdZvyvA5Q8ZYEs2yRmzTBAs69R9N',
        displayName: 'GingerDrink.EU',
        shortName: 'GIN',
        precision: 2,
        verified: true
    });

    var NEWS = new Currency({
        id: '2EAUTcAsFMsndSgiGacKRvygFR1e6gdSd8bEpiemsTPE',
        displayName: 'NEWSTOKEN',
        shortName: 'NEWS',
        precision: 8,
        verified: true
    });

    var COXST = new Currency({
        id: '7tZxVdAWc8QvsMrXBoicMgU2bSJsaEpFJnPYn1H31B8B',
        displayName: 'CoExistCoin',
        shortName: 'COXST',
        precision: 8,
        verified: true
    });

    var SMR = new Currency({
        id: 'EbY2Uf9ukD4ndg5J7MA7CjhB7xbAsiViTmVSemb186V8',
        displayName: 'Summer',
        shortName: 'SMR',
        precision: 8,
        verified: true
    });

    var RDT = new Currency({
        id: 'Fw2Sg8x4VZyxU5ManJTo69JCKg9Rox7xDNKxdQdxXDWk',
        displayName: 'Ryder Token',
        shortName: 'RDT',
        precision: 2,
        verified: true
    });

    var IRA = new Currency({
        id: '3eBcKvyMavxACq54yvXk1rCAP4E475NCwGKV6AmQQNaw',
        displayName: 'PeerBanks',
        shortName: 'IRA',
        precision: 8,
        verified: true
    });

    var _2B4T = new Currency({
        id: '2LU8GwJFvVebrCvgDhMTLDzm3dHxuN1x7ks8dQRiSj9N',
        displayName: '2B4T',
        shortName: '2B4T',
        precision: 2,
        verified: true
    });

    var MBX = new Currency({
        id: '2CX6EFHYmXYyop4hD7dUywST5K51Hvi2m5brFo35C6EZ',
        displayName: 'MyBitX',
        shortName: 'MBX',
        precision: 2,
        verified: true
    });

    var KNOWS = new Currency({
        id: 'CqSHx4WhszTZhabfWD8UuX8efg5hbZTPRNtnwW1ojJxe',
        displayName: 'KNOWS',
        shortName: 'KNOWS',
        precision: 8,
        verified: true
    });

    var MBI = new Currency({
        id: 'CJpRwfpBcFyA6p3g1fb7xuiArSQ7xLkNH8SD9AB4HeD9',
        displayName: 'MonsterByte',
        shortName: 'MBI',
        precision: 2,
        verified: true
    });

    var COF = new Currency({
        id: 'AcrRM9STdBu5PNiFveTCbRFTS8tADhKcsbC2KBp8A4tx',
        displayName: 'CoffeeCoin',
        shortName: 'COF',
        precision: 3,
        verified: true
    });

    var CHILL = new Currency({
        id: 'DsxRbfYXzwf4PFwUD6kyEJhj2Wd5E9NsHr5WynVKTzie',
        displayName: 'Chill',
        shortName: 'CHILL',
        precision: 8,
        verified: true
    });

    var KUN = new Currency({
        id: 'F6EK5bcdEShWPA9pGdgqGYmPPUZ9FaHnyVwPZfXCTxV7',
        displayName: 'KUNA',
        shortName: 'KUN',
        precision: 0,
        verified: true
    });

    var CEIT = new Currency({
        id: '83Y1Ub3Kp9uitTTgKGPnaZE6EC793XuC3muoJC8zsFir',
        displayName: 'CorpEdu',
        shortName: 'CEIT',
        precision: 4,
        verified: true
    });

    var SGIT = new Currency({
        id: 'BYkKnXLUS3qRyNvbSTvNWJ3pTsW7uZGHhV4HQ3pdf6DW',
        displayName: 'SmartGames',
        shortName: 'SGIT',
        precision: 4,
        verified: true
    });

    var AHT = new Currency({
        id: 'HfFHZaPzGMSdHvaaZ7S8mrZrPWEyGzfA6VDuSRzb8uY6',
        displayName: 'Bowhead',
        shortName: 'AHT',
        precision: 8,
        verified: true
    });

    var HALAL = new Currency({
        id: 'BjAZxDeFpYaQ1gwmg65vYArhve31k8j9mscQDecNZ2bX',
        displayName: 'HALAL',
        shortName: 'HALAL',
        precision: 7,
        verified: true
    });

    var DIMO = new Currency({
        id: 'BEth3AJY65jWWF7KCDSFgMS6g5AvDvoAWrn8UYEsoA17',
        displayName: 'DIMO',
        shortName: 'DIMO',
        precision: 8,
        verified: true
    });

    var WIN = new Currency({
        id: '7Ry7rUTSS1iCJBFa7trCbwzAwnvvAUrX3gcz2iTL8aAF',
        displayName: 'WinToken',
        shortName: 'WIN',
        precision: 2,
        verified: true
    });

    var YTB = new Currency({
        id: 'HhzJGgbbogGQubKkHUyEaHKs7fBRebjoJkgiDQ8jrYee',
        displayName: 'YouTubeCoin',
        shortName: 'YTB',
        precision: 0,
        verified: true
    });

    var GFL = new Currency({
        id: 'D6hYNYUSxsLtvkUJ4Mxp6s7mT4WACbwJSsVGCQKxkSfH',
        displayName: 'GoldenFleece',
        shortName: 'GFL',
        precision: 8,
        verified: true
    });

    var DAT = new Currency({
        id: 'DBLes8Bxb1P4qL1XaRRPL4d4xTVZSWHKP4oKGyFZjwBe',
        displayName: 'DATALIFE',
        shortName: 'DAT',
        precision: 6,
        verified: true
    });

    var VK = new Currency({
        id: '5WLqNPkA3oDp1hTFCeUukTL1qvFnk9Ew7DXTtCzvoCxi',
        displayName: 'VKCoin',
        shortName: 'VK',
        precision: 0,
        verified: true
    });

    var UWT = new Currency({
        id: 'AdEVVde2XTDa1qDPWfChUGH2XP67duQ4NnpQWXs7wETF',
        displayName: 'Useless Token',
        shortName: 'UWT',
        precision: 0,
        verified: true
    });

    var AP_0 = new Currency({
        id: 'BYMmfwocym3d3cuFc9XytbAWGCdAM9875n5fTFokGTMm',
        displayName: 'AP-glasscoin#0',
        shortName: 'AP#0',
        precision: 0,
        verified: true
    });

    var AP_1 = new Currency({
        id: 'FgPzwZqGngVG45d6WtP5273diR8cHRjs95aT6g1tuFUv',
        displayName: 'AP-glasscoin#1',
        shortName: 'AP#1',
        precision: 0,
        verified: true
    });

    var AP_2 = new Currency({
        id: '6qLNnEV34cE8CZi5hk3nTNiUeHZcKz35R7AafPSukSAt',
        displayName: 'AP-glasscoin#2',
        shortName: 'AP#2',
        precision: 0,
        verified: true
    });

    var OCL = new Currency({
        id: 'ABFYQjwDHSct6rNk59k3snoZfAqNHVZdHz4VGJe2oCV5',
        displayName: '$OCL Oceanlab',
        shortName: 'OCL',
        precision: 8,
        verified: true
    });

    var OCC = new Currency({
        id: 'CL9PN5rpMm3ed2x6g9SWDQJfHciZFwXee2hhehmitzRj',
        displayName: 'OurCoin Classic',
        shortName: 'OCC',
        precision: 2,
        verified: true
    });

    var SMART = new Currency({
        id: '4xDfFdPorzNmB5w8p28Fs5z6fPMf4QKJGcxY3DWT9ugG',
        displayName: 'SMART',
        shortName: 'SMART',
        precision: 8,
        verified: true
    });

    var DCN = new Currency({
        id: 'DnAGJqeraWszYBfRjjbxtZDb1vggjUDZjWo49i15hGo1',
        displayName: 'Duocoin',
        shortName: 'DCN',
        precision: 2,
        verified: true
    });

    var RSC = new Currency({
        id: 'EMdiF8uaySswfCdMxc114rSfzUsAKCtK9d8eSx6ruKP4',
        displayName: 'RusCoin',
        shortName: 'RSC',
        precision: 5,
        verified: true
    });

    var LIKE = new Currency({
        id: '71tUQ7miLb2vNViGYCarYvdNj2BnDyxuFMCQivViqZq6',
        displayName: 'like',
        shortName: 'LIKE',
        precision: 8,
        verified: true
    });

    var FUPOOF = new Currency({
        id: 'EAmQHCqBVeNunvYRC5bFQh6mtvF34bL9qAwug5PGvjjE',
        displayName: 'Fupoof Coin',
        shortName: 'FUPOOF',
        precision: 3,
        verified: true
    });

    var ANY = new Currency({
        id: '2L9piWsMG4dZ84WgybXa9SPYFhyBEiP5fcv1BmJ9Gy7X',
        displayName: 'anyco',
        shortName: 'ANY',
        precision: 8,
        verified: true
    });

    var BRW = new Currency({
        id: '3EAHaZPwV5gCoWkoLhjj7rSz9ix7Q4SE6mFczoxA3f9D',
        displayName: 'BrWaves',
        shortName: 'BRW',
        precision: 3,
        verified: true
    });

    var CNX = new Currency({
        id: 'CSX1Ynv6AXmJmfnG1hBczrL9tN5HWrjVx5Ur3WJeuErv',
        displayName: 'Cryptonetix',
        shortName: 'CNX',
        precision: 8,
        verified: true
    });

    var DARF = new Currency({
        id: '96NFBPoikAeacesZggFa6wBXAyczgZFyupbX5rJwFfdQ',
        displayName: 'DARF',
        shortName: 'DARF',
        precision: 8,
        verified: true
    });

    var WNT = new Currency({
        id: 'EqdXBgKgKqdpD3kGT4tS9VgLifZXS3ASihwM3hnprNdU',
        displayName: 'WavesNotify',
        shortName: 'WNT',
        precision: 0,
        verified: true
    });

    var CWV = new Currency({
        id: 'HxxSmVuX4HbHDiDSGg96nx7wgCBhB9UPHh6pxgnKXjv4',
        displayName: 'Cryptowave',
        shortName: 'CWV',
        precision: 3,
        verified: true
    });

    var WCASH = new Currency({
        id: '2sikuhpBdZV2x5gHoA7adCStxuTSJ8m6r4hSRDLKz2zN',
        displayName: 'WCASH',
        shortName: 'WCASH',
        precision: 8,
        verified: true
    });

    var LIFE = new Currency({
        id: '5qtfgMsSAQsYMC947aYZcej1qMVQvMfRgLc3mexMXWE1',
        displayName: 'LIFE',
        shortName: 'LIFE',
        precision: 8,
        verified: true
    });

    var RDCR = new Currency({
        id: 'EXKrrWnMYnZrPYbrygnwzKKx5jjaEqALEgQhtoCcBdKG',
        displayName: 'RDCR',
        shortName: 'RDCR',
        precision: 8,
        verified: true
    });

    var THNX = new Currency({
        id: '2XQGE8LY9hUruumZ9ewK82akHMnS8a2nSXKdKXfBnuLH',
        displayName: 'ThankYou',
        shortName: 'THNX',
        precision: 4,
        verified: true
    });

    var IKV = new Currency({
        id: '8SNKiX53Yi2yjG1ZbRM4dEQJaJDpns7aN1FWBg5AZDBn',
        displayName: 'Ikeva',
        shortName: 'IKV',
        precision: 5,
        verified: true
    });

    var WDESK = new Currency({
        id: 'CqdGdzvXVp2Gxn7wCZgCboMQu2cWYf6HKAsZFyg3Sq7Q',
        displayName: 'WavesDesk',
        shortName: 'WDESK',
        precision: 8,
        verified: true
    });

    var SUR = new Currency({
        id: '5EAm2T6rKnaDHBT8ptWnuEqvKszp8SW9XPFYD1yAAW2x',
        displayName: 'Suretly',
        shortName: 'SUR',
        precision: 8,
        verified: true
    });

    var SIBERIA = new Currency({
        id: '9QrUSk9mkkdRPKDzNnEVDBoMDb6iBny4XpxsYtpwJdH9',
        displayName: 'SIBERIA',
        shortName: 'SIBERIA',
        precision: 2,
        verified: true
    });

    var MODO = new Currency({
        id: '9kEcosT68xX1Azx2ZkUkgWmwQ5SxzN9rssFieiaxT1PN',
        displayName: 'MODO',
        shortName: 'MODO',
        precision: 8,
        verified: true
    });

    var GIVE = new Currency({
        id: 'AvcbtGUgZwXrfn7rJwBLzoHCrJhtUusnco5amqF7foWU',
        displayName: 'Give Coin',
        shortName: 'GIVE',
        precision: 2,
        verified: true
    });

    var SOL = new Currency({
        id: '6sosMnsaCM5iowMjdPHXDJNrByrw8L8SQCDeD2xoNeK4',
        displayName: 'SolarLab',
        shortName: 'SOL',
        precision: 8,
        verified: true
    });

    var EOT = new Currency({
        id: 'GdnNbe6E3txF63gv3rxhpfxytTJtG7ZYyHAvWWrrEbK5',
        displayName: 'EOT Token',
        shortName: 'EOT',
        precision: 8,
        verified: true
    });

    var FIX = new Currency({
        id: 'GS5RfWDS8ytVnxqr7M2pnqeFuu7BpSwGnADTcw23FvbZ',
        displayName: 'Finamatrix',
        shortName: 'FIX',
        precision: 8,
        verified: true
    });

    var KKO = new Currency({
        id: '6gZUKe6EhDnA8vMFdwLMjLm3QLhRe1v66LvST7ZWJcZW',
        displayName: 'Cacao Shares',
        shortName: 'KKO',
        precision: 8,
        verified: true
    });

    var JNT = new Currency({
        id: '8FHrsE6ixLyEnbcJqxXaGRcEU2aziuEBvQ6Tebgqrv5c',
        displayName: 'jNetCoin',
        shortName: 'JNT',
        precision: 5,
        verified: true
    });

    var CGT = new Currency({
        id: 'CVxqNTyfD39WrNsXSfpAUTzsA76astJpzQVEiZn8a1Ai',
        displayName: 'Cryptogene Token',
        shortName: 'CGT',
        precision: 0,
        verified: true
    });

    var AFFT = new Currency({
        id: '9UFoSQSZZU5j8au1cLYgJGNNtuXAc2s1C4Xd8sPimqL8',
        displayName: 'AFFT',
        shortName: 'AFFT',
        precision: 8,
        verified: true
    });

    var MFL = new Currency({
        id: '7EHVUjcgEV9Du8qp95tS1eBV8DFtenmX64H3QawdCkC4',
        displayName: 'McFly',
        shortName: 'MFL',
        precision: 2,
        verified: true
    });

    var TURTL = new Currency({
        id: '7VDRFwm2HbaJCk3U4HQDhLGdSCxZwPe3cHefVXy7ejYe',
        displayName: 'WorldTurtleCoin',
        shortName: 'TURTL',
        precision: 8,
        verified: true
    });

    var PropX = new Currency({
        id: '7QVcLyMCQ53KSCLhZN7m3FLbfjuoHxxk5xBiToE1gmAE',
        displayName: 'PropX',
        shortName: 'PropX',
        precision: 8,
        verified: true
    });

    var ECT = new Currency({
        id: 'ErZseGoQ81jWTnKbGim7djVgyAqrsYLQr5SwrEjnF7wM',
        displayName: 'eCoin Token',
        shortName: 'ECT',
        precision: 0,
        verified: true
    });

    var STT = new Currency({
        id: 'CNhUwUpGoMmPxDsqrUsVDa6WDzwZVdh4N8gVA85tBB28',
        displayName: 'SmartTracker',
        shortName: 'STT',
        precision: 0,
        verified: true
    });

    var SCLRI = new Currency({
        id: '4GZ5tgKxPeu5kCYpcAE871grUPXWW3My5uccRVHRJ2k2',
        displayName: 'Clean/Smart City',
        shortName: 'SCLRI',
        precision: 2,
        verified: true
    });

    var Knish = new Currency({
        id: 'CvutHGapUdjVHXZ1KwGUD1Z3R2rwDwwbLJrTXSGUYfuK',
        displayName: 'Knish',
        shortName: 'Knish',
        precision: 8,
        verified: true
    });

    var WPC = new Currency({
        id: 'ANTz8NnpfbEcDFXo4gwd7UL5ugc9bdTcPGbEPktRPZw2',
        displayName: 'whoppercoin',
        shortName: 'WPC',
        precision: 1,
        verified: true
    });

    var cryptoSterling = new Currency({
        id: '61LRXnv6iB2QDwBVi34r6eEyx8h7VZdyBApB4aP9eKqA',
        displayName: 'cryptoSterling',
        shortName: 'cryptoSterling',
        precision: 0,
        verified: true
    });

    var NGN = new Currency({
        id: '6CjhSBXPF2gga6s6F9UkGKAtnYawCqySH1wUJA2cU5pW',
        displayName: 'â‚¦ | NGN',
        shortName: 'NGN',
        precision: 2,
        verified: true
    });

    var ALTOCAR = new Currency({
        id: '5ZVP6vp8Rt7GneEozNATcs7LPjQfwTun9WwnN1ispAH4',
        displayName: 'ALTOCAR',
        shortName: 'ALTOCAR',
        precision: 8,
        verified: true
    });

    var ANAT = new Currency({
        id: '7YUrQFP6Fgn8EwbQb3rBtJjBattsvX5B4tsCsJrn14Py',
        displayName: 'ANAT',
        shortName: 'ANAT',
        precision: 8,
        verified: true
    });

    var ATKN = new Currency({
        id: '7U5YKTvz7bt85FyWRB9bvSbqtKcdK3YVJDGfuJ1XjxBh',
        displayName: 'A-TOKEN',
        shortName: 'ATKN',
        precision: 8,
        verified: true
    });

    var ATOM = new Currency({
        id: '83M2vz5tTwovXyW6ytrT7771DsEpttaGyCn66toQmT5N',
        displayName: 'AtomCoinAnn',
        shortName: 'ATOM',
        precision: 2,
        verified: true
    });

    var BAR = new Currency({
        id: 'HU5B3q3neZRpq5R9uzoRjopJUpELtnFmz1KW2TAUbp9m',
        displayName: 'BARCOIN',
        shortName: 'BAR',
        precision: 0,
        verified: true
    });

    var BCF = new Currency({
        id: '6ShaywJbyebptogQ5gMUvtbEyCdXqV4gGPfAPEdq2Dre',
        displayName: 'BCF SHARES',
        shortName: 'BCF',
        precision: 6,
        verified: true
    });

    var BET = new Currency({
        id: 'FkgGR1mYeEdPLrvCRTfQcZeyCadWEVGuryDEhuPuZoUf',
        displayName: 'BET\'s',
        shortName: 'BET',
        precision: 1,
        verified: true
    });

    var BIRTAL = new Currency({
        id: 'J1tggntaeLccEr8t9s8cc9VpqGj3QkHMSrfyEkdGzoXF',
        displayName: 'BirTal',
        shortName: 'BIRTAL',
        precision: 8,
        verified: true
    });

    var BITCHEKE = new Currency({
        id: '9CPQU2EdbYxHsiytpZV4L8cypZHL17B4a81xedpspNT8',
        displayName: 'BitCheke',
        shortName: 'BITCHEKE',
        precision: 3,
        verified: true
    });

    var BITD = new Currency({
        id: 'B5f8oYUingX3XyKjRAcimPapELPfFMhRz6oVzUk5GDW5',
        displayName: 'BITDOLLARS',
        shortName: 'BITD',
        precision: 8,
        verified: true
    });

    var BKC = new Currency({
        id: '2a2AorHdSaWiiTiYR11vEKjLBzsqtQ5i1KzPNfW97xBb',
        displayName: 'Blokcloud',
        shortName: 'BKC',
        precision: 8,
        verified: true
    });

    var CROW = new Currency({
        id: '5XWiXK6RbwXsTnY2dSHQWnKVjvLsMAEeE1rFqQz3Ton2',
        displayName: 'CrowdWave',
        shortName: 'CROW',
        precision: 3,
        verified: true
    });

    var CBT = new Currency({
        id: 'HfTchexAmETtGoPCU1V72t6WNgPPoEsLjBTpeeBzC46L',
        displayName: 'CryptoBazar',
        shortName: 'CBT',
        precision: 4,
        verified: true
    });

    var EDEN = new Currency({
        id: 'HQMz6yc8hxzA3MUvvGSNByxWLMcmt6uoz5ZE3ebkS75n',
        displayName: 'EdenChain',
        shortName: 'EDEN',
        precision: 8,
        verified: true
    });

    var EQUA = new Currency({
        id: 'ECcmoyW2wQcQMvXp3QbwnMFBpiRthHj54MpYq7scQBeZ',
        displayName: 'EquaCoin',
        shortName: 'EQUA',
        precision: 4,
        verified: true
    });

    var EQUILD = new Currency({
        id: 'FrErWYxQojiTVMamqLLvkmeKKX9UTXz8EL9NF3AeYWPi',
        displayName: 'equild',
        shortName: 'EQUILD',
        precision: 8,
        verified: true
    });

    var ETERP = new Currency({
        id: 'BiSYeqfANiJjUjR3GwCaeCPZQaT4Ly1vQb12PcambKbz',
        displayName: 'EterPay',
        shortName: 'ETERP',
        precision: 8,
        verified: true
    });

    var FENIX = new Currency({
        id: '3pEoYCzUb7hWvqoMQGPYffTsxxPDkSzwSskypmYFBLFP',
        displayName: 'FENIX&WAVES',
        shortName: 'FENIX',
        precision: 8,
        verified: true
    });

    var FTB = new Currency({
        id: 'E8jdQECM6i9j28bpH81zZWyAwtaZwJMtzPWz4jCCmot3',
        displayName: 'Fincoin',
        shortName: 'FTB',
        precision: 6,
        verified: true
    });

    var FLEX = new Currency({
        id: 't1ocHkKuQLKYhtH7nm1rYuj1iZ8d75bqAjgRTwiGhQF',
        displayName: 'Flex',
        shortName: 'FLEX',
        precision: 0,
        verified: true
    });

    var FNX = new Currency({
        id: 'RiVZJ25d5vMYcVo4XRK5n2whjh4WwYGshmmwXgF9MK4',
        displayName: 'FNX&WVS',
        shortName: 'FNX',
        precision: 8,
        verified: true
    });

    var GBC = new Currency({
        id: 'byHDS3JprxWhPbuYBy4y4SvYbbvZiAQV9MNiDSsRPz6',
        displayName: 'Goldbar coin',
        shortName: 'GBC',
        precision: 3,
        verified: true
    });

    var Grant = new Currency({
        id: 'C9p15S1PJN4tMeodygkBEEr2GQUX5dtbtuadTcuaj7t5',
        displayName: 'Grant',
        shortName: 'Grant',
        precision: 8,
        verified: true
    });

    var GrantsBounty = new Currency({
        id: '47iX3APMeD4ZGmhQr73qg5boyoJZXGWpfX5sbcAD6jsn',
        displayName: 'GrantsBounty',
        shortName: 'GrantsBounty',
        precision: 8,
        verified: true
    });

    var HEART = new Currency({
        id: '5xFEsfHdtHLZ2yexduffCBqryWxV4Py8FHtA9tLWqtrJ',
        displayName: 'HEART',
        shortName: 'HEART',
        precision: 1,
        verified: true
    });

    var HOME = new Currency({
        id: '9fkbSVSceusGtsL9KxQHCaqpt2ddds6ukMEKrabgdbac',
        displayName: 'HomeToken',
        shortName: 'HOME',
        precision: 8,
        verified: true
    });

    var HTC = new Currency({
        id: '7GCmsbyYBJ9DAJayC3hKuZV4REZXdGdXRjWgsY9oB3wZ',
        displayName: 'HotelCoin',
        shortName: 'HTC',
        precision: 8,
        verified: true
    });

    var IMMO = new Currency({
        id: '8yzwMFmNFAv8VALWfmEPHk26tMv9MBS7eHoTm7i1FXyT',
        displayName: 'Immodestea',
        shortName: 'IMMO',
        precision: 8,
        verified: true
    });

    var JNET = new Currency({
        id: '8FHrsE6ixLyEnbcJqxXaGRcEU2aziuEBvQ6Tebgqrv5c',
        displayName: 'jNetCoin',
        shortName: 'JNET',
        precision: 5,
        verified: true
    });

    var KRIP = new Currency({
        id: 'Hm9DM6i5DsnHoPhxWWo5j2bFYYVCUaoC9n66EtzmwgAM',
        displayName: 'KripCoin',
        shortName: 'KRIP',
        precision: 5,
        verified: true
    });

    var LLA = new Currency({
        id: 'CvD7GedwdeHCxtiiQgbEAV6JHxXv9DQ8bkmrFAauiNyy',
        displayName: 'Lalena (LLA)',
        shortName: 'LLA',
        precision: 8,
        verified: true
    });

    var limburg = new Currency({
        id: 'FYCGQ1iKBqbYnQgeLQFEazw4oF2PyRYhdsUPWBEWk7F6',
        displayName: 'LimburgCoin',
        shortName: 'limburg',
        precision: 8,
        verified: true
    });

    var LIVEBIT = new Currency({
        id: '7W2CHBfQFXfkZVrPWrj34W6pveKHVky9dvoFq1MXNY24',
        displayName: 'LiveBit',
        shortName: 'LIVEBIT',
        precision: 8,
        verified: true
    });

    var MED = new Currency({
        id: 'CnkUwcYpVpzk3mMM2XfofymwXBnmrSecFbBdMx6WYDCa',
        displayName: 'Medicine Man',
        shortName: 'MED',
        precision: 8,
        verified: true
    });

    var MNG = new Currency({
        id: '6672vWQDHDV6WRU4GsRjBYo6444bh2fEWmXW1KnSSrw4',
        displayName: 'Mining',
        shortName: 'MNG',
        precision: 8,
        verified: true
    });

    var MMBT = new Currency({
        id: '82in5zvV8XdnFzCwYWCNaNbRWSvEa4CfCYfJSAaStafH',
        displayName: 'MMBT',
        shortName: 'MMBT',
        precision: 4,
        verified: true
    });

    var MPST = new Currency({
        id: '44n9LfHecPgovJAZtgdqLg9bT4kzRSF2LgGGSnsyojRn',
        displayName: 'MPST',
        shortName: 'MPST',
        precision: 8,
        verified: true
    });

    var MFS = new Currency({
        id: 'A29o9EnYC9rjPnCw4ujrgTze7E3hLstiLeiSeoUbanfv',
        displayName: 'My Fair Share',
        shortName: 'MFS',
        precision: 8,
        verified: true
    });

    var MCS = new Currency({
        id: '4RndW3NAfxHV1xdCn67t4P6prU9B8SyxNTpYFAocmttM',
        displayName: 'MyCryptoSpot',
        shortName: 'MCS',
        precision: 8,
        verified: true
    });

    var NICNAC = new Currency({
        id: 'ENpaU88woC6Q1pbheURcA5TMX7ykhC5zFPqzdVfhP1BC',
        displayName: 'NicNacToken',
        shortName: 'NICNAC',
        precision: 3,
        verified: true
    });

    var NUTS = new Currency({
        id: '67dY6uMTpg9Ks7Abn2muwTyY24qjrhjviKxMfgURQhos',
        displayName: 'Nutshells',
        shortName: 'NUTS',
        precision: 6,
        verified: true
    });

    var OCTANOX = new Currency({
        id: 'DxE8xbjHT7rXyRd2DMz5TnNNNC91Kz1SZ9k4dpH6X4JP',
        displayName: 'Octanox',
        shortName: 'OTX',
        precision: 8,
        verified: true
    });

    var P2P = new Currency({
        id: '6Z2EYvNU447o96Zevei4Zb5rNntENs2br2B5kQ5HXkiq',
        displayName: 'P2P Coin',
        shortName: 'P2P',
        precision: 8,
        verified: true
    });

    var preNEX = new Currency({
        id: 'FBKxJx6Ho6z1bABvGJo1J1sbCrr4Cs3iUTGsxy3suG4F',
        displayName: 'preNEX',
        shortName: 'preNEX',
        precision: 0,
        verified: true
    });

    var preVITO = new Currency({
        id: '6LcUbnDY585ndN8XbHmnbwF8P8BZsoPqzvEyWbjdsrqQ',
        displayName: 'preVITO',
        shortName: 'preVITO',
        precision: 3,
        verified: true
    });

    var PRIMO = new Currency({
        id: '4EmxnV7DhizwpKh5J13Waxovth95uSjknokNFxNAzAaS',
        displayName: 'Primo Coin',
        shortName: 'PRIMO',
        precision: 8,
        verified: true
    });

    var PYTI = new Currency({
        id: 'F6ppo1zRQnMW6VcYRj2LiEqjL6ahvdYU4zNQXWxstLbg',
        displayName: 'Priveleged YTI',
        shortName: 'PYTI',
        precision: 2,
        verified: true
    });

    var PUMP = new Currency({
        id: '5fMUzjhtVkwxyUyDPzSZuCz2HtpesaaTNMTRsFzZvkP',
        displayName: 'Pumpcoin',
        shortName: 'PUMP',
        precision: 8,
        verified: true
    });

    var QUASA = new Currency({
        id: '33GpTrJ72YiDA21nEtssN8jKYf5jwbv8GFH22y37AVjD',
        displayName: 'QuasaCoin',
        shortName: 'QUASA',
        precision: 8,
        verified: true
    });

    var REDFISH = new Currency({
        id: '5sU8dF7DyN7dKN4NiFTtVC5shqthSgTEuvKUu2iusyS2',
        displayName: 'Redfishcoin',
        shortName: 'REDFISH',
        precision: 8,
        verified: true
    });

    var RMOB = new Currency({
        id: 'BmcArNN9VnKAp3HbvpKaoE3utwEXqvP1UjunS9DVKdGS',
        displayName: 'RewardMob',
        shortName: 'RMOB',
        precision: 8,
        verified: true
    });

    var RXSC = new Currency({
        id: 'SGBHnkG1Z8VbEtaCF5gpNihg1SRFky6CzrwmyL8GJnj',
        displayName: 'RxSmartCoffee',
        shortName: 'RXSC',
        precision: 8,
        verified: true
    });

    var SEBEUM = new Currency({
        id: '73XxLgHdzDfus6nRuwpo3dceCRMNiU5VwkiUK1AAfaQk',
        displayName: 'Sebeum',
        shortName: 'SEBEUM',
        precision: 5,
        verified: true
    });

    var SGCN = new Currency({
        id: 'AYMwsNAa4pdg1raJnGvibdLkAhqXQTrXo2SQfecAzfg1',
        displayName: 'SGelderCoin',
        shortName: 'SGCN',
        precision: 8,
        verified: true
    });

    var SHEEP = new Currency({
        id: 'mjkFnVZBdS1VB5MdWjgEFYHyTaoVGuepypLpTEGQdEp',
        displayName: 'Sheepbit',
        shortName: 'SHEEP',
        precision: 8,
        verified: true
    });

    var SGT = new Currency({
        id: 'BPSBJtgWQvx6QqNz9WHEZVhJAmTvGPArQ1Y5nFVkTPAR',
        displayName: 'Snuggoo (SGT)',
        shortName: 'SGT',
        precision: 2,
        verified: true
    });

    var SQUASH = new Currency({
        id: '4Cxj1FfwKWMwfZZ34QxyZtRfUq4jHSmX9pwXafzBzmdC',
        displayName: 'SquashCoin',
        shortName: 'SQUASH',
        precision: 2,
        verified: true
    });

    var SRE = new Currency({
        id: 'BotFPyCivCDaoQHSD3myBw7GAxsZdiRS76G1WdFVuSXC',
        displayName: 'SRE_Token',
        shortName: 'SRE',
        precision: 8,
        verified: true
    });

    var STYLO = new Currency({
        id: '5VRTinDkxBi4oYBSWjkijyZtacH3QVa8Q8qPodhvczv6',
        displayName: 'stylocoin',
        shortName: 'STYLO',
        precision: 4,
        verified: true
    });

    var SXAS = new Currency({
        id: 'EjR1ThR2MBgukq4Z5zhdXzcct2Vzvq1QgnkMjcFRhXio',
        displayName: 'SXAS',
        shortName: 'SXAS',
        precision: 6,
        verified: true
    });

    var TENEBRIS = new Currency({
        id: 'EJs2V3hd6FXGDYH7HKFDhVcgtCmDa31zRygV1KwF5PHS',
        displayName: 'Tenebris',
        shortName: 'TENEBRIS',
        precision: 8,
        verified: true
    });

    var TEXCOIN = new Currency({
        id: '68XWWEmAUoLHXGFy6n8nb6M5c2WrSrekiWSPx8VT7e1e',
        displayName: 'TEXCOIN',
        shortName: 'TEXCOIN',
        precision: 3,
        verified: true
    });

    var Tidals = new Currency({
        id: 'AAUgxEx61UK5Y9MiEYMsdnCqVhGxBcTJEGTMHJeybuBC',
        displayName: 'Tidal Waves',
        shortName: 'Tidals',
        precision: 8,
        verified: true
    });

    var TFT = new Currency({
        id: 'B1u2TBpTYHWCuMuKLnbQfLvdLJ3zjgPiy3iMS2TSYugZ',
        displayName: 'TIMESFARMTOKEN',
        shortName: 'TFT',
        precision: 6,
        verified: true
    });

    var LOYAL = new Currency({
        id: '3YBdrSJjkAfQiFVefJ6vSRLrRtsWfSgjFd2W53oCWpZM',
        displayName: 'tokenloyalty.io',
        shortName: 'LOYAL',
        precision: 8,
        verified: true
    });

    var TOPS = new Currency({
        id: '865pJ6TrYL39oMHoKtxBCNjdYsyMtaymz3doFfbEv5hh',
        displayName: 'TOPS',
        shortName: 'TOPS',
        precision: 5,
        verified: true
    });

    var TRGL = new Currency({
        id: '5i65cqtC1s34YmyUUxFM4ps5DLQHtLvZwCfaPb6QhXdh',
        displayName: 'TRGL',
        shortName: 'TRGL',
        precision: 0,
        verified: true
    });

    var TRUZTAR = new Currency({
        id: '7EHF5yybMR9kkB5Ntz3pqYTQY3zK6a5rHy4gjDYVbWpS',
        displayName: 'Truztar',
        shortName: 'TRUZTAR',
        precision: 8,
        verified: true
    });

    var TWENTYONE = new Currency({
        id: 'Dbd7nKCm9RRq6Vjh9VLumXeEKPZfM4dgox19q7jjHx5L',
        displayName: 'Twenty-One',
        shortName: 'TWENTYONE',
        precision: 8,
        verified: true
    });

    var UOOMAG = new Currency({
        id: 'DgwLgKXfC3G7SKbSoz82ZQVGQNLHqqfEovtdv7sjHGKu',
        displayName: 'UOOMAG',
        shortName: 'UOOMAG',
        precision: 8,
        verified: true
    });

    var VTN = new Currency({
        id: '32gwVYerx37pxuNG6eaiFRdya5ETpH8imNsf31VT5WqH',
        displayName: 'VOLTROON',
        shortName: 'VTN',
        precision: 8,
        verified: true
    });

    var WTC = new Currency({
        id: '7VDRFwm2HbaJCk3U4HQDhLGdSCxZwPe3cHefVXy7ejYe',
        displayName: 'WorldTurtleCoin',
        shortName: 'WTC',
        precision: 8,
        verified: true
    });

    var XVCA = new Currency({
        id: '78op8zPXC1Uf5541a7Pm1SmqrutAC9tsNxbrMTLscoHy',
        displayName: 'XVCA',
        shortName: 'XVCA',
        precision: 3,
        verified: true
    });

    var ANRYZE = new Currency({
        id: 'HXdFUiw5yLLWhkorsRy1E5GttG2QZfzEYAVgEgjBNh8t',
        displayName: 'ANRYZE',
        shortName: 'ANRYZE',
        precision: 8,
        verified: true
    });

    var KLX = new Currency({
        id: '7gMmyXjd4uZwaAFcfrfXQR4fAhDi8waXANb8zjqhRSfq',
        displayName: 'Kylix',
        shortName: 'KLX',
        precision: 2,
        verified: true
    });

    var POST = new Currency({
        id: 'DQUrzGsXp84Z4aPXLEkhgApf8TpCQqtoY87gdwUTurL7',
        displayName: 'NEWS',
        shortName: 'POST',
        precision: 8,
        verified: true
    });

    var TRY = new Currency({
        id: '2mX5DzVKWrAJw8iwdJnV2qtoeVG9h5nTDpTqC1wb1WEN',
        displayName: 'TRY',
        shortName: 'TRY',
        precision: 2,
        verified: true
    });

    var JDC = new Currency({
        id: 'Chs34HQrj37VbWHr8NDZiRZEkyEGBiPowSF4RjrRBCHn',
        displayName: 'JustDatingCoin',
        shortName: 'JDC',
        precision: 8,
        verified: true
    });

    var Blue = new Currency({
        id: 'HkhKVMzWNE7DJ5fZJpwBMs4FMxFwZFFh9UT5GXAVdZvE',
        displayName: 'BlueToken',
        shortName: 'Blue',
        precision: 0,
        verified: true
    });

    var AKCHE = new Currency({
        id: '3ihiQ1TJhe7fBrMc8o9EY8tQNU6phkmp8ZEyvVe4Jfhk',
        displayName: 'AKCHE',
        shortName: 'AKCHE',
        precision: 4,
        verified: true
    });

    var TDX = new Currency({
        id: '3QvxP6YFBKpWJSMAfYtL8Niv8KmmKsnpb9uQwQpg8QN2',
        displayName: 'Tidex',
        shortName: 'TDX',
        precision: 2,
        verified: true
    });

    var InPay = new Currency({
        id: '9pPVf3gcLH3NQA2aYVRcTV2N2i32qBzA5cEMWYqBYfMi',
        displayName: 'InPay',
        shortName: 'InPay',
        precision: 8,
        verified: true
    });

    var LIQUID = new Currency({
        id: '7FzrHF1pueRFrPEupz6oiVGTUZqe8epvC7ggWUx8n1bd',
        displayName: 'Liquid',
        shortName: 'LIQUID',
        precision: 8,
        verified: true
    });

    var TN = new Currency({
        id: 'HxQSdHu1X4ZVXmJs232M6KfZi78FseeWaEXJczY6UxJ3',
        displayName: 'TurtleNode',
        shortName: 'TN',
        precision: 2,
        verified: true
    });

    var ENAN = new Currency({
        id: '53sxSVvj3PJkZhZKz6gLc5coXxAyC7zbgo5RtXfqRsym',
        displayName: 'eco-NAN',
        shortName: 'ENAN',
        precision: 8,
        verified: true
    });

    var ContestCoin = new Currency({
        id: '2ULyqYTJfrDknc2m5iPPkrvpHtRiB57nHag4RCSwZWQS',
        displayName: 'ContestCoin',
        shortName: 'ContestCoin',
        precision: 0,
        verified: true
    });

    var SMQ = new Currency({
        id: 'CBik4JEmsoPZKKATnShULYj2ebUao5aada9N1XGznEET',
        displayName: 'Simdaq Token',
        shortName: 'SMQ',
        precision: 8,
        verified: true
    });

    var DASH = new Currency({
        id: 'B3uGHFRpSUuGEDWjqB9LWWxafQj8VTvpMucEyoxzws5H',
        displayName: 'Dash token',
        shortName: 'DASH',
        precision: 8,
        verified: true
    });

    function isCached(assetId) {
        return currencyCache.hasOwnProperty(assetId);
    }

    function invalidateCache() {
        currencyCache = {};

        currencyCache[WAVES.id] = WAVES;
        currencyCache[BTC.id] = BTC;
        currencyCache[BCH.id] = BCH;
        currencyCache[ETH.id] = ETH;
        currencyCache[LTC.id] = LTC;
        currencyCache[ZEC.id] = ZEC;
        currencyCache[USD.id] = USD;
        currencyCache[EUR.id] = EUR;
        currencyCache[CNY.id] = CNY;
        currencyCache[WCT.id] = WCT;
        currencyCache[MRT.id] = MRT;
        currencyCache[WGO.id] = WGO;
        currencyCache[INCNT.id] = INCNT;
        currencyCache[RBX.id] = RBX;
        currencyCache[MER.id] = MER;
        currencyCache[BAt.id] = BAt;
        currencyCache[UPC.id] = UPC;
        currencyCache[MIR.id] = MIR;
		currencyCache[YL.id] = YL;
		currencyCache[MP.id] = MP;
		currencyCache[RI.id] = RI;
		currencyCache[GS.id] = GS;
		currencyCache[BA.id] = BA;
        currencyCache[TKS.id] = TKS;
        currencyCache[WPN.id] = WPN;
        currencyCache[EFYT.id] = EFYT;
        currencyCache[MGO.id] = MGO;
        currencyCache[ETT.id] = ETT;
        currencyCache[ZRC.id] = ZRC;
        currencyCache[PBKX.id] = PBKX;
        currencyCache[PING.id] = PING;
        currencyCache[STAR.id] = STAR;
        currencyCache[BEAR.id] = BEAR;
        currencyCache[DAR.id] = DAR;
        currencyCache[GLIPP.id] = GLIPP;
        currencyCache[mTNT.id] = mTNT;
        currencyCache[BKT.id] = BKT;
        currencyCache[WGR.id] = WGR;
        currencyCache[PBT.id] = PBT;
        currencyCache[PPIO.id] = PPIO;
        currencyCache[STA.id] = STA;
        currencyCache[CORE.id] = CORE;
        currencyCache[KSS.id] = KSS;
        currencyCache[WFN.id] = WFN;
        currencyCache[GRPH.id] = GRPH;
        currencyCache[ESC.id] = ESC;
        currencyCache[AGRO.id] = AGRO;
        currencyCache[KING.id] = KING;
        currencyCache[ARNA.id] = ARNA;
        currencyCache[WNET.id] = WNET;
        currencyCache[PBK.id] = PBK;
        currencyCache[TOM.id] = TOM;
        currencyCache[ViC.id] = ViC;
        currencyCache[EQ.id] = EQ;
        currencyCache[SHDW.id] = SHDW;
        currencyCache[GIN.id] = GIN;
        currencyCache[NEWS.id] = NEWS;
        currencyCache[COXST.id] = COXST;
        currencyCache[SMR.id] = SMR;
        currencyCache[RDT.id] = RDT;
        currencyCache[IRA.id] = IRA;
        currencyCache[_2B4T.id] = _2B4T;
        currencyCache[MBX.id] = MBX;
        currencyCache[KNOWS.id] = KNOWS;
        currencyCache[MBI.id] = MBI;
        currencyCache[COF.id] = COF;
        currencyCache[CHILL.id] = CHILL;
        currencyCache[KUN.id] = KUN;
        currencyCache[CEIT.id] = CEIT;
        currencyCache[SGIT.id] = SGIT;
        currencyCache[AHT.id] = AHT;
        currencyCache[HALAL.id] = HALAL;
        currencyCache[DIMO.id] = DIMO;
        currencyCache[WIN.id] = WIN;
        currencyCache[YTB.id] = YTB;
        currencyCache[GFL.id] = GFL;
        currencyCache[DAT.id] = DAT;
        currencyCache[VK.id] = VK;
        currencyCache[UWT.id] = UWT;
        currencyCache[AP_0.id] = AP_0;
        currencyCache[AP_1.id] = AP_1;
        currencyCache[AP_2.id] = AP_2;
        currencyCache[OCL.id] = OCL;
        currencyCache[OCC.id] = OCC;
        currencyCache[SMART.id] = SMART;
        currencyCache[DCN.id] = DCN;
        currencyCache[RSC.id] = RSC;
        currencyCache[LIKE.id] = LIKE;
        currencyCache[FUPOOF.id] = FUPOOF;
        currencyCache[ANY.id] = ANY;
        currencyCache[BRW.id] = BRW;
        currencyCache[CNX.id] = CNX;
        currencyCache[DARF.id] = DARF;
        currencyCache[WNT.id] = WNT;
        currencyCache[CWV.id] = CWV;
        currencyCache[WCASH.id] = WCASH;
        currencyCache[LIFE.id] = LIFE;
        currencyCache[RDCR.id] = RDCR;
        currencyCache[THNX.id] = THNX;
        currencyCache[IKV.id] = IKV;
        currencyCache[WDESK.id] = WDESK;
        currencyCache[SUR.id] = SUR;
        currencyCache[SIBERIA.id] = SIBERIA;
        currencyCache[MODO.id] = MODO;
        currencyCache[GIVE.id] = GIVE;
        currencyCache[SOL.id] = SOL;
        currencyCache[EOT.id] = EOT;
        currencyCache[FIX.id] = FIX;
        currencyCache[KKO.id] = KKO;
        currencyCache[JNT.id] = JNT;
        currencyCache[CGT.id] = CGT;
        currencyCache[AFFT.id] = AFFT;
        currencyCache[MFL.id] = MFL;
        currencyCache[TURTL.id] = TURTL;
        currencyCache[PropX.id] = PropX;
        currencyCache[ECT.id] = ECT;
        currencyCache[STT.id] = STT;
        currencyCache[SCLRI.id] = SCLRI;
        currencyCache[Knish.id] = Knish;
        currencyCache[WPC.id] = WPC;
        currencyCache[cryptoSterling.id] = cryptoSterling;
        currencyCache[NGN.id] = NGN;
        currencyCache[ALTOCAR.id] = ALTOCAR;
        currencyCache[ANAT.id] = ANAT;
        currencyCache[ATKN.id] = ATKN;
        currencyCache[ATOM.id] = ATOM;
        currencyCache[BAR.id] = BAR;
        currencyCache[BCF.id] = BCF;
        currencyCache[BET.id] = BET;
        currencyCache[BIRTAL.id] = BIRTAL;
        currencyCache[BITCHEKE.id] = BITCHEKE;
        currencyCache[BITD.id] = BITD;
        currencyCache[BKC.id] = BKC;
        currencyCache[CROW.id] = CROW;
        currencyCache[CBT.id] = CBT;
        currencyCache[EDEN.id] = EDEN;
        currencyCache[EQUA.id] = EQUA;
        currencyCache[EQUILD.id] = EQUILD;
        currencyCache[ETERP.id] = ETERP;
        currencyCache[FENIX.id] = FENIX;
        currencyCache[FTB.id] = FTB;
        currencyCache[FLEX.id] = FLEX;
        currencyCache[FNX.id] = FNX;
        currencyCache[GBC.id] = GBC;
        currencyCache[Grant.id] = Grant;
        currencyCache[GrantsBounty.id] = GrantsBounty;
        currencyCache[HEART.id] = HEART;
        currencyCache[HOME.id] = HOME;
        currencyCache[HTC.id] = HTC;
        currencyCache[IMMO.id] = IMMO;
        currencyCache[JNET.id] = JNET;
        currencyCache[KRIP.id] = KRIP;
        currencyCache[LLA.id] = LLA;
        currencyCache[limburg.id] = limburg;
        currencyCache[LIVEBIT.id] = LIVEBIT;
        currencyCache[MED.id] = MED;
        currencyCache[MNG.id] = MNG;
        currencyCache[MMBT.id] = MMBT;
        currencyCache[MPST.id] = MPST;
        currencyCache[MFS.id] = MFS;
        currencyCache[MCS.id] = MCS;
        currencyCache[NICNAC.id] = NICNAC;
        currencyCache[NUTS.id] = NUTS;
        currencyCache[OCTANOX.id] = OCTANOX;
        currencyCache[P2P.id] = P2P;
        currencyCache[preNEX.id] = preNEX;
        currencyCache[preVITO.id] = preVITO;
        currencyCache[PRIMO.id] = PRIMO;
        currencyCache[PYTI.id] = PYTI;
        currencyCache[PUMP.id] = PUMP;
        currencyCache[QUASA.id] = QUASA;
        currencyCache[REDFISH.id] = REDFISH;
        currencyCache[RMOB.id] = RMOB;
        currencyCache[RXSC.id] = RXSC;
        currencyCache[SEBEUM.id] = SEBEUM;
        currencyCache[SGCN.id] = SGCN;
        currencyCache[SHEEP.id] = SHEEP;
        currencyCache[SGT.id] = SGT;
        currencyCache[SQUASH.id] = SQUASH;
        currencyCache[SRE.id] = SRE;
        currencyCache[STYLO.id] = STYLO;
        currencyCache[SXAS.id] = SXAS;
        currencyCache[TENEBRIS.id] = TENEBRIS;
        currencyCache[TEXCOIN.id] = TEXCOIN;
        currencyCache[Tidals.id] = Tidals;
        currencyCache[TFT.id] = TFT;
        currencyCache[LOYAL.id] = LOYAL;
        currencyCache[TOPS.id] = TOPS;
        currencyCache[TRGL.id] = TRGL;
        currencyCache[TRUZTAR.id] = TRUZTAR;
        currencyCache[TWENTYONE.id] = TWENTYONE;
        currencyCache[UOOMAG.id] = UOOMAG;
        currencyCache[VTN.id] = VTN;
        currencyCache[WTC.id] = WTC;
        currencyCache[XVCA.id] = XVCA;
        currencyCache[ANRYZE.id] = ANRYZE;
        currencyCache[KLX.id] = KLX;
        currencyCache[POST.id] = POST;
        currencyCache[TRY.id] = TRY;
        currencyCache[JDC.id] = JDC;
        currencyCache[Blue.id] = Blue;
        currencyCache[AKCHE.id] = AKCHE;
        currencyCache[TDX.id] = TDX;
        currencyCache[InPay.id] = InPay;
        currencyCache[LIQUID.id] = LIQUID;
        currencyCache[TN.id] = TN;
        currencyCache[ENAN.id] = ENAN;
        currencyCache[ContestCoin.id] = ContestCoin;
        currencyCache[SMQ.id] = SMQ;
    }

    invalidateCache();

    return {
        create: function (data) {
            // if currency data.id is not set - it's a temporary instance
            if (!_.has(data, 'id')) {
                return new Currency(data);
            }

            if (!currencyCache[data.id]) {
                currencyCache[data.id] = new Currency(data);
            }

            return currencyCache[data.id];
        },
        invalidateCache: invalidateCache,
        isCached: isCached,
        WAVES: WAVES,
        BTC: BTC,
        BCH: BCH,
        ETH: ETH,
        LTC: LTC,
        ZEC: ZEC,
        USD: USD,
        EUR: EUR,
        CNY: CNY,
        WCT: WCT,
        MRT: MRT,
        WGO: WGO,
        INCNT: INCNT,
        RBX: RBX,
        MER: MER,
        BAt: BAt,
        UPC: UPC,
        MIR: MIR,
		YL: YL,
		MP: MP,
		RI: RI,
		GS: GS,
		BA, BA,
        TKS: TKS,
        WPN: WPN,
        EFYT: EFYT,
        MGO: MGO,
        ETT: ETT,
        ZRC: ZRC,
        PBKX: PBKX,
        PING: PING,
        STAR: STAR,
        BEAR: BEAR,
        DAR: DAR,
        GLIPP: GLIPP,
        mTNT: mTNT,
        BKT: BKT,
        WGR: WGR,
        PBT: PBT,
        PPIO: PPIO,
        STA: STA,
        CORE: CORE,
        KSS: KSS,
        WFN: WFN,
        GRPH: GRPH,
        ESC: ESC,
        AGRO: AGRO,
        KING: KING,
        ARNA: ARNA,
        WNET: WNET,
        PBK: PBK,
        TOM: TOM,
        ViC: ViC,
        EQ: EQ,
        SHDW: SHDW,
        GIN: GIN,
        NEWS: NEWS,
        COXST: COXST,
        SMR: SMR,
        RDT: RDT,
        IRA: IRA,
        _2B4T: _2B4T,
        MBX: MBX,
        KNOWS: KNOWS,
        MBI: MBI,
        COF: COF,
        CHILL: CHILL,
        KUN: KUN,
        CEIT: CEIT,
        SGIT: SGIT,
        AHT: AHT,
        HALAL: HALAL,
        DIMO: DIMO,
        WIN: WIN,
        YTB: YTB,
        GFL: GFL,
        DAT: DAT,
        VK: VK,
        UWT: UWT,
        AP_0: AP_0,
        AP_1: AP_1,
        AP_2: AP_2,
        OCL: OCL,
        OCC: OCC,
        SMART: SMART,
        DCN: DCN,
        RSC: RSC,
        LIKE: LIKE,
        FUPOOF: FUPOOF,
        ANY: ANY,
        BRW: BRW,
        CNX: CNX,
        DARF: DARF,
        WNT: WNT,
        CWV: CWV,
        WCASH: WCASH,
        LIFE: LIFE,
        RDCR: RDCR,
        THNX: THNX,
        IKV: IKV,
        WDESK: WDESK,
        SUR: SUR,
        SIBERIA: SIBERIA,
        MODO: MODO,
        GIVE: GIVE,
        SOL: SOL,
        EOT: EOT,
        FIX: FIX,
        KKO: KKO,
        JNT: JNT,
        CGT: CGT,
        AFFT: AFFT,
        MFL: MFL,
        TURTL: TURTL,
        PropX: PropX,
        ECT: ECT,
        STT: STT,
        SCLRI: SCLRI,
        Knish: Knish,
        WPC: WPC,
        cryptoSterling: cryptoSterling,
        NGN: NGN,
        ALTOCAR: ALTOCAR,
        ANAT: ANAT,
        ATKN: ATKN,
        ATOM: ATOM,
        BAR: BAR,
        BCF: BCF,
        BET: BET,
        BIRTAL: BIRTAL,
        BITCHEKE: BITCHEKE,
        BITD: BITD,
        BKC: BKC,
        CROW: CROW,
        CBT: CBT,
        EDEN: EDEN,
        EQUA: EQUA,
        EQUILD: EQUILD,
        ETERP: ETERP,
        FENIX: FENIX,
        FTB: FTB,
        FLEX: FLEX,
        FNX: FNX,
        GBC: GBC,
        Grant: Grant,
        GrantsBounty: GrantsBounty,
        HEART: HEART,
        HOME: HOME,
        HTC: HTC,
        IMMO: IMMO,
        JNET: JNET,
        KRIP: KRIP,
        LLA: LLA,
        limburg: limburg,
        LIVEBIT: LIVEBIT,
        MED: MED,
        MNG: MNG,
        MMBT: MMBT,
        MPST: MPST,
        MFS: MFS,
        MCS: MCS,
        NICNAC: NICNAC,
        NUTS: NUTS,
        OCTANOX: OCTANOX,
        P2P: P2P,
        preNEX: preNEX,
        preVITO: preVITO,
        PRIMO: PRIMO,
        PYTI: PYTI,
        PUMP: PUMP,
        QUASA: QUASA,
        REDFISH: REDFISH,
        RMOB: RMOB,
        RXSC: RXSC,
        SEBEUM: SEBEUM,
        SGCN: SGCN,
        SHEEP: SHEEP,
        SGT: SGT,
        SQUASH: SQUASH,
        SRE: SRE,
        STYLO: STYLO,
        SXAS: SXAS,
        TENEBRIS: TENEBRIS,
        TEXCOIN: TEXCOIN,
        Tidals: Tidals,
        TFT: TFT,
        LOYAL: LOYAL,
        TOPS: TOPS,
        TRGL: TRGL,
        TRUZTAR: TRUZTAR,
        TWENTYONE: TWENTYONE,
        UOOMAG: UOOMAG,
        VTN: VTN,
        WTC: WTC,
        XVCA: XVCA,
        ANRYZE: ANRYZE,
        KLX: KLX,
        POST: POST,
        TRY: TRY,
        JDC: JDC,
        Blue: Blue,
        AKCHE: AKCHE,
        TDX: TDX,
        InPay: InPay,
        LIQUID: LIQUID,
        TN: TN,
        ENAN: ENAN,
        ContestCoin: ContestCoin,
        SMQ: SMQ,
        DASH: DASH
    };
})();

var Money = function(amount, currency) {
    var DECIMAL_SEPARATOR = '.';
    var THOUSANDS_SEPARATOR = ',';

    if (amount === undefined)
        throw Error('Amount is required');

    if (currency === undefined)
        throw Error('Currency is required');

    this.amount = new Decimal(amount)
        .toDecimalPlaces(currency.precision, Decimal.ROUND_FLOOR);
    this.currency = currency;

    var integerPart = function (value) {
        return value.trunc();
    };

    var fractionPart = function (value) {
        return value.minus(integerPart(value));
    };

    var format = function (value) {
        return value.toFixed(currency.precision, currency.roundingMode);
    };

    var validateCurrency = function (expected, actual) {
        if (expected.id !== actual.id)
            throw new Error('Currencies must be the same for operands. Expected: ' +
                expected.displayName + '; Actual: ' + actual.displayName);
    };

    var fromTokensToCoins = function (valueInTokens, currencyPrecision) {
        return valueInTokens.mul(Math.pow(10, currencyPrecision)).trunc();
    };

    var fromCoinsToTokens = function (valueInCoins, currencyPrecision) {
        return valueInCoins.trunc().div(Math.pow(10, currencyPrecision));
    };

    // in 2016 Safari doesn't support toLocaleString()
    // that's why we need this method
    var formatWithThousandsSeparator = function (formattedAmount) {
        var parts = formattedAmount.split(DECIMAL_SEPARATOR);
        parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, THOUSANDS_SEPARATOR);

        return parts.join(DECIMAL_SEPARATOR);
    };

    this.formatAmount = function (stripZeroes, useThousandsSeparator) {
        var result = stripZeroes ?
            this.toTokens().toFixed(this.amount.decimalPlaces()) :
            format(this.amount);

        return useThousandsSeparator ? formatWithThousandsSeparator(result) : result;
    };

    this.formatIntegerPart = function () {
        return integerPart(this.amount).toFixed(0);
    };

    this.formatFractionPart = function () {
        var valueWithLeadingZero = format(fractionPart(this.amount));

        return valueWithLeadingZero.slice(1); // stripping the leading zero
    };

    this.toTokens = function () {
        var result = fromCoinsToTokens(fromTokensToCoins(this.amount, this.currency.precision),
            this.currency.precision);

        return result.toNumber();
    };

    this.toCoins = function () {
        return fromTokensToCoins(this.amount, this.currency.precision).toNumber();
    };

    this.plus = function (money) {
        validateCurrency(this.currency, money.currency);

        return new Money(this.amount.plus(money.amount), this.currency);
    };

    this.minus = function (money) {
        validateCurrency(this.currency, money.currency);

        return new Money(this.amount.minus(money.amount), this.currency);
    };

    this.greaterThan = function (other) {
        validateCurrency(this.currency, other.currency);

        return this.amount.greaterThan(other.amount);
    };

    this.greaterThanOrEqualTo = function (other) {
        validateCurrency(this.currency, other.currency);

        return this.amount.greaterThanOrEqualTo(other.amount);
    };

    this.lessThan = function (other) {
        validateCurrency(this.currency, other.currency);

        return this.amount.lessThan(other.amount);
    };

    this.lessThanOrEqualTo = function (other) {
        validateCurrency(this.currency, other.currency);

        return this.amount.lessThanOrEqualTo(other.amount);
    };

    this.multiply = function (multiplier) {
        if (!_.isNumber(multiplier))
            throw new Error('Number is expected');

        if (isNaN(multiplier))
            throw new Error('Multiplication by NaN is not supported');

        return new Money(this.amount.mul(multiplier), this.currency);
    };

    this.toString = function () {
        return this.formatAmount(false, true) + ' ' + this.currency.toString();
    };

    return this;
};

Money.fromTokens = function (amount, currency) {
    return new Money(amount, currency);
};

Money.fromCoins = function (amount, currency) {
    currency = currency || {};
    if (currency.precision === undefined)
        throw new Error('A valid currency must be provided');

    amount = new Decimal(amount);
    amount = amount.div(Math.pow(10, currency.precision));

    return new Money(amount, currency);
};

// set up decimal to format 0.00000001 as is instead of 1e-8
Decimal.config({toExpNeg: -(Currency.WAVES.precision + 1)});


(function() {
    'use strict';

    angular.module('waves.core', [
        'waves.core.services',
        'waves.core.constants',
        'waves.core.filter',
        'waves.core.directives'
    ]);
})();

(function() {
    'use strict';

    angular
        .module('waves.core.constants', [])
        .constant('constants.network', {
            NETWORK_NAME: 'devel', // 'devnet', 'testnet', 'mainnet'
            ADDRESS_VERSION: 1,
            NETWORK_CODE: 'T',
            INITIAL_NONCE: 0
        });

    angular
        .module('waves.core.constants')
        .constant('constants.address', {
            RAW_ADDRESS_LENGTH : 35,
            ADDRESS_PREFIX: '1W',
            MAINNET_ADDRESS_REGEXP: /^[a-zA-Z0-9]{35}$/
        });

    angular
        .module('waves.core.constants')
        .constant('constants.features', {
            ALIAS_VERSION: 2
        });

    angular
        .module('waves.core.constants')
        .constant('constants.ui', {
            MINIMUM_PAYMENT_AMOUNT : 1e-8,
            MINIMUM_TRANSACTION_FEE : 0.001,
            AMOUNT_DECIMAL_PLACES : 8,
            JAVA_MAX_LONG: 9223372036854775807,
            MAXIMUM_ATTACHMENT_BYTE_SIZE: 140
        });

    angular
        .module('waves.core.constants')
        .constant('constants.transactions', {
            PAYMENT_TRANSACTION_TYPE : 2,
            ASSET_ISSUE_TRANSACTION_TYPE: 3,
            ASSET_TRANSFER_TRANSACTION_TYPE: 4,
            ASSET_REISSUE_TRANSACTION_TYPE: 5,
            ASSET_BURN_TRANSACTION_TYPE: 6,
            EXCHANGE_TRANSACTION_TYPE: 7,
            START_LEASING_TRANSACTION_TYPE: 8,
            CANCEL_LEASING_TRANSACTION_TYPE: 9,
            CREATE_ALIAS_TRANSACTION_TYPE: 10,
            MASS_PAYMENT_TRANSACTION_TYPE: 11
        });
})();

(function () {
    'use strict';
    angular.module('waves.core.directives', []);
})();

(function() {
    'use strict';

    angular.module('waves.core.services', ['waves.core', 'restangular'])
        .config(function () {
            if (!String.prototype.startsWith) {
                Object.defineProperty(String.prototype, 'startsWith', {
                    enumerable: false,
                    configurable: false,
                    writable: false,
                    value: function(searchString, position) {
                        position = position || 0;
                        return this.lastIndexOf(searchString, position) === position;
                    }
                });
            }

            if (typeof String.prototype.endsWith !== 'function') {
                String.prototype.endsWith = function(suffix) {
                    return this.indexOf(suffix, this.length - suffix.length) !== -1;
                };
            }
        });
})();

/**
 * @author BjÃ¶rn Wenzel
 */
(function () {
    'use strict';
    angular.module('waves.core.filter', []);
})();

//https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md
(function() {
    'use strict';

    angular
        .module('waves.core.services')
        .constant('wordList', [
            'abandon', 'ability', 'able', 'about', 'above', 'absent', 'absorb', 'abstract', 'absurd', 'abuse', 'access',
            'accident', 'account', 'accuse', 'achieve', 'acid', 'acoustic', 'acquire', 'across', 'act', 'action',
            'actor', 'actress', 'actual', 'adapt', 'add', 'addict', 'address', 'adjust', 'admit', 'adult', 'advance',
            'advice', 'aerobic', 'affair', 'afford', 'afraid', 'again', 'age', 'agent', 'agree', 'ahead', 'aim', 'air',
            'airport', 'aisle', 'alarm', 'album', 'alcohol', 'alert', 'alien', 'all', 'alley', 'allow', 'almost',
            'alone', 'alpha', 'already', 'also', 'alter', 'always', 'amateur', 'amazing', 'among', 'amount', 'amused',
            'analyst', 'anchor', 'ancient', 'anger', 'angle', 'angry', 'animal', 'ankle', 'announce', 'annual',
            'another', 'answer', 'antenna', 'antique', 'anxiety', 'any', 'apart', 'apology', 'appear', 'apple',
            'approve', 'april', 'arch', 'arctic', 'area', 'arena', 'argue', 'arm', 'armed', 'armor', 'army', 'around',
            'arrange', 'arrest', 'arrive', 'arrow', 'art', 'artefact', 'artist', 'artwork', 'ask', 'aspect', 'assault',
            'asset', 'assist', 'assume', 'asthma', 'athlete', 'atom', 'attack', 'attend', 'attitude', 'attract',
            'auction', 'audit', 'august', 'aunt', 'author', 'auto', 'autumn', 'average', 'avocado', 'avoid', 'awake',
            'aware', 'away', 'awesome', 'awful', 'awkward', 'axis', 'baby', 'bachelor', 'bacon', 'badge', 'bag',
            'balance', 'balcony', 'ball', 'bamboo', 'banana', 'banner', 'bar', 'barely', 'bargain', 'barrel', 'base',
            'basic', 'basket', 'battle', 'beach', 'bean', 'beauty', 'because', 'become', 'beef', 'before', 'begin',
            'behave', 'behind', 'believe', 'below', 'belt', 'bench', 'benefit', 'best', 'betray', 'better', 'between',
            'beyond', 'bicycle', 'bid', 'bike', 'bind', 'biology', 'bird', 'birth', 'bitter', 'black', 'blade', 'blame',
            'blanket', 'blast', 'bleak', 'bless', 'blind', 'blood', 'blossom', 'blouse', 'blue', 'blur', 'blush',
            'board', 'boat', 'body', 'boil', 'bomb', 'bone', 'bonus', 'book', 'boost', 'border', 'boring', 'borrow',
            'boss', 'bottom', 'bounce', 'box', 'boy', 'bracket', 'brain', 'brand', 'brass', 'brave', 'bread', 'breeze',
            'brick', 'bridge', 'brief', 'bright', 'bring', 'brisk', 'broccoli', 'broken', 'bronze', 'broom', 'brother',
            'brown', 'brush', 'bubble', 'buddy', 'budget', 'buffalo', 'build', 'bulb', 'bulk', 'bullet', 'bundle',
            'bunker', 'burden', 'burger', 'burst', 'bus', 'business', 'busy', 'butter', 'buyer', 'buzz', 'cabbage',
            'cabin', 'cable', 'cactus', 'cage', 'cake', 'call', 'calm', 'camera', 'camp', 'can', 'canal', 'cancel',
            'candy', 'cannon', 'canoe', 'canvas', 'canyon', 'capable', 'capital', 'captain', 'car', 'carbon', 'card',
            'cargo', 'carpet', 'carry', 'cart', 'case', 'cash', 'casino', 'castle', 'casual', 'cat', 'catalog', 'catch',
            'category', 'cattle', 'caught', 'cause', 'caution', 'cave', 'ceiling', 'celery', 'cement', 'census',
            'century', 'cereal', 'certain', 'chair', 'chalk', 'champion', 'change', 'chaos', 'chapter', 'charge',
            'chase', 'chat', 'cheap', 'check', 'cheese', 'chef', 'cherry', 'chest', 'chicken', 'chief', 'child',
            'chimney', 'choice', 'choose', 'chronic', 'chuckle', 'chunk', 'churn', 'cigar', 'cinnamon', 'circle',
            'citizen', 'city', 'civil', 'claim', 'clap', 'clarify', 'claw', 'clay', 'clean', 'clerk', 'clever', 'click',
            'client', 'cliff', 'climb', 'clinic', 'clip', 'clock', 'clog', 'close', 'cloth', 'cloud', 'clown', 'club',
            'clump', 'cluster', 'clutch', 'coach', 'coast', 'coconut', 'code', 'coffee', 'coil', 'coin', 'collect',
            'color', 'column', 'combine', 'come', 'comfort', 'comic', 'common', 'company', 'concert', 'conduct',
            'confirm', 'congress', 'connect', 'consider', 'control', 'convince', 'cook', 'cool', 'copper', 'copy',
            'coral', 'core', 'corn', 'correct', 'cost', 'cotton', 'couch', 'country', 'couple', 'course', 'cousin',
            'cover', 'coyote', 'crack', 'cradle', 'craft', 'cram', 'crane', 'crash', 'crater', 'crawl', 'crazy',
            'cream', 'credit', 'creek', 'crew', 'cricket', 'crime', 'crisp', 'critic', 'crop', 'cross', 'crouch',
            'crowd', 'crucial', 'cruel', 'cruise', 'crumble', 'crunch', 'crush', 'cry', 'crystal', 'cube', 'culture',
            'cup', 'cupboard', 'curious', 'current', 'curtain', 'curve', 'cushion', 'custom', 'cute', 'cycle', 'dad',
            'damage', 'damp', 'dance', 'danger', 'daring', 'dash', 'daughter', 'dawn', 'day', 'deal', 'debate',
            'debris', 'decade', 'december', 'decide', 'decline', 'decorate', 'decrease', 'deer', 'defense', 'define',
            'defy', 'degree', 'delay', 'deliver', 'demand', 'demise', 'denial', 'dentist', 'deny', 'depart', 'depend',
            'deposit', 'depth', 'deputy', 'derive', 'describe', 'desert', 'design', 'desk', 'despair', 'destroy',
            'detail', 'detect', 'develop', 'device', 'devote', 'diagram', 'dial', 'diamond', 'diary', 'dice', 'diesel',
            'diet', 'differ', 'digital', 'dignity', 'dilemma', 'dinner', 'dinosaur', 'direct', 'dirt', 'disagree',
            'discover', 'disease', 'dish', 'dismiss', 'disorder', 'display', 'distance', 'divert', 'divide', 'divorce',
            'dizzy', 'doctor', 'document', 'dog', 'doll', 'dolphin', 'domain', 'donate', 'donkey', 'donor', 'door',
            'dose', 'double', 'dove', 'draft', 'dragon', 'drama', 'drastic', 'draw', 'dream', 'dress', 'drift', 'drill',
            'drink', 'drip', 'drive', 'drop', 'drum', 'dry', 'duck', 'dumb', 'dune', 'during', 'dust', 'dutch', 'duty',
            'dwarf', 'dynamic', 'eager', 'eagle', 'early', 'earn', 'earth', 'easily', 'east', 'easy', 'echo', 'ecology',
            'economy', 'edge', 'edit', 'educate', 'effort', 'egg', 'eight', 'either', 'elbow', 'elder', 'electric',
            'elegant', 'element', 'elephant', 'elevator', 'elite', 'else', 'embark', 'embody', 'embrace', 'emerge',
            'emotion', 'employ', 'empower', 'empty', 'enable', 'enact', 'end', 'endless', 'endorse', 'enemy', 'energy',
            'enforce', 'engage', 'engine', 'enhance', 'enjoy', 'enlist', 'enough', 'enrich', 'enroll', 'ensure',
            'enter', 'entire', 'entry', 'envelope', 'episode', 'equal', 'equip', 'era', 'erase', 'erode', 'erosion',
            'error', 'erupt', 'escape', 'essay', 'essence', 'estate', 'eternal', 'ethics', 'evidence', 'evil', 'evoke',
            'evolve', 'exact', 'example', 'excess', 'exchange', 'excite', 'exclude', 'excuse', 'execute', 'exercise',
            'exhaust', 'exhibit', 'exile', 'exist', 'exit', 'exotic', 'expand', 'expect', 'expire', 'explain', 'expose',
            'express', 'extend', 'extra', 'eye', 'eyebrow', 'fabric', 'face', 'faculty', 'fade', 'faint', 'faith',
            'fall', 'false', 'fame', 'family', 'famous', 'fan', 'fancy', 'fantasy', 'farm', 'fashion', 'fat', 'fatal',
            'father', 'fatigue', 'fault', 'favorite', 'feature', 'february', 'federal', 'fee', 'feed', 'feel', 'female',
            'fence', 'festival', 'fetch', 'fever', 'few', 'fiber', 'fiction', 'field', 'figure', 'file', 'film',
            'filter', 'final', 'find', 'fine', 'finger', 'finish', 'fire', 'firm', 'first', 'fiscal', 'fish', 'fit',
            'fitness', 'fix', 'flag', 'flame', 'flash', 'flat', 'flavor', 'flee', 'flight', 'flip', 'float', 'flock',
            'floor', 'flower', 'fluid', 'flush', 'fly', 'foam', 'focus', 'fog', 'foil', 'fold', 'follow', 'food',
            'foot', 'force', 'forest', 'forget', 'fork', 'fortune', 'forum', 'forward', 'fossil', 'foster', 'found',
            'fox', 'fragile', 'frame', 'frequent', 'fresh', 'friend', 'fringe', 'frog', 'front', 'frost', 'frown',
            'frozen', 'fruit', 'fuel', 'fun', 'funny', 'furnace', 'fury', 'future', 'gadget', 'gain', 'galaxy',
            'gallery', 'game', 'gap', 'garage', 'garbage', 'garden', 'garlic', 'garment', 'gas', 'gasp', 'gate',
            'gather', 'gauge', 'gaze', 'general', 'genius', 'genre', 'gentle', 'genuine', 'gesture', 'ghost', 'giant',
            'gift', 'giggle', 'ginger', 'giraffe', 'girl', 'give', 'glad', 'glance', 'glare', 'glass', 'glide',
            'glimpse', 'globe', 'gloom', 'glory', 'glove', 'glow', 'glue', 'goat', 'goddess', 'gold', 'good', 'goose',
            'gorilla', 'gospel', 'gossip', 'govern', 'gown', 'grab', 'grace', 'grain', 'grant', 'grape', 'grass',
            'gravity', 'great', 'green', 'grid', 'grief', 'grit', 'grocery', 'group', 'grow', 'grunt', 'guard', 'guess',
            'guide', 'guilt', 'guitar', 'gun', 'gym', 'habit', 'hair', 'half', 'hammer', 'hamster', 'hand', 'happy',
            'harbor', 'hard', 'harsh', 'harvest', 'hat', 'have', 'hawk', 'hazard', 'head', 'health', 'heart', 'heavy',
            'hedgehog', 'height', 'hello', 'helmet', 'help', 'hen', 'hero', 'hidden', 'high', 'hill', 'hint', 'hip',
            'hire', 'history', 'hobby', 'hockey', 'hold', 'hole', 'holiday', 'hollow', 'home', 'honey', 'hood', 'hope',
            'horn', 'horror', 'horse', 'hospital', 'host', 'hotel', 'hour', 'hover', 'hub', 'huge', 'human', 'humble',
            'humor', 'hundred', 'hungry', 'hunt', 'hurdle', 'hurry', 'hurt', 'husband', 'hybrid', 'ice', 'icon', 'idea',
            'identify', 'idle', 'ignore', 'ill', 'illegal', 'illness', 'image', 'imitate', 'immense', 'immune',
            'impact', 'impose', 'improve', 'impulse', 'inch', 'include', 'income', 'increase', 'index', 'indicate',
            'indoor', 'industry', 'infant', 'inflict', 'inform', 'inhale', 'inherit', 'initial', 'inject', 'injury',
            'inmate', 'inner', 'innocent', 'input', 'inquiry', 'insane', 'insect', 'inside', 'inspire', 'install',
            'intact', 'interest', 'into', 'invest', 'invite', 'involve', 'iron', 'island', 'isolate', 'issue', 'item',
            'ivory', 'jacket', 'jaguar', 'jar', 'jazz', 'jealous', 'jeans', 'jelly', 'jewel', 'job', 'join', 'joke',
            'journey', 'joy', 'judge', 'juice', 'jump', 'jungle', 'junior', 'junk', 'just', 'kangaroo', 'keen', 'keep',
            'ketchup', 'key', 'kick', 'kid', 'kidney', 'kind', 'kingdom', 'kiss', 'kit', 'kitchen', 'kite', 'kitten',
            'kiwi', 'knee', 'knife', 'knock', 'know', 'lab', 'label', 'labor', 'ladder', 'lady', 'lake', 'lamp',
            'language', 'laptop', 'large', 'later', 'latin', 'laugh', 'laundry', 'lava', 'law', 'lawn', 'lawsuit',
            'layer', 'lazy', 'leader', 'leaf', 'learn', 'leave', 'lecture', 'left', 'leg', 'legal', 'legend', 'leisure',
            'lemon', 'lend', 'length', 'lens', 'leopard', 'lesson', 'letter', 'level', 'liar', 'liberty', 'library',
            'license', 'life', 'lift', 'light', 'like', 'limb', 'limit', 'link', 'lion', 'liquid', 'list', 'little',
            'live', 'lizard', 'load', 'loan', 'lobster', 'local', 'lock', 'logic', 'lonely', 'long', 'loop', 'lottery',
            'loud', 'lounge', 'love', 'loyal', 'lucky', 'luggage', 'lumber', 'lunar', 'lunch', 'luxury', 'lyrics',
            'machine', 'mad', 'magic', 'magnet', 'maid', 'mail', 'main', 'major', 'make', 'mammal', 'man', 'manage',
            'mandate', 'mango', 'mansion', 'manual', 'maple', 'marble', 'march', 'margin', 'marine', 'market',
            'marriage', 'mask', 'mass', 'master', 'match', 'material', 'math', 'matrix', 'matter', 'maximum', 'maze',
            'meadow', 'mean', 'measure', 'meat', 'mechanic', 'medal', 'media', 'melody', 'melt', 'member', 'memory',
            'mention', 'menu', 'mercy', 'merge', 'merit', 'merry', 'mesh', 'message', 'metal', 'method', 'middle',
            'midnight', 'milk', 'million', 'mimic', 'mind', 'minimum', 'minor', 'minute', 'miracle', 'mirror', 'misery',
            'miss', 'mistake', 'mix', 'mixed', 'mixture', 'mobile', 'model', 'modify', 'mom', 'moment', 'monitor',
            'monkey', 'monster', 'month', 'moon', 'moral', 'more', 'morning', 'mosquito', 'mother', 'motion', 'motor',
            'mountain', 'mouse', 'move', 'movie', 'much', 'muffin', 'mule', 'multiply', 'muscle', 'museum', 'mushroom',
            'music', 'must', 'mutual', 'myself', 'mystery', 'myth', 'naive', 'name', 'napkin', 'narrow', 'nasty',
            'nation', 'nature', 'near', 'neck', 'need', 'negative', 'neglect', 'neither', 'nephew', 'nerve', 'nest',
            'net', 'network', 'neutral', 'never', 'news', 'next', 'nice', 'night', 'noble', 'noise', 'nominee',
            'noodle', 'normal', 'north', 'nose', 'notable', 'note', 'nothing', 'notice', 'novel', 'now', 'nuclear',
            'number', 'nurse', 'nut', 'oak', 'obey', 'object', 'oblige', 'obscure', 'observe', 'obtain', 'obvious',
            'occur', 'ocean', 'october', 'odor', 'off', 'offer', 'office', 'often', 'oil', 'okay', 'old', 'olive',
            'olympic', 'omit', 'once', 'one', 'onion', 'online', 'only', 'open', 'opera', 'opinion', 'oppose',
            'option', 'orange', 'orbit', 'orchard', 'order', 'ordinary', 'organ', 'orient', 'original', 'orphan',
            'ostrich', 'other', 'outdoor', 'outer', 'output', 'outside', 'oval', 'oven', 'over', 'own', 'owner',
            'oxygen', 'oyster', 'ozone', 'pact', 'paddle', 'page', 'pair', 'palace', 'palm', 'panda', 'panel', 'panic',
            'panther', 'paper', 'parade', 'parent', 'park', 'parrot', 'party', 'pass', 'patch', 'path', 'patient',
            'patrol', 'pattern', 'pause', 'pave', 'payment', 'peace', 'peanut', 'pear', 'peasant', 'pelican', 'pen',
            'penalty', 'pencil', 'people', 'pepper', 'perfect', 'permit', 'person', 'pet', 'phone', 'photo', 'phrase',
            'physical', 'piano', 'picnic', 'picture', 'piece', 'pig', 'pigeon', 'pill', 'pilot', 'pink', 'pioneer',
            'pipe', 'pistol', 'pitch', 'pizza', 'place', 'planet', 'plastic', 'plate', 'play', 'please', 'pledge',
            'pluck', 'plug', 'plunge', 'poem', 'poet', 'point', 'polar', 'pole', 'police', 'pond', 'pony', 'pool',
            'popular', 'portion', 'position', 'possible', 'post', 'potato', 'pottery', 'poverty', 'powder', 'power',
            'practice', 'praise', 'predict', 'prefer', 'prepare', 'present', 'pretty', 'prevent', 'price', 'pride',
            'primary', 'print', 'priority', 'prison', 'private', 'prize', 'problem', 'process', 'produce', 'profit',
            'program', 'project', 'promote', 'proof', 'property', 'prosper', 'protect', 'proud', 'provide', 'public',
            'pudding', 'pull', 'pulp', 'pulse', 'pumpkin', 'punch', 'pupil', 'puppy', 'purchase', 'purity', 'purpose',
            'purse', 'push', 'put', 'puzzle', 'pyramid', 'quality', 'quantum', 'quarter', 'question', 'quick', 'quit',
            'quiz', 'quote', 'rabbit', 'raccoon', 'race', 'rack', 'radar', 'radio', 'rail', 'rain', 'raise', 'rally',
            'ramp', 'ranch', 'random', 'range', 'rapid', 'rare', 'rate', 'rather', 'raven', 'raw', 'razor', 'ready',
            'real', 'reason', 'rebel', 'rebuild', 'recall', 'receive', 'recipe', 'record', 'recycle', 'reduce',
            'reflect', 'reform', 'refuse', 'region', 'regret', 'regular', 'reject', 'relax', 'release', 'relief',
            'rely', 'remain', 'remember', 'remind', 'remove', 'render', 'renew', 'rent', 'reopen', 'repair', 'repeat',
            'replace', 'report', 'require', 'rescue', 'resemble', 'resist', 'resource', 'response', 'result', 'retire',
            'retreat', 'return', 'reunion', 'reveal', 'review', 'reward', 'rhythm', 'rib', 'ribbon', 'rice', 'rich',
            'ride', 'ridge', 'rifle', 'right', 'rigid', 'ring', 'riot', 'ripple', 'risk', 'ritual', 'rival', 'river',
            'road', 'roast', 'robot', 'robust', 'rocket', 'romance', 'roof', 'rookie', 'room', 'rose', 'rotate',
            'rough', 'round', 'route', 'royal', 'rubber', 'rude', 'rug', 'rule', 'run', 'runway', 'rural', 'sad',
            'saddle', 'sadness', 'safe', 'sail', 'salad', 'salmon', 'salon', 'salt', 'salute', 'same', 'sample', 'sand',
            'satisfy', 'satoshi', 'sauce', 'sausage', 'save', 'say', 'scale', 'scan', 'scare', 'scatter', 'scene',
            'scheme', 'school', 'science', 'scissors', 'scorpion', 'scout', 'scrap', 'screen', 'script', 'scrub', 'sea',
            'search', 'season', 'seat', 'second', 'secret', 'section', 'security', 'seed', 'seek', 'segment', 'select',
            'sell', 'seminar', 'senior', 'sense', 'sentence', 'series', 'service', 'session', 'settle', 'setup',
            'seven', 'shadow', 'shaft', 'shallow', 'share', 'shed', 'shell', 'sheriff', 'shield', 'shift', 'shine',
            'ship', 'shiver', 'shock', 'shoe', 'shoot', 'shop', 'short', 'shoulder', 'shove', 'shrimp', 'shrug',
            'shuffle', 'shy', 'sibling', 'sick', 'side', 'siege', 'sight', 'sign', 'silent', 'silk', 'silly', 'silver',
            'similar', 'simple', 'since', 'sing', 'siren', 'sister', 'situate', 'six', 'size', 'skate', 'sketch', 'ski',
            'skill', 'skin', 'skirt', 'skull', 'slab', 'slam', 'sleep', 'slender', 'slice', 'slide', 'slight', 'slim',
            'slogan', 'slot', 'slow', 'slush', 'small', 'smart', 'smile', 'smoke', 'smooth', 'snack', 'snake', 'snap',
            'sniff', 'snow', 'soap', 'soccer', 'social', 'sock', 'soda', 'soft', 'solar', 'soldier', 'solid',
            'solution', 'solve', 'someone', 'song', 'soon', 'sorry', 'sort', 'soul', 'sound', 'soup', 'source', 'south',
            'space', 'spare', 'spatial', 'spawn', 'speak', 'special', 'speed', 'spell', 'spend', 'sphere', 'spice',
            'spider', 'spike', 'spin', 'spirit', 'split', 'spoil', 'sponsor', 'spoon', 'sport', 'spot', 'spray',
            'spread', 'spring', 'spy', 'square', 'squeeze', 'squirrel', 'stable', 'stadium', 'staff', 'stage', 'stairs',
            'stamp', 'stand', 'start', 'state', 'stay', 'steak', 'steel', 'stem', 'step', 'stereo', 'stick', 'still',
            'sting', 'stock', 'stomach', 'stone', 'stool', 'story', 'stove', 'strategy', 'street', 'strike', 'strong',
            'struggle', 'student', 'stuff', 'stumble', 'style', 'subject', 'submit', 'subway', 'success', 'such',
            'sudden', 'suffer', 'sugar', 'suggest', 'suit', 'summer', 'sun', 'sunny', 'sunset', 'super', 'supply',
            'supreme', 'sure', 'surface', 'surge', 'surprise', 'surround', 'survey', 'suspect', 'sustain', 'swallow',
            'swamp', 'swap', 'swarm', 'swear', 'sweet', 'swift', 'swim', 'swing', 'switch', 'sword', 'symbol',
            'symptom', 'syrup', 'system', 'table', 'tackle', 'tag', 'tail', 'talent', 'talk', 'tank', 'tape', 'target',
            'task', 'taste', 'tattoo', 'taxi', 'teach', 'team', 'tell', 'ten', 'tenant', 'tennis', 'tent', 'term',
            'test', 'text', 'thank', 'that', 'theme', 'then', 'theory', 'there', 'they', 'thing', 'this', 'thought',
            'three', 'thrive', 'throw', 'thumb', 'thunder', 'ticket', 'tide', 'tiger', 'tilt', 'timber', 'time', 'tiny',
            'tip', 'tired', 'tissue', 'title', 'toast', 'tobacco', 'today', 'toddler', 'toe', 'together', 'toilet',
            'token', 'tomato', 'tomorrow', 'tone', 'tongue', 'tonight', 'tool', 'tooth', 'top', 'topic', 'topple',
            'torch', 'tornado', 'tortoise', 'toss', 'total', 'tourist', 'toward', 'tower', 'town', 'toy', 'track',
            'trade', 'traffic', 'tragic', 'train', 'transfer', 'trap', 'trash', 'travel', 'tray', 'treat', 'tree',
            'trend', 'trial', 'tribe', 'trick', 'trigger', 'trim', 'trip', 'trophy', 'trouble', 'truck', 'true',
            'truly', 'trumpet', 'trust', 'truth', 'try', 'tube', 'tuition', 'tumble', 'tuna', 'tunnel', 'turkey',
            'turn', 'turtle', 'twelve', 'twenty', 'twice', 'twin', 'twist', 'two', 'type', 'typical', 'ugly',
            'umbrella', 'unable', 'unaware', 'uncle', 'uncover', 'under', 'undo', 'unfair', 'unfold', 'unhappy',
            'uniform', 'unique', 'unit', 'universe', 'unknown', 'unlock', 'until', 'unusual', 'unveil', 'update',
            'upgrade', 'uphold', 'upon', 'upper', 'upset', 'urban', 'urge', 'usage', 'use', 'used', 'useful', 'useless',
            'usual', 'utility', 'vacant', 'vacuum', 'vague', 'valid', 'valley', 'valve', 'van', 'vanish', 'vapor',
            'various', 'vast', 'vault', 'vehicle', 'velvet', 'vendor', 'venture', 'venue', 'verb', 'verify', 'version',
            'very', 'vessel', 'veteran', 'viable', 'vibrant', 'vicious', 'victory', 'video', 'view', 'village',
            'vintage', 'violin', 'virtual', 'virus', 'visa', 'visit', 'visual', 'vital', 'vivid', 'vocal', 'voice',
            'void', 'volcano', 'volume', 'vote', 'voyage', 'wage', 'wagon', 'wait', 'walk', 'wall', 'walnut', 'want',
            'warfare', 'warm', 'warrior', 'wash', 'wasp', 'waste', 'water', 'wave', 'way', 'wealth', 'weapon', 'wear',
            'weasel', 'weather', 'web', 'wedding', 'weekend', 'weird', 'welcome', 'west', 'wet', 'whale', 'what',
            'wheat', 'wheel', 'when', 'where', 'whip', 'whisper', 'wide', 'width', 'wife', 'wild', 'will', 'win',
            'window', 'wine', 'wing', 'wink', 'winner', 'winter', 'wire', 'wisdom', 'wise', 'wish', 'witness', 'wolf',
            'woman', 'wonder', 'wood', 'wool', 'word', 'work', 'world', 'worry', 'worth', 'wrap', 'wreck', 'wrestle',
            'wrist', 'write', 'wrong', 'yard', 'year', 'yellow', 'you', 'young', 'youth', 'zebra', 'zero', 'zone', 'zoo'
        ]);
})();

(function () {
    'use strict';

    angular
        .module('waves.core.services')
        .service('passPhraseService', ['wordList', '$window', function (wordList, $window) {
            this.generate = function () {
                var crypto = $window.crypto || $window.msCrypto;
                var bits = 160;
                var wordCount = wordList.length;
                var log2FromWordCount = Math.log(wordCount) / Math.log(2);
                var wordsInPassPhrase = Math.ceil(bits / log2FromWordCount);
                var random = new Uint16Array(wordsInPassPhrase);
                var passPhrase;

                crypto.getRandomValues(random);

                var i = 0,
                    index,
                    words = [];

                for (; i < wordsInPassPhrase; i++) {
                    index = random[i] % wordCount;
                    words.push(wordList[index]);
                }

                passPhrase = words.join(' ');

                crypto.getRandomValues(random);

                return passPhrase;
            };
        }]);
})();

(function () {
    'use strict';

    angular
        .module('waves.core.services')
        .service('accountService', ['storageService', '$q', function (storageService, $q) {
            var stateCache;

            function removeByIndex(state, index) {
                state.accounts.splice(index, 1);

                return state;
            }

            function getState() {
                if (angular.isUndefined(stateCache)) {
                    return storageService.loadState().then(function (state) {
                        state = state || {};
                        if (!state.accounts)
                            state.accounts = [];

                        stateCache = state;

                        return stateCache;
                    });
                }

                return $q.when(stateCache);
            }

            this.addAccount = function (accountInfo) {
                return getState()
                    .then(function (state) {
                        state.accounts.push(accountInfo);

                        return state;
                    })
                    .then(storageService.saveState);
            };

            this.removeAccountByIndex = function (index) {
                return getState()
                    .then(function (state) {
                        return removeByIndex(state, index);
                    })
                    .then(storageService.saveState);
            };

            this.removeAccount = function (account) {
                return getState()
                    .then(function (state) {
                        var index = _.findIndex(state.accounts, {
                            address: account.address
                        });
                        return removeByIndex(state, index);
                    })
                    .then(storageService.saveState);
            };

            this.getAccounts = function () {
                return getState()
                    .then(function (state) {
                        return state.accounts;
                    });
            };
        }]);
})();

(function () {
    'use strict';

    angular
        .module('waves.core.services')
        .service('addressService', ['constants.address', function (constants) {
            this.cleanupOptionalPrefix = function(displayAddress) {
                if (displayAddress.length <= 30) {
                    // Don't change aliases
                    return displayAddress;
                }

                var address = displayAddress,
                    prefixLen = constants.ADDRESS_PREFIX.length;

                if (address.length > constants.RAW_ADDRESS_LENGTH || address.startsWith(constants.ADDRESS_PREFIX)) {
                    address = address.substr(prefixLen, address.length - prefixLen);
                }

                return address;
            };

            this.validateAddress = function(address) {
                var cleanAddress = this.cleanupOptionalPrefix(address);
                return constants.MAINNET_ADDRESS_REGEXP.test(cleanAddress);
            };
        }]);
})();

/**
 * @requires {blake2b-256.js}
 * @requires {Base58.js}
 */
(function() {
    'use strict';

    angular
        .module('waves.core.services')
        .service('cryptoService', ['constants.network', '$window', function(constants, window) {

            // private version of getNetworkId byte in order to avoid circular dependency
            // between cryptoService and utilityService
            var getNetworkIdByte = function() {
                return constants.NETWORK_CODE.charCodeAt(0) & 0xFF;
            };

            var appendUint8Arrays = function(array1, array2) {
                var tmp = new Uint8Array(array1.length + array2.length);
                tmp.set(array1, 0);
                tmp.set(array2, array1.length);
                return tmp;
            };

            var appendNonce = function (originalSeed) {
                // change this is when nonce increment gets introduced
                var nonce = new Uint8Array(converters.int32ToBytes(constants.INITIAL_NONCE, true));

                return appendUint8Arrays(nonce, originalSeed);
            };

            // sha256 accepts messageBytes as Uint8Array or Array
            var sha256 = function (message) {
                var bytes;
                if (typeof(message) == 'string')
                    bytes = converters.stringToByteArray(message);
                else
                    bytes = message;

                var wordArray = converters.byteArrayToWordArrayEx(new Uint8Array(bytes));
                var resultWordArray = CryptoJS.SHA256(wordArray);

                return converters.wordArrayToByteArrayEx(resultWordArray);
            };

            var prepareKey = function (key) {
                var rounds = 1000;
                var digest = key;
                for (var i = 0; i < rounds; i++) {
                    digest = converters.byteArrayToHexString(sha256(digest));
                }

                return digest;
            };

            // blake2b 256 hash function
            this.blake2b = function (input) {
                return blake2b(input, null, 32);
            };

            // keccak 256 hash algorithm
            this.keccak = function(messageBytes) {
                // jscs:disable requireCamelCaseOrUpperCaseIdentifiers
                return keccak_256.array(messageBytes);
                // jscs:enable requireCamelCaseOrUpperCaseIdentifiers
            };

            this.sha256 = sha256;

            this.hashChain = function(noncedSecretPhraseBytes) {
                return this.keccak(this.blake2b(new Uint8Array(noncedSecretPhraseBytes)));
            };

            // Base68 encoding/decoding implementation
            this.base58 = {
                encode: function (buffer) {
                    return Base58.encode(buffer);
                },
                decode: function (string) {
                    return Base58.decode(string);
                }
            };

            this.buildAccountSeedHash = function(seedBytes) {
                var data = appendNonce(seedBytes);
                var seedHash = this.hashChain(data);

                return sha256(Array.prototype.slice.call(seedHash));
            };

            this.buildKeyPair = function(seedBytes) {
                var accountSeedHash = this.buildAccountSeedHash(seedBytes);
                var p = axlsign.generateKeyPair(accountSeedHash);

                return {
                    public: this.base58.encode(p.public),
                    private: this.base58.encode(p.private)
                };
            };

            this.buildPublicKey = function (seedBytes) {
                return this.buildKeyPair(seedBytes).public;
            };

            this.buildPrivateKey = function (seedBytes) {
                return this.buildKeyPair(seedBytes).private;
            };

            this.buildRawAddress = function (encodedPublicKey) {
                var publicKey = this.base58.decode(encodedPublicKey);
                var publicKeyHash = this.hashChain(publicKey);

                var prefix = new Uint8Array(2);
                prefix[0] = constants.ADDRESS_VERSION;
                prefix[1] = getNetworkIdByte();

                var unhashedAddress = appendUint8Arrays(prefix, publicKeyHash.slice(0, 20));
                var addressHash = this.hashChain(unhashedAddress).slice(0, 4);

                return this.base58.encode(appendUint8Arrays(unhashedAddress, addressHash));
            };

            this.buildRawAddressFromSeed = function (secretPhrase) {
                var publicKey = this.getPublicKey(secretPhrase);

                return this.buildRawAddress(publicKey);
            };

            //Returns publicKey built from string
            this.getPublicKey = function(secretPhrase) {
                return this.buildPublicKey(converters.stringToByteArray(secretPhrase));
            };

            //Returns privateKey built from string
            this.getPrivateKey = function(secretPhrase) {
                return this.buildPrivateKey(converters.stringToByteArray(secretPhrase));
            };

            //Returns key pair built from string
            this.getKeyPair = function (secretPhrase) {
                return this.buildKeyPair(converters.stringToByteArray(secretPhrase));
            };

            // function accepts buffer with private key and an array with dataToSign
            // returns buffer with signed data
            // 64 randoms bytes are added to the signature
            // method falls back to deterministic signatures if crypto object is not supported
            this.nonDeterministicSign = function(privateKey, dataToSign) {
                var crypto = window.crypto || window.msCrypto;
                var random;
                if (crypto) {
                    random = new Uint8Array(64);
                    crypto.getRandomValues(random);
                }

                var signature = axlsign.sign(privateKey, new Uint8Array(dataToSign), random);

                return this.base58.encode(signature);
            };

            // function accepts buffer with private key and an array with dataToSign
            // returns buffer with signed data
            this.deterministicSign = function(privateKey, dataToSign) {
                var signature = axlsign.sign(privateKey, new Uint8Array(dataToSign));

                return this.base58.encode(signature);
            };

            this.verify = function(senderPublicKey, dataToSign, signatureBytes) {
                return axlsign.verify(senderPublicKey, dataToSign, signatureBytes);
            };

            // function returns base58 encoded shared key from base58 encoded a private
            // and b public keys
            this.getSharedKey = function (aEncodedPrivateKey, bEncodedPublicKey) {
                var aPrivateKey = this.base58.decode(aEncodedPrivateKey);
                var bPublicKey = this.base58.decode(bEncodedPublicKey);
                var sharedKey = axlsign.sharedKey(aPrivateKey, bPublicKey);

                return this.base58.encode(sharedKey);
            };

            // function can be used for sharedKey preparation, as recommended in: https://github.com/wavesplatform/curve25519-js
            this.prepareKey = function (key) {
                return prepareKey(key);
            };

            this.encryptWalletSeed = function (seed, key) {
                var aesKey = prepareKey(key);

                return CryptoJS.AES.encrypt(seed, aesKey);
            };

            this.decryptWalletSeed = function (cipher, key, checksum) {
                var aesKey = prepareKey(key);
                var data = CryptoJS.AES.decrypt(cipher, aesKey);

                var actualChecksum = this.seedChecksum(converters.hexStringToByteArray(data.toString()));
                if (actualChecksum === checksum)
                    return converters.hexStringToString(data.toString());
                else
                    return false;
            };

            this.seedChecksum = function (seed) {
                return converters.byteArrayToHexString(sha256(seed));
            };
        }]);
})();

(function () {
    'use strict';

    function AssetService(signService, validateService, utilityService, cryptoService) {
        function buildId(transactionBytes) {
            var hash = cryptoService.blake2b(new Uint8Array(transactionBytes));
            return cryptoService.base58.encode(hash);
        }

        function buildCreateAssetSignatureData (asset, tokensQuantity, senderPublicKey) {
            return [].concat(
                signService.getAssetIssueTxTypeBytes(),
                signService.getPublicKeyBytes(senderPublicKey),
                signService.getAssetNameBytes(asset.name),
                signService.getAssetDescriptionBytes(asset.description),
                signService.getAssetQuantityBytes(tokensQuantity),
                signService.getAssetDecimalPlacesBytes(asset.decimalPlaces),
                signService.getAssetIsReissuableBytes(asset.reissuable),
                signService.getFeeBytes(asset.fee.toCoins()),
                signService.getTimestampBytes(asset.time)
            );
        }

        this.createAssetIssueTransaction = function (asset, sender) {
            validateService.validateAssetIssue(asset);
            validateService.validateSender(sender);

            asset.time = asset.time || utilityService.getTime();
            asset.reissuable = angular.isDefined(asset.reissuable) ? asset.reissuable : false;
            asset.description = asset.description || '';

            var assetCurrency = Currency.create({
                displayName: asset.name,
                precision: asset.decimalPlaces
            });

            var tokens = new Money(asset.totalTokens, assetCurrency);
            var signatureData = buildCreateAssetSignatureData(asset, tokens.toCoins(), sender.publicKey);
            var signature = signService.buildSignature(signatureData, sender.privateKey);

            return {
                id: buildId(signatureData),
                name: asset.name,
                description: asset.description,
                quantity: tokens.toCoins(),
                decimals: Number(asset.decimalPlaces),
                reissuable: asset.reissuable,
                timestamp: asset.time,
                fee: asset.fee.toCoins(),
                senderPublicKey: sender.publicKey,
                signature: signature
            };
        };

        function buildCreateAssetTransferSignatureData(transfer, senderPublicKey) {
            return [].concat(
                signService.getAssetTransferTxTypeBytes(),
                signService.getPublicKeyBytes(senderPublicKey),
                signService.getAssetIdBytes(transfer.amount.currency.id),
                signService.getFeeAssetIdBytes(transfer.fee.currency.id),
                signService.getTimestampBytes(transfer.time),
                signService.getAmountBytes(transfer.amount.toCoins()),
                signService.getFeeBytes(transfer.fee.toCoins()),
                signService.getRecipientBytes(transfer.recipient),
                signService.getAttachmentBytes(transfer.attachment)
            );
        }

        this.createAssetTransferTransaction = function (transfer, sender) {
            validateService.validateAssetTransfer(transfer);
            validateService.validateSender(sender);

            transfer.time = transfer.time || utilityService.getTime();
            transfer.attachment = transfer.attachment || [];
            transfer.recipient = utilityService.resolveAddressOrAlias(transfer.recipient);

            var signatureData = buildCreateAssetTransferSignatureData(transfer, sender.publicKey);
            var signature = signService.buildSignature(signatureData, sender.privateKey);

            return {
                id: buildId(signatureData),
                recipient: transfer.recipient,
                timestamp: transfer.time,
                assetId: transfer.amount.currency.id,
                amount: transfer.amount.toCoins(),
                fee: transfer.fee.toCoins(),
                feeAssetId: transfer.fee.currency.id,
                senderPublicKey: sender.publicKey,
                signature: signature,
                attachment: cryptoService.base58.encode(transfer.attachment)
            };
        };

        function buildCreateAssetReissueSignatureData(reissue, senderPublicKey) {
            return [].concat(
                signService.getAssetReissueTxTypeBytes(),
                signService.getPublicKeyBytes(senderPublicKey),
                signService.getAssetIdBytes(reissue.totalTokens.currency.id, true),
                signService.getAssetQuantityBytes(reissue.totalTokens.toCoins()),
                signService.getAssetIsReissuableBytes(reissue.reissuable),
                signService.getFeeBytes(reissue.fee.toCoins()),
                signService.getTimestampBytes(reissue.time)
            );
        }

        this.createAssetReissueTransaction = function (reissue, sender) {
            validateService.validateAssetReissue(reissue);
            validateService.validateSender(sender);

            reissue.reissuable = angular.isDefined(reissue.reissuable) ? reissue.reissuable : false;
            reissue.time = reissue.time || utilityService.getTime();

            var signatureData = buildCreateAssetReissueSignatureData(reissue, sender.publicKey);
            var signature = signService.buildSignature(signatureData, sender.privateKey);

            return {
                id: buildId(signatureData),
                assetId: reissue.totalTokens.currency.id,
                quantity: reissue.totalTokens.toCoins(),
                reissuable: reissue.reissuable,
                timestamp: reissue.time,
                fee: reissue.fee.toCoins(),
                senderPublicKey: sender.publicKey,
                signature: signature
            };
        };
    }

    AssetService.$inject = ['signService', 'validateService', 'utilityService', 'cryptoService'];

    angular
        .module('waves.core.services')
        .service('assetService', AssetService);
})();

(function () {
    'use strict';

    function AliasRequestService(signService, utilityService, validateService) {
        function buildCreateAliasSignatureData (alias, senderPublicKey) {
            return [].concat(
                signService.getCreateAliasTxTypeBytes(),
                signService.getPublicKeyBytes(senderPublicKey),
                signService.getAliasBytes(alias.alias),
                signService.getFeeBytes(alias.fee.toCoins()),
                signService.getTimestampBytes(alias.time)
            );
        }

        this.buildCreateAliasRequest = function (alias, sender) {
            validateService.validateSender(sender);

            var currentTimeMillis = utilityService.getTime();
            alias.time = alias.time || currentTimeMillis;

            var signatureData = buildCreateAliasSignatureData(alias, sender.publicKey);
            var signature = signService.buildSignature(signatureData, sender.privateKey);

            return {
                alias: alias.alias,
                timestamp: alias.time,
                fee: alias.fee.toCoins(),
                senderPublicKey: sender.publicKey,
                signature: signature
            };
        };
    }

    AliasRequestService.$inject = ['signService', 'utilityService', 'validateService'];

    angular
        .module('waves.core.services')
        .service('aliasRequestService', AliasRequestService);
})();

(function () {
    'use strict';

    function LeasingRequestService(signService, utilityService, validateService) {
        function buildStartLeasingSignatureData (startLeasing, senderPublicKey) {
            return [].concat(
                signService.getStartLeasingTxTypeBytes(),
                signService.getPublicKeyBytes(senderPublicKey),
                signService.getRecipientBytes(startLeasing.recipient),
                signService.getAmountBytes(startLeasing.amount.toCoins()),
                signService.getFeeBytes(startLeasing.fee.toCoins()),
                signService.getTimestampBytes(startLeasing.time)
            );
        }

        this.buildStartLeasingRequest = function (startLeasing, sender) {
            validateService.validateSender(sender);

            var currentTimeMillis = utilityService.getTime();
            startLeasing.time = startLeasing.time || currentTimeMillis;
            startLeasing.recipient = utilityService.resolveAddressOrAlias(startLeasing.recipient);

            var signatureData = buildStartLeasingSignatureData(startLeasing, sender.publicKey);
            var signature = signService.buildSignature(signatureData, sender.privateKey);

            return {
                recipient: startLeasing.recipient,
                amount: startLeasing.amount.toCoins(),
                timestamp: startLeasing.time,
                fee: startLeasing.fee.toCoins(),
                senderPublicKey: sender.publicKey,
                signature: signature
            };
        };

        function buildCancelLeasingSignatureData (cancelLeasing, senderPublicKey) {
            return [].concat(
                signService.getCancelLeasingTxTypeBytes(),
                signService.getPublicKeyBytes(senderPublicKey),
                signService.getFeeBytes(cancelLeasing.fee.toCoins()),
                signService.getTimestampBytes(cancelLeasing.time),
                signService.getTransactionIdBytes(cancelLeasing.startLeasingTransactionId)
            );
        }

        this.buildCancelLeasingRequest = function (cancelLeasing, sender) {
            validateService.validateSender(sender);

            var currentTimeMillis = utilityService.getTime();
            cancelLeasing.time = cancelLeasing.time || currentTimeMillis;

            var signatureData = buildCancelLeasingSignatureData(cancelLeasing, sender.publicKey);
            var signature = signService.buildSignature(signatureData, sender.privateKey);

            return {
                txId: cancelLeasing.startLeasingTransactionId,
                timestamp: cancelLeasing.time,
                fee: cancelLeasing.fee.toCoins(),
                senderPublicKey: sender.publicKey,
                signature: signature
            };
        };
    }

    LeasingRequestService.$inject = ['signService', 'utilityService', 'validateService'];

    angular
        .module('waves.core.services')
        .service('leasingRequestService', LeasingRequestService);
})();

(function () {
    'use strict';

    angular
        .module('waves.core.services')
        .service('apiService', ['Restangular', 'cryptoService', function (rest, cryptoService) {
            var blocksApi = rest.all('blocks');

            this.blocks = {
                height: function() {
                    return blocksApi.get('height');
                },
                last: function() {
                    return blocksApi.get('last');
                },
                list: function (startHeight, endHeight) {
                    return blocksApi.one('seq', startHeight).all(endHeight).getList();
                }
            };

            var addressApi = rest.all('addresses');
            var consensusApi = rest.all('consensus');
            this.address = {
                balance: function (address) {
                    return addressApi.one('balance', address).get();
                },
                effectiveBalance: function (address) {
                    return addressApi.one('effectiveBalance', address).get();
                },
                generatingBalance: function (address) {
                    return consensusApi.one('generatingbalance', address).get();
                }
            };

            var transactionApi = rest.all('transactions');

            var request;
            var timer;
            this.transactions = {
                unconfirmed: function () {
                    if (!request) {
                        request = transactionApi.all('unconfirmed').getList();
                    } else {
                        if (!timer) {
                            timer = setTimeout(function () {
                                request = transactionApi.all('unconfirmed').getList();
                                request.finally(function () {
                                    timer = null;
                                });
                            }, 10000);
                        }
                    }
                    return request;
                },
                list: function (address, max) {
                    max = max || 50;
                    return transactionApi.one('address', address).one('limit', max).getList();
                },
                info: function (transactionId) {
                    return transactionApi.one('info', transactionId).get();
                }
            };

            var leasingApi = rest.all('leasing').all('broadcast');
            this.leasing = {
                lease: function (signedStartLeasingTransaction) {
                    return leasingApi.all('lease').post(signedStartLeasingTransaction);
                },
                cancel: function (signedCancelLeasingTransaction) {
                    return leasingApi.all('cancel').post(signedCancelLeasingTransaction);
                }
            };

            var aliasApi = rest.all('alias');
            this.alias = {
                create: function (signedCreateAliasTransaction) {
                    return aliasApi.all('broadcast').all('create').post(signedCreateAliasTransaction);
                },
                getByAddress: function (address) {
                    return aliasApi.all('by-address').get(address).then(function (response) {
                        return response.map(function (alias) {
                            return alias.slice(8);
                        });
                    });
                }
            };

            var assetApi = rest.all('assets');
            var assetBroadcastApi = assetApi.all('broadcast');
            this.assets = {
                balance: function (address, assetId) {
                    var rest = assetApi.all('balance');
                    if (assetId)
                        return rest.all(address).get(assetId);
                    else
                        return rest.get(address);
                },
                issue: function (signedAssetIssueTransaction) {
                    return assetBroadcastApi.all('issue').post(signedAssetIssueTransaction);
                },
                reissue: function (signedAssetReissueTransaction) {
                    return assetBroadcastApi.all('reissue').post(signedAssetReissueTransaction);
                },
                transfer: function (signedAssetTransferTransaction) {
                    return assetBroadcastApi.all('transfer').post(signedAssetTransferTransaction);
                },
                massPay: function (signedTransactions) {
                    return assetBroadcastApi.all('batch-transfer').post(signedTransactions);
                },
                makeAssetNameUnique: function (signedMakeAssetNameUniqueTransaction) {
                    return assetApi
                        .all('broadcast')
                        .all('make-asset-name-unique')
                        .post(signedMakeAssetNameUniqueTransaction);
                },
                isUniqueName: function (assetName) {
                    assetName = cryptoService.base58.encode(converters.stringToByteArray(assetName));
                    return assetApi
                        .all('asset-id-by-unique-name')
                        .get(assetName)
                        .then(function (response) {
                            // FIXME : temporary fix for the API format
                            if (typeof response !== 'object') {
                                response = {assetId: response};
                            }

                            return response.assetId;
                        });
                }
            };
        }]);
})();

(function () {
    'use strict';

    var BASE58_REGEX = new RegExp('^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{0,}$');

    angular
        .module('waves.core.services')
        .service('utilityService', ['constants.network', 'cryptoService', function (constants, cryptoService) {
            var self = this;

            self.getNetworkIdByte = function () {
                return constants.NETWORK_CODE.charCodeAt(0) & 0xFF;
            };

            // long to big-endian bytes
            self.longToByteArray = function (value) {
                var bytes = new Array(7);
                for (var k = 7; k >= 0; k--) {
                    bytes[k] = value & (255);
                    value = value / 256;
                }

                return bytes;
            };

            // short to big-endian bytes
            self.shortToByteArray = function (value) {
                return converters.int16ToBytes(value, true);
            };

            self.base58StringToByteArray = function (base58String) {
                var decoded = cryptoService.base58.decode(base58String);
                var result = [];
                for (var i = 0; i < decoded.length; ++i) {
                    result.push(decoded[i] & 0xff);
                }

                return result;
            };

            self.stringToByteArrayWithSize = function (string) {
                var bytes = converters.stringToByteArray(string);
                return self.byteArrayWithSize(bytes);
            };

            self.byteArrayWithSize = function (byteArray) {
                var result = self.shortToByteArray(byteArray.length);
                return result.concat(byteArray);
            };

            self.booleanToBytes = function (flag) {
                return flag ? [1] : [0];
            };

            self.endsWithWhitespace = function (value) {
                return /\s+$/g.test(value);
            };

            self.getTime = function() {
                return Date.now();
            };

            self.isValidBase58String = function (input) {
                return BASE58_REGEX.test(input);
            };

            // Add a prefix in case of alias
            self.resolveAddressOrAlias = function (string) {
                if (string.length <= 30) {
                    return 'alias:' + constants.NETWORK_CODE + ':' + string;
                } else {
                    return string;
                }
            };
        }]);
})();

(function() {
    'use strict';

    angular
        .module('waves.core.services')
        .service('chromeStorageService', ['$q', function ($q) {
            var $key = 'WavesAccounts';
            var self = this;

            self.saveState = function (state) {
                var deferred = $q.defer();
                var json = {};
                json[$key] = state;

                chrome.storage.local.set(json, function () {
                    deferred.resolve();
                });

                return deferred.promise;
            };

            self.loadState = function () {
                var deferred = $q.defer();

                self.loadSyncState().then(function (syncState) {
                    if (syncState) {
                        self.saveState(syncState)
                            .then(function () {
                                return self.clearSyncState();
                            })
                            .then(function () {
                                deferred.resolve(syncState);
                            });
                    } else {
                        chrome.storage.local.get($key, function (data) {
                            deferred.resolve(data[$key]);
                        });
                    }
                });

                return deferred.promise;
            };

            self.loadSyncState = function () {
                var deferred = $q.defer();

                chrome.storage.sync.get($key, function (data) {
                    deferred.resolve(data[$key]);
                });

                return deferred.promise;
            };

            self.clearSyncState = function () {
                var deferred = $q.defer();

                chrome.storage.sync.clear(function () {
                    deferred.resolve();
                });

                return deferred.promise;
            };
        }]);
})();

(function() {
    'use strict';

    angular
        .module('waves.core.services')
        .service('html5StorageService', ['constants.network', '$window', '$q', function(constants, window, $q) {
            if (angular.isUndefined(constants.NETWORK_NAME))
                throw new Error('Network name hasn\'t been configured');

            var $key = 'Waves' + constants.NETWORK_NAME;

            this.saveState = function(state) {
                var serialized = angular.toJson(state);

                window.localStorage.setItem($key, serialized);

                return $q.when();
            };

            this.loadState = function() {
                var data;
                var serialized = window.localStorage.getItem($key);

                if (serialized) {
                    data = angular.fromJson(serialized);
                }

                return $q.when(data);
            };

            this.clear = function() {
                window.localStorage.removeItem($key);

                return $q.when();
            };
        }]);
})();

(function() {
    'use strict';

    var STORAGE_STRUCTURE_VERSION = 1;

    angular
        .module('waves.core.services')
        .provider('storageService', [function () {
            function getStorageVersion () {
                return STORAGE_STRUCTURE_VERSION;
            }

            function isLocalStorageEnabled(window) {
                var storage, fail, uid;
                try {
                    uid = String(new Date());
                    (storage = window.localStorage).setItem(uid, uid);
                    fail = storage.getItem(uid) != uid;
                    if (!fail)
                        storage.removeItem(uid);
                    else
                        storage = false;
                }
                catch (exception) {
                }
                return storage;
            }

            this.$get = ['$window', 'chromeStorageService', 'html5StorageService',
                function($window, chromeStorageService, html5StorageService) {
                    var result = isLocalStorageEnabled($window) ? html5StorageService : chromeStorageService;
                    result.getStorageVersion = getStorageVersion;

                    return result;
                }];
        }]);
})();

(function () {
    'use strict';

    angular
        .module('waves.core.services')
        .service('formattingService', ['$window', '$filter', function (window, $filter) {

            var LOCALE_DATE_FORMATS = {
                'ar-SA': 'dd/MM/yy',
                'bg-BG': 'dd.M.yyyy',
                'ca-ES': 'dd/MM/yyyy',
                'zh-TW': 'yyyy/M/d',
                'cs-CZ': 'd.M.yyyy',
                'da-DK': 'dd-MM-yyyy',
                'de-DE': 'dd.MM.yyyy',
                'el-GR': 'd/M/yyyy',
                'en-US': 'M/d/yyyy',
                'fi-FI': 'd.M.yyyy',
                'fr-FR': 'dd/MM/yyyy',
                'he-IL': 'dd/MM/yyyy',
                'hu-HU': 'yyyy. MM. dd.',
                'is-IS': 'd.M.yyyy',
                'it-IT': 'dd/MM/yyyy',
                'ja-JP': 'yyyy/MM/dd',
                'ko-KR': 'yyyy-MM-dd',
                'nl-NL': 'd-M-yyyy',
                'nb-NO': 'dd.MM.yyyy',
                'pl-PL': 'yyyy-MM-dd',
                'pt-BR': 'd/M/yyyy',
                'ro-RO': 'dd.MM.yyyy',
                'ru-RU': 'dd.MM.yyyy',
                'hr-HR': 'd.M.yyyy',
                'sk-SK': 'd. M. yyyy',
                'sq-AL': 'yyyy-MM-dd',
                'sv-SE': 'yyyy-MM-dd',
                'th-TH': 'd/M/yyyy',
                'tr-TR': 'dd.MM.yyyy',
                'ur-PK': 'dd/MM/yyyy',
                'id-ID': 'dd/MM/yyyy',
                'uk-UA': 'dd.MM.yyyy',
                'be-BY': 'dd.MM.yyyy',
                'sl-SI': 'd.M.yyyy',
                'et-EE': 'd.MM.yyyy',
                'lv-LV': 'yyyy.MM.dd.',
                'lt-LT': 'yyyy.MM.dd',
                'fa-IR': 'MM/dd/yyyy',
                'vi-VN': 'dd/MM/yyyy',
                'hy-AM': 'dd.MM.yyyy',
                'az-Latn-AZ': 'dd.MM.yyyy',
                'eu-ES': 'yyyy/MM/dd',
                'mk-MK': 'dd.MM.yyyy',
                'af-ZA': 'yyyy/MM/dd',
                'ka-GE': 'dd.MM.yyyy',
                'fo-FO': 'dd-MM-yyyy',
                'hi-IN': 'dd-MM-yyyy',
                'ms-MY': 'dd/MM/yyyy',
                'kk-KZ': 'dd.MM.yyyy',
                'ky-KG': 'dd.MM.yy',
                'sw-KE': 'M/d/yyyy',
                'uz-Latn-UZ': 'dd/MM yyyy',
                'tt-RU': 'dd.MM.yyyy',
                'pa-IN': 'dd-MM-yy',
                'gu-IN': 'dd-MM-yy',
                'ta-IN': 'dd-MM-yyyy',
                'te-IN': 'dd-MM-yy',
                'kn-IN': 'dd-MM-yy',
                'mr-IN': 'dd-MM-yyyy',
                'sa-IN': 'dd-MM-yyyy',
                'mn-MN': 'yy.MM.dd',
                'gl-ES': 'dd/MM/yy',
                'kok-IN': 'dd-MM-yyyy',
                'syr-SY': 'dd/MM/yyyy',
                'dv-MV': 'dd/MM/yy',
                'ar-IQ': 'dd/MM/yyyy',
                'zh-CN': 'yyyy/M/d',
                'de-CH': 'dd.MM.yyyy',
                'en-GB': 'dd/MM/yyyy',
                'es-MX': 'dd/MM/yyyy',
                'fr-BE': 'd/MM/yyyy',
                'it-CH': 'dd.MM.yyyy',
                'nl-BE': 'd/MM/yyyy',
                'nn-NO': 'dd.MM.yyyy',
                'pt-PT': 'dd-MM-yyyy',
                'sr-Latn-CS': 'd.M.yyyy',
                'sv-FI': 'd.M.yyyy',
                'az-Cyrl-AZ': 'dd.MM.yyyy',
                'ms-BN': 'dd/MM/yyyy',
                'uz-Cyrl-UZ': 'dd.MM.yyyy',
                'ar-EG': 'dd/MM/yyyy',
                'zh-HK': 'd/M/yyyy',
                'de-AT': 'dd.MM.yyyy',
                'en-AU': 'd/MM/yyyy',
                'es-ES': 'dd/MM/yyyy',
                'fr-CA': 'yyyy-MM-dd',
                'sr-Cyrl-CS': 'd.M.yyyy',
                'ar-LY': 'dd/MM/yyyy',
                'zh-SG': 'd/M/yyyy',
                'de-LU': 'dd.MM.yyyy',
                'en-CA': 'dd/MM/yyyy',
                'es-GT': 'dd/MM/yyyy',
                'fr-CH': 'dd.MM.yyyy',
                'ar-DZ': 'dd-MM-yyyy',
                'zh-MO': 'd/M/yyyy',
                'de-LI': 'dd.MM.yyyy',
                'en-NZ': 'd/MM/yyyy',
                'es-CR': 'dd/MM/yyyy',
                'fr-LU': 'dd/MM/yyyy',
                'ar-MA': 'dd-MM-yyyy',
                'en-IE': 'dd/MM/yyyy',
                'es-PA': 'MM/dd/yyyy',
                'fr-MC': 'dd/MM/yyyy',
                'ar-TN': 'dd-MM-yyyy',
                'en-ZA': 'yyyy/MM/dd',
                'es-DO': 'dd/MM/yyyy',
                'ar-OM': 'dd/MM/yyyy',
                'en-JM': 'dd/MM/yyyy',
                'es-VE': 'dd/MM/yyyy',
                'ar-YE': 'dd/MM/yyyy',
                'en-029': 'MM/dd/yyyy',
                'es-CO': 'dd/MM/yyyy',
                'ar-SY': 'dd/MM/yyyy',
                'en-BZ': 'dd/MM/yyyy',
                'es-PE': 'dd/MM/yyyy',
                'ar-JO': 'dd/MM/yyyy',
                'en-TT': 'dd/MM/yyyy',
                'es-AR': 'dd/MM/yyyy',
                'ar-LB': 'dd/MM/yyyy',
                'en-ZW': 'M/d/yyyy',
                'es-EC': 'dd/MM/yyyy',
                'ar-KW': 'dd/MM/yyyy',
                'en-PH': 'M/d/yyyy',
                'es-CL': 'dd-MM-yyyy',
                'ar-AE': 'dd/MM/yyyy',
                'es-UY': 'dd/MM/yyyy',
                'ar-BH': 'dd/MM/yyyy',
                'es-PY': 'dd/MM/yyyy',
                'ar-QA': 'dd/MM/yyyy',
                'es-BO': 'dd/MM/yyyy',
                'es-SV': 'dd/MM/yyyy',
                'es-HN': 'dd/MM/yyyy',
                'es-NI': 'dd/MM/yyyy',
                'es-PR': 'dd/MM/yyyy',
                'am-ET': 'd/M/yyyy',
                'tzm-Latn-DZ': 'dd-MM-yyyy',
                'iu-Latn-CA': 'd/MM/yyyy',
                'sma-NO': 'dd.MM.yyyy',
                'mn-Mong-CN': 'yyyy/M/d',
                'gd-GB': 'dd/MM/yyyy',
                'en-MY': 'd/M/yyyy',
                'prs-AF': 'dd/MM/yy',
                'bn-BD': 'dd-MM-yy',
                'wo-SN': 'dd/MM/yyyy',
                'rw-RW': 'M/d/yyyy',
                'qut-GT': 'dd/MM/yyyy',
                'sah-RU': 'MM.dd.yyyy',
                'gsw-FR': 'dd/MM/yyyy',
                'co-FR': 'dd/MM/yyyy',
                'oc-FR': 'dd/MM/yyyy',
                'mi-NZ': 'dd/MM/yyyy',
                'ga-IE': 'dd/MM/yyyy',
                'se-SE': 'yyyy-MM-dd',
                'br-FR': 'dd/MM/yyyy',
                'smn-FI': 'd.M.yyyy',
                'moh-CA': 'M/d/yyyy',
                'arn-CL': 'dd-MM-yyyy',
                'ii-CN': 'yyyy/M/d',
                'dsb-DE': 'd. M. yyyy',
                'ig-NG': 'd/M/yyyy',
                'kl-GL': 'dd-MM-yyyy',
                'lb-LU': 'dd/MM/yyyy',
                'ba-RU': 'dd.MM.yy',
                'nso-ZA': 'yyyy/MM/dd',
                'quz-BO': 'dd/MM/yyyy',
                'yo-NG': 'd/M/yyyy',
                'ha-Latn-NG': 'd/M/yyyy',
                'fil-PH': 'M/d/yyyy',
                'ps-AF': 'dd/MM/yy',
                'fy-NL': 'd-M-yyyy',
                'ne-NP': 'M/d/yyyy',
                'se-NO': 'dd.MM.yyyy',
                'iu-Cans-CA': 'd/M/yyyy',
                'sr-Latn-RS': 'd.M.yyyy',
                'si-LK': 'yyyy-MM-dd',
                'sr-Cyrl-RS': 'd.M.yyyy',
                'lo-LA': 'dd/MM/yyyy',
                'km-KH': 'yyyy-MM-dd',
                'cy-GB': 'dd/MM/yyyy',
                'bo-CN': 'yyyy/M/d',
                'sms-FI': 'd.M.yyyy',
                'as-IN': 'dd-MM-yyyy',
                'ml-IN': 'dd-MM-yy',
                'en-IN': 'dd-MM-yyyy',
                'or-IN': 'dd-MM-yy',
                'bn-IN': 'dd-MM-yy',
                'tk-TM': 'dd.MM.yy',
                'bs-Latn-BA': 'd.M.yyyy',
                'mt-MT': 'dd/MM/yyyy',
                'sr-Cyrl-ME': 'd.M.yyyy',
                'se-FI': 'd.M.yyyy',
                'zu-ZA': 'yyyy/MM/dd',
                'xh-ZA': 'yyyy/MM/dd',
                'tn-ZA': 'yyyy/MM/dd',
                'hsb-DE': 'd. M. yyyy',
                'bs-Cyrl-BA': 'd.M.yyyy',
                'tg-Cyrl-TJ': 'dd.MM.yy',
                'sr-Latn-BA': 'd.M.yyyy',
                'smj-NO': 'dd.MM.yyyy',
                'rm-CH': 'dd/MM/yyyy',
                'smj-SE': 'yyyy-MM-dd',
                'quz-EC': 'dd/MM/yyyy',
                'quz-PE': 'dd/MM/yyyy',
                'hr-BA': 'd.M.yyyy.',
                'sr-Latn-ME': 'd.M.yyyy',
                'sma-SE': 'yyyy-MM-dd',
                'en-SG': 'd/M/yyyy',
                'ug-CN': 'yyyy-M-d',
                'sr-Cyrl-BA': 'd.M.yyyy',
                'es-US': 'M/d/yyyy'
            };

            var LANG = window.navigator.userLanguage || window.navigator.language;
            var LOCALE_DATE_FORMAT = LOCALE_DATE_FORMATS[LANG] || 'dd/MM/yyyy';
            var settings = {
                '24_hour_format': '1'
            };

            this.formatTimestamp = function (timestamp, dateOnly, isAbsoluteTime) {
                var date;
                if (typeof timestamp == 'object') {
                    date = timestamp;
                } else if (isAbsoluteTime) {
                    date = new Date(timestamp);
                } else {
                    date = new Date(timestamp);
                }

                var format = LOCALE_DATE_FORMAT;
                if (!dateOnly) {
                    var timeFormat = 'H:mm:ss';

                    if (settings['24_hour_format'] === '0')
                        timeFormat = 'h:mm:ss a';

                    format += ' ' + timeFormat;
                }

                return $filter('date')(date, format);
            };
        }]);
})();

/**
 * @author BjÃ¶rn Wenzel
 */
(function () {
    'use strict';
    angular.module('waves.core.filter')
        .filter('formatting', ['formattingService', function (formattingService) {
            return function(timestamp, dateOnly) {
                if (angular.isUndefined(dateOnly)) {
                    dateOnly = false;
                }

                return formattingService.formatTimestamp(timestamp, dateOnly);
            };
        }]);
})();

(function () {
    'use strict';

    angular
        .module('waves.core.services')
        .service('coinomatCurrencyMappingService', [function () {
            function unsupportedCurrency(currency) {
                throw new Error('Unsupported currency: ' + currency.displayName);
            }

            /**
             * Currency codes for Waves Platform
             * @param {Currency} currency
             * @returns {string} currency code
             */
            this.platformCurrencyCode = function (currency) {
                switch (currency.id) {
                    case Currency.BTC.id:
                        return 'WBTC';

                    case Currency.WAVES.id:
                        return 'WAVES';

                    case Currency.ETH.id:
                        return 'WETH';

                    case Currency.LTC.id:
                        return 'WLTC';

                    case Currency.ZEC.id:
                        return 'WZEC';

                    case Currency.BCH.id:
                        return 'WBCH';
                }

                unsupportedCurrency(currency);
            };

            /**
             * Currency codes for Coinomat gateway
             * @param {Currency} currency
             * @returns {string} currency code
             */
            this.gatewayCurrencyCode = function (currency) {
                switch (currency.id) {
                    case Currency.BTC.id:
                        return 'BTC';

                    case Currency.WAVES.id:
                        return 'WAVES';

                    case Currency.ETH.id:
                        return 'ETH';

                    case Currency.LTC.id:
                        return 'LTC';

                    case Currency.ZEC.id:
                        return 'ZEC';

                    case Currency.BCH.id:
                        return 'BCH';
                }

                unsupportedCurrency(currency);
            };
        }]);
})();

(function () {
    'use strict';

    var LANGUAGE = 'ru_RU';

    function ensureTunnelCreated(response) {
        if (!response.ok) {
            console.log(response);
            throw new Error('Failed to create tunnel: ' + response.error);
        }
    }

    function ensureTunnelObtained(response) {
        if (!response.tunnel) {
            console.log(response);
            throw new Error('Failed to get tunnel: ' + response.error);
        }
    }

    function CoinomatService(rest, mappingService) {
        var apiRoot = rest.all('api').all('v1');

        /* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */
        function loadPaymentDetails(currencyCodeFrom, currencyCodeTo, recipientAddress) {
            return apiRoot.get('create_tunnel.php', {
                currency_from: currencyCodeFrom,
                currency_to: currencyCodeTo,
                wallet_to: recipientAddress
            }).then(function (response) {
                ensureTunnelCreated(response);

                return {
                    id: response.tunnel_id,
                    k1: response.k1,
                    k2: response.k2
                };
            }).then(function (tunnel) {
                return apiRoot.get('get_tunnel.php', {
                    xt_id: tunnel.id,
                    k1: tunnel.k1,
                    k2: tunnel.k2,
                    history: 0,
                    lang: LANGUAGE
                });
            }).then(function (response) {
                ensureTunnelObtained(response);

                // here only BTC wallet is returned
                // probably for other currencies more requisites are required
                return {
                    address: response.tunnel.wallet_from,
                    attachment: response.tunnel.attachment
                };
            });
        }
        /* jscs:enable requireCamelCaseOrUpperCaseIdentifiers */

        this.getDepositDetails = function (sourceCurrency, targetCurrency, wavesRecipientAddress) {
            var gatewayCurrencyCode = mappingService.gatewayCurrencyCode(sourceCurrency);
            var platformCurrencyCode = mappingService.platformCurrencyCode(targetCurrency);

            return loadPaymentDetails(gatewayCurrencyCode, platformCurrencyCode, wavesRecipientAddress);
        };

        this.getWithdrawDetails = function (currency, recipientAddress) {
            var gatewayCurrencyCode = mappingService.gatewayCurrencyCode(currency);
            var platformCurrencyCode = mappingService.platformCurrencyCode(currency);

            return loadPaymentDetails(platformCurrencyCode, gatewayCurrencyCode, recipientAddress);
        };

        this.getWithdrawRate = function (currency) {
            var gatewayCurrencyCode = mappingService.gatewayCurrencyCode(currency);
            var platformCurrencyCode = mappingService.platformCurrencyCode(currency);

            return apiRoot.get('get_xrate.php', {
                f: platformCurrencyCode,
                t: gatewayCurrencyCode,
                lang: LANGUAGE
            });
        };
    }

    CoinomatService.$inject = ['CoinomatRestangular', 'coinomatCurrencyMappingService'];

    angular
        .module('waves.core.services')
        .service('coinomatService', CoinomatService);
})();

(function () {
    'use strict';

    function CoinomatFiatService(rest, currencyMappingService) {
        var apiRoot = rest.all('api').all('v2').all('indacoin');

        this.getLimits = function (address, fiatCurrency, cryptoCurrency) {
            return apiRoot.get('limits.php', {
                address: address,
                fiat: fiatCurrency,
                crypto: currencyMappingService.gatewayCurrencyCode(cryptoCurrency)
            });
        };

        this.getRate = function (address, fiatAmount, fiatCurrency, cryptoCurrency) {
            return apiRoot.get('rate.php', {
                address: address,
                fiat: fiatCurrency,
                amount: fiatAmount,
                crypto: currencyMappingService.gatewayCurrencyCode(cryptoCurrency)
            });
        };

        this.getMerchantUrl = function (address, fiatAmount, fiatCurrency, cryptoCurrency) {
            return apiRoot.all('buy.php').getRequestedUrl() +
                '?address=' + address +
                '&fiat=' + fiatCurrency +
                '&amount=' + fiatAmount +
                '&crypto=' + currencyMappingService.gatewayCurrencyCode(cryptoCurrency);
        };
    }

    CoinomatFiatService.$inject = ['CoinomatRestangular', 'coinomatCurrencyMappingService'];

    angular
        .module('waves.core.services')
        .service('coinomatFiatService', CoinomatFiatService);
})();

(function () {
    'use strict';

    var WAVES_ASSET_ID = 'WAVES',
        WAVES_PRECISION = 8;

    function denormalizeId(id) {
        return id === WAVES_ASSET_ID ? '' : id;
    }

    function normalizeId(id) {
        return id ? id : WAVES_ASSET_ID;
    }

    function MatcherApiService(rest, utilityService, cryptoService, validateService) {
        var apiRoot = rest.all('matcher');
        var orderbookRoot = apiRoot.all('orderbook');

        this.createOrder = function (signedOrderRequest) {
            return orderbookRoot.post(signedOrderRequest);
        };

        this.cancelOrder = function (firstAssetId, secondAssetId, signedCancelRequest) {
            return orderbookRoot
                .all(normalizeId(firstAssetId))
                .all(normalizeId(secondAssetId))
                .all('cancel')
                .post(signedCancelRequest);
        };

        this.deleteOrder = function (firstAssetId, secondAssetId, signedCancelRequest) {
            return orderbookRoot
                .all(normalizeId(firstAssetId))
                .all(normalizeId(secondAssetId))
                .all('delete')
                .post(signedCancelRequest);
        };

        this.orderStatus = function (firstAssetId, secondAssetId, orderId) {
            return orderbookRoot
                .all(normalizeId(firstAssetId))
                .all(normalizeId(secondAssetId))
                .get(orderId);
        };

        this.loadMatcherKey = function () {
            return apiRoot.get('');
        };

        this.loadOrderbook = function (firstAssetId, secondAssetId) {
            return orderbookRoot.all(normalizeId(firstAssetId)).get(normalizeId(secondAssetId))
                .then(function (response) {
                    response.pair.amountAsset = denormalizeId(response.pair.amountAsset);
                    response.pair.priceAsset = denormalizeId(response.pair.priceAsset);

                    return response;
                });
        };

        function buildLoadUserOrdersSignature(timestamp, sender) {
            validateService.validateSender(sender);

            var publicKeyBytes = utilityService.base58StringToByteArray(sender.publicKey),
                timestampBytes = utilityService.longToByteArray(timestamp),
                signatureData = [].concat(publicKeyBytes, timestampBytes),

                privateKeyBytes = cryptoService.base58.decode(sender.privateKey);

            return cryptoService.nonDeterministicSign(privateKeyBytes, signatureData);
        }

        this.loadUserOrders = function (amountAsset, priceAsset, sender) {
            var timestamp = Date.now(),
                signature = buildLoadUserOrdersSignature(timestamp, sender);

            return orderbookRoot
                .all(normalizeId(amountAsset))
                .all(normalizeId(priceAsset))
                .all('publicKey')
                .get(sender.publicKey, {}, {
                    Timestamp: timestamp,
                    Signature: signature
                });
        };

        this.loadAllMarkets = function () {
            return orderbookRoot.get('').then(function (response) {
                var pairs = [];
                _.forEach(response.markets, function (market) {
                    var id = normalizeId(market.amountAsset) + '/' + normalizeId(market.priceAsset);
                    var pair = {
                        id: id,
                        amountAssetInfo: market.amountAssetInfo,
                        amountAsset: Currency.create({
                            id: denormalizeId(market.amountAsset),
                            displayName: market.amountAssetName,
                            precision: market.amountAssetInfo ? market.amountAssetInfo.decimals : WAVES_PRECISION
                        }),
                        priceAssetInfo: market.priceAssetInfo,
                        priceAsset: Currency.create({
                            id: denormalizeId(market.priceAsset),
                            displayName: market.priceAssetName,
                            precision: market.priceAssetInfo ? market.priceAssetInfo.decimals : WAVES_PRECISION
                        }),
                        created: market.created
                    };
                    pairs.push(pair);
                });

                return pairs;
            });
        };

        this.getTradableBalance = function (amountAsset, priceAsset, address) {
            var normAmountAsset = normalizeId(amountAsset),
                normPriceAsset = normalizeId(priceAsset);

            return orderbookRoot
                .all(normAmountAsset)
                .all(normPriceAsset)
                .all('tradableBalance')
                .get(address)
                .then(function (response) {
                    var result = {};
                    result[denormalizeId(normAmountAsset)] = response[normAmountAsset];
                    result[denormalizeId(normPriceAsset)] = response[normPriceAsset];
                    return result;
                });
        };
    }

    MatcherApiService.$inject = ['MatcherRestangular', 'utilityService', 'cryptoService', 'validateService'];

    angular
        .module('waves.core.services')
        .service('matcherApiService', MatcherApiService);
})();

(function () {
    'use strict';

    var MINUTE = 60 * 1000,
        DEFAULT_FRAME = 30,
        DEFAULT_LIMIT = 50;

    function serializeId(id) {
        return id === '' ? 'WAVES' : id;
    }

    function DatafeedApiService(rest) {
        var self = this,
            apiRoot = rest.all('api');

        self.getSymbols = function () {
            return apiRoot.get('symbols');
        };

        self.getCandles = function (pair, from, to, frame) {
            frame = frame || DEFAULT_FRAME;
            to = to || Date.now();
            from = from || to - 50 * frame * MINUTE;

            return apiRoot
                .all('candles')
                .all(serializeId(pair.amountAsset.id))
                .all(serializeId(pair.priceAsset.id))
                .all(frame)
                .all(from)
                .get(to);
        };

        self.getLastCandles = function (pair, limit, frame) {
            frame = frame || DEFAULT_FRAME;
            limit = limit || DEFAULT_LIMIT;

            return apiRoot
                .all('candles')
                .all(serializeId(pair.amountAsset.id))
                .all(serializeId(pair.priceAsset.id))
                .all(frame)
                .get(limit);
        };

        self.getTrades = function (pair, limit) {
            limit = limit || DEFAULT_LIMIT;

            return apiRoot
                .all('trades')
                .all(serializeId(pair.amountAsset.id))
                .all(serializeId(pair.priceAsset.id))
                .get(limit);
        };

        self.getTradesByAddress = function (pair, address, limit) {
            limit = limit || DEFAULT_LIMIT;

            return apiRoot
                .all('trades')
                .all(serializeId(pair.amountAsset.id))
                .all(serializeId(pair.priceAsset.id))
                .all(address)
                .get(limit);
        };
    }

    DatafeedApiService.$inject = ['DatafeedRestangular'];

    angular
        .module('waves.core.services')
        .service('datafeedApiService', DatafeedApiService);
})();

(function () {
    'use strict';

    var SELL_ORDER_TYPE = 'sell';

    function MatcherRequestService(signService, utilityService, validateService) {
        function buildCreateOrderSignatureData(order, senderPublicKey) {
            return [].concat(
                signService.getPublicKeyBytes(senderPublicKey),
                signService.getPublicKeyBytes(order.matcherKey),
                signService.getAssetIdBytes(order.price.amountAsset.id),
                signService.getAssetIdBytes(order.price.priceAsset.id),
                signService.getOrderTypeBytes(order.orderType === SELL_ORDER_TYPE),
                signService.getAmountBytes(order.price.toBackendPrice()),
                signService.getAmountBytes(order.amount.toCoins()),
                signService.getTimestampBytes(order.time),
                signService.getTimestampBytes(order.expiration),
                signService.getFeeBytes(order.fee.toCoins())
            );
        }

        this.buildCreateOrderRequest = function (order, sender) {
            validateService.validateSender(sender);

            var currentTimeMillis = utilityService.getTime();
            order.time = order.time || currentTimeMillis;

            var date = new Date(currentTimeMillis);
            order.expiration = order.expiration || date.setDate(date.getDate() + 20);

            var signatureData = buildCreateOrderSignatureData(order, sender.publicKey);
            var signature = signService.buildSignature(signatureData, sender.privateKey);

            return {
                orderType: order.orderType,
                assetPair: {
                    amountAsset: order.price.amountAsset.id,
                    priceAsset: order.price.priceAsset.id
                },
                price: order.price.toBackendPrice(),
                amount: order.amount.toCoins(),
                timestamp: order.time,
                expiration: order.expiration,
                matcherFee: order.fee.toCoins(),
                matcherPublicKey: order.matcherKey,
                senderPublicKey: sender.publicKey,
                signature: signature
            };
        };

        function buildCancelOrderSignatureData(orderId, senderPublicKey) {
            return [].concat(
                signService.getPublicKeyBytes(senderPublicKey),
                signService.getOrderIdBytes(orderId)
            );
        }

        this.buildCancelOrderRequest = function (orderId, sender) {
            validateService.validateSender(sender);

            if (!orderId) {
                throw new Error('orderId hasn\'t been set');
            }

            var signatureData = buildCancelOrderSignatureData(orderId, sender.publicKey);
            var signature = signService.buildSignature(signatureData, sender.privateKey);

            return {
                sender: sender.publicKey,
                orderId: orderId,
                signature: signature
            };
        };
    }

    MatcherRequestService.$inject = ['signService', 'utilityService', 'validateService'];

    angular
        .module('waves.core.services')
        .service('matcherRequestService', MatcherRequestService);
})();

var OrderPrice = (function () {

    var MATCHER_SCALE = 1e8;

    function OrderPrice(price, pair) {
        this.amountAsset = pair.amountAsset;
        this.priceAsset = pair.priceAsset;
        this.price = roundToPriceAsset(price, pair);
    }

    OrderPrice.prototype.toTokens = function () {
        return this.price.toNumber();
    };

    OrderPrice.prototype.toCoins = function () {
        return this.toTokens() * Math.pow(10, this.priceAsset.precision - this.amountAsset.precision);
    };

    OrderPrice.prototype.toBackendPrice = function () {
        return Math.round(this.toCoins() * MATCHER_SCALE);
    };

    function roundToPriceAsset(price, pair) {
        return new Decimal(new Decimal(price).toFixed(pair.priceAsset.precision, Decimal.ROUND_FLOOR));
    }

    function normalizePrice(price, pair) {
        return new Decimal(price)
            .div(MATCHER_SCALE)
            .div(Math.pow(10, pair.priceAsset.precision - pair.amountAsset.precision));
    }

    return {
        fromTokens: function (price, pair) {
            return new OrderPrice(price, pair);
        },

        fromBackendPrice: function (price, pair) {
            var normalizedPrice = normalizePrice(price, pair);

            return new OrderPrice(normalizedPrice, pair);
        }
    };
})();

(function () {
    'use strict';

    function SignService(txConstants, featureConstants, cryptoService, utilityService) {
        var self = this;

        // Transaction types

        self.getAssetIssueTxTypeBytes = function () {
            return [txConstants.ASSET_ISSUE_TRANSACTION_TYPE];
        };

        self.getAssetReissueTxTypeBytes = function () {
            return [txConstants.ASSET_REISSUE_TRANSACTION_TYPE];
        };

        self.getAssetTransferTxTypeBytes = function () {
            return [txConstants.ASSET_TRANSFER_TRANSACTION_TYPE];
        };

        self.getStartLeasingTxTypeBytes = function () {
            return [txConstants.START_LEASING_TRANSACTION_TYPE];
        };

        self.getCancelLeasingTxTypeBytes = function () {
            return [txConstants.CANCEL_LEASING_TRANSACTION_TYPE];
        };

        self.getCreateAliasTxTypeBytes = function () {
            return [txConstants.CREATE_ALIAS_TRANSACTION_TYPE];
        };

        // Keys

        self.getPublicKeyBytes = function (publicKey) {
            return utilityService.base58StringToByteArray(publicKey);
        };

        self.getPrivateKeyBytes = function (privateKey) {
            return cryptoService.base58.decode(privateKey);
        };

        // Data fields

        self.getNetworkBytes = function () {
            return [utilityService.getNetworkIdByte()];
        };

        self.getTransactionIdBytes = function (tx) {
            return utilityService.base58StringToByteArray(tx);
        };

        self.getRecipientBytes = function (recipient) {
            if (recipient.slice(0, 6) === 'alias:') {
                return [].concat(
                    [featureConstants.ALIAS_VERSION],
                    [utilityService.getNetworkIdByte()],
                    utilityService.stringToByteArrayWithSize(recipient.slice(8)) // Remove leading 'asset:W:'
                );
            } else {
                return utilityService.base58StringToByteArray(recipient);
            }
        };

        self.getAssetIdBytes = function (assetId, mandatory) {
            if (mandatory) {
                return utilityService.base58StringToByteArray(assetId);
            } else {
                return assetId ? [1].concat(utilityService.base58StringToByteArray(assetId)) : [0];
            }
        };

        self.getAssetNameBytes = function (assetName) {
            return utilityService.stringToByteArrayWithSize(assetName);
        };

        self.getAssetDescriptionBytes = function (assetDescription) {
            return utilityService.stringToByteArrayWithSize(assetDescription);
        };

        self.getAssetQuantityBytes = function (assetQuantity) {
            return utilityService.longToByteArray(assetQuantity);
        };

        self.getAssetDecimalPlacesBytes = function (assetDecimalPlaces) {
            return [assetDecimalPlaces];
        };

        self.getAssetIsReissuableBytes = function (assetIsReissuable) {
            return utilityService.booleanToBytes(assetIsReissuable);
        };

        self.getAmountBytes = function (amount) {
            return utilityService.longToByteArray(amount);
        };

        self.getFeeAssetIdBytes = function (feeAssetId) {
            return self.getAssetIdBytes(feeAssetId);
        };

        self.getFeeBytes = function (fee) {
            return utilityService.longToByteArray(fee);
        };

        self.getTimestampBytes = function (timestamp) {
            return utilityService.longToByteArray(timestamp);
        };

        self.getAttachmentBytes = function (attachment) {
            return utilityService.byteArrayWithSize(attachment);
        };

        self.getAliasBytes = function (alias) {
            return utilityService.byteArrayWithSize([].concat(
                [featureConstants.ALIAS_VERSION],
                [utilityService.getNetworkIdByte()],
                utilityService.stringToByteArrayWithSize(alias)
            ));
        };

        self.getOrderTypeBytes = function (orderType) {
            return utilityService.booleanToBytes(orderType);
        };

        self.getOrderIdBytes = function (orderId) {
            return utilityService.base58StringToByteArray(orderId);
        };

        // Signatures

        self.buildSignature = function (bytes, privateKey) {
            var privateKeyBytes = self.getPrivateKeyBytes(privateKey);
            return cryptoService.nonDeterministicSign(privateKeyBytes, bytes);
        };
    }

    SignService.$inject = ['constants.transactions', 'constants.features', 'cryptoService', 'utilityService'];

    angular
        .module('waves.core.services')
        .service('signService', SignService);
})();

(function () {
    'use strict';

    angular
        .module('waves.core.services')
        .service('validateService', function () {
            var self = this;

            self.validateSender = function (sender) {
                if (!sender) {
                    throw new Error('Sender hasn\'t been set');
                }

                if (!sender.publicKey) {
                    throw new Error('Sender account public key hasn\'t been set');
                }

                if (!sender.privateKey) {
                    throw new Error('Sender account private key hasn\'t been set');
                }
            };

            self.validateAssetIssue = function (issue) {
                if (angular.isUndefined(issue.name)) {
                    throw new Error('Asset name hasn\'t been set');
                }

                if (angular.isUndefined(issue.totalTokens)) {
                    throw new Error('Total tokens amount hasn\'t been set');
                }

                if (angular.isUndefined(issue.decimalPlaces)) {
                    throw new Error('Token decimal places amount hasn\'t been set');
                }

                if (issue.fee.currency !== Currency.WAVES) {
                    throw new Error('Transaction fee must be nominated in Waves');
                }
            };

            self.validateAssetTransfer = function (transfer) {
                if (angular.isUndefined(transfer.recipient)) {
                    throw new Error('Recipient account hasn\'t been set');
                }

                if (angular.isUndefined(transfer.fee)) {
                    throw new Error('Transaction fee hasn\'t been set');
                }

                if (angular.isUndefined(transfer.amount)) {
                    throw new Error('Transaction amount hasn\'t been set');
                }
            };

            self.validateAssetReissue = function (reissue) {
                if (reissue.totalTokens.currency === Currency.WAVES) {
                    throw new Error('Reissuing Waves is not allowed.');
                }

                if (angular.isUndefined(reissue.totalTokens)) {
                    throw new Error('Total tokens amount hasn\'t been set');
                }

                if (angular.isUndefined(reissue.fee)) {
                    throw new Error('Transaction fee hasn\'t been set');
                }

                if (reissue.fee.currency !== Currency.WAVES) {
                    throw new Error('Transaction fee must be nominated in Waves');
                }
            };
        });
})();

(function() {
    'use strict';

    angular
        .module('app.ui', [])
        .constant('ui.events', {
            SPLASH_COMPLETED: 'splash-completed',
            LOGIN_SUCCESSFUL: 'login-successful',
            LEASING_CANCEL: 'leasing-cancel'
        });

    angular
        .module('app.ui')
        // actual values are set in the application config phase
        .constant('constants.application', {
            CLIENT_VERSION: '',
            NODE_ADDRESS: '',
            COINOMAT_ADDRESS: ''
        });
})();

(function () {
    'use strict';

    angular
        .module('app.ui')
        .service('utilsService', ['constants.network', function (networkConstants) {
            this.isTestnet = function () {
                return networkConstants.NETWORK_NAME === 'devel' || networkConstants.NETWORK_NAME === 'testnet';
            };

            this.testnetSubstitutePair = function (pair) {
                var realIds = {};
                realIds[Currency.BTC.id] = '8LQW8f7P5d5PZM7GtZEBgaqRPGSzS3DfPuiXrURJ4AJS';
                realIds[Currency.USD.id] = 'Ft8X1v1LTa1ABafufpaCWyVj8KkaxUWE6xBhW6sNFJck';
                realIds[Currency.EUR.id] = 'Gtb1WRznfchDnTh37ezoDTJ4wcoKaRsKqKjJjy7nm2zU';
                realIds[Currency.CNY.id] = 'DEJbZipbKQjwEiRjx2AqQFucrj5CZ3rAc4ZvFM8nAsoA';

                return {
                    amountAsset: {id: realIds[pair.amountAsset.id] || ''},
                    priceAsset: {id: realIds[pair.priceAsset.id] || realIds[Currency.BTC.id]}
                };
            };
        }]);
})();

(function () {
    'use strict';

    function ApplicationContextFactory(constants) {

        var assets = {};

        return {
            account: {},
            cache: {
                assets: assets,
                updateAsset: function (assetId, balance, reissuable, totalTokens) {
                    var asset = assets[assetId];
                    if (asset) {
                        asset.balance = Money.fromCoins(balance, asset.currency);
                        asset.totalTokens = Money.fromCoins(totalTokens, asset.currency);
                        asset.reissuable = reissuable;
                    }
                },
                putAsset: function (issueTransaction) {
                    var currency = Currency.create({
                        id: issueTransaction.assetId,
                        displayName: issueTransaction.name,
                        precision: issueTransaction.decimals
                    });
                    var asset = {
                        currency: currency,
                        description: issueTransaction.description,
                        timestamp: issueTransaction.timestamp,
                        sender: issueTransaction.sender,
                        totalTokens: Money.fromCoins(issueTransaction.quantity, currency)
                    };
                    var balance;

                    if (angular.isDefined(assets[currency.id])) {
                        balance = assets[currency.id].balance;
                    } else {
                        balance = new Money(0, currency);
                    }

                    asset.balance = balance;

                    assets[currency.id] = asset;
                },
                getAssetsList: function () {
                    return Object.keys(assets).map(function (key) {
                        return assets[key];
                    });
                }
            }
        };
    }

    ApplicationContextFactory.$inject = ['constants.transactions'];

    angular
        .module('app.ui')
        .factory('applicationContext', ApplicationContextFactory);
})();

(function () {
    'use strict';

    function CoinomatRestangularFactory(constants, rest) {
        return rest.withConfig(function(configurer) {
            configurer.setBaseUrl(constants.COINOMAT_ADDRESS);
        });
    }

    function DatafeedRestangularFactory(constants, rest) {
        return rest.withConfig(function(configurer) {
            configurer.setBaseUrl(constants.DATAFEED_ADDRESS);
        });
    }

    function MatcherRestangularFactory(constants, rest) {
        return rest.withConfig(function(configurer) {
            configurer.setBaseUrl(constants.MATCHER_ADDRESS);
        });
    }

    CoinomatRestangularFactory.$inject = ['constants.application', 'Restangular'];
    DatafeedRestangularFactory.$inject = ['constants.application', 'Restangular'];
    MatcherRestangularFactory.$inject = ['constants.application', 'Restangular'];

    angular
        .module('app.ui')
        .factory('CoinomatRestangular', CoinomatRestangularFactory)
        .factory('DatafeedRestangular', DatafeedRestangularFactory)
        .factory('MatcherRestangular', MatcherRestangularFactory);
})();

(function () {
    'use strict';

    var SCREENS = {
        splash: 'splash-screen',
        accounts: 'accounts-screen',
        main: 'main-screen'
    };

    function HomeController($scope, $window, events, applicationConstants, utilsService,
                            dialogService, applicationContext, notificationService, apiService) {

        $scope.isTestnet = utilsService.isTestnet;

        var home = this;
        home.screen = SCREENS.splash;
        home.featureUnderDevelopment = featureUnderDevelopment;
        home.logout = logout;

        var titlePrefix = utilsService.isTestnet() ? 'TESTNET ' : '';
        home.title = titlePrefix + 'MirDocum 0.1 - W';
        home.version = applicationConstants.CLIENT_VERSION;

        $scope.$on(events.SPLASH_COMPLETED, function () {
            home.screen = SCREENS.accounts;
        });

        $scope.clipboardOk = function (message) {
            message = message || 'Address copied successfully';
            notificationService.notice(message);
        };

        $scope.$on(events.LOGIN_SUCCESSFUL, function (event, account) {
            // putting the current account to the app context
            applicationContext.account = account;

            NProgress.start();
            apiService.assets.balance(applicationContext.account.address)
                .then(function (response) {
                    _.forEach(response.balances, function (balanceItem) {
                        applicationContext.cache.putAsset(balanceItem.issueTransaction);
                    });
                })
                .finally(function () {
                    home.screen = SCREENS.main;
                    NProgress.done();
                });
        });

        function featureUnderDevelopment() {
            dialogService.open('#feat-not-active');
        }

        function logout() {
            if ($window.chrome && $window.chrome.runtime && typeof $window.chrome.runtime.reload === 'function') {
                $window.chrome.runtime.reload();
            } else {
                $window.location.reload();
            }
        }
    }

    HomeController.$inject = ['$scope', '$window', 'ui.events', 'constants.application', 'utilsService',
        'dialogService', 'applicationContext', 'notificationService', 'apiService'];

    angular
        .module('app.ui')
        .controller('homeController', HomeController);
})();

(function () {
    'use strict';

    angular
        .module('app.ui')
        .controller('splashController', ['$scope', '$timeout', 'ui.events', function ($scope, $timeout, events) {
            NProgress.start();

            $timeout(function () {
                NProgress.done();
                $scope.$emit(events.SPLASH_COMPLETED);
            }, 1);
        }]);
})();

(function() {
    'use strict';

    angular
        .module('app.shared', []);
})();

(function () {
    'use strict';

    angular
        .module('app.shared')
        .constant('constants.tooltip', {
            contentAsHTML: false,
            delay: 1000
        });
})();

(function () {
    'use strict';

    // TODO : move to the future `appState` service.

    var predefinedAssets = [
        Currency.BTC,
        Currency.USD,
        Currency.EUR,
        Currency.CNY,
        Currency.WCT,
        Currency.MRT
    ];

    angular
        .module('app.shared')
        .factory('assetStoreFactory', [
            '$q', 'apiService', 'matcherApiService', function ($q, apiService, matcherApiService) {
                function AssetStore(address) {
                    this.address = address;
                    this.balances = {};
                    this.promise = $q.when();
                }

                AssetStore.prototype._getBalances = function () {
                    var self = this;
                    this.promise = this.promise
                        .then(function () {
                            return apiService.assets.balance(self.address);
                        })
                        .then(function (response) {
                            response.balances.forEach(function (asset) {
                                self.balances[asset.assetId] = Money.fromCoins(asset.balance, Currency.create({
                                    id: asset.assetId,
                                    displayName: asset.issueTransaction.name,
                                    shortName: asset.issueTransaction.name,
                                    precision: asset.issueTransaction.decimals
                                }));
                            });
                        })
                        .then(apiService.address.balance.bind(apiService.address, self.address))
                        .then(function (response) {
                            self.balances[Currency.WAVES.id] = Money.fromCoins(response.balance, Currency.WAVES);
                        });
                };

                AssetStore.prototype._getPredefined = function () {
                    var self = this;
                    this.promise = this.promise
                        .then(function () {
                            predefinedAssets.forEach(function (asset) {
                                if (!self.balances[asset.id]) {
                                    self.balances[asset.id] = Money.fromCoins(0, asset);
                                }
                            });
                        });
                };

                AssetStore.prototype._getTradedAssets = function () {
                    var self = this;
                    this.promise = this.promise
                        .then(matcherApiService.loadAllMarkets)
                        .then(function (markets) {
                            markets.forEach(function (market) {
                                var amountAsset = market.amountAsset;
                                if (!self.balances[amountAsset.id]) {
                                    self.balances[amountAsset.id] = Money.fromCoins(0, amountAsset);
                                }

                                var priceAsset = market.priceAsset;
                                if (!self.balances[priceAsset.id]) {
                                    self.balances[priceAsset.id] = Money.fromCoins(0, priceAsset);
                                }
                            });
                        });
                };

                AssetStore.prototype.getAll = function () {
                    var self = this;

                    self._getBalances();
                    self._getPredefined();
                    self._getTradedAssets();
                    self.promise = self.promise.then(function () {
                        return Object.keys(self.balances).map(function (key) {
                            return self.balances[key];
                        });
                    });

                    return self.promise;
                };

                AssetStore.prototype.syncGet = function (id) {
                    return this.balances[id];
                };

                AssetStore.prototype.syncGetAsset = function (id) {
                    var item = this.syncGet(id);
                    if (item && item.currency) {
                        return item.currency;
                    }
                };

                AssetStore.prototype.syncGetBalance = function (id) {
                    var item = this.syncGet(id);
                    if (item && item.amount) {
                        return item.amount.toNumber();
                    } else {
                        return 0;
                    }
                };

                var stores = {};

                return {
                    createStore: function (address) {
                        if (!stores[address]) {
                            stores[address] = new AssetStore(address);
                        }
                        return stores[address];
                    }
                };
            }
        ]);
})();

(function () {
    'use strict';

    var allowedParams = ['amount', 'label', 'message'];

    angular
        .module('app.shared')
        .service('bitcoinUriService', [function () {

            this.generate = function (address, params) {

                if (!address || typeof address !== 'string') {
                    return '';
                }

                var uri = 'bitcoin:' + address,
                    keys = Object.keys(params || {});

                if (keys.length) {
                    uri += keys.reduce(function (queryString, key) {
                        if (allowedParams.indexOf(key) > -1) {
                            return queryString + key + '=' + params[key] + '&';
                        } else {
                            return queryString;
                        }
                    }, '?');
                    uri = uri.slice(0, -1); // Remove trailing '&'
                }

                return uri;

            };

            // this.validate = function (uri) {};

        }]);
})();

(function () {
    'use strict';

    angular
        .module('app.shared')
        .service('dialogService', ['$document', function ($document) {
            this.open = function (elementAccessor, options) {
                angular.element(elementAccessor).modal(options);
            };

            this.openNonCloseable = function (elementAccessor) {
                this.open(elementAccessor, {
                    escapeClose: false,
                    clickClose: false,
                    showClose: false
                });
            };

            this.close = function () {
                angular.element.modal.close();
            };

            /**
                jquery.modal pollutes document body with copied modal dialog divs
                This creates several items with the same "id" and dialogService opens
                dialogs with outdated data
             */
            this.cleanup = function () {
                var result = $document.find('body > div.modal.recyclable');
                _.forEach(result, function (divNode) {
                    divNode.remove();
                });
            };
        }]);
})();

(function () {
    'use strict';

    var prefix = 'Waves Blockchain';

    angular
        .module('app.shared')
        .service('documentTitleService', [function () {
            this.set = function (title) {
                document.title = prefix + (title ? ' | ' + title : '');
            };
        }]);
})();

(function () {
    'use strict';

    var DELAY = 500;

    function debounce(notifier) {
        var lastCalls = {};
        return function (message) {
            var now = Date.now();
            lastCalls[message] = lastCalls[message] || 0;
            if (lastCalls[message] + DELAY < now) {
                lastCalls[message] = now;
                notifier(message);
            }
        };
    }

    angular
        .module('app.shared')
        .service('notificationService', [function () {
            this.notice = debounce(function (message) {
                angular.element.growl.notice({message : message});
            });

            this.error = debounce(function (message) {
                angular.element.growl.error({message : message});
            });

            this.warning = debounce(function (message) {
                angular.element.growl.warning({message : message});
            });
        }]);
})();

(function () {
    'use strict';

    var spamAssets = {
        '2udT6qcXrYNdkwAqY8ZLGUJtL9UCno6bWsx5YoHpcnqo': true,
        'J1yTiGyAd8eJHyZfP8DgNS8mdLgtNx7XFSTVrYPb3jn8': true,
        'FL5GP3bHr5BuCrLGjvFGwkBJgny6JYfqwjg626HUEDZU': true,
        'AM8mTdrytkFYHKuLSJRkoW27ak91pZKH6e9FLVvSCsEe': true,
        'J9BFrBzftppntpaXcM1XvXVZAh57KYv9hJkDh5cu1Cwi': true,
        '5sjbUm4XnKqTvZXg7YiCXMCv1C4DMpZHYEpKBPjj7N9R': true,
        '4dtQEjtBEeQtn9UvUp8SbJfxn28QCFK9yyo76kzq6dRf': true,
        '36WSpKD32i8UGv1Zsrtk2Q2iy3kKq2vwDypxvXmo4xkX': true,
        'A2w8MWXaC65B8Hohc4c3nAuRGuXabsxpogfHFyzm1AjF': true,
        'HVebepPof3vKwbr1LbYVd7oDZFWK37XzLjeQ9xkZka3t': true,
        '2VejsfXiZMipddxfUJk8am5x8RaBJs8MSu7fBhRefciV': true,
        'GMCTEsxAVpbN6Nfch47hEkTEDkbDS7Hztt9L53wv4FEr': true,
        'HsspRGd6LAQNcKRSmNrxezn5y5z8mb2r8hJPzXajKYk1': true,
        'Bc1E1gvmfHNunxUJu7KUw5QHpb7iUpJbPtdzSnoejpiU': true,
        'D8WtEC7ZhE9MFtaHWDuYHCKgk5g4QbnJHrmMXcDJMA4i': true,
        'EZA5TwraueJXAYtJkmAMC7ZLYMXtPtGu1wheysFLWok4': true,
        'HuentKys2G44YqPX9uGQSoVkHFdfEKwhXXAKU8o3jned': true,
        '7sXztNhcBzGpg5PY4nLMwyBh5tZL2Ld4Eenm9TFrTgm5': true,
        'BFP4XuHU3UFiMf3dqE8Awvvry16N85JjG1mwdr3eC8wa': true,
        'SgrQWEjtLZ9C8HiYT1UsygW9q3RyhxZ7n4b3Qjhmih7': true,
        'GABEkA51DqYAEmTcEGNMEnv2ZR2cLLJ7eHG22r1ryA6m': true,
        '4o9fUYVMpXqCCgN5hSpyePLW3T8RpLo3J2KJp3r9Eg7E': true,
        '2bdYJZUSePx3VD2TfCzUju1vhDJRHHFXEGcvH1X24XDw': true,
        'edJWD73LCcnGWqtHdmAXx28V7KeNa5LLRV3tePQFW5u': true,
        'Fa1KnaevGEmVspj8oeZYiNZ3VU9UPo5Kmw7GBXP7s4iy': true,
        '3nBCib3iNrgNTzXhVAT9uyo68RyZonQKwatYKAgp2J8e': true,
        'HAAGD8CJpRaSaSev7FVeViaqY7FPvPoc6iEPVnG5PZ6h': true,
        '2dqKaLYS8fGBckLmuyULHiNnYNWQxBkB8ehnfJ69EXa4': true,
        'DoHN1xUDX8NkArj9b55XN74c11YZmHfTuqsufsRhn8a1': true,
        'Dj392miTh3HvZ8W45XqENeS64bgjeHp6QV9NC6MDC11x': true,
        'GUBasJovm6Gfx4xiVAJGWpQT6VZLCnvf12RFeZMqCe1w': true,
        'H9TEXfm8fAEGf7LuR7x9yVF3FzdDSVrT7Zgkus72MELH': true,
        'HscfxGu6vFkBudY8qJcU18cN3jcizRxuYTgGMNcCMJ3G': true,
        'JBFbyB6mTqtPQjRspX8DukCTmVyeTT3CAzxLBixu4S6T': true,
        'GwbYtXg3CguBnTQQWrpaSe8DJVFA2gwBwqDaKom3b5EB': true,
        'EVnho8p7jwKdDUY4UBHknwaF4QVxYCMDNCNJNweShnYZ': true,
        'CbqcrpSt38A66guCVKnaqZrccc4k94zHudZWEiuEgk1s': true,
        'FhbGXSd34aGdBBEeyS2xNQKWT67tdH5rKtDLMhohACXT': true,
        '5e2e5jSTrdrBteCinSEMnE83bfZMUdkX8GYC7ngs8QJ8': true,
        'd8hq5dJER5rQSQYJn1n5YSm9PqoihkW4uZAutEKxgBo': true,
        'C6vVwAqtk9Ewqh8BkxG7kR7bnz1MocUXiPQ9DxrTyydQ': true,
        'HmAF5UKu5DeALjJBb4tKeAaCTHMAVTEKkURjpZbESf9Q': true,
        'E56U1YKyPMBFFxxNZdnVXox6WTrS3MBtz38gLAwJj3mR': true,
        'H9fSnpiDLVMM4E6wR3RbnFDd9zVyVSCRipxYamEy3dtS': true,
        '2QiYn7J3BSJFybQMH7GLEx3oaWBCwopCHnQvJ8FetGkF': true,
        'DAxfPrTeLw1zsbrqyxFEe7rB1zHxU4hYwnvAqfRnVUvB': true,
        '8NPsVsbMRR7TJFVsmnnwC3UXrgtRbu4NXSPxebUqYFhE': true,
        '5AAvv98XDTJork9PNqytcmEaGrAAFn2rf3PqshMsaFud': true,
        '7ZvCXvjtwW9CmtYRfsKwpSEsT8XL88SYVH68y5xvWvBs': true,
        '4ngdLTkAxvRMe9jBnso8KEJFKZZyN2uWoPqSmmgt9LSA': true,
        '7Zg4Uice9dEL5vVbZzesoXybUEsnG2u8bk1jqpbh7HQp': true,
        '9mWVEyzsFw5Z4rSLWMFGGj6hEEa7PZoqdndo9xEMjKsW': true,
        'Gt1LemMvUn6WhsuX3XH1wAh3t3bC6vheaZTVA6b5zW7D': true,
        '7q8DjdQw2tpc27mos3LZJNpmCcNbXDsrqLdSpZgdq1tA': true,
        'BqXQXTZB31MxX9PdRnv3Jhy3NfAB4c7mgGui6EVvQ2cT': true,
        '45E1gAaWwiV8aWb78QYTBZezcZbvkwsYeghcGNwsLL4w': true,
        'F2i5DSN3Q3RxTCcPTYrKAjULMtGssZBuLBZgQ2AzPBZh': true,
        'FxNkh3gT1aKyFGkodw2cHfF2enqxkus1wnwRYT9QZaY2': true,
        '9S5jTZjeKqTTknyzJgJa3XJRck5Asbtk7D3HgS38SG4C': true,
        'H25E6Ri2Gq8hpbuGaLSySp3EZocmztbwug5qiAfhXH7E': true,
        '9pe8xstegAXTPfp2rRCwHQMQDQzDqQvFZMm239sBsxYi': true,
        'Hgr6MREJ4TcGwYRgmtbDWme9cA4Me9hspJn5ZZyqDRwT': true,
        'BiBP3YT9Y58WcCJchKAci5VoVHKvDbokMUbyaGCYXJQc': true,
        '53FqdPPTummNhGi6UKCdcu4iK5Dg3NRgPHmeUJwPuUdL': true,
        'DgpNjwKJe2BRkGS6ciuXAZStRhpnt9nAAoMfN6qamfP6': true,
        '13KhAFU5UzKmh4eyzgggsN5i2b86Sm95dMM2XNAsccbq': true,
        'FaJ3k94SpAVhjqjbe2gsHUAV8eL7HsYYCJZ1vFAmDtuZ': true,
        'Aa5Y5qrE8gUPdt6gPMxKdZ1daQ3EkfFpKsvMt7YpHDeP': true,
        'AkzHbD4bdUUW58hELrwMU8GrCrvaMhECvM2i39YVSf7p': true,
        '5zEwJpdKZpnJ4tyNeH8Z8nizDREcHqsTr4z4bfob4ths': true,
        'ABzFAmjJnN7DMd4M3QiXZjv7jFFPDMxsm4CGcpUaHhdj': true,
        'FW4xm522Vn2PFEUHajbrYaRkf1Gz2oFsvzzaXevqhHiY': true,
        '7W27LPKgZ7mJ1ieKQqi4LbeServHHqN34QCgkYYrhMD1': true,
        '9ErgdZqQoR6kfAJVdKtFNCGJ9EYddva9MdPbow2CY24x': true,
        '94YZDcqjDUJF9DFJA8uj2kzKGKx1ExVgWyzCJsxWFE7g': true,
        '4MMY1wpeK615BVXp4gyPxJzacCeJCwr8cDUFzJTYhqKr': true,
        'CEH3nW4JnJJJi7xm4THizhHU1aPNBf9XBFnKXWBJ11Vs': true,
        '3AmuunR3hCh5JqiRC5zyJiVGCJWooNxVuKMBhmgDMX47': true,
        'DBfjT5YhQTpoRV7dWjq1Sex8JCkdkDtZNorQpXrJ8anV': true,
        '8FqFiEf6jJFtWZKtgR9UVpF7Pn2jG2t3YwBtXfkd2DVC': true,
        'r1SgTEYZzLRfL1JPGAMQNn4Fir7aM1gf7XHbjNm66Tx': true,
        'CeFjjLBxhpj1vsF832KC6SXEHicc1a2gUJMzaAZGHUJ7': true,
        '5ZUsD93EbK1SZZa2GXYZx3SjhcXWDvMKqzWoJZjNGkW8': true,
        '5Wkidywwzdbig7YXMVXrjSSahjqUsrLtHXEB9ukHYmU9': true,
        'G8VbM7B6Zu8cYMwpfRsaoKvuLVsy8p1kYP4VvSdwxWfH': true,
        '7kGHHwajmBXYRAzxbh4Luy8HpZ4eCcEfuq7oXaiQfyYR': true,
        'Abx3qz6CLsnLdM9aiq2YmePbJb5mmPbG7rnKDgNr8hbU': true,
        'BVfprn4fUKcCTyuX8RTCfF4gTQWWSx5otjC25n2AbpBe': true,
        '98SM9GE27QtXoWyaFzjXKQvk8kXcix2mw31RCWUxSiMN': true,
        '4s5RC4Ghrkbu22v6JTM7ypnBJNMp8TtpCnoDjEbhuukU': true,
        '23d3HjQ81cM2JDTCHyc7egj75xEYfEW1d5YAcE5oRgiY': true,
        '4kVGzDz6VkdbiXy71Ee4LKmHDSzgKCC8qxSsTfTXqptW': true,
        '618LWpYBbSTv5cQWok9duszHNma532L6r6JbH9R39SQz': true,
        '984mPD35vrA5Pfcuadqg8BUFNFjcUDpU3iadUWVt9t28': true,
        'E4ip4jzTc4PCvebYn1818T4LNoYBVL3Y4Y4dMPatGwa9': true,
        'TMrsMupcScG8KNosP7L5fndan4se2jqywB7ArTDzVfJ': true,
        '6xbMnPgBv9urTkFTvU9vn5CxJPCpNtdWQ2GFYxqNboXP': true,
        '82Rn4aTBeLdAesgBtTCoQDA2N9NRReqBdC4M6REPo32P': true,
        'Ea8CopxHo5cuxZW7HwfYq9cwmpFpty73xtA3yCaAMnn1': true,
        'ArHwzvvBpyrZKXomB47TRmK3ZT9nZ5zaVK6fwUALqjTe': true,
        'CbK9GtTpwnQoia2bkuNopWybLA3vabmV95Lp1bLznVfr': true,
        '8A4PwMaQDMHqEtHNQMkK7skVnNp2AWTK4fW3kyNcNk94': true,
        '6AnChL44kugXpJKEf2AKvYPumvmEjqjKSTiAHfvtu9C4': true,
        '27xw1ADnQogqHyN8AB5a72EF1RjDpFVQPZBWGF23ohbu': true,
        'CZy399EhWWsPbDpNWWxpYUiJsdA72CrL5M9Nj13j2SBP': true,
        '4CSDbpzLgjT4xQKeQhjAY3nUTfX6UkujBKohLGqifDzS': true,
        '2kpFVHhYosCiGg4Z6r5TzMVn1R2v8EkNFexEN8cRfiHm': true,
        '2p8fSvttcmeZsL6GNqm1GvhubmkEstjjr6dS3wzqGTdj': true,
        '8XSL9XppR3xd4wqUcHjvhWK98Jkh7B21qd4ksR7hNanh': true,
        'F22NRdfLAdfypzn3h8tXzmwdLCCuxqWZ7gEqEbapyBGE': true,
        'A9noc212nU4YFXENQjoEkLAmYg6vSrNHRte5PzRqnTHT': true,
        '9ieyUBh5d4HEzGkj2ZB8cUR5xcaTofGs8wgSLQh46LFU': true,
        'E6tDdYmbBs62buDXpTg51VsD443Z4uALre1Do5w95Q8a': true,
        'B4PaRFQUTRBFu1DbNPuRxxTvBEwTJjAvRQZuNMnQeMjQ': true,
        '6R1s2mvUmfYoggfGTJd5hnH27XmvsEt8MAS9bSmP4pjZ': true,
        '6o4RBdBs7Xvc1EcwaZb6U5MXJtbLCEbAv5ozMJcCGTEy': true,
        '2awpJzkVFVQ4eZTo7aMKZtJiwUY1xeWmXpafctzsXtdM': true,
        '3CTXiTYt3KdS7an6GZvCMpjPjVDiCc8xyxXEYcKBKMdh': true,
        '5usJF87fbTWxKrm3xfpwhdCJteNWSJVDxTUbfJGf4wJ': true,
        'CQcPZDo16QWom2meUhJ5TfZXKYidK4bDNvcG58DWUNgQ': true,
        'BCubnnUvYbW8p4QfiT1Kn9cPbmGe2pFP2PUWo64T825': true,
        '7k7U6JMMuGVn87vRiFnhBTApYieBmSrh8L1t8mdoLTmR': true,
        '2Z77ZxPQJcJRCvBUJzcpSFpzngMfMUhLq6vjpCFcSW1t': true,
        '4bA2jqSidTATvrb1a18c7E3sXa6RP4t62B3VWLQ6hWPM': true,
        '5EBSLu5s2EvaV4PErmG5XaTMhJVDn7FhUt3R8WBRUQH4': true,
        '3jMsUtXbx98S2b51H3qzZrRfULB6TwAsJLiji4LyDTNF': true,
        'A1DX3CnM6GNYnWh9Yp3hnwGTM88ztN5pXPDAFT4ihmxS': true,
        'Ba9WAmZf3fcshpcwbVwC2gub6Y87Y9D5TJ8HrBexjtzP': true,
        'C88YAd1K9TW8t61oi7S4PghhWpBviUrr8PVUGPdoGAdP': true,
        'Gysdrp9KJaPDEQMdCPcz7Vdhha1ff6xJ9uEeZPfQSxQp': true,
        'Ftim86CXM6hANxArJXZs2Fq7XLs3nJvgBzzEwQWwQn6N': true,
        'TrhDxSdzxaypDx5ac9RnqSieVY8BURsLyLte2GaSCXW': true,
        'DptxnwX74V11CehAq8PCUg6ZqCZhTkDiyU5QJfbEwR7C': true,
        'FKoSoRwGt8UTcL6y2fMDUcJnXic2PqLsoTYi6JsLZGU8': true,
        '2haBKobL2CznBwMZ9DUxNk3JExYwKVdimW9yGdGBp11C': true,
        'BuaJGc3GFjZWLphrhNse2CC6jkqnFpZbQJn5ytMsCmY8': true,
        '7GokiT6g5skTMu5dpYkRJ5AsNgzciPmiqKsr3a9rQDLS': true,
        'AnTc35anQ94S1ygg9GymJPkwCjC7uwje8yVT61Ai8mm4': true,
        'ECHXaaLKcXJbAeuWBMx1W7NoF76jMmj8qVGLLxsA7BxG': true,
        '8eoweAfo4xwrMpMNiAygTyn7JKKKxDn9d9PM1Hrm6L6m': true,
        'EjroAQsBbaN7cgzsKAchrHDMWsDJZJrNgus2CHRtAFhw': true,
        'J1kYLiTPZkW3bueJQfKLRMJAnfqgSJVYhvAPN6phcRZN': true,
        'RRBqh2XxcwAdLYEdSickM589Vb4RCemBCPH5mJaWhU9': true,
        'FhPhNDMAtdrJC5pje2ZVRRj3AcuFaVwdqJewwgaNxBAk': true,
        '2B13hryog6P8g6serJ5Pw81SC5qoNECtzM4foQKq9Dbu': true,
        'DVzKWstk8E5Fcf4bN7dgYFjQruuNPaqRPEKpzAjEWfM6': true,
        '3CdDG8gxiCzwyAhS1LNGJ2SUNiCbk159sjZyALUe81gb': true,
        'NbhtQy9C2i8m33ThC8X2hSxVKrYeWDWZUVhiuusrLAn': true,
        '7kP18R4fW2nXMiLJXdmnzJCwm24RXHCWFcYATdmjF8sY': true,
        '8YYT4rrvsSjF9PTTLFEiHNCr2Pfe9vgHJe1AkAfnXtCt': true,
        'CNiExygxbLWX8ifvVThSDkj2C4rMRd4cn1T8jUVN8AgF': true,
        'FaxojP788y5oub4K89BYGuA9P8RBLR3N9dTXa5uyFSfG': true,
        'ce1BgQHYH1ett8iNaXU8EKeEvkGkQwbrwLmdEMzdtk3': true,
        'EV7xE17gbrpLqkJAFdEhTNmWz8aknEqwEsRAummLgVbh': true,
        'BK4UZCpgR4UTctD8sJufZVc7WPr2aSDi2Yt8BR1myQKf': true,
        '2U7bioBT2AGaLLAiSx8eQHZy9LZaK9GinZvZotdQtHaG': true,
        '2tfu2wEfR8JU3hdQiNRjFCo6GJHf2zv1oxJ9CKNQ63qD': true,
        '4rmhfoscYcjz1imNDvtz45doouvrQqDpbX7xdfLB4guF': true,
        '7erq7o4yig7eor3Gm6gZ3MiFxQr6oTrcUAt1UhybajWQ': true,
        '284SCnUHpJ1Ru8cYJgDwhF1jgUcJYf2G7MiHY3g3Aaks': true,
        '4pvo1VazbQb8jvvgaAbrXH7NeqfS75PyHB77e2Pozjrf': true,
        'ATaS9qMBvJEGjfk2cAUtu8h7tfi6JYJiV3yKWZAYzBaf': true,
        '7DN9UQqNsfB81ukenGhjC7XTQNByXSqfNemRvmr6Y9Ux': true,
        'ggYRzdUdHLKz5jTitc8DsQcevzDJoyoHT8yEvf4tMdU': true,
        '3MGjhVaEq8A4kBqRPXmaAowk4qYpukkYp31vkMSTYDDp': true,
        'FkSy91PYXmXNEqUrhJYiLVH79dU1hZUyNX2Sc9nJj4vv': true,
        'F8C2EQgNXSf2U7rT72Xtj91Z42rLi26zBcb7xzjJH9cA': true,
        '4WBVEVCxmjopWH9vZKW2kbR5nEwx83fGs8rqRAg7RYbA': true,
        'Fr3KR5z7QMwzP3TsMhbM8P11JgPAE5dL3et1E5QVuL69': true,
        '47F7ct1QiM5FSfULa1DHaTLpp2fWAgvFACqE6LqpCVRi': true,
        'Gt36LiY98qGxxMcT4iHffNiGNSbMQ11qLpcYtmHSoh8D': true,
        '5qX8MgTsZeWY34Wk2vuSTjhkMQGdQBbym8dhtHsfAZxq': true,
        'DMzADx7biq8mgQbaFUootHHnZ4SzKDDnK5CLLQLffuwN': true,
        '4kthdn2D1teJNVSt7yZ72pHcTtLkTXZdGzjTudLZ5fsV': true,
        '762Xf2moiCSWtDuUUfarFd4uwPifa7KDgFdm4EYdCdya': true,
        'CPz844BEEvC8zvdpE5sGzw78tK79CkCkhvW2Hb2X1eAq': true,
        '3y7oak8nrFNWnjWVsH7TKL8poXK4oBEUE24UxKdFwpyX': true,
        'BDtHo2RAh46LnmW9UkTdi6m58Rf6wE1xSq4Q36rLUKom': true,
        'FK5T4YN9RsJ2zgRybgC4h4eNzrppf4iS8R6CWi2ZEhmS': true,
        'ENuguodn2fgKSPvHWoePfMwib8bbkg5mYB2VQxsuFxkh': true,
        '9KFLbN1jQRxVeizvtLuFpugKQD1BBLt7LuA4xgegzzyP': true,
        '59WwhjU5cmm9F41scmUhipaPhCYKvLERgk2vuXT3wjWa': true,
        '7eECraBBEHpjLBNorjSK7onjMoQQ9KVE3xWC1Yqz7V9K': true,
        'DcctQ3GbmBuQjroVHZXWF84r7pNDiyTX6V1bLnvR31sg': true,
        'FWSHXde2wofyRTwwtY9dNKVCLD6ABQ3y7uHHdGHJnNFw': true,
        'HStEjmHZA8S99vffbnKiAAntmWeNLUokM6avx1YGSJD4': true,
        '9Ebw71pBk3SdQpsZ1ppskT3ZiQacpMc4WrRVFFYbNfA7': true,
        '938xsv5inqVVGyeSHhpyp3vyp8yZjEjYG28LCSb7MoZK': true,
        'FvHBG5X8mNRhqB8STVTqFxfzdFn53wSPbLbbPSDiiWBy': true,
        '7ZitWTsLt9nB7a6Wtv9E7a9t4LwPTAz49HwfY3rvCx4i': true,
        '6VQjo7V6Yn1QYhPw3KfK1AqzpyZfja2DkL893qV6gSBf': true,
        'CFtqsFFVM4Jtffe7Sg8LQ5SBvfuq6pWutVyNYeRKBCRX': true,
        'FYzutmZvxpmKifdXEnd51gG89BRqjEkmb6foKeyxumXP': true,
        'ECjtb2bmdEigJnZZF8Kc2Lw9cwL1wNnrmdcEMHqcX9aa': true,
        'FRDc7YX4e2dDxPa5vET1SxJHvcYnvB3euPTedfu7r3QG': true,
        '2xBtifskYbf9ZmTiRY6LDwvj2UqkLmcfAE88XSGJRebP': true,
        '4Aw6NnmkAELqK6FqQVj5nYB5PPt39TSccpFhgFKNYVAQ': true,
        'DxWNidoTpYpDWWxUtotDswdt7BZb8siRGBtK2axUuc5i': true,
        'G6F52cNqSi7v2kuj2anzyKkYgbhsijWvCJDD3WvKzjLH': true,
        'H33ty6LcgkLddm3f6SUSBoWoheqxbAa5jp4egxsjYK4X': true,
        '2sLrLJFr2GF7e9F3HzdFfXDP72tH7zTVEpp7WjB2WjSH': true,
        'GDVd1ohGt2epqUtSyCtQcDsrnVCroe5z6Ab6Ym7jnP5z': true,
        'ChGWDATrVe9X4r8gGBjkgWoDNcSETJenTgUpx3gpDUFL': true,
        'ELDKufAbaqWHWDesrcMFZHriRh3u8ksrCAdzLkPSp852': true,
        'CmTTRrXt537yMjwCkkbJfhX5PF2CYpAkNJgHXmCPvEwT': true,
        'Dap4XoYVF66AY6ectjXR91uqnii3SKQ5DzRSWKxAG3pA': true,
        'CMoidzVwJPEubf8hdKY3hq5MfEgDMLkozKyTewft2BKm': true,
        '3rQqMUxKbvzYRJEGhw9tGRyCChQ3N2cNCmnh1dVpWrHg': true,
        '14BMpn5yg2tCqvfukEFhJLy1Ec9Cus1itCj9eRNX9YR3': true,
        'AbbPHHY3633fmSyyrpuq1HZfUoAPLuZRQfCK4rmbYH8q': true,
        'DrAEzt5tPUxNMKAbEjKVaA4aqYZMjCXGJjw6kmd5M9wz': true,
        '7hDLzmx1jWtSnRAaNntmTJMe6Wj4yy11NAQcZE8ttQit': true,
        '3nrQSCkEtMn4MnDuMk1XLvVfiTbRcmHh16Eywfdighwp': true,
        '83M1Q7H6oaCfYuDbSU7rugjwbPsymJnXuRJiExJKzz9': true,
        'HHYrArLvMQkk7mbDRD6iAkSoAqdoittPBn2wX2JrA7DQ': true,
        '2YEksqZBsVfeJKb4xWb56ABy3KpmSZiuHaMV7Y4qMMeU': true,
        '7zDKXCvmtohw1ULwg1cBARdBytjoCauq7GfdzVag6mCB': true,
        '7YJPyzH6gAmA1J2qNLzWJrm1SV6jESpa3SVEHqcTRaQQ': true,
        '5HpVAmraqK5Qr2bx6SrozVHeWBSugeGQGGvsZ7xMwsh7': true,
        'B1cPEBCzazmyDpnBvt1gZDpnBKRSZzT6BwysgdE4RwFa': true,
        'BWdNqJPXjbVrnFPfhSr5Hgm8f5dbeGXJR86DUiPfwU7m': true,
        '3eHMbKMuHnTnCdBCqBfghKt9V8Ysi2ak6rCTK3gjoFTp': true,
        'H6Pkbr9ca79TkvFPgVyYa2rhsdZ5tLPSARtRWETecDof': true,
        'FFXeqkMviCb4y59G1FBeNAeXjZQkLuvKHJhGXj3Tsi1Y': true,
        '3338Vc9WtTL2TixE7icwb3KQrmHaXDsiSgGbWXrbr83g': true,
        'CZ3bSP7TvtRndoDwGVuhRaLZ5w1sVuxekGu2TNd5vkMX': true,
        '51AsLR7gC8GCRaDhtLXFLk4NFagvRU6unoVCc4HZgRUs': true,
        'GgMWuUPdpFyXgLrbNckoFXSBLYnVQyqqRDtKDS6u1LfC': true,
        '3RSAvjnSj83sFBDZnRZ8LFVivUs4R14fgFbtBHe7jqK5': true,
        '4qL6SW2C2oQCj9cTz4BpPekfo3NwdFJ735cMZHaXTJkV': true,
        '6xR3qMnJxaw3QCHwws9XnN3SY1ra5gGsLwcZiShkPUrf': true,
        'wEThpzq1sLqM6MUSk5fmRNpPRWmpV2u5dnPb1L6PyaC': true,
        '8jhxq3tZYyBWQZVdnckFCPTDQB9tUdNZdjesRJfbb6Tc': true,
        '6NESa2i4GMzrddvGurhvoefj94oH2CWw9L8ysfMDtNns': true,
        'DLN1qvsHDrKCbkXwgQn3yxwekGk4qq6KWpWa63REoz8T': true,
        'QKoBdkNhToPv7hA6KvAcELwabDsRZcuZRWenh7uHxZA': true,
        'EwL8Uxq61R3yqrQbdbbJ9S9g7kQ2ERqnuMnJYV2zDfBg': true,
        '4VobSzRSoU5JujJGovkFErSAGdG3NQwgCzZhRZ85LVRY': true,
        '9WPyeawo8V7vfkrJLF4ykKukagVHLSqXRBJzCu6y6fxi': true,
        'L2MS7xSSPSdQjKLfEP6vjvaxPT9fEskCXfRXRmG9u4x': true,
        '6k3HV5X5oPE64iJgP5S8t4pYuWEiTqWd3ExS42ofiLTe': true,
        '2Rmp4Sjggq5EbKCJjA64KWDeDma2snppsMNa5hd8KKi9': true,
        'DuHV9BnzvPNNrWgunVn2tDarAr2ydPorzz4eCf5sGqbo': true,
        'CzTvYPp6fDteeMGU8VPcwRCAohywugR9TevuAVDLTbEY': true,
        'F1PXUDxQPEzJCFhtfRbesqUZebcm9gVfkea97yYxN5hn': true,
        '4Kwg64q6A1PJg8sraB32ZUu1qPf4VtkehFQS581qkHPD': true,
        'EhhKFkKkPZTEdgCrtJ99qTfy2ZcXHt1rgWeAsg1KY4gQ': true,
        '5CMFniqub5P9SHhMTygH1LQgQ9fLhJtQCxc5RkuU2qkq': true,
        '65e8K8j8RDVh7TS3UBx4s6wXQ79kwFYfDNpFUBEaX88z': true,
        '4AgedbNpeP8dCTCgq2D3kxWtovAVtSj1QApvAhvnTEiJ': true,
        'ADE1YTdFhGjSePcRuDR4jANn1xsGGeSjMC9fK11DE3gs': true,
        'DTpfJ1nvSz5FuLX3J15qh2YSNT8CF1s8rA2E7818TtUg': true,
        '7rCm5e8xzVGWaicxEu764YHKkmG2P3uzLzTwGo7LBgQe': true,
        'AaXozPq8h6q2WopUpA47bhzpMqVDveLzVsb8vfMh3FVc': true,
        'kBthTtTjaKWbPsnKfYyfMcea6fxogYy4wti9QtZfYpV': true,
        '4kuVghXXw8SHqZADPwsekQgV5EnVpVRCVXXLta5ZWuRH': true,
        'AsJLDXxfaFPQKLpiS3XyYGyebeBMxjpEdwTi1VNkQuAf': true,
        '8Yiktau4mPvqBZpWJyCVm6D93jtzB2XVDiEvbzMffFzi': true,
        'HzmLuJiC41AA7uxQJGbvxM5cvpa861pz7iJZwvhhJZ1T': true,
        'FLvk5dSJyPQDK1eVY4fZA1J5yv4THXuUSFGWnta9SBLq': true,
        '9w6jWUPPsjES4yzDR7hN72iWC7Zy5H8hT4jQd4pQzWax': true,
        '9ikpj3HNoTtpx5odmo7KxPhPp65xxVQsgNBpWMXqB9Dh': true,
        'FVtVAEAe5upQULdJrBaLegUK48kCy7nEHtPKMPgfPLE8': true,
        '3KsC9VUPsr5eUuXeDfy2yPNUVdXZcgH3S5dL29U8ersA': true,
        'CuXu8PJHritjGVFpQqmCwnkSfyx1zQgDRunGrLMHNnE4': true,
        'GsCwtr8azHvyuR121fjbzgccpQe1wYtA6uSgz6mJnoVB': true,
        'AN4ZCiYWAWMsn95JP6MxDkcW9iWU8ujbywKPa2kaSNwj': true,
        '54fRzZXwohFqJrm2pe4CW6nWPuMYh112pwPCmHf9a4bs': true,
        'BQ95okgVxvsg6y7BXbRkAjn1hFhCuDRw4F4DSDmzde2G': true,
        'DzeopXc5NCCKARfmAs6cW1Vo5cgVsKg1qJwWwcmm5RmG': true,
        '5Bjya4SiCxv6TeSoiVZmFSddzAVGmmVP4VLLJueYiSnB': true,
        'CwKmdsKYaUDf7s2NSND14i49XZ3mKqtD6ZeHLD582KJ5': true,
        'CVJCJfMuDtwS57ocStDpMWKta7pBSTUpG2Sdr8GvhaWh': true,
        '8E6kvNwyTDc62VRGscGafE2r6B4khBgKvUbbuV8oPZSd': true,
        '2kmcJyhHtcyr1nR4rnkTZ7ktFQqRPZxZKR1JUWjYC9o2': true,
        'G22K585GtGyEptwf35Aj4oWF9cSAZdoTKiEyE4Ppd2WF': true,
        'BrafgsLjbqyJCJ1ZzsAELa5Wu5gqgJBYwR6rwCpGqfT3': true,
        'AeMh3MMygHU8hUMaZJ5MM3DnPknX4JVZXr66GUY5cwUe': true,
        '2G7BzEHv6EmmGst5Kq2YHsommFaK6M8yXz7aG1s6mn5o': true,
        '92aoAFtLUmVBBbpusYoUi6WRM9d2omjyZPCxMkfuDgFu': true,
        '6f3B3JQpXjUKeZw86ncYJuVT44MvVxnkmTxe5SBXqiyY': true,
        'DKnjxjKiLvPU9CnxM5qgKRPsxdWpsmJvdpPDPaTQXy7n': true,
        '3GQ46snnXXkS7ryZ25tXRnxbMjYEGA8UsJcQ9Bs1U8LE': true,
        '8gRMKMYV5ySie1M3kNZmRCCE61Qi8yQgSwxt93xrxDWK': true,
        'HmV1tmRZscQEFgHHmuRCbNosvjaASkXEEPbL18VYQGP3': true,
        '6qHntKymoioQsrNiKGB1EC6QcxmoGLbC5Lvzncq7dnXP': true,
        'CXU4VpVJBcBwP3gPaGfY6Ypt84ki6R1JuNALTXsVMWv6': true,
        'dFhQv5EpMC16hftpAN8wSeHCXVsZa5qPFtjSKTWEwbK': true,
        '8ZYoRPex5tM3iFGWgaizgetDcSnCemSiVk7g3DPTbJtE': true,
        '4UbHcB9CzSuXDnBzTg4FpRTfSmxKrqM8Zb9waDY3g9h2': true,
        '8GRsvYHwQQnc9DpBVKMnRFpvNTnnorFVUnhBRCwTTdSB': true,
        '8kULCTSG9TLdJMqsr3U99nh2z39yFTrRMMxZFyWr6JPa': true,
        '5tm9dpPGnjg5pUeqL3Cb8k1VmtstZm9Yhp2kugzSkrXr': true,
        '45DQRGyhmFArEuXysXRg8U5YdKiAFQoS5mDnXeMbZMzL': true,
        '2HZFzC6kXQGjqnaePE4sPhcLwkn6EvjWKZaNtDCd7BjP': true,
        '8Umd4LUPogBMPs1yfkUYVAunxVmZBYCrSY6yQsJvaaWH': true,
        '8m2Qc7acokKd7kxXr2hJccDSu41WsV8mXR6TywgtobZg': true,
        '5x9cNZFLb3GjqKb2zr85NcX5EMT7Xsh3yE4D2774XYfR': true,
        'DyJR4jNoACaVb188X2qjy3fug6UpZbiHNTmAanRA9wnw': true,
        'AZywKKmtpE3zdLgocXUcHWbadGmZBTs68hAvg7UanCRu': true,
        '8YY9sXXcXRFSg5c656QW6SMJJbHD5uFUv5myY56Q94bq': true,
        'BseqUtiiaA993VJ8TC1FNuzwoRBtTq6vjNnG2eV12Aum': true,
        '5LmQ6W6RafuuuVj4WfSWgRhVKtkBJx4tN5fgpsbL8M9J': true,
        '4o6tETqCTLtrD4jaepshqpiWySCTAMoHRJoDJ7RaJPwA': true,
        'HsmGEc2KrpYgGuR9n3YhrbS8CM3oGH4jgSHe88kZhLdP': true,
        '4jqzW9gNKftMBq9LAsUDQuH4XHCBXKitaUmZ2GJvGUqX': true,
        'F3SmqcYqPj2PMfBXgDoLQfzNGBWbvy394FkVFgwPveQq': true,
        '2BC3B8VKaLBNhWpDd5TaQbCZBRXQk7NraiCkoNW12sV8': true,
        'FjVmnRUyojzT5habjpf1Y5YPQXK52Y19UjtvuD4TwN3h': true,
        'EVigPsELAVYtejvWHVkPXMxjcHEDCUouptdLTPn6FdqB': true,
        'FikYCX1fqYxgWTeRP9X9zYVh2qFr3FjEK5HdQc6eBV6m': true,
        '63M6iPAnbskeXQkvM6y9DR1yB14Usf3XbN1JzzKhgdDh': true,
        '4aFcMPbUpwbfB5q4CxGnd6ZhpHn9ek34xg4PDJVHfQU5': true,
        '4S4SY9uQfbiz8ZvoiQmLJZJ7nE2yygRgdKeWdbEA6yF2': true,
        '8EA6q1y23Je7r35e7M5DnmQ4aW7ceochYaVwxj8AqCeQ': true,
        '4UZLZ68kCc15wv6u2jyDmqek561UpR9fUvoTX8GKXhsb': true,
        'BTCwPHCA1cZYhPjc9VQU5uVc6sT3VTrSvXxyLFpbxj61': true,
        'AkBbcnVqLoCjM1TAf1NHGP27tPUkiWQH2PFFtgenZvvv': true,
        'Ck3G6iRDbDYkeCUMxUeWiBkgeRHwPdHdyXMPWuCZ3JLE': true,
        '24Z1HAkS3My457KncHZPQCsGMXh4oRVUkJqY2rbScPYj': true,
        'ECkogwYXjJ1MGE5LbVNJEZTjAvDB7GEV4ghtjo9eiAx1': true,
        '79N82V1JZQiTEtMtzpYh9wbqLVDTMWWTEmtbgN7bGNZW': true,
        'FjZt3A28NJDAHSzJ8vH81Uv2majBSL6cAf3yJHWppbXa': true,
        '8eD9EvCz2Lnqk3yjnNxojgHP9L43VEFFBDCqFCg6PP5m': true,
        'BawPvKBi82fLKyQNkuD1Ac79FnZnsfUHSgaXXsBXTpas': true,
        '4qNfjr25WAN3qWF48WNDeorZuDzTCKaL94tFeeXaLxTF': true,
        'ETB4yZdb76CCnEMALQ4mGAdQXRJXtbpwpfmra1sB2Abk': true,
        '25aX2wn5ur3SQAkHZfYwsyMaA7mstXduK5dmrrstM3pk': true,
        'NR1bQ1q559BY6So7eGMdxQcAcrqAvgnYAbkK2xdupkP': true,
        'BGN5utHuYxAdbv7hNbgiUxAyJLCzoPT3CQfXVRk8bQJi': true,
        '8YFejBsdbC1NFWvWCMuCSuqqUGJHR4RMF1ZLjJFTb6kX': true,
        '5xi45kwiF6BCLxXv9uwpFX45o72ayFzb3oCmDZWr2xPx': true,
        'DB42qpez9wKAeHuSCztX1orE1aya6RxLdE2gemygpmQE': true,
        'ESZaiCiK8pUZoNzMXky97DqSgMcawYhWUtwTujMUCMLx': true,
        'BcnNZWEqd4SYspfJQaUKuSAWHV2g7vh22xxTrtw3V71e': true,
        'CtpBTD8yAYbtMM7qBRnxGumCUn8oZ1B8sGF9Xt3eRZV': true,
        '64Zqoq7g3kGTMx7DtUS4ZFokufvyxWk3qgEPWGpDrDYB': true,
        '8juYABzCQpA84eroW3WDKzBzNCpNsXihFssqPyWqKjH2': true,
        '9PXWZBeaHu2N5GKNApgRLPobJ9udemtdVU3eFThSi7ii': true,
        'GdAXytdT2TJJsFo3rMJSqk1gi7bo52GLkyUV8sxhhVbJ': true,
        'A3zN326ah5MLukZUqK4YuSxAeEJTFDr6LGdJAc9FLWVH': true,
        '4yJ5mHMu64379qBvB6Sf6RAGuh4wXcKXEX4LcYsE247E': true,
        'HaeLwF1GPHazEX32EF8PR5KgaWH9B4x5wLWnoVZ2pm9w': true,
        '3iAkinWXVwMnDygWvoqvnEDjX4y53dmrqCLwxX5dUy4C': true,
        'N3aWpiMw2iBS8mL28bmQHqAu7gPasagDfsRPicJrFBf': true,
        'AMDYBdHhZBavGio8vmT178RWMcWwPvUBNsFgCfbEda7v': true,
        'EtP6GKtTDbMAuGVPd4cJAsBCBZVQUsyFcHZpcnGdXTBy': true,
        '2vLcSiDBxyJsuqnCqEYSoVZxqxCasLeTxLaqEPySNpAZ': true,
        'CPJTmp9eeZEuv8JynUMdPAsYfWC17yECRtJ8VC7mfocK': true,
        '53QrmBjYtfPvBTpeJN2aFw6ByM5psqMmbH7BoMmUJMCt': true,
        '6ezXJBRhEGR8QySyYgXsNxJs6dKe2KfgAesRkAXttAnk': true,
        '8AA9BtosinXWMcG9ntUFntBqL7LznTGU2vKX8uzAWkpV': true,
        '8cNhFKTjEzLpweYfzwVG2La1ZURki6TgMDtAxFfngykQ': true,
        'CCDWzevXR3k35daPnBWg1owyt5NTteXJEWEJCRzQyEH9': true,
        'AtJS2j3y2D6jvBvY5wqoU9EyYrWt8ekR6G77r8PEAZWM': true,
        '8Y849L5GYT8FRk6uQrGmMcsxXLTtwdnRWeURSX9iFXEL': true,
        '9yTNgraB8y9uR7J2WR4cjBJDC8rCNYRrUMDhfRLvYJkD': true,
        'GRNKxpo287KXo3vWr4wtwZT19KtcXDi1o2saiJUnoZf8': true,
        '7jPsR9No3pjYKfSkhDcafsx5fUKmMGnUpTkte47DwErJ': true,
        'FRhQ4qFRVBJZ9J5s2QtokencnG6niZcFo6ynqbos3eVz': true,
        'GS8HXp1JGaex6R5CASyTya5CLgj5G3qbSko7K4iEY2Yi': true,
        '9PDs1rPDG7znPKrehNcGhnQTTp1Rr46kBQGeETY7YJuq': true,
        'BjLyRMXRNG46yVapUCUqd7BMMzxPx6HzD6C5nJF8kWBq': true,
        '3PXj2KgUw2W2jRPq9fVzZ6wTafs1u26dNa7HREyQXQfb': true,
        'AfUeX3n34282E4jjvhyfccUpTe4VKi8LADX3GLMXMdX': true,
        '2v4WgVzFjaMcqxFw4Jn2cdvjdtxHitEwdY4pkdvRhsLc': true,
        '3XE2en8pq6nWWDjqMiAVoZoGWB8iGK71c8ne7iAvZe5B': true,
        '9d6v1jgQxm75CmcLjwSH5gio6WLd2M3f33q7gzdLP4Xz': true,
        'CEyya9MBD7wMDfj8VWc5RAGkarYXcVrdnfXtutatDQRh': true,
        'CypyDg9G3Z8kvo8ixPWD1gFMUrLFsyvCVbFqvz9Ktji2': true,
        '9GPTDbDxHy56PHSEXdzz83yGZA8sNH3yBMRiDnLw2h5i': true,
        '75nEPbGsvA2LHCdy6xRdSekA4QpNnhgfvX8FaZemg8UN': true,
        'EekUhPpdUJfj3sCMFpYQBWfBfTuTkErkX7m9oq4h5e1R': true,
        'E6ssaiq2mypp5P9eNtwugYADuie5asnshUFqibW9cWmf': true,
        '9ojuFxP8rF9JFZjbdzP4VyME2BBGsd35d6i1AqPeFSXW': true,
        'FZ8Nq79xTgv7Hw3bbAr1dZUVYGZdHtx2yJfVrzX4sUJy': true,
        'DJSbRpERx9TyLo1KGSE2bYSZtTjTaUi68ExCpcjrdsJa': true,
        'BR6PM4xpcpDsHpH49hdq91tW8fLa5mQQC5n4S2MRkhss': true,
        'DJXgVEJQBYZK6rSYs1xNeBsdVDnk3SZ7o7cxocdTzDHM': true,
        'Ad8QQyqu6x8wvKxYCXk8djj7XqG6GNAbhrGbsxv4Ffpn': true,
        'EYFFwWnmEEWYoWgBSqAJFtQxgihMBa5ssntxMsWfDy9B': true,
        'Gh3TZFkQxXBZY4eDyFpZ9eJ6huyJNsRQbb9dPhMv5mzG': true,
        '2yobffsFG2DZz76tFkvdtpFKJhLa5EPv8vhx4qJdYx8n': true,
        '9t4W5bzhskanmwb3Jnm4hHpYJ9HU4Li3JrDw62bV46dF': true,
        'D4pAgd6U95wYbYkniAPdCXCWYjeux5haKSAhnsbJdsCj': true,
        'BkCeh4rnQXL63o5rBu4tm4yMymYi92maofSjuJRPwDFC': true,
        '76TeMjdvpczkZmdDAgWtRB7ezA48AU8GngzQG2Smowc5': true,
        'J3QMS1NAHvJEq8sqdoy23N7JESs3zwM3Yo2CVQrkbJS1': true,
        '3BHW9qoeFyVzgn21pEsVarchKSEDwpPAyF4CAgnTyS8C': true,
        '9Ty1rAYVkWuMrY1168RpCjZBpPwUKC7MxPf5japecqRR': true,
        'FxYZ1rBEFMYRxrT5oBsDvSwa1p4exdy6WSYt1EuZqCHQ': true,
        'BHGaKaRhBuUyHhoFCVbSr5yL2TgAEi2CMU4njZKTh77U': true,
        'BD71JKjgnBWgg46iuBHabj5qgdRPF1LwdLASdpcFFDsi': true,
        '582dBFucANfTGi9xTa5WHuGnBMYYuLKAV29RbpvkYr9s': true,
        'BS8xBiXUbqTwdSmRzHMMioCFPS8t5XoBSaDLNuB5HVjL': true,
        '3PyivxvigMTVhUgh6krJGA3cZuWMm8kXdAGQkDQRXySM': true,
        '7dnm69bRuhfcb6KMdFpgKAN4yByUPC3invELg7wA5W9n': true,
        '8iyXX4HJkTSvVK3KDgL4D9Jcs2b1qbChndXyb172zyvn': true,
        'kncU4RiaZ518gLifVvauuqLEWwPZ8vvehQ564RJ1mG4': true,
        '8CWcfrBeFNkq5tKTpopMGNAm9Vxgu47xeoPkTSH413W7': true,
        'GBPsaqusvnbYLTKYT34ZNN3Ngwa5fNrinRZzkCz3DzLf': true,
        '9qKwneeCP7GoKm1w57hqSjZATsaC4RbYeGnsehGCCDwY': true,
        'CAyBTqxngcwR4X1cyhcZBTwEhrmFAPu7A4jdx1Eiq6pp': true,
        'EeLMX9YyjMNr1gEkZm96Tow9niQezWUVXFWSgWhjFbQs': true,
        '9yxKYyL1TcYrLJkwwKuRa26eQLHVXfFpatqnw8YKpXdL': true,
        '4vV2ZSC8hzADa8Ed4f6mUuSCkreJrCCRksc6NaXhmiYW': true,
        '2q2e8HDAo8LCrwzyhBqfSqcVCnrktfLtf1eo4Tv4kHbz': true,
        'CkzpLpPjJQVDgv9KiNgFCDdPB5RnNrFf28k7F1KD1Cdd': true,
        '4CCMKig8mBwf8XWqr8ibTiai9dRXrYz9Zg335rdNHpvx': true,
        'CkMdwaxgEF4bJgtSAjdPtrhAVkATMrJ8nx7WdGoFW9gp': true,
        'AZmgwcv5Qsi5kDW3aMpDFvc5z45uuTZzL5aCV3Zh6R3C': true,
        'ExSRWiZmjev1doProTiDRCZ6AXBw2fRY46EkMFYkpiTT': true,
        '4VYiGvXMa65aLabxp7QQJ5XghtT4xNKuupDcNBWYmFqv': true,
        '9FJJ33bAFGfM9GNtjnwo9DcxXj2wbTLtTy6jtEXLUzaG': true,
        '6YRA9bgzDyAJsUeqkvedFrYWRDTH66nFocUQpNXN6ouh': true,
        'AvetvbDroZZCRFVfPrZu7Vw8F35ixX78UY8tXY2cpxY4': true,
        'GwBzMfGgdEWV4qQpExBDiq6SYciXy49CjhN4yEmPboon': true,
        'DJrjGjAn1S5RXmgEdsNmKRzydbiieoMHiuEwhDAZJQTM': true,
        '27j711w3gJQ6CWuhanJ3hHmfUAVw3vyKC7J2UwASkBbM': true,
        'GzRFyN9R2rERRPwLXtsGQkua8C5KcyRBGpev6KfZDNTJ': true,
        '9gYMNKegYCCrP83ZPbBUNgSFp5js316tR9DEApqYDkcM': true,
        '9n4jVrNkGgXuFGVBHi2FKoNtrRku8c4Vb1VeKUMny3Rm': true,
        '21WbwYtzzbyVwZFQCvtAfeQjqfeFaDiQUHc7UXvpuphz': true,
        'HaP4xBeFRxqsnr6cCCy4vg41tBFz88KR5pbkv5i797a6': true,
        'GmgQy1b5mPZjP7WQBif11FFLEvtDZhYS4rWMJkpienRR': true,
        'Aq3tcyHnDGB9f147gizQNHxU7Gv5DvniFcBZ2Pg2vu6L': true,
        'HdXCZGiE6w46N1qUsxVrafyzcaW5v8nJLS5DPVLH7hEM': true,
        '7muQiHac3MnmfFPdYZ3ZLnMTQPiZo9JdsfMSf9qmxR44': true,
        'EYDbAbA3mtZ26tbd2fD8eK4BVGw8kYV9jgaHMjEWdBby': true,
        '3fFSVbRJwoYdDG5B2ZHmsBK1Ysnp7J4DRU1HUrFp4jNd': true,
        'ABeFqmHC6KZZ44xPphsNVRq9uTh4Hvr4N3ym59ub9eHo': true,
        '6284oD9Aky3gZwwwqCFEZzvyx5qeeswAbYEtCHcMyKUR': true,
        '44E4VkJiRpsWr2DjKaKuGkZ9vx53tSKkoK2s1BuoQn8h': true,
        'BY3RTSMfzsJ5DhHuQt8JT79r4Aiu5wGotjL8qndsvS6z': true,
        '9X6QhMjKAHtJKbG5HVht5SHZwEkSEynH7FpX4L8q55uf': true,
        '3jTbFG86f7zrg9kfks489AH6Dx7gQsttBndEQzEwFVfL': true,
        'zSyE5dLS8u5fY7WTCcuf7QBZdDLBYjRx6xQC6ttxDmv': true,
        '4DUXpnZgdsCzcKoEZA8FjPV49pQ3PMd6TAMGy6e4PpSk': true,
        'DPtte3bqCoFZj1zvvrqU7jWzYxUwwiWTqiBjhQrHhP2s': true,
        '4uj97MarwtrD4Mi3EU7Bo6FNSaTu1ArXJjgEyAMFncEo': true,
        'AyigM5nzcFXFUDg7m77Z5TpevaSsNSoTKPfBS6GGSfsw': true,
        '6hMyeSHXCGUHv9c9u28NYwkunCU3sGmnwFMnYMoaEpdv': true,
        '7iuKMcC6TKnwipSMZFRTQNh5kwpEU2F8h8wB569qhekf': true,
        '8MNhGjc8cWfQZHNdFigUApW8od33MEyWd2t3bX5Cjyws': true,
        'AvCtgrg8WViE1F2ujqVSp7KKX6B88FAycJjerLNoKiNi': true,
        '9WxewW4u1eqAZYbm97yh3vmixrnCVKyNwjNk7xbUBZum': true,
        'DxGtRvGDwjaDvmKpVHoxbD7tFoouKAqmMRgEEULv4Wh2': true,
        'E5dkwE4Cd8edDMSGWvo1evpaDva2UR1NBEhN1idxfjoj': true,
        '2aN5sxTbjtoZziX9iCAyanrtDhCfNcPyRqdpnEHNppdN': true,
        'HPT9S4y7tJ2JxS39GMm1cwqA9F9qZGZH3TxFpHkZMLo5': true,
        '3rMkXpCzDBRztrrB95cksc6F3bAafDBzavJe4efDHMbe': true,
        '5TZm9rMrzxK1Nj5cQysCYwN3DWQVziXfrwuttWCdVeoN': true,
        '4mUMzSQCkxggoZDVHMWYAPvMW5hqt4eMgiQXM86kHpys': true,
        'UDQtzGA1UYknXoyiRRgvMN9SEQ5hrH6j9h5MdxcofsL': true,
        'C4og3xw7CFHunvR6Mn5zNqVm9VRgQsNinSboHszHJ3JD': true,
        '2XBKnxY3FZQ2vWZvKowN6Mzvgc3rNcMJQHwoGLtvXb19': true,
        '2jrrxnt44pjtuqajaDio1ZT4rkQ9BAtUNMAAmey9tWyK': true,
        '91amqWUR2FFEo6a9qL8MybLPB2sQNeJinbKWFnwWD93P': true,
        '95RNmqEUPYpQ7tzSVCFxRnGCCgYU2BASsHzLAuaJMKhz': true,
        '6y6s2YYVqV4hHCuSfowKj25WDeap6vpKWFHRbC2sCqLR': true,
        'FWNNWyw8GGbKT1E21UrRs6cnnkSGwXqUXrZsEkbTvFiY': true,
        '4AZYFaeNEV6yphs7n4f3EgE66upsUkXhYBXjNyRb1oX8': true,
        'ETamRzLxgNVkVAa7BQ75rruEEzknGyLhUfNu2ZRE4Mxi': true,
        '6K5BmMrRpXNZkFwMNizF6FLVNVuy9aooyL33PkYaQe9t': true,
        'CQxU2vCsyGsfnv1YotSq7xWFTdRanBdB6kZvbcnMBT39': true,
        'FinkKzerMSjjRKXbsTmJAeowLkp5rHeWKE6Hc8BNADVV': true,
        'J3EZ1XLmZLZKexaFHmoJLYoD6S4ETuBmU32rP6D4zQYr': true,
        'DfLtjFCXNtw3Fz2ykswXZFos19knikGjCJTfjSFnWhfg': true,
        'G6YNakhrWtLDWBHnFjbNUp6sb59FPC1K75t1DozpoPzb': true,
        'AsZgCotvk9at87UFrR6F6Z1Wr4W6Y5orArxmaen4q96y': true,
        '9SHkXtyNsCjcYV9pMmjt7PqoB7nizZPtKjyj6Bd2wGaB': true,
        '9eF1gNN3UrQyfxFZubCSRLp6CpBt6sUCX2YJRQGYwVYt': true,
        '4A9n3TBFCyScSNTtVV562A3LEXadThcw1ssBCFDTHASF': true,
        'HYwSDaUM58A1d7G7mgRxmARkyL3UEqgv99pgiVJY8uFv': true,
        '28dGFTk2ZYGFWPt1BsmnZb7r7KQoDjLF1abETcoaoS39': true,
        'rQF5KTaVpsUAbPsaWwQpL33VsqPa9oC1xjvpbiDMmDG': true,
        '9GQ5yHriqvMrMhaMqgHTA4Ga9cfY127tQDtJu7JJubYe': true,
        'FJhGcyAgFDSZ35aWbfys4RzT8CdWPuCiGuEkNEeyoVkC': true,
        '8KZQifgV5KoQQWif3Kj1KaNuQBjFBp8Zeds6obY7hmFt': true,
        'FjbQBBPxwFqiSYSfyWyzuMmsGAJabd1xdFxnDTuBZBMp': true,
        '8NUS1YDjpNFtSz15NkucDcLJPizRyiAJTKJ73LhQDArM': true,
        '7eDdLYKHriCQvaJ9NjAuAPkWU3zcFGYudnGCfDe1Fy18': true,
        '8gDraYgavH1RiDrgJxwDRZu3D38d4t8gAgeEnbbFjj9m': true,
        'BbxXNuNcLNWQcg6dpGUAo86GUuxi8R1E2kRSYPCUndx9': true,
        'GvGVzkZzdqaZ4JnYtE5ay2r4BRaS3Fd46BtzJZXBfdRv': true,
        'DVqGsjraTa2ixc5ng64z2z3a6yfRnrDfYRxSek74E9Wr': true,
        'FdicCxY1W3wFYLg3k8ghrRpwm4yY5DPJgcpbyoz4mM7B': true,
        '8SGL9z6STfmaatNGqjDAoXBtoCVgCCaide1VbtFhjy4Q': true,
        '9mjR7asyuucC6MkrShdFf9gXNXbtj5yh5AymgGoDrNc1': true,
        '21wnQhAFwnzsGQXHKKY2A4pUVrXYe82FTTpVde8jwsqq': true,
        'BAFj6i4LpyPS5KErJf7hjbmBw514HybCGodZjweznbuR': true,
        'FpipGmhcxpNSp3KB3uZU3qSj5vcRYmQ8Ys1KgowYFASM': true,
        '4rdN8Z1Dx592EZMeds98AnXMS9Nh2F4rJy13s5LNxu3Q': true,
        'Gz6SapFSMLwzJ8AmizQeE6WqH5KDsi6ojqBaqxQCFqcn': true,
        '47kuZL9pA97kinyqLzm4aT2T4iCLC5qMfvrBEqqk5vGr': true,
        '6GCnRPv332Ua2K62cC1YNRHfPP76B6PUehrXXNvPZ2dn': true,
        'DBEXY64GW6BZnza3KnxgkKoQ3VmGvL5uo4pdqrAjgRuD': true,
        'xQ7PaSx6ov38ueHwHw7LwZ7K4FxXzC1pPDeYhFyw3LD': true,
        '8Wwhk4RDRdp5QKqLKSQpRYUi2bW9ecD45JoayA3TgsA4': true,
        'ERARqv6TM3tsu8M5Xdo5nvgek6ESXHK27jtFBPYx24XA': true,
        'GtMKG9DH6n5tHdndeUrrL89f6biQBtJ1JAWAkv45vuAi': true,
        '7aZHiZMH5dSd2nXv4M3M9nA9PjnNia5VSN4eRLjkTmfh': true,
        'VVEp3XEy8bJpru4F6HzzX77NscSK5f57NJrJ7eC272x': true,
        'EU3ZasYATH2KQS5TSfGKvaiXNospcJ8BuRmJmeYWWrP8': true,
        '8iMshMUGw5Bto1YbVo7LbTqweMGFqYfScRUtNKY2gvjN': true,
        '6He2wyVHyL9VHTuvHuWLbskuMmWxNzpAk6F9THadBLEM': true,
        '2DLWrBkqgDw1SqmoMx8Zr1vVpqjAv46QZFX6wHSFCb8z': true,
        'GC7pqw4oMZXJWXEwjNAvE4PFegGTdb7qxr3cCNDPxzSj': true,
        'GzzhQkBbA2vEFFGqQiiY64npm8WqL3Y6QJcfc7j37eXi': true,
        '851vztjpSQyDBETp4KBKmsz1QYrbXaZNGrHyWo8Q26PZ': true,
        'soXCzZwWHNcyXJYGtrvYESP5khgHWZMP7PhvPsP1iCE': true,
        'HgxQ1gBhefLG2nbRacrnjXnAe8VQ12Do3Y99FdRaDStR': true,
        '9fYdvLJ5gzzCyTr1Sq8GgxnDGoKEScT96tbQhWy8chkn': true,
        'HGeVoMZnFrvZNerDQPSMTf888BWPqGA42kBBYkb8M8be': true,
        'HcHyeuZgrBdH1x3fD7pHwfLMrM7rkrTDJH3j68WAwp5s': true,
        '65v3X7PBXXrJcppZzAFR46P1fp2LCoXYyQmJgWLmMwpK': true,
        'A6VJ9PfWYPz8wabYM7eVb69bWgUGMFVt5ggsNmjh7Eoz': true,
        '6Hf6Maqvx83VWiQGdCHu9b4mpgb7CayxdmLQR83VGFjU': true,
        '3ZpSacWJSTUnLxnoN8yDSfG1UQsYbgxNeVBFqtN8Bajr': true,
        'A1rU8idCX2tHa6VHy6ryGnPDdfYVXHgBkY81NG38z958': true,
        '6Am5DCs1wb97Q8HYPk5QSG5fz6pKhyVGA9o96yfTwBpw': true,
        'DyfUDdbA4dRTCk3e2UVnYsiXG8cZcP1x1vRvYkn9wUzw': true,
        'Fg2ooDffGULSeN8UwamB1J5ofzLLYtSbXdRmPSDfnzjC': true,
        'GNWZuR1fWAv44NDKmnU6dXmXGwS1aYFdJbfVaGE6t23L': true,
        '2TQn3H226vGeYGfJHutS5uPJpTsDUrZTKypLAKkaYZ7m': true,
        'CycSaH2CufwCozq8xLCz4ark6VdMxKzpDznqzgCk46bS': true,
        '7NCjtjMy5jeA4JcvNzs4zQiVBfTysQTE3q5e4NPzU44s': true,
        '8HaruNXy8WWXDxmHxdPoUd78nhKW7i2vJY8q9LicXf4A': true,
        'DVKwNHRwk2McqcPY4XURAe1nLsEshfDteETPdXSwynKF': true,
        '7AfuANVTinGeAhcyrHuyNodyctX7yKfdEEbrxjiqziw8': true,
        'HRtspzsqTEE4YdrQrorSHd9FB2gUsKrUndm2QxZUEoh1': true,
        'J2ZqesN4kfkFyDeFN4xFL61N6ZeQnyEKjJNY7KuhP8sH': true,
        'Bq84ofL7vqi2P4ij3Ddz87eMwPoa2ZTXrtyyVs7XbiEo': true,
        '9sMQvg4iZ7nXtQMDb7wyBspAk7NXYzn1HbN5mPRTF6bM': true,
        '2XsSFX9zrLcByfmHxPj1oUcDSBQjx1PmM3k77kKT664R': true,
        'DsrigNvwHNUYwmwj3ft9qf8gppsoLkCR4m8KESeDz3ei': true,
        'DFZGY2nyCuvcxW8XSNf1LRqGhistW9PDMYNRJAEca9Sw': true,
        'iCBkFoknK6uqodVqWhm34VaAutW34GmQcHPskANmzia': true,
        '5eBou1A5aF888N6CL9gzRLzzPrdWiAYXCVbgf4vm9d6Y': true,
        'CTSKgUHr9p3xPETdm6yce5msMrgXkm7aFHpymXRo19N6': true,
        'C3p7oC8ACBeXXxPT5wRPcWYCxkUz48a4Ut3g9P7fpF5U': true,
        '2NNZohAiqZT3Ww1YSkGqUENDBvJAv5sdCe6JR31gANkK': true,
        'Ej5j5kr1hA4MmdKnewGgG7tJbiHFzotU2x2LELzHjW4o': true,
        '2kGpXLm95WXT4UUsPh6p1C117B23dTp9ZhGZ9JQo6ftF': true,
        '6KArndh7kNDBkPxBpxgqbUu6uTqQWQq2WxcVa5CTXrrx': true,
        '6RtSGkXkR83sxtXktrXkWRYnBbzdWMvuQhg5eqqv17Vu': true,
        'DLX1iFMeYVWiEtiGd9UJjWkC17HeE4Jz3hd9TxVmnyGQ': true,
        'DdvRBfTTU1mFMkpsTG2V3deJsspK58jFVQ2a1RVova7d': true,
        'FHDmn4FyVxDSD6NDP2PvgfPWv13m43XyFC9FDh1FHuiu': true,
        '9hfNRw9ij4vU5iXFMToFvHGYdG9D1nuT7H5xEG5Hf96F': true,
        '72iBP1GrpKWqGtn8oRa81CeeQp9Q4tcpYCNXYohuLz7Z': true,
        'D2drcpYbF4Vv3yj4iEmCA5ABddpe2qeYgAY41xndfZ5k': true,
        'Hk4ToyuiHiQXJfVZ5LzgQxHyodSEFMvntWRqnaZCCRxo': true,
        'FPUHbQtve5ciXUGFbETZvStK1MQ4afrsAJ1JTkgUJYq2': true,
        'APwyARWLcFj6h2zocd9ynxE6vAymPFxbqqHn2mHkbXVd': true,
        '3sQ48dTVdRbhCcwyagGiFwJSZghi4xgNPDKsGnErEaqW': true,
        'Drur8S24Mmhj2DvZvr55EfBcMyMU4Nwtnw5c87ejfMdr': true,
        'F8cmDKt3yMERxgVhpCGSejPFQ6xkwNRbngnPPm1J5sqC': true,
        '92wNttFSwhk11LKQKgTY2MbuSyGUAisqNUaZSFGQXrF2': true,
        '7mz2ABzeD8BcnYCSeMDkFRb7KHhvo2fmcPa5pP2xtGvJ': true,
        '8S4dMJ4M6sHH7UcBhjCKxbZ3nXuK8UD6cbrHJhLfdCB4': true,
        'BoZqnfZno5Hc46ciuqBEtsk5TPbBghMySD5fVvR41q2G': true,
        'eqEBAXRgsZaHRW8rT56ft8zja9oo7vweRH21i3uNWAV': true,
        'J1YqHXQxjieb9eEs5KBY6rsnQxKka1xE7ZmA3K3nDiy7': true,
        'jD3FApnQzJQzsxpvBWiYLiHi6qdcaxVLJwxUiebUbHk': true,
        'Dij1pWm5pFmtYNuzsaCRh1v1msrK3g89fuqYZLSAjwD5': true,
        'dC65gn5WRytiBA4PBQFbExs4fdny9KjDtELKn55Ppze': true,
        '6kRVc9mGyybh4BAY8bHDJFLvhusxMnfyU58JAVJyiZmV': true,
        'iEQAHBSiHj9FRBuxThXvrDxzFaVA4CC3YsZC6xyLDW3': true,
        'EgFPZhUpbeFAPgLMmMdbLzsdCwokH1a4xaS5VA2Lt6LW': true,
        'FqG1r7mDE6FGuegsKTJ1vBBz2yhkwFoRLduM4Kj4aDNM': true,
        '5Xu8xkduU7oXC7E9hZdbwMwzAcJryktaEA91KNxZPqXg': true,
        '5QHXVCFqMoksMk1TsjRhPxMmhR9uBRWc8QtSkmbnK7ih': true,
        '9qWChNBTGwcqYocWvrq1NutNrnNJBzF6nd2Jggxvu2DW': true,
        'AfmsJHeToAuBEHWmMcBwEYpYPQKVJovdga8ydSAuiSgK': true,
        '3fq6ocQzTbhZTNmu745RSN5KGBxsiTkDa8z3RMEDXwyw': true,
        'F1WBVje9V6eyj3AtUTZh68MGdpAuzadE5rYbWAYtCdWM': true,
        '57VoQCdE5ZTi3gmuei4t1gxABNkUgPAreAXfcADKjBAB': true,
        '4XBzZaE5dFV9hfeuwmp7twqFtaGfGaVEGwKM4kEz2kTg': true,
        'EdcamKq6oeo3pJfbuDScWBfWtnJMcx7ryhKFY4AiGbLU': true,
        '3zFoov1qKsYSNt7u8Ye9dkBGKtXDLyzpStwQVKb2h5Ct': true,
        'DUfkDtXr8Gf3KCPEp7P7BqPnwSw6biQtKUczR2E9jhDn': true,
        'DFpGuZxrAC8RCfEvVt2PUj2ju7RAZqMx6BhBiNKAxcDV': true,
        'HaWwc3XeRn9Be76zz5WJnrj1pH1hBW9YXyA41CgS2m2d': true,
        'P8Sd2F7mwaAsyXEYFjAvUeco3pN64rD3iHmoHvEH5BY': true,
        '42V2QGXFeVVUTaHBNmyGHTeFhh4TfrdtvwTB16VN55AH': true,
        'DyAX5rzMEFizH27UEmZYDaVfZeU6vaonvNF8hHnLN8RM': true,
        'GyaXvaBQtexpasiCUcgxnbx2zYZHTHedDX6Ta3nB7tDZ': true,
        '5iD4f5oaJo83LXa5WaLoQxdHKzuv6NYwgQ2WY8TgeRih': true,
        'Et9FXiV7To9GST7fEJtPu4wtepB3w2FX9BemKHBfkSjc': true,
        '6j1vGRyxQx4J5XYjckVB4oYxTNSyKPGT9RQ5moaPmB3c': true,
        '6nsAEneSei43bR43BGVMc39tcvW2nztvbnzXpM81CZRw': true,
        '68dJjoNJfHeUgW6siEvJZTvhA37N3LfFNW7iTzsAJayQ': true,
        '9twX2z5aksdKNqaiyaTEMDBKnFDdssoNdmnP5J3h9oeX': true,
        'sVtVASTz8N5nTbkLCYhaPaaDFjL79DBE3544UgZmCXY': true,
        'AdJttNEtYwHL4RnkMjgF3gyepV9yBTDj9tLyEWF61jMk': true,
        '3R5X5LeLFTQMaRA3VJQWvc7bu7S7vkAPby7hcDyLXswE': true,
        '36D8siqohxHdVfpm8rM2zKJc9HVCLGvXHEp6zLFnoby1': true,
        '4yQtgvPmRLVMkj9XKYUyGvgM5koFEgY1iV7mHJt8jch4': true,
        '9CSxMtaDbi3mqiQgNdx784ZsiY3qNBtQdZhUTx8vrdj6': true,
        'DHoYmV6xvTho6Vzi7NXpgkjnosnyP1aAfcBi8EZkpXAA': true,
        'JAe6BbV3gxystqRm2EqkfBEerDECzQ8kW1KH6kRWAZQu': true,
        '4kZxyJ2pzM8sLykDAerR6EzEVzSR116ggxoJZKexST4V': true,
        'ERA873zjy9GqPP7BZNf5Y4ZS3DGGXZA5SkuJY4mrv68N': true,
        'F42G3cMnutwimGpKGMrba6SVMfyHhRqXfhd3bXtFbDFS': true,
        '8T2ZQv173vvknRLQ3K9YcAnEtDkPdhijmtDGmHjLLKt9': true,
        'HNBmzQPuoSd5bWFSgvWf5uqdRq7jN3pNgNNsuZ1K96tn': true,
        '3p91iemTe7LB6SWosRp8S1spv5qnoKyCkrMzqbQ74BSN': true,
        'CdjPttboVj8z4r8Z1xzH3Bz17CwjSCFj7s9V6YrwjMen': true,
        'TBjRwU64KoBP84JJXmgH7nuGd4fREmNYpTUP6NYk4ED': true,
        'Gkmmq1DcLzRYMmZQrdmABKAZwcvwxfUL94agpgnWAfNX': true,
        'DxE8xbjHT7rXyRd2DMz5TnNNNC91Kz1SZ9k4dpH6X4JP': true,
        'D95Ty4FrAbab9y9LVd8SfWT9qUZ7b2bZYKZrjNYJ5arV': true,
        'HJeUrHgG2asHtBhVBtQ1qu188ePNf1ELLfvsdC1xsh64': true,
        'AxPjZxXbHZ2R5AEXtfk62XRV5G5DNVXq5RX5gZN5JqaG': true,
        'FBLSYkRDRRGyaJdyXoGS9aGCKBodYMWt7HKMJh3VCz8h': true,
        '885RFKPF6YG3s2AAm6rDkC3SUcX5gwbrCTK5eNY37w82': true,
        '52HtCF9qeGPQCPFZoV2ZcryMrZN8Zc6jUvk4Ld4M5qdr': true,
        '86Rf68PYwn5WrGqBtV8yybTZWEasnWCG9kDbPaUtVdtx': true,
        'FidQYW46dTEwK7Ahk8GiopkPfLbMkDrpzNjjMkw6mysT': true,
        '8hSToyWNmtCc8wmNGt4umfujYyzsfxA88dc5ELnp1KDs': true,
        '44QQiKfERTSzyHWzHUd3RHBzWLiM1LfvsJukcQ5Gf9vj': true,
        '8xr3hhDBhcfN6a7xdfTQTykx8c2gVhnkjz3SUeGKVAZm': true,
        '7eYsezeKN4PUVxX6uxTYR6PXU7uQo2r8PSSHXZ1DWUmw': true,
        'YCkBzvwiXVpEJPFzJMNWjXXxj3k2GdDchT7kscdHoPh': true,
        'CaEWr1gEXa6QzGDwuBJvfrhrtUckBZteq4KHzFrco6KS': true,
        '5BUFmZZiKTeP8WxE6pBg6ChbU1hmEs3f5DkcMMXzMxmy': true,
        '3EDuKnCucwPKQb7XqJvfZUHb9G5ZeVN3TuetMXVFZzcw': true,
        '5zpaT36EYA2mTa44Y6VHnsBeA4qinSVDKBmZMFVyE7QA': true,
        'DxppurSfmz6nEiBtdd2Yu4ratPYJ3YsezLijYDjp4AFR': true,
        'G3Kpni3LrdpBKFiSyyVVrPpnHP5neK8jDm3ry5nS93Cm': true,
        '2Qoj26B3iaA2AfjTnNDzF5B3PH7x4ZnrTdVAZHxhb5n9': true,
        '9KEZ4qrgYqZLzFTuidaHFjpHmqM1PwbGZQG5EWXARRqL': true,
        '3FhV1ng83aP9iRLq7FFf1mPfVvnQeGd4Y7FRqcyDfhNi': true,
        '2AQt5vsFDurAh57mfWVrHQ81UAmQZxoi8SpDMGxMxFv1': true,
        'BqJxMVdftBCXNPi9gQNe4xtdtfKqAQjN44Fy76TM9eEj': true,
        'Er71GqEmmKaCeRhq2AoKsGB6tKrD8pG5ftbtLRY1WKkQ': true,
        '9NYhW3cTWEBxYHFHDMTUucMfGcjY8mzP9tJ5fKqdrk3s': true,
        'DzxzNjWVNdJ2VrPxkEDxvJptxsphQcVKSgU5LJUgbFTK': true,
        'H8SBzJUwiqQyaTLT47GqvXbX9ogTVM4mePtrzpZ5n66M': true,
        'DRqgsBLQ3Q9FiQRjHosf42MSqgZP8smMspxntcp3R2u3': true,
        '6uAMURPk6gNhhpL9ah4QQ5F1Te9qyCnddszuF5FbdT1S': true,
        '6j43tcYPiBsZiPEmiBfciTFpMpG46CaQAEHnYTsJQRfQ': true,
        'Ce81BB6wWcSUfDzaPYo3ytJkixc7jrHsqtkbEgjvDpiK': true,
        'DnrDQBXHppFH6prq8NHREcWwnrZ9L6NEfEpmR94ZhPmg': true,
        'GPxijTtKCuczNr4wXsgpBbMG7EbrLQYcShVcSYkPR9QD': true,
        '5QPtqUdGsM5Ws6XWiYxEKtpQmfUAPvSW83owpkDKQTdu': true,
        '4VmEiNcv6HZqREJf4pmPSPRPFN5UP7pKNm17tftPgTJW': true,
        'GoKW1XR1V6WLpaSnQ1FS4mAvvwUovro2TbvCv6PH99DS': true,
        '7oB2Lj9gL8pE6gvCHJuJgQBwgCHjnG6SAinbLQH3ANsU': true,
        'GR4npbgGk8Qg8i8cuvRN9yTqiwBAi8G4MUf32AcCR2JD': true,
        '5E4cccf56759YT8ZiHywYQEStHH3r9UFDM9VRAniFxKq': true,
        'G4bP3JGLq1d8BxJwgGBz91GA7Dtj5W41hdBqpv9uD7su': true,
        'EMCr3A1goe8rkLP4wxNvfFzLTdbQnVRYaoSfs8jWRBBU': true,
        '4DEPCmRwYEicLZcRuoKaN4YLY7GDbfBXs2GTSio454Sa': true,
        'Vicnmb7dFxyRTWawmydYjDJXxebzEYpyXgzs6ADY9nv': true,
        'DgMAsGLVvcBzvEftPUQBx3nB1DxWYBuk8V5uQ5r56utS': true,
        'CX9PE48wSu2Cbq8EGKaARSo7pDftmhdP8TE2oJF679Bj': true,
        'BpBqFaVq5rMoEmok2MNciGdDwxKteAJPyNKVpgpBJLsc': true,
        '66ZgNaJc9TNCCCH7ofQRvEby5QzXSmhZ6w43eMDZS2f8': true,
        'FcuT1Y85ybbUVE5JQhBiGKVdv4Qfah2VP3xazjPCmhdP': true,
        'CpPBryjPMaSyz6Aoct2EKY1h7rNg3fvAJBC4AVw4kGnY': true,
        'Hz1urJCmikP9MzHAQFScLqBmBhvpu2vuKjx1TNtqoWc1': true,
        'GorgRKL4sNRm63tMYkoc6s5xYHJnz36Mp7FwrtD8Ch3p': true,
        '6NtFmAVmLgktMqNgFnq8CJnXfouxuzThPVSjKjpVzNWX': true,
        'BUDQND1Yr65QbF763HxuBNeq2BFMhJCcKq2LkReM99Z4': true,
        '7YvvjxgP7vuuPeZfDFA5YnbMuVGPYy7LTQhN3csx3bha': true,
        'F68CUc7eYcPucJqvXtcXZwZ1QMt4rr1bSCxmHQZUBJz1': true,
        'ET2twSK2utYUTMZsXbfNhaYsh1p27YjKw7CXVbYRZxcd': true,
        '4ckANn2imY3yzcoPo1acsMVitYvJ5GDbVsGERrv4uAKv': true,
        '9z1TcPapkPPCLR7PW3WYn2CcJAZFnGw7zTrquSh3X98k': true,
        'SLLFqc5y7Da11W5kLFQbZvKqr3KPBNSgy9tYxsVY6gi': true,
        'AcDZdXwMDBRGcfGFJFde3qXmNEFdiK9ZQmSGfWdCZYS1': true,
        '9DuMJ3rmaCNfpZRrRAxjrWzdRfEuVDhanfUUYEbeajwF': true,
        'E9EsEt5CJKxEVTxpau564L8Cx86iPNNoTt8dKaiL3yZS': true,
        'DM4iQv2u4qxMoU9V542TKtyA9VS9H8n32z3wscANjXcZ': true,
        'BQNrkpCgAbQWGArRqR9JdyvT1wLZCxYKKmm19GSJVi1B': true,
        'GEfh72Y1D4zVCtJAvG8p6sD3AnubXsXVdLjiLFSfvcpK': true,
        'FSFX5HEpc95WWRj9AxuYhLyrfjQD45fo4fh68g8JcBLG': true,
        'GkvZMi7SXu8Q2GGb1wNQJvrbgT4LrxetS6AAcUPk5zjn': true,
        '6Vc5LNdhmmnt4FCLECLLDSdGumPzYoHoTd5X8KPCaDwo': true,
        '5QzXZXR3qc6yUCZbwXRx6itx7Yx1ZQFyhT4N9Pj5ciWr': true,
        '65QCS4tAhFWsmxq1QTtH4xBEL3MfLkGVXvSQXU11EZyf': true,
        '8wdrGX7XEcHqjpLB9nJ4TMNpXjVCC4xVBgVeUGAfTBR8': true,
        '6u31aqKJ719KPoc7Un3yqGSaxsmPDDMW7XiTD7t5Juux': true,
        '2rxemyRpRMeW2RuFrQfYdGuFD6F95HW9LmX3nQiYUjpm': true,
        '5vAGjFSsci3ZoJoLSqCH8ANK3uLifan1QVWJcABoM7TR': true,
        '58rMuivmRA92tvtCBzTChtSyud2rLwJc1k8sYtbaSUDf': true,
        'Aoj7V6Vu3QkcPe7aJgLVF3cNz2zUsXvjRR5uVL9mh5iF': true,
        'H1acUrAfDmg3JbvgqxfV235GWPuUahYCuRnEazZEoTeZ': true,
        'EGh5wQtzk6UF4NePXnvzx1JogST9LbdukpSKrQUm5g6D': true,
        'AVdjL4SQ8HvFGjCXMfWSTVFDSR7JFNNJm5cg3cVc2cKk': true,
        'NyTop7xCSnV5dNygM7coqKLzmX7eRDfSuJ3AjZiMgfL': true,
        '8MDvpHe4X756ticACs6tpJizb69AGNqvcmmkG2ygorTj': true,
        '7yeGWPc2oTRQwTMocMkSpy6ZSVc277fv9bd5eYu7zGDs': true,
        '3p4KZ574Q3QmvXkaaDVahfvyMrpdM5oQouR8twU99gjM': true,
        '33HUQZTpxkkd4jMSjkRFC8SLHTxLk3okdXRknrrATR7p': true,
        'FtHywgYfCTsyU4DY957vTKNk6ychJeudxrWLdw4fdFZb': true,
        'GHaHyLZQcKY4iDvXHtAdVsyCAb45HtNhKUYZ6k76W2Ft': true,
        'CFWqqURKecyiPWXNKgec1JQwHFqsKiC9SgKZMCqtBLdf': true,
        'BqpZGyRoze6Vc9CRLTecULsBCzB26G9fVhBGzERt79h8': true,
        'BS2UXBcjUjEcVXabUo9vi6We3pZmjLKgUWqesyutz237': true,
        'HBxv6e7ZsrQETiwwW2g2o8hjnD8ou19MwZhwiQKQ49xu': true,
        'GtP2tzCDBvMi41N1hixjvRDRixbNibb8hPPLA6qLa5Ca': true,
        '2TdeVWeqbmxpbG7EQHHenmePT34nqbAbtWg2GSqtwtij': true,
        '5VRz5xC8J8yGwVFGkzWJG8zvTWixSDjpKmJpT5aqzU8y': true,
        'A7znai2YgVTg5zppDmgeNCj7pPnRN43SiJbqAgAqu6UN': true,
        '7uVWox6nRcKwax3LxfSZttWhBHhpbBtHpscciXqzKAN3': true,
        'J5fkrzZFt9fPGQFAiHNr6V4VtiwZHT6Jx7fj7R2kn9gW': true,
        'BxyStUsCa32xwQibZnRiL7p6uuDrD39tbpXrpFbjSaKm': true,
        '8qjpxkgxmLAdUq1RXo3z1WUFnAPxqVp9zG5LVW2xiYBb': true,
        'E1B3ynyuY8gecXWGt23RsNHJkcM5xEJiiAJEuuQ7aaDZ': true,
        '3gLx85tU92ECFsJw6K4mZzyqgrpa7gMf7r3mVSryynwH': true,
        '8MurbMUt911hDj9DA1kzbvXKJ8jKNchmUKGu6zTnys8': true,
        'BsajYSNeRv57gowzuXWWMnMfZ7jkKttu5vXm2GJT9KXt': true,
        '2PDb4VFGYGge31fgPrPVUWg1MZzoxQmsmpJiFsEioDK4': true,
        'BSpjfkHVYbwbLsJnoJ9KCB6DzzAannusMuFYYUUDpas6': true,
        'B9VV4pTHCPgHWVZNikRpijoNGCgzuBwFSbJ9rjStzPSW': true,
        '7hpRW3Ajvc3UfVUm2ah1q3SZ1iUCPitE7sg61aJax3Pi': true,
        '234XiEDxuYmHPJ2enYTr8Gek1DDDa7M8D5wRoYnh2FEJ': true,
        '421FB8GMDohNwZEho2t8GXTrgLGQ4wriqT79pzAoXYaY': true,
        '9NCAg9szDpVqUApU3kTZqx2rDqWakWrYcjLact2P2uSt': true,
        '3s4vmsNShn7nt8fzEbLWZEAKTsmznvEdBN9f3yb71WfG': true,
        '3cSDDQ2EBQZgHeUFrUCAD3vdgrVkbi9rrLD3XiLwvVqB': true,
        'ESjmbbR1K6JEQPbgEsStbduhjVDEWNMRV51EUjzTcZP': true,
        '3MditVjzgfKWcsRk1ZBjiV7UTpjAPBoaCZ9Z8b3puzif': true,
        'DDFacFkbynG1UEGeVfjetY7SJJBEAfVUu8rwMnVC2X2D': true,
        '6sDUDGZLh5WyHgU2XrERbis1qijByYS2DxGY8F79Q7qK': true,
        'CL2BjYDX6R44yBgVYYCXFKTgSjFHEQ6zZWL2u5L7hQMq': true,
        '66tNC3fD82PM2wgMzqLojcxgRs6mGdMLvD9KY6Urojpd': true,
        'DMn57dNAJcyr6LYQhNuWFqoaFEQL9AG1GudvUrvYJVX2': true,
        '7MLw5C6j7nfnz1sJeDK2ybf1iEq4Th5o7Ydt5cfoSdTs': true,
        '5vJ1gFnSnZEPVSrAtrQFX3YPeA9GMnkGnxBUmoFB7nLh': true,
        '2FH6bfZX7i2ampG6vv2SBiTVxm5YAsR9ekiH3fkq1xuQ': true,
        '2v6joGdhYxX1pMu7bj6inYDifpePVx4NMnTB2y1skmoZ': true,
        '3mM2EiSMUDQkZXvx85CXo3qHY1nVorfskTiy9uWWEL3S': true,
        'ALjdsBKNBBazG6L4ndaq6R3efgk5setWR7XxKsjNXs3A': true,
        '6wavYaUs2QkfN7AMLscoVPZHxvzCEjVm9tkKERrJGw6U': true,
        'Hjdg2aNLpTxF6Go3VDVoQg7YP8vjzkqnTrZ49q8wZxYn': true,
        'HFbkAP2zeiQgNfPPJnyxGiumS3JRmKo3YrmtY5uR5Tz5': true,
        'Qn6yanGtGRMNyt6QRZmCvN8HQggzV29XQnPwin8wRMt': true,
        'Cg7oJWCDomn59jGN2aC9tCdoZHHbnEf8yWax1KiYtdtY': true,
        '8BhrMnWoFokpqvFgYEmuLkJgeFXeArUkeMSxHtnBg1Wr': true,
        '5ubvxzwG3NUk8tNucGpskZCWXX5SJMKg4kKEY4mCfMv3': true,
        '2Qz4EhwZQFCVhmenqRtmiy7mSNFiLGTHGjAKUM5p1Ezp': true,
        '2jKUAz86SzsDHy2SQvf5HAcUU7JVHg8Psde8B4KkWjgM': true,
        '6L2ELdSUnGfZdyYYzeLmXLFY8pp8j7ArLfn1cmfMKeHg': true,
        '6eMish5EbWDoC5kK7aKKNoVSZ1tVCe2JQ3p4EUAFBR6k': true,
        'CNUJ5XtJSQQMPPEW6CpRDXaB4mdMnKWjkCdJbvaqVeot': true,
        '5WiB96RN7ftZWZd726dYPcyWbymbMPuHBkskfj5uRzpP': true,
        'EqF4hptLDUGjiUddEkHQqZsLr2wUrZsrrKZeaASWgbov': true,
        'HNFK3jdqvTxckmSCjKnpSxR5RVvKFgSJd5vKZTsw9Gi1': true,
        '8vbpBx4TaWeMZrjTRUa7W8edcvKduiHLSFefHF9nmpkT': true,
        'ATx6dq5duRis6suuNKcbMypmGSgEsmjqARVVeCV9tYLU': true,
        '3JnkVMoRAiVPniQzbyPGrefHehKwdWMotdvuUy58CrRF': true,
        'T3YisCryThmrZJZyPuw53nq7CHdYwDvPDvsZGxGpd4K': true,
        'E9vN7ZT2bwb1JgFQExn72Z3EHniCKRbK7P1hE2UtPygD': true,
        '6riLubYWF2sNCFZ9gavgfHjuxCenU8UsWwZA8VTzyf3b': true,
        'G3Kt7H4cXmjcj7LexmmoWxYSZ5J6ARBk4EVEPmpNDr7r': true,
        'F4uw4tgDv9SuXbF7SW7EvBU1w9yvsSn9iGzrZB4mKKx3': true,
        '6nHh8ywwK9qTASSUKhC7G5eR18tkNrmbBte7SYjURSso': true,
        '6XKTHxG6cg3kwM5ySttpige5rj9oudX4Yega2AmoQnGy': true,
        'HtGvnAs5xgqhre8rQ3bYVf796SmdDiLJeQE95DEJf2gv': true,
        'ZhHDF5DJkUw158Z8dS4FAt3d13rsfAB5i6DWCjyK82G': true,
        '3HL2VDDvrgnYGt6QJePPTDNssvmLx8LEFLJGNXWRfeDm': true,
        '8B1S5dYwjdY7gZQHa5p3mpzRAU7WdzHnTqNKvGPTQ8qp': true,
        'FgxGkCnEypS7HdFr73u2tE2SANqAbBDz5bXdvxA3c8fC': true,
        'BLvuUbsYp9XEchAQVzVYQ853M1y3dDXhWP9CzFpyKqnd': true,
        '7J6ow9FkNg61Sp22y1Ypkd8e3S2jxms2dDSSV6PU2a5w': true,
        '64bRodNX9AgsVWYCFJEsPeFYZpZCgKEa2Fa44gguj3aS': true,
        'D5q3ufpt4kut9i6U8CNS6Ezt8q2biNKJ7DNqzf9t8aKq': true,
        'GYfEUqytUERE63r4goifhzJqNmNiogWbGwVvc9PmSTR5': true,
        '9EDzN7xH1wf1EMVqZUf7DJBJuerT5AWhjkGF3TqYU9p7': true,
        '8H7PKcbF2gAJn54WqnNB82kaqQfAE6guhTphSZxjXcJw': true,
        'Ftf4JTfq556g9TzS9TZ7hbr6fMM3XNrD8wYquUeTB3Db': true,
        '2FEC1sQucr8xj6y4x2c5vJbbYhxgjjUrEkYcd2hp5QC5': true,
        '5WB2TSxTUpwUsTZowqPemqBTeADr24sokCiJGD8fvtTS': true,
        'C44pPG9LeeXmBXQY6EGhyHeAi3WqMsczB7PctFBz9QXa': true,
        '4xsDDwZfiYYoVbULeQzpf1fTBXXKJtsPxWkVW7Bffxtu': true,
        '4SbkzoC4nTJpGVg9RM3yz7TaRgFXyjg4wmh1SDrK7wVP': true,
        '5UstbKkwKzHEvuHj1urLqLfjgw2cyJBZkDfKzkJ2zznt': true,
        '9WVmomYsJWkLq5sYaLBBCvU4vaiRA2sqYEBhAxDQScHp': true,
        'Hn3ZAKAvKsTv21Ls2pdsfv8PwSeHPVDAoxsMUpEfUPVw': true,
        'HPtQcNJQxe5wdaSJDYAon4RfutxQANzFe8e3QyoqHTPC': true,
        '6tWv6W8AFgzpqZsRQRDH7tKUgmP1BHtnRDg4tRydTUqq': true,
        'CPSJZ4eyqtR6e5dD4nnb5xaFxLFM9nJ5Mo5z3gWsUVyU': true,
        'AzT6T5vnEBeWqhggCEbWVZjzUacJEw5ToSRa5TFzkbqJ': true,
        '8CSSzq9xz2x7quzLpwTsaYWReBBDKsufi3tJYsESCgC8': true,
        'FCSUwJ9s39DLjZyezPRk3r4gut1uiLFTRF84rM1BAT77': true,
        'BjFMj6zc6tgtAabH6ZqS3pb65ea1xt7dTLZttCbvkrNB': true,
        'DhFPTZFjESBGn3yV2FwxpUgMt8FftWJ2DNkPnQRzCh61': true,
        '7YrAwDH5vXAHwGUv8yBRk1QthQa4cBHbx5YSLFrFxygH': true,
        '5gFPwhYgxXasrmrnhm3Wc8D44HBik4n52bwwFy1FaCVV': true,
        'Dk2x6LWVc6E7tcAbWshwgErpgcbBrhB4yyMXZmLcC5fm': true,
        'FkYUrxrH8qCFH1b5f8BD11RQZeTfz33jMmyMB3JKrDTS': true,
        '8H6ezPNqJU5ZUMmRNxRvdYxWWhpi6meinj3JbpXw7pp': true,
        'BwNjPy4zVzNPYogqFLoL7UY4Hpa5TFpPhVhG3X2X1X7e': true,
        '7qg93WxReSvak9h4PWUe7mQVgq5TssTNUr1g8Ajkd36e': true,
        'J1quWFtRVYe4z6Vceykk9rzvR1AA2z6bfeToziN3i9DT': true,
        '6cpH5Q8nn6xQvfC8e3amigmAG8KtC32BRpARRjdSwFh9': true,
        'AXj8bn8PBY99LJ4VnKQwdtgEbLxBanrG3APJ4nWgQstC': true,
        'DLuikJocZQJ2mqEW7LmUVJEWeeX9BPUaLpBfHYgYk822': true,
        '7NExcptLQ21r5dA74NsrYdrW575PXfLmiPomoKLMfRUt': true,
        'HN7WUADqbDGoxiAfdAkq1upHuNMoen6gDLn93hcLQaiK': true,
        'Fj3XCpBzfD8f2SjoDMuV43MQQ6VsVQqPRCiaNW3fXKct': true,
        '5EGF5fv4Ldva3uBwfK7eY16A4EcWFqHP9uLuek9EJRNv': true,
        'DBknahXD2RjxdkrcLAxxmGNaXQFqpSTYWbbJ8j6DiZnn': true,
        '2QEjHoa9mgUrbPFy4VUZ5tDNsmFkNt42bvvtJTL6nTy1': true,
        'G2mqj99wGyda52i9g9ttq4bzkp8uLf2YukFt2EDgTPhG': true,
        '9pS8VRsNqENNkHJV1Ma3u94hQHuiL9tkXRtuvM496Dw3': true,
        'AY1Nce66FPA3MhwdsxTGLa49NiUh9REewrt8qMSUrqwH': true,
        '6mgRBtwKywqyysbypZKNiczkw8y2AxjtW1RbRoVL8PDh': true,
        'GdfLZ6D7Br6KMSoeV7xWq8XaaJf5rPsujs7K2QzjmxTC': true,
        'J4gbugKTwTERj2SWVkCsJGCtirhvcrP7uFg7t2BPuWET': true,
        '9rxeEfiuNwhX7HpxqwFKx8UNjjP5fSNfDqSoxpPTLxra': true,
        'FC1g5r1BL2FjAn9Un71ZN1ysYd2M8mzJYLjDsPyxmvvf': true,
        'DGJTCgHGaNtcDZJJ2YXAEAh5k32mrd3RXpTMYrWcxAh8': true,
        '3PNdNEQXFwAGfP6GeEzvw6JrXUkxz3xfUPEjFoSzG6Km': true,
        '5L4e9apjZtMKZscqN1f75AtqRzYKaXH3p3SjNSnZWYBb': true,
        '3NgtAY363W7JgTcqqE5AJTKYXHDrMGcRHJsg3eGC2Kgf': true,
        'HfGTSk5V3pxGZKWPWkmVfg115De5hVLU2mezTDZbZ7K8': true,
        'EWpaBpuAfaeo3Bk7ZQ4fSsjfYXwf6P8QMrM9xJEhiSfv': true,
        '4UcvSNy5kRhde7t7JAHFBVkigFd7HMQQUuKW167CiCnK': true,
        '7teaRAyaGAK3SrkTqyz5iVTj35vMzq5JhuZFtFfGtu3D': true,
        '76bp5FmVFC5fhtePr9gPVKbZ2qxvgnh2HDjowYawtHKP': true,
        '7cVDoGzcfXzr7TPxAEu9Sv2DGAarJ175kXW8brYT74KR': true,
        '5U1xfyE4h8iVi96T9QeXER38As5y2neEbz4SDBLpQ8FX': true,
        'GgeWyuqoScjhME9Y6c6XmVD5XzN5xDjKmSoRdExp1J3t': true,
        'G44vzvwTaMcYiNwPWtEdi7g1qqkQuXYXBM7hbhgFTN9R': true,
        '5RWn3kCjmKXi4hWAnkHj2iTVo86sNCWqruzi9B7ePxY': true,
        'CfaFzCJLVTvksPve4R9YhgYYmTgBmvP83zi8rdvLtmNj': true,
        'HR3BAHmF7VvPf2r2uJREjUdE5ec6W8K7YihjZDmogwnA': true,
        '3RmuQuVEtCVLPfgX55pFoq4RtwHUCPniBxU8j89YTnfa': true,
        'BgofoXfbR9r1cZh3RpCF9to6Q8VSvaYf9D63UyTRDV72': true,
        '6thu62RwjgbL4MQcz8ojRfqtAARY5gh5hrQVNBw4ivs9': true,
        '5vKL6VZUPGR2jtH26NHF891iHQP19yWKgy9cQrg9iPSM': true,
        'EUvkYsHb2otyxqYAECD5P1DzmFVgoZ2Rk1XcjyD2ojy9': true,
        '81r867afAVvxQM6SXtAhQPGt7FPJBXgo1KCiyPLWNMBr': true,
        'CXKejtz4D3umxNXFVr2AnKb71gwzWEkkTKnoynSM2351': true,
        '2N3kYdky27ojf6gH88T1CtwnSk81Ej1FTta7qibR733g': true,
        '5YynF2TJXG6ppt9go5b91JSD6zc1NFdCuddNNXoDgj4p': true,
        '2A5KSnYRJVKZMepLkskqEXkRhqq1XYRGvq15PZEZPdTc': true,
        '6LcUbnDY585ndN8XbHmnbwF8P8BZsoPqzvEyWbjdsrqQ': true,
        'AT9KuXxGUeTdsfDRCRj2bzAwTG9SyNtpSFRfeLTwCZk2': true,
        '2bEPjUg3TBn8corgMpUw6jQTbzX3Na2MLAuJK8QibBog': true,
        '3EyxNd3VMcz2G4y46NzFLXXx84zYLAyk3GBjj163nQFG': true,
        'HCpesFZkPU18GC2NgAmPqBfX2yKzbfta6vniChMEQ2z3': true,
        'EMnJSHsnLUwNTyuqBGGkDhEunhDysJ72kbRR7TQ3ZEYg': true,
        'dv1ccbr7TWvvEcN8ytfvzqaBctcjDTu3RxTbTaM7mc7': true,
        '3UGYGdGBfCEtvxjB96Pqj96kJnAKtGRmvuHDrvFzcEmQ': true,
        'AxJ1nCGgGfTiKQbLVCnKp4yvbcMBGnk8Bh39yqK4ynhK': true,
        'GPJTkBhHRx2hsafLoTJxWwAzkSuNc6Gzer5dChvSuykb': true,
        '9ggpCZEy13tumWpS1tKFr2ugC4zscpWeCe4f3hBNrtcR': true,
        'DQUrzGsXp84Z4aPXLEkhgApf8TpCQqtoY87gdwUTurL7': true,
        'B8up7m7G2HfHH5RAiY9uoJBT26dV9KUjwSEC17SMk3c4': true,
        '8dEs76oTWZim9RiKudM5ayFRN5zHJ6ogai7v77p6ZKJE': true,
        '7kzTehCqfRNCYzAnCSdW33U1cSDPz1LwkQ3Ea5c2NK7C': true,
        'Ej1MYNK5hUrdsy3rVYBUXPEXmEH11gznpNfxFv4fK8xo': true,
        'HJX6xKQZ9N8iBxU4nrTLUr2chJL2NVbA2AZaCLGxf6Bd': true,
        'DPF3WstnkVieXvVPDePrqFgTVSBh2Eq8nmHGXzEET3ZG': true,
        'CbSSmVedopxP6sTw9nrkYkr6kT5o9HoHupvfkNckwG4j': true,
        '5hCwHfpiSCZkdNf5uAjnEWYMJexuNZestFrjFYEH2RfA': true,
        'HpvKtvH7PFNpe4sP31VuFt66vsdAm5SqEDSJC2cjHD1': true,
        '4sqzfiu2MvkBKmr4t5Swjp2VeMe2gPFYC9cv4R9tDfPM': true,
        '4N9kf1VRy457ffv4Scmds7H2vAGrcoeYiFTr8vkpWhCu': true,
        '3zhK2wW9inR19rYRY8ppNQGy78UDwJ6f97vkdWurS8MX': true,
        'C1XpRqtudkU3eAfeaqHSbr7Qge7agdHQ7pmjXiBYkEf2': true,
        '6RLf1Ei6cVvK9Nx1KpH5AswthyaN85FDCsLGTprfyhn3': true,
        'DFvr2HqhQhZbaYhTL3vo1kQSkahwvgDwRSNzEt2wSmrB': true,
        '5LAWj72vkhFn4nKd8kbGrYo9Z8aEQyVomgXzZG7CR2KZ': true,
        'GfFaLWJffEDdihH3m4sw1A4xMDtyHaP74sTp9aEKsimi': true,
        '6gGFCx5tK38eXbHi8Lj2kDzS7tTvi43hWG7b9qsi9oC9': true,
        '7yTqdmw6enSyVeTrFx2ucsyJvRWPLcwqrr3udmLdR5J8': true,
        'HrmxjpoXrb6jieb7KMVZxd7pVwNWPKJ69xay6B4gGXae': true,
        '3zY9SHHe9SqZkV5ayxMWe4rmgt1qQ942U11aVtNoUfu2': true,
        'HgH4JjRWKDPk1C87aekfCZPaCUZPRZkbHKJgPucHmwXe': true,
        '7j9K1xebFwVAUdQpxXghvan4tiJGEvGFKEdBsrMp3k3A': true,
        'H6zrL4vyFkzqobvhMg1xBYJWeYyL1vhyjTwLRHB7rQ68': true,
        'FtHhq637iKnaeupfUhZwx8KrNtPSqCDMMt2dyFkzkBvD': true,
        'CofbCbiMGS81N3pwvQw8ZY9ehAbV7fgDPgm3pFP3ckpb': true,
        '44qLthfyXwjrLkTfpgSQ9rVkd7j128N7YNoswjeitgRk': true,
        'F9BNHN3jyDkoCHahAn4zDoxxnv6GbXYoEFJKAxisDxhG': true,
        '7V33SAjTVgnbQqyHPjNErt49jeNHtmfgvXNz2U7MWMEi': true,
        '3bzsWCtytqk4ErDhNdy5mV2P3aBYYZvtAJTuLb6FxE6w': true,
        '2XEjzq8DfoLqg8C6NWbCNAnP1xUrA6Nb5pH4eKXZQZs2': true,
        'H7MABkCxAU8fWJYf2E4qAmXdW7Chwk4Af7XYMHRuGnC6': true,
        '3wAKUWHm5knHxMWkE7SP3xGUDBabQAUbWUfJS3Vsg7Ni': true,
        '969HL5csXcsMdja8UBAQdGcrrzCtYPGrtXC1tpDXGJHQ': true,
        '8YLRh4HKKGjrRij8app7hFjQUE81YdvYNND56dNvca3P': true,
        'Cri2c3epBcgKxBqEWbhsRWbBgRdXpNQMQraZBZPacF7m': true,
        'HBXWBJUNshxnayati6zbnsyoiZ6k9maqq7vhsyHPZEaq': true,
        'ATmxGcN7W6dyZ5M3ejERqWGRhE1QMSkouVpFTbpUjr7C': true,
        'AMLZdrwsvwVNbVXdojxgKwHubBCWao9aB35FWZzArHZ7': true,
        'AGCyunubKkn82rKkvQS1625C3FjttJrpicdMmoxVpKw2': true,
        'GdK7iwGVy1L8Zo4EkMUhWLJfbDKjshks9DiRFKkWATEY': true,
        'EsGdYAPa2T2ieTx5AzLpKBHWd2fhu66RVsVpqh6EKS38': true,
        'BXDyrff7HP4mX6rjg22Gu9bYgQFPmDBkWHA262aBDwf5': true,
        '83uA8pmLS47vXg1vRqNHVEPE7ZWmyYpfknSU3SFAeFBM': true,
        'E4KqLmha5h1L17Hiatcf15eCmSwDMuokcibNQVDeA7MD': true,
        '1S46r5DKrpUQ5cNmhdqHjYCuMwUCrFRqdDhfycXKv5T': true,
        '66g4xxDEEJkQbmwGn7V8fXteNZCGZGG95iviJARAC7JR': true,
        '6fTMjPY4raG3Fosp5Wf6sdCu6quZUHjXWfw6CUVyj9sN': true,
        'J6hULB3qPyb3iQe8Y9Xby2tWeQ2JxbDZe1BzCsdkN4cq': true,
        'FAiwzwB2KxQ3mzePakc2PPA2AavpEc5YPrGLUcDorhza': true,
        '6HRfgXTLvMWSXTwzhss7ZyB2gFVawp8Xv8tDwXF8orQ7': true,
        'HrB8YoqyUmZYKUP3MVGzw8u8JExoctepW68RYa1LHSEr': true,
        '6bsA9PqsirH4d6pLchocag7eQ7tZ17FNYKrt8jBwp9B2': true,
        '9bkWC7o4NqHoxhkFMUCKjVnC9DjsiytFaAhcuRVcZy1c': true,
        '64wdjFFiEDwY7x3PCoX27W1tqiySXAJzTzqtNKzBK93u': true,
        'HYmYrLQGnGRZ1yURDdVxyXdV9avM5EWWenHHsJgLWjN8': true,
        '3GvEyZF3euMVjBoyJRAuQJJZdDVMcwZDH4CBZJji2kuP': true,
        '5vQBiccCKPYyNm2qX1pzmat4jPy12aycG7bbKoxcDxfr': true,
        'CisReuNMmhNLBn3dDEahPz2dXQiMTZvgLGGp2s6StDmn': true,
        'CeDwjVWpCM3ZnuPijMKgkfXEyEEhDVHJZXHVeSavRLa6': true,
        'JAVmdYvA7LqrmapNWVz464jsQyggQ6zvc75hgUijsSEC': true,
        '8pMjRJeK6DZZJf1oUr6a9DBBqYtM8hvcRMNCfRAEEbbr': true,
        '13xbEsGocTQEWMnv83GoArY8WtfNxbNX1mj6k7Hd4qv1': true,
        '8ju4Npy9L2hu733R3DpZvzRbav2Jm3xhbqSEYxWJQWBj': true,
        '7vUvu5iN7gCUc6BkoSAH4xZSpe4A37ktsSShNtfRx6pn': true,
        'ERPNkeJQ5tJ7ocwg66bttqBjsVgT2YJKsHwqZVvsm4KA': true,
        '3AwUcLbUfivbthrhopbacaSPt4JgS65KaqoFXjgVHJbz': true,
        '3Ng5a3n2bRvFt3msVkKvW3BWffZad68woMRxFf3e3BN2': true,
        'BiHcF2zSXaaVRUatdxPRhgYMnzotgubxeRrphuLpWmxk': true,
        '5F8BgD3Qohiq1QpFWzXgoBSnAHqHFsCQg6UKZUPLfkcW': true,
        '5UFYksSo2gULAF6XRT92X4uXSFF7uybu98gYPC633c1Z': true,
        '8bcrEFsS4o2QE7VzKREVUhCR1xxUv2vPzbuNqy7WuDfS': true,
        '3XoJYgAkk2CMYLAqgWUbzKNtA6djwTGg7HDcxUWeqZdx': true,
        'HUVxQcWJKnhyS5inP9CXJHjGWySrpFjS1CrkhnngbYBx': true,
        '91EtWBRNeNhHka5nYYbQZHnZUQwyj57MnyayWdtJ5Kya': true,
        'BeyLofyYRfRn2JKKCZEA9KEuQ3eQvD5PEvHyHuo7gFPP': true,
        'BZbSUg2J6zq5BTUoSbuy6MoRjaBvypLwupCgTzJGyyV8': true,
        'E5dbAQXRaeQzEEZczYh3WrknpYUpZvhBS5mfZZy3h7fg': true,
        '4ZBNWPHt29Z8YettBAjihrRYjibqWPYCQEbqbR3vLqNn': true,
        'GyWxTm7PPQ8YYYrXuPiMpbsL4uaUPTk6YNqCJ1ngTrDD': true,
        'HyqfMMex9PxSXi4yHaECB4EyDY7GRG8t3R444Yo6xzYb': true,
        '7THMLQbMa71VLeVcTwL5QnmjsPjcUqhSjjo1xPjjYJ4k': true,
        'FAkAhr8sS3Hvd98phoEpTpyd8i3xFTaMUWZxvCdEvvDu': true,
        '7XCE2tXhNt1ssN2Q8iAXnTxfbPpB1siwBujcqk8hh4y1': true,
        '4Lptnm57gM6xqtaRovzVSHDKFXnTkyH1tvej5xxpkUCj': true,
        '9W5MD3e1cCX7VEEcTrQ2eSREj93BMNcG9CWV11GUqTW3': true,
        '4gk8V7KTstPPRbX8JHQg2Q7C3o4ZWFqHBS7iZyJBq85T': true,
        'CnmKEQLWb1A2ZstrL6KoFhCCR8Rv1nfVzkSBA2nJHyfw': true,
        'E31HpJZqjKjpPrdaYJyH7szzffyeL3wpUYTVHWf96wJF': true,
        'YC9efKD99j6KMebUfJLADaukT8bULBrt78EkknaAWoS': true,
        '4VrU5MWCVYx9R4aaG7TvB87pqJTNtPRe8nfyRkwpHoqt': true,
        '9H6PBTeWytonUbCsWbDZbkskNbbNsiTow9NeRETctrd5': true,
        '37Tfch6d9SC6heS314XtDGxVeQhEsdTkkXWU88u1RHxQ': true,
        '8taMKk3YcxqrVt7R7zrQYTkL9cRv7A9wJNtcMuu97Bq9': true,
        'EFwacvkTFjCQgxVQfabAimxgn2Egh37qDAkFX6q81iZo': true,
        '58EuAWzcSDeMrfsarRQ1bGBrS8xZ4nNgoi6czs3v6dZD': true,
        '7YKpS4ALZj8N3W8SFFu5ZXM5QiKn52qJnfVm9NzWKpre': true,
        '2wAY7aZfv5jC4p5dhatPiJ3CV4ZugSZ9KDpvxvSZrnoS': true,
        'E5zKNcrxaiAHFRLysCjW6Vghjr8W7KCv7qAcpHjLUEn9': true,
        '2ZwJHrLc2d2M1bf4ci6Nc4tXJG9J6zkxNc4jMfzdoUKk': true,
        'A593bRrf8QG1B397qTS6gEVjN4ny8EQrKxGWkKvDnbbs': true,
        'Dor84kmFtyHfTyEdmXoA3DRGGM7PEZEWBvKVfQU3ZqUH': true,
        'APjXuC9v8UidGbBvbFs3eB1w6TmewYFcHpW5zxH1EduW': true,
        'BVHKiG9RY4GweWK9dDLK7z9u3a42m2iuKuk7fsB9P6zM': true,
        '5zfuPAKbqn3MManygARopvkXsKUu3EMmLmzg6GbkDNF3': true,
        '9XExk5WerJFWjoVkXFPEn4u7LLiTmrjQWUaG3PTCktCo': true,
        'AhUJZetRPMwo6GWY8WR482VaJdSn1P5DPvoKVLaqcRex': true,
        'Ci1S3bP1mrn43pRYsqCQFwr1DC34pu4PYSNaDbBYBYAV': true,
        'BHg41vutmMM6tK7PYuB9MuBqwKLcep39pTUvKvMaSFYE': true,
        '6qGBm77eoeEdvnXevZo7ixjCeRDwKyRFWkthvF6uY9Wc': true,
        '3WmtLgpNQkbhaPr7KWCiUsYu4MFsQURVF5Lrn5h93vwS': true,
        '52zXd6geuXavmvwTsTMCVqR46ASXAu21HSwc1vbXibtX': true,
        '8QEB5PbNnFo3LFCSXvCXG8Z7fzByd9qobuoJrW1tAyQ9': true,
        'DPLTCs34WskMBp8nG8sFb2L8GBAznv72xa9jE7v4Bjcv': true,
        'DjsA98AYcDEmxb9qQU8tJEr8L5n46435g42h9UJLNoEX': true,
        '52LxYAgwsNgUQHDiBVX8VRZGzNQ9Wh9zi57XoDgBV3HD': true,
        'CEChEAzcZqANL56FUyNGbxuSejsxmos41FkfZD71qHGU': true,
        'GHTkSuKJUgC4t5RAXzkdJuTDFGMceu1f5eStLfH5nZ9W': true,
        'Btcxj4Ned6HojvQsUxNwpBmY98Ha7BV7Xtmze19Cx8iF': true,
        '373aGH9uLexsBoAZoX3ojFraRNWY9somo7B7vkyM5aZH': true,
        'A3gSQGVkJwbn6hs9wD6jfDQb2m2wb73ZBUPJFDjiDF7V': true,
        '57MHfB7k7bZzogLT9LZgeXY7QmZswMjqavryuZVAmZ8P': true,
        '8dB3d5Kn8YfxZNCju7rPhAB1pWp9FuEjLdgdsGoXijPV': true,
        'CqdtbG7Luj2wecKaAFEg5cfkUxRJWR5RSQ9sy49ZNttN': true,
        '9szPTaBtUxLWzfBaoqsQ5ekSqYV7aYee86qMYm82KCdP': true,
        '3GW5vZ5xGHh34UhXvc11kjJQSLk2mRTz3yLsKGMRXxVT': true,
        'idvkhRXedim4LccPDNL3cVobbnWBmiy8fvf4CasZkzP': true,
        '3C6a9y3tTbvKSHGtnyy6dnv2uwvJhsTphmCwDkWFxPaX': true,
        '96ksXGjqByhAspfrmTaHFt44FkEK8nh3wRv3fY23dkr1': true,
        'DytrxTHeJmhXozMdoECBcsKwyAg7mqLBeA76kGNNnNry': true,
        '5x7zGB5CyE6qFCiT93rkdAh29KR6Dvxyausfm1bWwqH6': true,
        'C3bPqWDKxk4G43PA6KTiWmpQ6aWYY1UoAe2uFg5CTMR7': true,
        'HumC6yVsvvCGeLVqen5ENtQstDgzVnXu25rGnf1bBn2j': true,
        '9FJ1ksJsc7uy9xS4fMKMYbQaQNinActSwa77iFVcs7Po': true,
        '9ekKHDTpGyw7rdS1piwRFhV15oXzhp9qXd4i6scaZXVD': true,
        'HpH3uKasfPJX7CGuhxkzwaVZe2qd7kxnHsM9wqtyg9tm': true,
        '65wP2WAX9fkV6y8etMgrtusxwi5mJhrPXGd1cSWUx5WR': true,
        '5cDqNVVW491JwEAyQ6Dhfv1EfWZY8bGBKrYr6bXycapy': true,
        '7nFsVTQtvjorP4SMm5PsxmY2Jr5QkqCFyo9bDRYZ7s6L': true,
        '3eYqTx5DRzuJaF6Cj4F3aoxxc3dnYUF9fggPUQzcG67h': true,
        'BcGj73xJ7RTrjrxPnKT9Zqq5uaZaLZExg5KrjKbRKZM6': true,
        '6pqiZYaE8nGQjXeZKS29JSYc9fgSoJpr3byKo2y4BZAm': true,
        '2bzUihRZTgQzEnLvdnpsP8f9fTiyK3QVoaMuRF5B9aab': true,
        'J2dchvDZQEnpZuC2262xo64MGLXVFwiFo3UaC1WX4966': true,
        'DEN8dCL9GArtA2D6ffS1P44yfkhJGY5tqzwNhXMj7fL3': true,
        'S2xmeZssxRJWxiZYhD6wfMLdwsdb5mcXuomPjejxWSb': true,
        '9FdXRGcw4c4xugrLRrQiWy2SKH7e2aLscNo6xXiiRbk3': true,
        'HupJLcsd9oiVvrPFzTL91AaH6zmeS6FrKCQjnSNH9ZC4': true,
        'GhhtrKUP4mVX3hGs58Fa8PMVJxUyVtevKximT2wxnapR': true,
        '5dYr5azpCJXDytqvUoCJgoGS3tie2dKmGKT5K9A1SR2f': true,
        'Hrk7YicaVckNq1sPfWUFSeqWPbKynP4hYhxptwG8TSSS': true,
        '2893PX5rgMMDvDp4KM8hv2xBmsg8BaaZZJBLLeRV35j1': true,
        'Ei5o26n4PykbSe8hLRCzSDRaAmXPecnUvTHabNHDWX98': true,
        'ABoNbgEDH3yUmWuuFL7EEWL4Ky5R9M3sLoFNCd4gxT1W': true,
        'HNdozvJpSuejAkgKC8BsdKJ78Ldrq3xCyCmfNwRvVc1N': true,
        'GHAsbirAjwAqR97M3PwSJdh4t1B3oSXphTCm2crz7rqk': true,
        'Aqq1X6qTSk3T1hbr7fgYrmKwTM6hE5WCFhKCfRkKCYWK': true,
        '2C49xpJEcXsEsEkJ2kP84Esd7hjDEMUD7KRbagd1ticF': true,
        '4WEtnXCmMnNtsMvnhFeoZx7UEVYmkS9VhF13mYQ8TZ7Y': true,
        'AAkuFag8QuV2xDU4sYhNWp5toS1QPjmTuXvtEMw1UseG': true,
        'EDXoXxCrA7u5v8hMQS46DqTkhHBunbc3UoScyxdLPfSk': true,
        'BRtC6aVKYVwenjMrLSXdQHFwV5UF2Ph7Ggx7woaLyDLY': true,
        '37f1oseh7sJGkeVdEmobiPHi3tYrniW61sryuVzVTHQj': true,
        'FNXFAVzWt3P82DHUr5UixfG9Bqj9YooaRJFCLJc1NXFA': true,
        'HF4Gmt1vGvYqoF1HpJ9VUUn78d1rQ4SaRwso1izhcQdQ': true,
        '57mFGd3mS7gp4eG7fNZGMQPeS8UyxTQuAuGKJrFnhvk3': true,
        'HLtgX87LSiozHaZEAofHEr7JrwbM2Ejqv6asJkS5tCDU': true,
        'GzbjBDN12Moeg5NR3tDvtsxj1EaHT3HT2TS2jzvP8Eut': true,
        'B9nmHaPFdbL9sokNM6dSL6CR2TCwBTxYhroRMzQ1Q9g8': true,
        'GVEGAgKpqUo8c21Pexsy1dyejwvznv357MjkN7A1batC': true,
        'HgisPFXVjcWvZdYfY83KzqVTj7FnWrR9ZTfHZXk94sKi': true,
        'BH5cgxumScXmkXJpcBjzxHqmLjwEFujPz46DQoyvHGJ1': true,
        '57z3EectWUa1594SHdkFzNcick574cccHuBgEAsHvVLm': true,
        '4X4mtToH8EsAdfdKHTweXeWpxY9C7jSCXnAMzvh4ssSX': true,
        'Bb8TzYbCpdYctJTJe9G7gF7mhiK7iENZzFE4fq2w4Sru': true,
        '4QL4fEbArJv6o7DkxX7wJ3D21ihh6jckNohrcFJZN3T2': true,
        '2LJqN5kFCQqin7KUsuWA6b7kDeZN1DZUTJpJodwVc7cZ': true,
        '4MTKoDHMJN2N92zT892WQvYfWkj99u2XML8M5kpGHTnS': true,
        '2GGg9n1Z1XtBvoYmEJY8i8LiCBWAGVE4dMEyU8bzQ2tT': true,
        '5bkYugvTcSQp86VL52rTJL492cmgKD6GzL3aUR1Nm1aW': true,
        '5rpyqJXtGtqxWn5q2i8E1y8AEqUw7oFKiEcBQixRCUrt': true,
        'DdDoFTdDWqeG7t6aErGfyNt4ussCYicBhzXUaZXXwKYd': true,
        'EzHN1PZg4qQ67xhUJpjxodQGLBrzNqoj6dNaExe4tRqp': true,
        'GJGHYxbgJ1Auc2Fjxxfu3DHuGmTaxMZjar3cemoQHkcX': true,
        'EF6rPyUkDpriNeq63uSScUC9D9vShVA7m71uyw6saXW6': true,
        '4kGso2sUhoMQQ173VirV8YrT8NxdKHXWuC82PHJLAqqZ': true,
        '6YENnDFUTzAunfrSxzg62Td5RFQEWywmonUn1U4VpJj': true,
        '4YYYosqc76EzjrrTQM1bMb3hgjfuAUfuBBeAtVK3bWqz': true,
        '5wJ58HDhL1U6bsM9WRn41evTWkSbyNRuKkmF5tm3gBHr': true,
        'GfFHuNG1qyh6nbgKmouksbdQoBGZFxsFqcHmcpSS2pdZ': true,
        '6YTa5gwmL5XAt34Tup7MVt6LdHPhwdwBCoWc6Y9ZBxmt': true,
        'Gkk5mdh9V2kRqP8uTYojwG4L3yesapQ5EWJ2ESnwg1vN': true,
        'HvenMwh1mUQfGKaxUPXCnmzYRL1ouFKM6r32JhXRVJ8w': true,
        '44PPqiUX5UsHvCZ9D7Lyn6npPWF2e2eDDYSuzoNPniCH': true,
        '6Dv6ujbusawwJHyeunQWE5Ye2LqvZFwVrZFgcLM7BXdA': true,
        '96K8SAuuhdVzWoQDCSH4pPqUnmW3oj71hoZUSCkB7SN3': true,
        '5n4n4UzGig9UJ7r6RuynWbMx1r88sUS45sSWSy5fbvq7': true,
        '5Gqg6gD3huJYHoZJojuu1fcfkwa4rSCFywjNbT6ymeEN': true,
        '8oG1g9u1UkJnXRPya19zgGjyaAPCjsESiNnNrC9GqTjk': true,
        'EMjodvTsZERDTQD4QtZCy78ozyjNoHdj65wK57x7tt8s': true,
        '6i1BWtFkRh3JUmFfR7MCj5QfYrfjjdUjPFYtJ4TjfC9T': true,
        'DEVUw2DMXSdUxkCHCdrXihYspKVaxCYN369N7yyf1SZ6': true,
        'FUTFVKkwhoa3vUtrfk7Ws1zHFvHCFhoPYVcL8EgCqQbU': true,
        '3HdNFvkEBPeDdakhVQUtDhQK66tNroQJAoGX2d4Jn3Et': true,
        'DCEearSMDujQ2nyHWL71exLZ3PHG7JA5xg7dNJQ8MSJz': true,
        '74DJJByiAVVhRb32ZHDqjLM9LZXaesBUBHXsigWk95es': true,
        '5NhgnGRrjEWK9hvwhMsmTJhBMPUBtjEMxy9h5PNrzK2H': true,
        'GzsMhAZXQPcvXJeNiE4JBq8vH3NTi5E42eZRWMNHnZpG': true,
        '8ajqFDbRc8xLoAEUKFauMhA6N2uR7LR55NQU78LV4LJB': true,
        'Fw38rFb6TZR8ZbfYT672h2SPMPDzcjJB6z3qvDp3Urw8': true,
        'EwiscJJhhffBAtvBE1euXjESvea8WoxvBTQyCMHMh86J': true,
        'JDcBf2yPEWEmGukkPgnyx2ap3kQmHbqAVRD8z1rKq8eW': true,
        '7wdje5kQf4AkWUYvG5LCmEe52qcck9t2Lvna477jRUU1': true,
        '8D1A77ZMHeKE9x2nPejevxUyDdMfSGxW6JGxmPjX2TTT': true,
        '5JTjWSMooEUQuaA5X5vS7WvnuKW19HR7qQgj65M3Mxjr': true,
        'H9kh16oKJW2pz4BRJLWWfoempVTS2XAbKdtMeWg4DiYs': true,
        'AmQCeB2BnEuhwzc6KAtBykyksL8H6PmczwBsbbQyiJMw': true,
        'EUBcAWWA3nzoVKFowHRr3Yt3gW2pXBRzf2xiWHUeACWa': true,
        'cw6eXor4RAqd3TMXyBHeNRbrQftRdc5MF9QZRqygoiz': true,
        'HgmLtUCgB6ke4LzNkLTMbcL7kijcpa2xuawJNf968R3o': true,
        '91Bs1j6MBmbvdvYNYA6mic6FDP9Y9Q4HJGSu4ccr3GFq': true,
        'JE7FfKbB24pMuoQrsaaa9b8VKkWCUrmdb8Q3NVrJ71k3': true,
        'C2hsFBnQoeoGNHcVcuEGbrHZahDCyAXffcWEePjKgX5f': true,
        'CrpqytWF96y8WoUGY1UV1pQaFm1TRSDEXEMoypmjKedL': true,
        '3oxgk1sNFW6bXwWXgaG4oLDhLRECQHRLnTtwps6mPwyV': true,
        '5E75xayJvoQx3cBrYB5mYfo8mctTWGq2JyqBANqdXTQ3': true,
        'F5PD3kgy7pdh7McvqHZUFa9imX8eh5UeMuobqrsRZWLJ': true,
        'CzvBzefMfF9gynsN28DBSe98ZhCpPGpqTMdnGaxZyVT5': true,
        '3N8S2PKXhjkXRKRuSiJV87L4AGQ4fj7E2WQjEVvqq3Kf': true,
        'BEgCATWjdHxYiqxRc9VeBSD8PWpZs8EfAeZ53HuR2cD8': true,
        'GV8CTMc9eK7oQRySt3c6Vj6Ub8fXBHK3seKuwc2tWeU4': true,
        '4Ydyfe8FG83CyjMtqPHb3mtySNQcR4wQ1TcngWYTiNqk': true,
        'Aj7vnjQ52CdjeC9Gmysk7UJriANC1oh6Awz8M98FQJ2Y': true,
        'Ar3koV2UFcckXnk9ZH76k8cfdHvvfW63iHmLcq1914Lf': true,
        '7Fx3mtWzkmH6PNY5PancWqBn4aPCPkxRbq4wDkX2Vb3i': true,
        '8q3TmohmWymS3ecT5K88X3r3D6Zk7ExfQnnEKpncj9TF': true,
        'HHnf74am5FGtn42x9sCRDd9aSUX5V24cPQ3fQt4AMHXV': true,
        'BCTJwCz5qUpzb8bdbeyPzSQbUZzkwBtbrHSHNUWJJWXU': true,
        'QZAXbkNQogkvUo6yKXjJhvZpkMYMcxEyMgKer4rbgSx': true,
        'YGUrV5QZZTnWjpmgR8GVfi1JWYL6EaNr18EX7mpvqfH': true,
        'Fmq6xHBVYCU5k6EhE5FkZLGptycujQ7QSRmvACsnEQYX': true,
        '77KRXZZzHMHrnAMow5SA99utNLnD1biXNhzB7vzgMqMC': true,
        '56WT987TcFfBgDdCyXqtKvEsaBTufopAPV9eQkLydH6e': true,
        'J7fsVnxdtD4UL1Qustkbeai6UJGkwh4WnPdfSCxaXFuj': true,
        'EcrvPWZ4NagfBJwZyeGUaVLYCa6gJBdJ9W3X2bELZyzz': true,
        'GjryKAWETyj3WrTW8cM6BKEuwtrcsgcGTQaW8TTWD3hu': true,
        'Fav4sJEfVZFkRxsvFbGjcKJgPsHYcfV7fW6dJDz9qYao': true,
        '2h22zrGZKGDRf3UByUTXjFF5M78nhQANZ19YBrJLQb3y': true,
        'GK4RhktYgcQLs6rTepCAokmF1gcUpL8VD1BzZvEQAC1d': true,
        '6Kp39HguPX5Fv8HGjx2TSkwWcahTNmznJyhuC6Lvww7V': true,
        '4TVQSnmCvrurf3kAQo3KxpLQVXMMWodXn1dyjNDV4MGN': true,
        '4ZDVBYwD4jd8qrk2z1L5eFuZAepYyYTBmHECtwJTfFC1': true,
        'FLqQFedyJVXsq46KpXsBJrJTDnMKpUJYBVAXbqvmtZmo': true,
        '7okXoeehdrqFKPuaj3DvmxFJ5qXNtEDCEkxSj1w9Hsqs': true,
        '3D6mA6pXzYMixt9PNxMVx1VLNC24rNZWJphAb4rDMBDL': true,
        '6kTFWf7ngXm4BeNPLP6oDa1PDWQHs2J2pi1cHkYm9pUF': true,
        '7b9CTJAJZUjKAs7Kmiqtysxogc6TYqo178ZX7jTZerS4': true,
        'CRDwBy2pKEFFuAm9LLKAJmjLTbwNJd2vXLvEm7qkXqdc': true,
        'CAcg1aemuYmn7pKPTQxatHidFV6uPZUrtWb1rWcaMosB': true,
        'HdeMLpBsj1DkHdmqNpCgNbUgGfdemj28vd2uMGsXyzPc': true,
        'D2oxtyEmBCLJxUAAfZ38JXTqWLkZ76VUDMsbdjKBAE1y': true,
        'Aj3HzwbFE7YLRnbpXhtZvaTaZCCTMNobhiDTbyisWck6': true,
        '37NYJGZjjL7y1iQV7FKXg24XnANGerZQEvCXSohPGdfT': true,
        'GPUpzxWB2z8W55aSULdZzUdh2i5iKZoNMcjdQbktBAB6': true,
        '3D6so7KnjrVB9qftWmHXwr5tktAbUJWTa34k3NrTcGC7': true,
        'HeKtxL51C2eJRNNp9M43T1dQvjSr81XmtQ1cBfJBdumK': true,
        'CwXW7WUk6yrbhLHYW1RCVG44SNu4Wf8i5eeYA1t9mf2s': true,
        '14brkJMLkQDbYdmCVqSym4nGmtkt9KsVcwXMcGRdxqKK': true,
        '417B9MwLPwXzZemPQ5QtJj4DBTmrhKeQxoUqvzhDRc9t': true,
        'ArCzNxzDUWgaHoiRqCGLLLnTrxAMkUDACWpvbB9Yg2S3': true,
        'A4qGK6ZQvsWtuFmzTYNQUcxGk6Cv2waauev5Dk5ZNxqf': true,
        'FKW6pTS9fGSLtEQRkMXjXEWzM5iMg2zGPL9Gyhos8Ncc': true,
        '47w4UJtzzFVgxKwpw66e1XP9bdJtddLSbUqUHTf9qYHw': true,
        'BAZ88j3AB9xBAfgQVxVANFtgYcV8cX47wN7sH6hkbppV': true,
        '6Y5Kz4hS3Mf3s8E5kFJ6EMdFj7xwqhz3k6c16YZs3pS9': true,
        '2R5DZTc9KXJhswNeuCoPFY6QQUC2HMQxCF53a3a7xhwL': true,
        '6FdQjieAYtfp8AHt1USy9g8U7hyYaHa8k5rbLpvwjJTY': true,
        '9gCvhnz6x9G23r18EGFWMvcX4N9JgwcMJWBHJnnuWFDx': true,
        'Hy64neHVjKjF5GKZPDFBjgUDioKMFjCK3Jh9He6dGT4R': true,
        'B1MsxYse4X54dDB71DUKP62RPyU9YsvvWiSv9m2TiBGn': true,
        '5RYqptKkqPfG7hZwLYym6HFzaTswJdGE76MN9TAAQ4Lj': true,
        '7KkD5KvDXMtP6qWb94B2EjjfULRacmYHaYiLg9xgCete': true,
        'EHtBQB4Vo9L4o8NT5YiCAyzrAvdJQmudxWKr6fqJtkV9': true,
        '8nD4iuiwaGvkXDXnYtQsEk44VLMmiY6h8Ub3gzNEyk8s': true,
        'DZPijMbWgVjXdQdh4MWamTCr7i9sL5PU77xk2GwaqtWR': true,
        '23rDQkJfgP2janavTefg8sw3ywYN26BtqkGAR7nxf7zr': true,
        '8JQgXbHoMmbFBTB3LXvTmgWRE4xuVX1BB9gDW31CpjtR': true,
        '5dxoGqiqCBvqu3uXrWMA97NVvWAdeb2yinXZ5RHcyh3d': true,
        'Ba78VX5BxhVUmD3phSoejV3YRxwWTHwarBTMKcwzSfLd': true,
        '3KGJtnMX8L5AQPsNXVG43Fazgitpkr9sqvPiwts6F9P5': true,
        'ALQU62S8Z7q1Ln1ywn1b8KfReWqKEyenAaqvmir3rc3t': true,
        'ESp2cpskt8itqmg4B9RjzDr6VXWWFrES6kwzwuXAV8R4': true,
        '92jpnC8RU2j6873McHr5LTs8rHdNPq2U2RVELzTCTdvF': true,
        'HQuWnmy1XDboFJ6imXY3WWLWKXfJF5FzzHdfnXj7hWpi': true,
        '7NouEo2WHofrmrUkhQ6fNyrrRkVYnJt88vgkkESS9MFE': true,
        '9LAGpDU4FGR146Kofe17Nu8ZwqZx3yQRy9YojvxJXFzv': true,
        'Bk9CRG2mt1kefje5PZbg2bzdtkWDJBuVxi2k9NCBzg3Y': true,
        '6xnhRZcFgjLS4LfxvG67xAERE2oHiAnetZjw6KKwvD9W': true,
        '5oi9so2hPMy2WBChEjyEZykA6Sa2B8P6A8P44Hy13gSg': true,
        'Drdn7ePcHaXF3sT1wBjdw4n76iqUcSTNc916Zjs98uC5': true,
        '2p4HxrFdnkcBLLWtaRMGJz2tAnWTKXhgWUVX8iBYLmVz': true,
        'EYZC7ozKGk2XWkCZkFDLqFoPNaKGDg74kALk1naatsm2': true,
        '696HTpUuX2QVaZcRSgRTLVpSnKjWRLuwkAdnXct6eLUd': true,
        'AV9oEkGpgD1M2E8TKDnvyaZxEXGsPEvPVRzeAJQ6JUYZ': true,
        'G9iZ5GtWNPhg7aApP2SRyC9x2Yyy66mkjcsF2fDRvNG9': true,
        'B5Zdg3U3c3mGz8fgYXqUhqvsL5CZAaRvkL81tyjhCwHC': true,
        '7KuLaHTSDRd55CsZN2yE3bmdnDcUm6xfLSuNmNARfdA1': true,
        '73n7fBp5cb5F5uyk3jffeS2oVxmS15fS5qibrhUhZ92h': true,
        'HA2sZ2svSGfgqLvJPZfWqYJqQtcAJDe4Rrez6Z7K4TzV': true,
        'GQooLuYiXpEkQcPHKDC2JNk7U8savpdXEWL1eb4mZMRU': true,
        '7YJutRU9zoweGF84DuTYLmtm3P4zbDb2msUXCuJujjjb': true,
        '9kPQhYSkonpEvJWxxhQQFBwvvEuWV2HfhoqSBRBdfmSS': true,
        '9na6zTY6yqutgHaSDbon9dS6Fjiq5WD44etaLxGSCM5': true,
        'CqcFEDM1TL8SxhWQgcQDonysE4qQbqW93JWmzR6FU6pc': true,
        'HhzkyJQj8iMuwTxGkkBHJR2PyUBbrfLpubJNChYweT5Q': true,
        '9ecRZfBewocrX7stkMwfzxFzWNZPMuFeweF2oZB774U6': true,
        'ERkUPZqmKwEDf7NXW63tpKYSqDx719Bfv9NxFiUxDh3P': true,
        '3tMCSuCh2K9376iSrPjJ7DKDz8vtDe7oZeyZSGQ9CCmb': true,
        '2F8UpFXVz92VergdG8oLRaKeUQhhEwEgzzzMpPPYrF6C': true,
        '4Fn6EwFsvy1wMAq9qQjQwJ7LWRo1jWQCMR1WD3hKYreH': true,
        'AGbVsjLFGZq1RzjsE5f42gUgGtxuoeTsBKA5gurVj6Wu': true,
        'EuRLtQeAZ4BurjLJ9CopHQivjbHbJNsLBrxyxqBgmymd': true,
        'AV49RtRUPx8n4dQkzWLCWcBWU8kf6BsfZGgYmbbN5NQT': true,
        'D9GVrNG4GXhpnqFPoizh2xL6a9SvXCeiUAfBxYrXLqN2': true,
        'Hhrm1xTirWKfjB9dLKNUPM6VGF5cNDF8wUqwbrS7VuC9': true,
        'GbxoUnTSCvvdpL5sgAFdDk8zrVg2hg8h1sQ486uASwKy': true,
        '7BAqiLdbYv2A2UPkf3RPsRdmR31PhmV1ENYCASoWcqE8': true,
        '4wgQdRTSyU2PS6piZ9Ew8WuWfZi9jc1u9URfJWyi9xi7': true,
        '7XqmFFA9bAaq5k1oKtVcPaS8AeLx5NfE9Fi1WNYNekAE': true,
        'H9EkunfSFsoLfJDs2uJ38sxDhY9VsdLZxQVX3Uuubrju': true,
        '8DKj3ogZ41nDjtsQZhoW5khEeYCdEdU5PAxZ2gjc52nL': true,
        'HaVRUdjzwQ2c4cUtDpBEwr6tt4Bpf2kEcXFo84n1cYH3': true,
        'HvR7XmPUNVgiGxv6orw5Yknp6M6Arpco3rKWFocRmG3T': true,
        '7Gjck1CBxuq7dfXNYKXZqZFug6bo9nbjRZwvZhJ2imwc': true,
        '5bGVPErL6k1HdLx43VefiRzzYW4CGUvo3BPYQLKzx7JH': true,
        'CWAHHeRr3zHRq3SKJ61tNyJuYfQqXzxZbiDPP4tLn37D': true,
        'DJuGtAgMX1E1KCBYJj9RvPjkLKsAtzXmChC1WPHijauW': true,
        '7XhBaJ6jVBCMmf7konq3rP7UGv7PYWB5N6ovBb8hjyo': true,
        '2Bk2tNcQdrzegP2RTWwcrffWNtYcsC9t4wyiRw2TJTq7': true,
        '8RG96P6jdx3EzXCgAw8vAT88YBM3MnqsNyZECMzb4rdZ': true,
        'HHrKaJYWS4STR1EJgN6BfPFGaS9qqKiSo7AGvkvPx7Vu': true,
        '3PY4RQunJPrPBPoTVEbeyHHRVjigfvv9D6niw5zHoXL7': true,
        '2eko6XJxLbPsd94cL3EdxUCputsKZB3Apb9hSNBqC87e': true,
        '6aPYnB8rAoBu2RabuAkJCZ6C4UujQ1k4xdoFmbFtuhKu': true,
        '98nCkfCe6gqPwpqvT364EiE6P1tTe8FNFtuBvRZtBenh': true,
        'GVN6J3waLU6GKiwGbQfVWZc45NPjqDeLVqPUkTboGdG1': true,
        'DLtPc16kWsVh66wxUKtTdH42p2NsNDP1kabFJSkxp8v6': true,
        'AkHmmQaF6bFNpvYGJvzGswDyt6bKKBntXDmwRHrkSjXD': true,
        '4uwrSMKPrx95j9T8XsXqExw7vsRFw6W5XqoDLVXS84y5': true,
        'DRNYQHevV3pgcBVfBRwpLfd9UYXtrzVG2AopAutwZjvE': true,
        '33LkWn9XJXovVibRtAfwv47eZyYfXvg914mcB2D4inn6': true,
        'BoeJYaCZcmSE2a2YubyoRoDvp4WXcNsL6SUWujQbx7AN': true,
        '2jH29RttAYyyfn2JUsRRkRnpZWVsZ83fTBaq2cBGtFLe': true,
        'AsvZ3YrRwtQiJbzULfW7rt6ApFYf1aY9vkCegs4zCesd': true,
        'De6EFvhaWgVTYwhS7Hpx4uA2ULzQSCyv2FbCNTceX7uJ': true,
        '5wm1DKB8BVKzNBRmmfpHug9KnftM6iFy78kQ6Ywfm4ki': true,
        'B4o9kV28w5XcEkJmnXKXeKYG1TLHtSZpZGq2Wppry361': true,
        'AVUgqzzaJGq342HwG9byTnknvWEhgFWsyaNjSP6DezuS': true,
        '3cBzHt3Y4JXnRqZux15zth6cXaYruFB1yiaSJvdBZ6GU': true,
        '3BJGmV1PpEwbYjwWgN4UZG4w7owjLQhLXwaNvWUjzNDL': true,
        'Bd7HoLvDQf8omwyrP7W4SYS5fFzKLxYnq5vnrtKnwKh9': true,
        'gnmPsVp6Hx7Zr7hDiR3P39Dia5SEWerWGCKTvzvyxsd': true,
        'evCxaxtm9vKTF2KM82yw6LpxxQA5ABqYSH15BRzXg4T': true,
        '5YXYtMmqogV1HKV7LbotrbFH4vvfE4HASHm4i5teRYMW': true,
        'DUytVDTipf8KDwZixPzkcSjZfc3as5PdAz8rJQzmvLr8': true,
        '6D7SS9iyyGHN31tYMKg4sfo5fTaAP561SohDb7XmUa48': true,
        'VyzBejFuHmM6a7NUzNEY3nd1CFhb8cjfVZS5Dhkymyu': true,
        '4L7aLbPqmJjoppQ472FsKW5HVVGrzjy99LLVpaLkuyJD': true,
        '74FJjfV1YAwPd4gmjXL2hZfVqRf9kP9GjCy96YqEDNKY': true,
        '32CqKPXYazfCnwGJ8AoByjUMbyYTTtnZnsVHzVUA6Hpz': true,
        '2rJ7uBxLQjrUnvCpeEgHN1gDFmzzY46EarJqtjkDWhFA': true,
        'Fs2Dg6ar9aszRv5x8x3vpxA368bThiDdp6M7zDzeqLVV': true,
        '54A885SSUBishL325GNTnQo91eReERAzcWpB3axakoPA': true,
        'HV9RnHWLFCTb64JVELM7rZwp5JsYFjrJyN5zBRKDQb3C': true,
        '4U45Ne9yTzPgfJJC2mWdf9Sd2gX4rUNLokD1YDDRHpK4': true,
        'AzfQURpHyyQTVGEx7WAER1rjCTD9SNp6NiCc4VzG3J5i': true,
        'AerJMMvy6WKrYiJMvXL9b1dRM1it2SqF48KezxUgpNXn': true,
        '6jRCd56UhRLJkavi5BG2KZoLMpviwGuTDERcjz8Ww3NV': true,
        '6LcmDB1Qwz49E1fWdZruTqRZPaAr6hT6htb38TTqaGrd': true,
        '4c2HPFAGqyDHZZ5QxhQgELbe1rEkhtrMbePgZYArD4yT': true,
        'F3VETp8RkS51k149qtcLU6WBjRzqWcR6VyLDxMoXSohL': true,
        'LwhCsFuYNHY1AHJVzQwzQPrEfFeaRsz9eZRgAiCpWSV': true,
        '4BA4kcCgqVbWxWqgPdFnvvwc262LvXmQ68Nik56uV5ZH': true,
        'AJShxCo1VkG1o3UjmEsKo2HimmgsAczbZYgXqPRq8noC': true,
        '5b8HnVdQ6CGmMbVNvfToJWietLcuzw8TUhPFUTDMFgFF': true,
        'FtkBUoGyFM926qcK9n7fpEnASSfoxUTgpY6TKb3KcZy8': true,
        '4tkYUy4Rao2WJTJRtvx1PTW1gRzJWde3DLjQr3SZe3bk': true,
        'EgVKHjuNHFAGZXQTMwWkkfsTWEmY1fFieSRizgoUfEgN': true,
        'BYhh3XRL3Fs8MhjWPDGT1hCFxzeHTq9LQ8NAdjwXrwu9': true,
        'BCvUb6BjYBfvsEoasE7nRaL6YazPERjsGhpJUYTiKQVh': true,
        '4ruNCAPbo9pUScSwKGWDn5MKr6ZdHiX5jBG5qGQNGdrM': true,
        'EMYDTanEahK6VLFMj93a24V2WYaEDTe4TYv4V6vJ4XST': true,
        '6p7EBxG1E5yzNcUkqr3MynHjB6kQp36fX8tp9wjyhApi': true,
        '9MsHp659o2NAZNpwkzdbqhoadeMfrCmV1v4HVCn7D15K': true,
        '7fVaX8Xg9ga3zkLq8StJThhoMXLwisM1t7Aa8tNcRBYd': true,
        '8obPCc5fdftwaLCit45EGcGSXbfVFWLYwFfx8Z2CnrF': true,
        'HstWWnp2Rg3857gFkpMKeDpWFKcmcPfkXVC3of8phdGN': true,
        '61MCgkUu4ixzj7MXpCPeoccRJhqq1BokuVKn7Er61etz': true,
        '9LNPhqV8NcWSRRr67sXkqhpCEvFVAcAVzDu6joKtqU6J': true,
        'YDybu9HX5MvyDNeYwcacqMhwX3v1sebXZViTdCiveGa': true,
        '3mAs7Sn84xo21yHYqeEJNwDPGQqKGLFfgSqzbPgCfbvU': true,
        'BUf9Q3YkDWyMm62qGH5YsE7onDwvSJB5FTVuU5CYFPxZ': true,
        '7Tgs2fTH9Ya5CrzFD5UNDDJEMcPhfMWBMdnS5FaLD43m': true,
        '2SgsXSNngSEk9FdSELd5vryaRKrD3XjSqsz3MfNDKLKN': true,
        'FhTTaLeCdnVCayt7heChK2sTXBHwUNgapyfr4TEsE4rA': true,
        '63CcdFQHPqnZHeuivaCgu7K1bXc531fqwYanzLvC3ZJp': true,
        '32uo8hfduCYuyNDNxfWCKNDpZb8A33L7f3zzjTY5eyeS': true,
        'H3DVsjn7z8SaV3nmdEyAgd9xM8hExvgDWGERmaxFJhVt': true,
        'J6EGq76EDfw8ovkwVeRaEoVThV6N5BhWyMAeWoWUYVkx': true,
        's5Z4MhGScxcehgMJuyHkDoGRDqWCK2J73JKp38wojm1': true,
        'BoUMwzviWr4ERAFa9aMQpzcfzGpPrFbZAwqFvcPFLqP1': true,
        'FuN9uM9WbCtiWevNbd218RMWGgA1tpgS3n8zGLjhs4AX': true,
        'CATAdrcEnHTMurRhG2CypXsaCahFukfjWUQmAu4VxVNW': true,
        '9WdJcW5i4WYCyVeTqeQbzJEeCBAgcUusB6Z1yF1aigfJ': true,
        '3Nq8qqzCqJnzyCut2Yq4d9VFmvpsKnLjPVEHeApC1aya': true,
        'GWQBi4mv4HXZ5mgihKRgxMLXaYvcyPhaLi1f7XJqE1HM': true,
        '573oxqGrsm7boe4bEcDxe1ytfWNsVf6W1uPcXY1wT4oZ': true,
        'DEatMxcBEv5dhkGLngZhP6B7yk5xj9uSEpp89j4f9BXy': true,
        '4CK8TsMtjcrbFT4uo2AmvWzTGjDUYRo6BGqmzE2Worjs': true,
        '2vsSr7Q8B6cDmiTuSeXLTFwuLzA8rNYdpUvracZ5pkUU': true,
        'FTqpBY3TCQzAqHRnSUuaUWoc1rVSAp8D1196yfSqPRdn': true,
        'GrjWJ1AGuZyCghM16CrHFC7FgM2Bm8CcqoNynhnRFDwp': true,
        'HY1aAtrp7nYqiptqn7vQSoZ78G1TkqJnmJ72zv3GJWhS': true,
        'Wi6Ev1G1QDng5tYj45mqfdkxSSY2Ncf7cK9gso9mHAG': true,
        '6FtZyveEE9ZDvVLoLaaacyAs785i7SC8souwvvtyaC3T': true,
        '4T8XUShaL23QiLZgG1Qv1Uy5KZDuagVkNs1ER8K1WtyT': true,
        'BFNEC8BZe1hWEhaewqtFirHziV45gDJsVXLrE9h6a4H1': true,
        'DmRiZPGqi3SWCb2pcQTbxSzH968Sc51CJ9kLasGHCLVZ': true,
        '5sMjGa6eBTGKNdu6LNFsLMCvQPPxarh5bUoGPWkw7AaZ': true,
        '5biSpEvenUbJFJu7e273qZ7a1YmVtxUrGSN2tUa5wYGd': true,
        '4Aq8S1hgZPVy8eNoYG3zQeUYHNBFqs6JyyAcRVbaAKvw': true,
        '7hYPBmxUCfqsvHudJaUPaJEQ8bWFCqctei9vHzWYf8tj': true,
        '2BgyxhtpiNcYc5vEt9i1tyacyXokCJLkRGqGv3JfcWqB': true,
        '3e8y6VG96ciXBnRANXuniqNXAEhcWe1qepK75NWyEFE2': true,
        'CTmWQ7RWdCPtub9ABnJSjWLfcQ4PnYXhk5QGq5WNXe6F': true,
        '4erXsoZvH7s4NAHkLgnjQCrbzkXNy72srhiFdBPQCsVc': true,
        '9zQJ7uXgZpzH8yKJiybg9KarTEtn2e7FrCNntwynkvjx': true,
        'AzcP1tiLnRU19dPCWjW95jc5wHGLKR8VKWtbiDjkbDBd': true,
        '6z1nPRwkPtShy74FGuf2zLMrN7WLNSZeFs7ZGn6FtTyD': true,
        'E86KEYhFHcRbUAZNMzsq6DYy4HTsw677b58y6ZSRypa3': true,
        'FfDmhbW749zYoHLnMHSXYQPA1tpa6UsR4ZqjuwB9whxn': true,
        '8xYDYV6ix8aUh1QfnL1yMyfkitxWpHzMcrsSCvhQFZh': true,
        'FAjS2YeqocCz1XXXEfYrYKF9cJDSsSuB9oMRdAUZ4bZ1': true,
        '5VroFVcVUdHFxd5AK63uFFtka8scGHmot6TvNQ5cKBA9': true,
        'C1ncsX9UPcAFhJLinKrxbsbNxQ4ZQjroZhjKCt8mmYXM': true,
        'EcDfAQxQ9jASMDaaLu1QWnDUM1Q3MpQqYabZTaSc768Q': true,
        'FUGynGAxwXBhZrKbLpjkiRY7J6eKTgew1Q9PivQw8fB5': true,
        'AGHDsj9TGDfFdCox9WZKnkmKoLJs7iD5ovg4yBi7Hz5n': true,
        '485BXWMQBehfPBuRjvpnHQpTTxGHkB4YGkH4NDshosf2': true,
        'GsmzjVt3wo9HYR8ARxzfUEi7Z6hZzkYco7vKznAuaCVL': true,
        '4ZCU8vCwuviJAWX6rP3CLJxkra3i8vHsHSbFXZdJFx1M': true,
        '2ctN3Xs5rVMozHMfz4CLGm3MUdpZHZSnPw6KWc8Kh4SU': true,
        '3AMCAj7czKKMzZxJ6ZUSPC6Xemgm2vuxhFrddMuYfNBg': true,
        '2zBJyYsgJpC8drtjp3NgcY1yKz9kGhMpEvoDFkMhrVGx': true,
        'BoKnYm6x2dvowLAnD2Zb7s1vDt8WGQRU6VnEorh1sM78': true,
        '5sY2pweKBbYW94qD2RpRRCyX44ypNof8wsTbrDx6XRC7': true,
        '13m8aTaLgteREmJxxzFZvsLLv5oWc236kHe4LAzzMNB5': true,
        'HCGhfgaiMtWjSfnqghoZUcf7keodBDKG9BVUNCSnEUJU': true,
        '6baz2hVAauqnX7yw9aNppixVcEejUbSCQQuHBVUvXSu7': true,
        '78o9Bba4r6XjLaHjubmnLTUmH4H4fXPKEXLELcQ8QH2P': true,
        '9vcuSiMkg3UH8DXsvCxBentACn3GyJtkwY57FhVj54jV': true,
        'DWeopch83Mn8htyWozEvg6AaUDApjDfnVJq9RmkNjLo9': true,
        'AEgg1U4AEDRYQfpvLUngQN8mgpQFFZDUM4cA6KucQUA1': true,
        '7aMNmocPz2KRPLgvpvyFVzgFQZeQyDDPPgZrvEqiKpLM': true,
        'HdUd5mBx3RxH1AsSkF1tKPvztWBpJL2Br8N1MD53CpAm': true,
        '6BEFopBHm5Kog5mXsMzSLHKY8EEKg9pr2DX8Qp11S6MD': true,
        'DyU7k4sZ4KiuKzxUmwbAdjKDe8Tf8fDCoir3pbisSZPv': true,
        '13GpZrRbyscTBfA5RJ1TBgHtPpZkUiPAGTqqGZT7Ec1t': true,
        '7C1tbD5ZoU1xEwRGn5YheetJ9BgYxvubsVLLZ6SJarrE': true,
        'FDZ5v3vUPxJo6ZaQi3rbHD6ScwQNvpbVZSchvV8Rk2NC': true,
        '6ohbzB48AbZanXWrp6H8yQSJaBQvhk6EH48VDvKB7Uqm': true,
        'FdZy9eeFLeTqeFBeaD78QVq7pXEoL1T3wdzyLhKQ5oD3': true,
        'HYSwsaX2CFx4jWs3hVXt55oJSHp6qHYUtTmuRGBnhJqw': true,
        'J8a7jpS53dYxCWe6sxiegawQReJ3xbizgVhWGq2haGzG': true,
        'BifjaMfPKHaThgYfYHXgX4MPWaKbWfEFx1cD6tFuDJHv': true,
        'GGMbTnNfdYFU2rqjqj9GHrweBFZFW21wRSKtMZv3YY4b': true,
        '32CbPJJr5puSmGgBDbBXbae5HqG93QNNEbKn9CMaF9CB': true,
        'GYyepHy9gsthzTwMr7uyDK7dt5hPhXVb9bhzcWyzqhSK': true,
        '47oxuJwHXYvT3eWyJ2EPEBsBWmqMN5Cq695JUMgXrDz6': true,
        'HF2SjuyDwce3Ebik3khNCvDekcBbRNMQNVnSwV3p83pH': true,
        '3pwNmURpq8cwj6WWV8R6MpGhPRZZ9C4fGHcRtRszNXGQ': true,
        '3rDYoHD6DtLUjmoBQq2FqWmRGpfQyTnUVr8WHJW63HMW': true,
        'HikoXwviNiKUD4sRL8b7ViZHB66EK1FjhkGjUuKKCeJa': true,
        'A9HqXTGCPfqcRo3QaYhNZa3GeZ7UZWLbaSBvvvk33Scq': true,
        '4vzp1R3vaUtUPXmnVn5EANYv6UrVMhKAf4okLjDh6hUu': true,
        '6bLgo78aMo2rTkvVd8mRRG5X8tFPURR6mXsnFfQcp67F': true,
        'E2HXviTjfdfGJVrrmqBRGNG3WwxmW26ypfk1y1Xiw5NZ': true,
        'DyaQFLm6PmB1Cq6xLnuhezyGP8XUoWZD7gKi7URNGF3o': true,
        'vJ3sNFaMhqJdRzLtZV9w4EoPHHyWiYZrvJpVmrT1JxP': true,
        'FYCJav2ZBpvqTV5pR5ch1JSjGb4JAM4c7yNyai7YBqAw': true,
        '62pFgsMPfBLPqnWiAZN8waecoaxxqn8T8C1jKCVW3xg3': true,
        '6CfjLiSdpnmCiegeccLPiB7vk13hwfLGXmn9QfXqEtrM': true,
        '84aN24BJMFmEFJWFoicUUaRRaKaRJsc2NHBkfNxw7XpG': true,
        '9vko5esBq3UnuRZaVw2HQRgQCy89Y7KFPCZiTNfqGn2L': true,
        'GxhXfCV1J4iYWUU7XWbjZbViwBfpBjb72Lzi7KNTBrYw': true,
        '7h2mxZtCLtz3GapB4oSbNapQ2P31pSPWHuJxUWStSrUc': true,
        'Ha4Zm3TGigvzrpkKk2MuMEaFPYqned6Ko7x9LaBhgjYU': true,
        '5eF9bQeBKGjaRPW7boVi7ohnfKP6Qhgb8KCwhf1LouGr': true,
        '2Srh4VZo8mWXrE3w5XCUojrbNgVVTLSoXRW1hFYeBSNJ': true,
        '48rzkZf5dtkSXzRGezNdgwWkJti7bQTU1tezeHuTA8ph': true,
        '97c3MestD4ih3G8f3Jb233oqDPhv3WJ1BEWmtLERfLZj': true,
        '3C6tu8NieZFzN7LGaepFjokxN837P8QuL711diW7KLar': true,
        '2NVhsTn8NYJke8PLfCbW72MUNHxcUJXF9YywziAspBGg': true,
        'CeBgP4xdcgFiadmt1mfzeyoMZvD3r73mY3yatKixqk6r': true,
        '62n9vQuTJHDz1qqTercVjAh6ahTcmqtEnCVe9QekktcG': true,
        '4WbdYLnKHF22w8MdwZzmtNsSs8QoLANVmeVh9Nos9ia1': true,
        '5z6fttXPEZzFj3CfMye58JfxdnsXgUuRpmzzvX6QQh7j': true,
        '5wjQ5HZo43hVfyn92WAnGJ51BtTN8UcVg1YiVHLxdD2i': true,
        '7zvCVvhdP9oFiyzGShzt9yaSssPT2gbGcvDJaoSPp46p': true,
        'FPsVctxdc1dWzpCELvCKbVT4YED2yPhvezuqJDQoWx7h': true,
        'A1ysfSN2WbUCoR3iG6XKuKoxuP9ysGxKZ7JeSKSBDhUm': true,
        '9jCwYZ9knZ7aBPSUpCysXpedX1j1XFqs3fPfdvTWr2BW': true,
        'Fu8PB3Cu8GA5HwyAGWkM8XYwpqBWmRX3g2EcaaPb16Lp': true,
        'AnqgQWXELWzNNRWsevSejWyzoYGM4UdithstDZUgzR5d': true,
        '5bs4utMhvYhSDun1vZAmrMNaBV8ou7Cjaiw1gwVnByd1': true,
        'AxHgtp6eW1Sh3ErLEEjZ9HMcykNmDRKDCsiPbDaRGSCy': true,
        'AqHthR32miE5XyzqEVBdWFE87r1A3wJLFzk3DgC4pmib': true,
        'AYpdmi4voeBGeoZdLULpqfWc7h6x5QMvQNiogx1sMZVz': true,
        '2vg91QVtK442iP4yfyvkMXC8QwqZfLgx7JzhMzDF3PbS': true,
        'DehcWQXn6EqDfKHLU4M5ffEhuzG9k92j6AjQc36YpqZK': true,
        '63trfHUHqFeK2msLNHQoc5Vzbu5BGcafaPpj7RF2KCxT': true,
        '55A3oCUYhsMKfNWY1NJpU4ReNHmN8c5Bx1JuZAYoV4Fv': true,
        '8Grp7Txmtzu372qVPbofpuzMXGUoSnyLtB7dVX6yJibF': true,
        '9euVeiDRzJVsLjUJcFZjz1YJmDBq6g6Gaz6BeSCbVTUo': true,
        'HvwQEYm5chi5biyfrWJ3q7aGV28x3DajXLDMuSjP2a3A': true,
        '6pBciPjaFoPDwekC2CefV6ymtojAhRkSBKA5ZxQdG7Se': true,
        '9eudPLrT1Dyj5Lx1MvtWDta4XHNp9RaffPjhKq5Ku3c2': true,
        '5LmCw2VEDvo5wD9AF6uAM8hb7WNTifeEzfvmb1PsvPic': true,
        'EhqvqmXftSjVV57Q45itZrsGGKMZR2ZETTdKZuooe7Hi': true,
        '3kSu6Nd6cCH7pT2qM9jDhiWzufM8xVZ87cfgVmmApqbd': true,
        'FwEkvAJ22NJu1dcbKCzTZbxVNXgYKR99zSo7CsoWRo6D': true,
        'DkSZ49EaGRjY3kBBnXE4TB2dFTCsZKxJvbyNFUDEVv8f': true,
        'ER9ccPdKWu9whjs3vWonX6xCbdKNWDdoLLBMtSubWg5p': true,
        'HQUQ9TJAcPJMT3n4PP2HSQe3LuqZAGTEYugtxJRJC31T': true,
        '8gdDrGsGbL1svFg9MABV8bZBmnPs9KxWXCb23cXU7BHn': true,
        '5busAU1ZB1NwuwWw1Zj6cK7ETdBQm8dE4N3ZW5H1tF6U': true,
        '3XRWPiNK7rjrTB6Atj23mmXQAavc5UnDeBs3Efv9u55u': true,
        'B9Vstp5x9T1y3NYSdvBfEdKXBESRyGKRuC9iMxK3r5M2': true,
        'JDwSEQLxz6Jt2L9kotD4HkxripWhuyRUTAzhzWujf7T1': true,
        'BKFc2QaCytMy9zZmbDtg5qq9F8J4uLaqvMqmppP3K4NT': true,
        'GyHYwNfVrLniwi7g1SYV8YVX7BDxeu1rqCnApMJARhLf': true,
        'Gm27z9kHq47KjcLHLPi94t2UzZaHaktgEEWPZsidzXPn': true,
        'FGnc4mYziqTwDwrEaQkDBQTESzfy8KkktCNysTNSF5vb': true,
        'Hw1VJ652gaoZx9ZeTH9T5cZ7WxTRUhKLoEuzA8PhwmMZ': true,
        '7LvmetLeWkEDp7zQvc7kJ1bqujdQFqm36NHNYtYqSnhd': true,
        'X6QKFU2mEgEow6KCWpcTGBREipAwBtAJJ7NzgSQKt9n': true,
        '7mGYEgVh9QyPkr5BQmZ939BHKk87FWcABwfbXdsWaKHF': true,
        'Cz99r5V3Xi3Z4GRpRDaaXqApzT8RYCH2faQPnbx9BQmB': true,
        '4khg8WXouAk12NyTPBLedP3rzkTnu3spJsV1LmnNuWVQ': true,
        '2HtTEryLabBD19X6DRSKkGRmV62CZmeEA3Nb7AHSsWqs': true,
        'C6Jqc3ZjKSLUsTew7FzyMYSYKei8yW8RNHD2Hd12XC8q': true,
        'E4jdYnTpBE9mWLfDp4SZU56XqzSyDNUMfBhXSVT1FWdM': true,
        'Gv45U1jVcSACkLqnLkvYrdBf5XktFWHPh9ekpYDrjJne': true,
        '8JsHENhHY5FaHhHZwHUsgeiRjDnf8iLDMhzb1XdBd85y': true,
        'Ni4MafxsQVorVxXLaLxszxWp2KitFodE4wPFzngsCjU': true,
        '4QxqUgRz1hegXtuM1aPonvKbeGtqAAbmUYcNpt78qyGC': true,
        '3cvPDuCVgBPobQgpuHE1EBCq5GDSeZFGY6rWpdLNC1FJ': true,
        '8Z9RYNHU2FcSA8qWeK6outoH7ZBNXQV7rGUdvJJ4ifwq': true,
        '37H2Dxo5S4pf4cBN6SUM6V9T6Z1p3CmrtbBmuLjv7AVM': true,
        '7Mz1B7Fmp5AbfqHRJmHRicz2dsApDJqTKfqJ4bFfXCH6': true,
        '5MmwzgsGvEttgVWkrFnjuRr1qPoZJrkSwcwDY4wBs9yB': true,
        'BhhaUfzREZGQz3utqowgggruk7eLn395pfLBm67ecUEw': true,
        '6JaPjqmmgL3A2VG647BqrbgnuyYHSgZmx8y9vZoPpg6x': true,
        'FVMLkzaDciF1vbTpML1cLgVxfAZyFK7mdZnUC68S4Vw6': true,
        '47fpFE5n5upMxTMbsZu6NRozknaMWdHxaFdwchioUmSr': true,
        'CbqH1b9NiZueK6qp9AjDqzfYcCyTLD1No7yhVaBcPDu5': true,
        '2unqLiscAJKxeS9qD1LHH41PP3W4Bj9fxxZbawnM9F1s': true,
        '9q7X6uLqYvjuZh7kxPNua6srLD2ukLN62PJCdVigxEcQ': true,
        'FSPidryJL8HDwRcSUfsEHy1x4cdAv37joaedwoLp8anW': true,
        'AGSyFMdCfmGf4Z2fba7qrNbiPvKEyVhQvi9mpD42uQpQ': true,
        '5YRzujydqTyWpmHtrzFvqBMfZjrWkzSChgnj7nN9Zcps': true,
        '89DuHkKizwNkELM6nkaGiQ3JyRqKahDcg2SJNBXA83Q8': true,
        'Ed2WDk4PqLDcfnjaRd6ZEtnbWyhGizQ6KrRnW6MxM2iE': true,
        'Dt8S3KHeyoYCX2XUFCBVwMAXgvJxoiK6x17LdkXCN788': true,
        'AXhDa7GmsLzMFh2WBGYHX22ZW8MuA6A6no36jNHBjJJT': true,
        'GUBgkybtZCUDwRG7gLqctxaY2Lb3juvzBA2RJnUsW3Jg': true,
        '42hCoaDvRVcAJNPWVCbHS9w1X8BDwtywmXnEru4cGsmE': true,
        'AbPqMTSzzTNyNjSGS8RPPD8Cj6L9M9wzFCyJ9YtZmjyr': true,
        'ErxJP1SmHAJ9tiMFd5nu7eH3psN9aPaZnmJ4nTZRjFAk': true,
        '2VfM2EB7qa858puYVK91pJiMync9KQzfLpRQvy4McUWS': true,
        '3WJtNnoeRqj2Ttq1nuKF1jdpFA2STjGQf1cRhgFqth12': true,
        'AcMu3mCx1ru9GQii1hrEeSbM4huLMY9UTKQfhCncqVPD': true,
        '3YyBTUYuuaA6zbEkFtmzYJC4Psxmg5QptbiFU7sZHURu': true,
        '5kHbnNeFJ56pzHNGcdb5ppxjFSMH82nVmzCkTbjbMaA': true,
        '7Ten6W82SDX3QM5CVnexpTyeeD311Ere3xuq9hZ9eT8L': true,
        'CVVkbaJ3vMk7w1ectfXt9YzQH8QLinAb9jTVnRMG9XvK': true,
        'BYcNz9gSzCbRPxTLJSQBoKRYxxtn4dZ7XneBTTaDaaid': true,
        'JtzHVUvJdmNsC3t92j2fnAUR6R34TJ2pBFCDWS7Z2Rw': true,
        '465s285qLKgofa4hX1XcrqzxwiyiBQmVYtMB4o6YyUPi': true,
        '9mihBABSuZ1ZfDn2AkDCkXGfFVaAr3oJLBeTq9D486Mk': true,
        'AbJLZdstVj3nuykToq2xtTU4u9XzYHE9UWh1q2Yg7GYQ': true,
        'AGyyzw9DU8yNjt6gqBw3mSnpsHzuqXSWmBKdkjAgEZ9u': true,
        '5Vf4ggb2bZZUz45iBCBxkWsepgSK9SjXkF2uqXzofZcr': true,
        '5Neq99BspcYQjwAg44NZbnggLrorEzo1NUbXqqZZUuwd': true,
        '7tnvYnE7Ja825GtoNqsC2iQ9Eb3eSua7UKhEJjh29bMx': true,
        '4WUm24d4ULfnqQHAazFTjHAdPArR7rmUcD3Rdkdi3Z61': true,
        'Ar6rjMeDgytRxKjqBQ3VKs4NHDaUJSYyKBWW8WHRJ499': true,
        'EcsHEbjRQMXv5Rf6jSCDYtSxU1rQapzJVQnFUpFLRG9v': true,
        'EnSZEmnCc6ErhuSCr75FCnbGh4LESRbVFz7sEEEw9dJK': true,
        'Fxai9JjPq4qNmijZUTkNtEnsDsXvkyoh9ZnK4oLddR64': true,
        'FK63tbrMRzfARpMBTeAjfQQTSb3ccdHp93sbhh9ibZbE': true,
        'BuYKbAgSvP6DUJ6w2VFXgHQhMo5LHtRN83eAn5UmMYCP': true,
        '4s7DKJw8Rc1iRU5vVsy2uG5CikqRjHb42VZrvDHnDcL7': true,
        'FMmeBVgZdWv5TPFDokNkYoTHiVGnXrc7rePzowF4gV21': true,
        '22pwkZAbx9ffAkZaogPNgY8JZpTCzn7MacquK2iF7vyQ': true,
        'EaFrAB5TAgNimHUGsWiqAiiPCpJeJqGTvbyqhqBX3dFp': true,
        '7NfXDLTyhg9yc5PhLHQjk3j3Ud7Kh5hbw3qF8hKUTM8E': true,
        '4SwCy3FArQHtHVefACRQhBXkopZUZXBKjV4jAAs4c2aq': true,
        'AC9WjmTAgxu9Mh9QvrXCJeL4JXaATp4sKuspS2KrMvxZ': true,
        'Czpii6Cqu4P4wwvi2d5MnEFaLkgkUKdVLeo1E8ERDo1r': true,
        '2uPCp86F5k8zDSt6SgEgH46icQSHtnCryxPERAAV5bz4': true,
        '6jsLqc3Ya3NksdhLmg7xCRFG8YYWPtRp8zcW1CdvuQ7V': true,
        '6XzuWS325FTm4TkUiFZ37c7ToHvS93EJGkyRP6iMkJNV': true,
        'BjCwHKfPLFfMFrYutQdy1iy4LgdDK1wUhk95VHhheHvL': true,
        'HnFLhQWCnrjAt768gUngH8btj54ik1aoo43qzSGaCwTt': true,
        'EhLXnNFwQMrzTZKEmi33YpEyyVky9dQXPsff9xhP9tXH': true,
        'GV2EaYaJS1jw2edYskV8dPCuKtkdjrhHuyLy82Zk6ws4': true,
        '2Ev74c2iS9zoTZnrAsUwBQegsoAgLrZqWNrfB8ChSvku': true,
        '6hsXuXwhdf4mEjpPnfaQLL5zoTKzGHYVNJozbcxnMS4j': true,
        '7M1BnM1EVrAQVkxfGtNqxarby8TtwAdihK86gZbkH5tA': true,
        'DxMN5ztRKPcWguNwcPZc94q2e9FmVQPf42aTipH6XSqa': true,
        '6fFv9V7eyWDhyPcGH8CFsJPTbdRpt5RmGTK2R7avkJEK': true,
        'CbQiV9JeQK7KoLRaveKMazwKeg3hyVoFFWdJgBLxougx': true,
        'GBQZ3ejkH1SoZxpPzGzYsY5kPxrXe8KLVamKrP1U1rtG': true,
        '5zixV8q8BLLiMshvCZwvTwaQC7yGq8p6v11S5Uti4cL2': true,
        'E99bFgPBgsDBvvxjvnWCAFyztFiRVVsLKSBJCsr7gjNv': true,
        'AtXarf5VZKDKukMEjKUA4kYWHg2L7Gzamy2t2Q6h22zC': true,
        'EnnmrSJaaEEMghn578j3JAyc71TF9TbYTrfh4Mb3rF1R': true,
        '4pNo2jjcjQ1tpd6g95S1cjwg7H6bQjaKjmvzZPwry65h': true,
        'DH1mzzbomkzQFNY2gL6KgGtbcYU86Uym6bhneFwRGaLe': true,
        'C46Vu7iTu4LTvr2iovem4FpWYed1qvN7PstMqiz4Xpfi': true,
        'Ewjkq3jXtk3ke1x4QAhgafrrQsUc9oXUaaYJmruQHLj8': true,
        'CJPKs7caC7Td2yZcVSCUjGbvrJ4wHSEskuWtwAi8t34y': true,
        '35BqN3ZXtK5eL2KRLP6L5Bfxg1u5NXu6ATfzCvKCnJqx': true,
        '6LHL1xUZNusGAJ7iM96Fw5GCRfcB9B3nEJzzThaBLZAn': true,
        '72paSCH6GFhyGGpBE63ZXnZ1FFddPJn3w9eXZjKpRCdQ': true,
        '6HKxqSy8qgCvAQrqTQPYgKAevF9Ubb1w4Peae6Zin9wm': true,
        '61QcAAJAk5SrYDiHmVEK3B3Ldsh1qK2VEx3WwFMJgFsZ': true,
        '5yWafe69DguzeZsBxidJkRAUW9VMfUbxBghCnsYYtCPP': true,
        'D8LanyoQ1VM2MG8GCRcbkfy234L2TddA3b8sqQU6Wxj2': true,
        '8pPC1mcvTLnStijcYEfjiisGVrwK969kpk7sa17CmATS': true,
        'HRJ7vpxGhHJx23mTf6UXYwhbvJ4ectB8tZbnbe2HN8Xq': true,
        'BsYnaiLHNpV42WE26vpnRAK7FRFNmUY9ZQSvjZfRR8sG': true,
        '64jcFBJcQBcqo6pX8jbZHV5nQpNhHRWZwGGeFoVuEa9u': true,
        'EKU8PriRoWgLcorUG2NCwN2EopZnokyYcG6Ru4JCRLaC': true,
        'EYr53sKnVqa3EWy8kqL9LXKQcMWsvB79JERNi6HjnRAy': true,
        '6ixLGBZaFAhRYGfAg9PcubLos4NXmQ6VfCj9g3eyv3cM': true,
        '8bEezEZuDJ1zd4uBYkE3yoP115hdwHg8U784EA8qwVFy': true,
        'GEKhF6JqwEyveryUSESgiZzkTGBojEqAwxBN95KraZEC': true,
        'FA2CEHkTQMjLQxGH57eJjr2zLEGwEfxiFw4oT4weaGZD': true,
        '4XUN5uu8EaQSaKiC9jbEK3DN5peAoTDSnHZGyRWwyniC': true,
        'Dsqkda5EMSAV5LUTd2nrVZ1tmSPomK5YaGnBKLrowpdP': true,
        '23uoakSKiZEBo4wuB77VVVQJhb1wnCdZSiUgg2qAszxX': true,
        '5EjZYFHEnHZKzdNa3kfaacaz6gNNP2NHzWwhj9BCdvu7': true,
        'HCokUSrBD4by8ZGBS2j14Pb9HXqnNg9CZekBBhS1d66r': true,
        '9x9yn3nbRhHnQ2dujYj9RKTmkW3V44JbE2yfEoX34DW7': true,
        'v7vX5fGRe7knYM5pdcmmkvcHumeenMGFzxTFPiNjHJA': true,
        'EiVCiNEh4dgvFgVki3sNs3Nnf3RhxZCv2MhyNuKwUBQr': true,
        '3HED1VXsMLZ8uYEW64gLQGDwiifzzwpvmcxsms84VkqG': true,
        '9UTmVNQzQcoS19KmBwCewyPdveWq9idGcnUkqQXARvZ1': true,
        'DtrMTDGwJ3yiRk1NMb3h7qHJHKCdGBofHdPqDHf8oe9k': true,
        '94vcUufT6yncrXpTmhYxGLKhFkfU51zsqKPvj8eM9Hfa': true,
        'CT5g3BUyjfeazhg1389qVHAVJVhBMGN3yS4E4Q9HXX5c': true,
        'J7rjM1Hsfmjf3ZQL42osppZkBPsGyeVMiu7Dpv8Y6zvr': true,
        'H8jT4VeupzFj41XtEW5G3aXfs3f8mKKqAVEJAGVxVHDu': true,
        'BZiQtB6QHrCdiRxVTb96MRUy958b2Kaocz3zqBBh5jUw': true,
        'adXyvuyyaPrrJwdDFaQszPc5mnTo3vZMepyg8iGakjb': true,
        'CHtRWTy81vaZnH317oNBnUch95pcabb9fBuE5eAoYmMh': true,
        '46nyWnRRgSfiDRneYuyVAuUrsVboRVkW4reGhckgSAmP': true,
        '9fqfosy8hxiBpEQFkB8e4r4C4Vd9US1eoqi36z3zJza4': true,
        '9cyeXsQeNtdYVRTTvqn4WqugmnqosVHfp6UmSoE5w19G': true,
        '2QKAsjqYksT7tEVjvfvpWth9govhJM93gLsvEJCqdv28': true,
        '9xu6d4ykKoReLCVbv9miA559BKqpMw7cKF5WG4DgWfvb': true,
        'CKkPnaKXFDMX24ANuVe8F7K8BHFYgxo7HCLW3pbnjWxg': true,
        'mr2VMNbPmc4sUS79vfjZNkeGtZcFzDEQkWhU8vsb5Ry': true,
        'AiJs77wEsMUzX6Btvctej9yNUMgsTqvxDQj2pCHCfTLj': true,
        '4a93WsziybUpPVRjQymJptLaNF1LwTavum1GddmUrYMw': true,
        'E7wsgzqUeVkgQZXyoqX27k83XNUMt4B7pv2jhZ7iB6NQ': true,
        'D2uA26xhuyWWeJwzisASQqjRTQ6FCxuiWHwfHUwPYcvm': true,
        '3aKgTSdTVmFw2Xa4Aiv5PXpjNDh88kG78renLj5ApTo1': true,
        'CUeW8YNWP49GKzvdb3EofRtGhW3b6f1izFACNEsh5dda': true,
        '5gtUovKAJQL1SEqgperoTbRCX64wdPMmEMdoNNaN5JV1': true,
        'GrZ3Gbjww5r4S43KNkn95BU9TJU67iHZVDf8XCXYf2Ks': true,
        'Cwa9dyFY9a72MMhBqEX7q6hKc4DWf4WioL5ySorW9rqW': true,
        'CwgMLRSo4fQVLS6bjrBDtYLaoiRBoxkBEeRj3j95nQRu': true,
        'CrEHZ9SThWoJGApVNVjsXf5mwrbEcKj7q275tpcTMuMH': true,
        '3ixSXXWzP8FXMf85d2H8BHUzPrS2JTKz8rkSFJiDjzs4': true,
        '95Xep28vg658Y8V6UQ2F74MaQJaMvb29qEyutobDs5Zk': true,
        'Cn9qWcjfjK4rqEKqH86WERhn6k6RYbpgAUWR3vsTJzCK': true,
        'EmZRbBR65cdwzwoqvR3oSNMUWiXZehZmrbfwqVkRkHCp': true,
        'H8SEWQ7e2cmFgXMfi59Brb6LfApjE6R7mhVYvHsrLuB1': true,
        'DfUciVQwCzNo68SXp3ZhYNp6fgzpkmc6gMA2sWXcDCUX': true,
        '9yCzHtTBCakcpho6sX3mi6mDcSU2KaKKGG348PDnB1Fh': true,
        'F2ZmwsbVRmQbkhcdAT9x6E3EFYCTZBYnUgnKtLgrRnEs': true,
        '5y8UvC8tWjV2FZpBm4qNEL5FpsEjJsg5fYDxz82goEgx': true,
        'BnpMDvEscYcKee6Lmu6pG56aqbJpMZaNoEipCx3i7QJY': true,
        'Hg2MbjFaVreaJxPSdstD5Qm5wEEE8zcxNNd4GUCZ8b6H': true,
        '4DTmdcJRTyhqopiuHgwUPQfN3iA158x9zBJPnE3DFuVg': true,
        '38goChS1wGo34UuCH7VMSDvNxSSbJCBdDDLV4HA3kGFi': true,
        '4Z7JaE6bx2jfDigd6jnXSBVotMsubRgoJfoR4fDDpkBZ': true,
        'FjJtiw3Hw1X2wp7RQyRWKTpwki9VfPvSrg6jYBeu8ueA': true,
        'HX8D9PikakKozpXWc8FTfiVL5oeYUmtvLZQmRAFH3DLv': true,
        'D9Bbw4iVFbyaaW9igofHfB2S7hJ6qNJofXtpt3EQ9ABr': true,
        '9dWkCxRyKaDnauTxRnH9WHbUf7r46iA6ZYSzF9ExPYNG': true,
        'tXSoNVCnnu3S4GypNR5bDp5Ppj39rWPbR5ga3XdBXHo': true,
        'Fr8rpJooxyKjfDqYBDQDPRHGgXFt65grBW8zapsJnmb9': true,
        'CjSRWwBFztpTXyYWnvC32Z5SWQFcP61KJaPesKvkTiuY': true,
        '6R88szEDmhZNNVp9qm2wX2aiN6H1EVpXGTGntDGx64UB': true,
        '57W4V6zvxex9pQ3ynPWDD6Yi2xWA9irG64YMF1UE8EmN': true,
        '7uimz4Cig1r3f9FTZUqhFBWMUAAfhcDXJr98BHA7Rcz4': true,
        'BtcjYdeoA4yJ68MpJ2hVDaMewTY1dSDhgKqW4fDP4zfG': true,
        '4jRJUeG5iY9UuTK9LdXQV581CjssmqJ6qNM1DYuXURrF': true,
        'GFbzfizLGfVTJk1mo98yuey9jHoArTi2sYCwfnaysQ3B': true,
        'EsMjxKPHm6tBX2r2RjVH2nW1gcvkxC2ixdFrBmuXGZxt': true,
        '4hkZ7LkrNoH9xQyxPhPp86kVnUav2DsoyxJKRjBAF97F': true,
        'DHWayoBwdZbzC9Xnw2yCGk1ABfkqUXQm5DcC1B2ecCMa': true,
        'FXGk9ZNPwANJngdTJKPG9WSSv1Wvs6o1gjTAGLrcrdfC': true,
        '5wYKjC4YeH4dTChAtNASYABVoSss9jVN4vJ3b782YUE6': true,
        'CpcA7YYudCUrCWhPgfV5jD3XhvRtA9LYLJwvjSernxA4': true,
        '8tEK3pSrMtz4ZWVEeb7K3zoiMqufoXrBqJZDNapJkBUx': true,
        'Ck6TDimk52Q5z2oHhbnTjxVdFiLsChvsLERF5DqXKCkj': true,
        'Cj2HiAk1G8axKBHSQMDYSKtf9dprTqTUmByNKZ5ZUHpj': true,
        '81pNuMBsyj8BZdbeDVEufDycd3ghQ2Rc9WtYsZBU51eQ': true,
        '51YMSf6ToT3MyuHrSNc8fnTDj7tLqcHd9Nti8u6JLpE9': true,
        '6LPBUXEcKH52gmsuT1fbDnUCmsQCPh8A52YfXznkeKvA': true,
        'FQu1dViU3wDMu1yycDbwXx5HQRLzhj1oVt1M4x7f1tW9': true,
        '5GWSLQG26JznZ2aD1hx1yimotsbuxHevZtmhzdHTWpzh': true,
        '3R2FedzPPD7cWRhp6Q97JuCoXmYV3GJfmkxGsEfYsi1S': true,
        '573Z4NGLsDGLcQ9atPjNdiPv4oqrQaHL4Jf69qaxrkAf': true,
        'D236TAaWmejVzXqyTBdp69qARb8Q3vJB5fjpkcEAQp7z': true,
        '2TfLN7Nkg9YuHrV5Hzm4wGZdpMAPDtPAU7TQkNytypjm': true,
        'niwcpzpyw5WevTX9iDSceGcJKe42cAmDCXWeQpXpch6': true,
        'Ab88RbdrGsV5UVfN87dph9TZnKKJk59JfUQooyquv7MQ': true,
        'HUp1MjV26DWLS7CSi8t56wXbUSkKYELfeWCiNsHLMaPe': true,
        'CStgP5afbGEURX8tsTr5HBi8AUbru49U8H3Zf4c2W7F3': true,
        '8FCTYviidQmAEk8RkQhYvH9tzaW6aaTPdKXtUjSmxbz8': true,
        'EiVvHzUEdAUgnS2A4kYrSn4jQ3GEwV9buPxprx5vgkA8': true,
        'GfN6d5oFwG2wiozScMJgVukSSggPomUKqAiALr5FAhEj': true,
        'EmyNNAvxYK9eid3oxW3m3TUY6EmNrGJQ5EFnvuFt592Y': true,
        '9VA9ZHa8epp3g8ZXDwq8wH78kKPgK2px8YYL2MtbxuNT': true,
        'BVkP6HS19mfXa2yxaYW5uxLHHwSuhZLKf9UrKrPKTCpa': true,
        'FN2VfMy6dimSiwLCKYrk8MpXCYzRgdnYi42omHCpuEfq': true,
        'GscUSrJKwES15ejV8nbSS1HUJYaTagPisGLAbN9zTvSM': true,
        'EcefwDDqyzBKdgfTTuh3dgATcHZ17qcNSSQonGS3ydm1': true,
        '8MkeRzxs25x2zKN11iRF9bugAKEjGNvnPVZVnCfFg7N2': true,
        'tGjW28ZaUN12Awn5j1tsk2fgE3nKLYJWySiWbCdBaLj': true,
        'CC6ZL884C3NiXVxgEsGm78nE8dtKCVBBAjLtHyUDUSuk': true,
        'GUXQ5eC2oJupgbSBPF5ZULqRxcpdj8BbezW6G8QLUuwt': true,
        'G5CvDG7pakV4v3c6H2BU8tWoncvApLwo9qvHWriK5PV5': true,
        'CXS6DvtGCNSJZyQH2UyshKZwLjQ1ppvTA11WQdcJkPSN': true,
        'DZjfv1m3iRyAGuAvQL3Y1WgmZ364DzLuXLafppXYYjTR': true,
        '2owexEJMZR7GvjP6B4gAvNhawMsh21PchBPdu1siJEJz': true,
        'GiPB4PyRZBzbDHFtRFs6v3vbZ9TnGsevVaYtee6qaAWM': true,
        '4r819N5uDENUEcJPkZueuEG7ePVwtoEamDeyUXwDksFz': true,
        '6ZSagm6ycECV2TKBsXPYvnbM9dtScNuAoKR1ZeF31CQu': true,
        '6v8JVyHZz78iGrKeu8HJJtZrtu8rN8jknXLBEWHsnu4X': true,
        '5n89YWC3AqwnzGSj9e5f3LeXabkBnbLZUac8HSqyVqqW': true,
        'HBmPSmYD96unr7oKcintRRtX2EFRhxoZo63nc6UGEzsZ': true,
        'GDGKGAwjPdqXwEX1Q41GthEZfM1Mna9wNx5ivaZng614': true,
        'CGwQZJNnMLGvSPuesn7sbv3HENAEhRdg5JTkaKrpFzoA': true,
        '8gg3GaW6RvF3v6ev5d8JThuzHrzgydKXBDMTtS2PymLY': true,
        '7hfDPtNPddGP91fdoq9Hj8RyzoZKNMS5xJXtvvr92hbN': true,
        '8oRD5xYcECaD6FwT2kDGbntAhWHrJKXpQf6gr6bqBEru': true,
        'FEgm3nxkiitPsXkNwYRSw9xiVgRfjJxC31tj9dqWFPJn': true,
        '93T27cCutC7Gi6x3Xndd3ARNvj5kczqmXopYoNyjmzir': true,
        'HMTEigKA9qoE1GL7JRPVY6rjd9e2DCzUnqxdR7zCtsRf': true,
        'Bsm7ddhQn35Bni6GveycV52FPWi1CpvHLj9byNLCmmbQ': true,
        'FNU1KYrdvdc7xv8a5AFJpQY3WsU616vnaW2T43pAGHfJ': true,
        'W8XKdrTjPCjs2Kiy3qoLqfdTSnxjNVoCDqBQVhUvYMX': true,
        'Eec1wq18NUREnp446GWvMcuueHgiXny3uUukckYvaSpu': true,
        'Jvpp62gkYh8uXTAVLeobCfzrtJmaDZAaz2fttwbyKHv': true,
        'BVuNDn5Cq5u6VYW6VYDsDVhzENQoet5BhxaDtkLnnqCk': true,
        '7rtCBrr1HLEHavgi2PWt6dEm1m5cr4SFYh7JjppMi2Bh': true,
        '4LPRroUqg4EEaTzivH7emeQx8H2XvaVFHkTWYz3aQGgd': true,
        '692Ns2UHCvBcJ5SUrUfpkUzpQVogD2ofwD8qsHTaqTiB': true,
        'A8Gkh8ybACN1idRLiGsEfyn3rSEkUGTFgAiP9Piw4MLK': true,
        '9Nhfm1i9ApGWELQQhads4VwWgKvgsJh1wnvyZLRkMvaq': true,
        '3TePUTiwf9td9pd5mQgxFngEPaXXPzZNTyURm12x23kD': true,
        '65vdMoNCTY3BJFUoaxVCEcsegcciu4rrFaYgGV6CYB1e': true,
        '9Js3uTWDWpcp541fuf4rhg2yjDgA1MuyXmb2i7eSvpxN': true,
        'ACZ7Xz8gzUknAMD2gLQRxmxfDK7QHSqm7ypeZGUedQhm': true,
        'mrsgVjJJJUYB5KBYdGskDPLCdF9iPNHC1YRZv6AmJ5c': true,
        '5GYKcCciiBDhm1mf1nVs9x8oAUer3uDmTYf4wsJ7514A': true,
        '6CRVPo9CiygGEybMBwyMUMd59nyAiecubeUAGd1WzTog': true,
        'CXCdL4Wv9Hha3JgSBQgGyqjmL22YnNKzsHbFVGdpwrSR': true,
        'Bp2aaVYGsB5Cw4a7mdmZnf8a37hnj8ETEw3mA4nvew6X': true,
        '2oARvYPF1bXeuErFDv639RGQfDzocsmrjMLRyMwFUH6r': true,
        'G35kkNR7n4UdR3EFr3uXeydQUVygR1jUTFPhM3n1jyd6': true,
        '2SWaPDm46HbKwrhoq8qmwE5ahiPXjgPS3aoW6mRU8xpb': true,
        '8E8bUSLXAe4CTNAQ5iPc7aHjG3ifmgHNLLK5W4uf2FN2': true,
        '7jPKiFrWGZnsJLPxW8PGpBA9NWc7fX2tdaoZkFEM2Utu': true,
        '3KBu8LnWCQTAuwEj6USEzPMMo4M6yWLDycC7adYhPCfF': true,
        '6tQgWQ6ctWZqgSy3CvRW9gT4e6222TKY18UVm2nvYWjo': true,
        'DvB2W63YncmQW3EbWKbpWDgAmFGdcNg9Ptep5azZzJbw': true,
        '6VJoCoseQXMFxaUKCaByd5m7nDq4ifFqcKkEPFfc9TZN': true,
        '8vUR9VK2YshnVdxW6CzmcH1jTLpGpnmrqkF5f25YaCwh': true,
        'C7meERAvRNRz4knRwUnYW9rFzeHJq71RinW9kTfzMkJ5': true,
        '5226SEiJQg3RQop7Vv8CHcPgPvk7BsaESS16SeEYa7mA': true,
        '8NsecCLBYqniQAcvYwUhJgpZbTqEBgiwKqc59Wds3oAH': true,
        'EC5HHFiG7CfbW4zBsA5HSNZp6HtnV6duq7mACW7hxWdJ': true,
        'Ga36u41KcNT3vkQJdPE2mH99qWewwvXprzmgJqoUZa4e': true,
        '2zmqtjvFL1RNwwpqW3qmorjtRQq82WpEvREyiMixaJk4': true,
        'BxfxUL99MMMXKp5Vph2pbVw7RNMjkeg1wntVFRGn3qA5': true,
        '6ZBnmX75EFigH8Kyj1owY7bAGSY7zHGWufdcxahmEpvf': true,
        '6p5Q3bBZrsJ1Asjr91WrHhD7UBuxoj54mwH24eTSVJWe': true,
        '2zu2XsF9MNUyJxMe3a39CjdACNjGNfoAZeS7sBREd4mk': true,
        'H3kFote2tRBotuTGSsBDZy6EUshRqnQF3KDB8qpzfeBM': true,
        'CzmwFR85KyVnw8eTHGMS3rviJQLrkF5oiEDw5P6iXLW': true,
        'Gg4p4rpvTfMQPLtWZ9fqn9CETAHPMMC4wnRTz4u57reV': true,
        'F9dCURLSXWVDRzyTNnDjWafJ8SoeTWCjTjy8Hfd3vmMG': true,
        'AuVuvYqZkxv1PPbdRoysgywCGyB13CVJVvMJpGtywahh': true,
        '4ht9MeRhBtMvz7gUei8tszn765VYjMJ37P5GAWVkAG1r': true,
        '42F7LtLf51iaAoq9NvWxtDKkiqwErnZFcDwsuxKMDnm8': true,
        'AyierzAgefxBRhvJvmwmp6a9gkruhkuxsKFSKkKx3zdJ': true,
        'DgnbvC9Q4KgiuPVXx4nxQuRV5V6imJ2342ag6pTEHyew': true,
        '2kaYD6VHnz2ht6fCS8LTe9TaCwz7w6PoLJVqpbH4Dn1Y': true,
        '4uZUMwnpWbiANSHUzLvjmyZG6P7vZSzYkiH8C1mzusdX': true,
        '5r2qDE127pxLmsNBh3wq4ftDpruAW1TGqTJx4T2f3rJH': true,
        '5W4TM4zdETdtWLzAX4RJBrGijdE1Xb3AfMVVGBaXN9Kq': true,
        'DgQ1oeeM4XakNbeTyxJpqfHYCqWyZ3k5VWsQKofrtZiT': true,
        '99G12NAQhjVArRyfdSSmScprt1JLLmgJd9nVbzEvyCVd': true,
        'DsebXH3RAcc4RY4pV8jTHZyEnC14pHnBTdS7uFtRozys': true,
        'C2Z4zGTKD7eQW9PD6HvPeHNRKaMBcwvBhjUPcJACjdTB': true,
        'GH3v9XyJkJLeyzXQXbaMmcGYcaYL1z4ZMvxXnRT63qB6': true,
        '5vDmFbzwSPQzQ8BR9MNQXNqw5NbXvb3dK7Xpnia6NsrB': true,
        '2Zk5Ukwbk4rMXLAV8AjRhv4qQhG4vFDXcEQ39AcqBLZR': true,
        'GCym9QNGcpnaqHZXLDmJYbyoSvYt4mZUtYHhSxdnSpWW': true,
        '89RuXjqK28HyCzud46qY47u5SXwHindoZzbmuJu29Da8': true,
        '8k8zMtg3NAeDu4gK5MDZMVBQLz3xCjTTTnpmsJM8N2xT': true,
        '5CjcHAMpYfpGYHtvMB62xFwo7yUHB2ofGtrStnGmnc4p': true,
        '2uP8XqEXGFrZHoJ3gDCE74R5vV1exkTQUv1tdFAdtYVY': true,
        '5STGFfMW33wZMdKwM6t6FbfEPETMpjMZLZJ6QwHokZuX': true,
        '5YzayMzW1eQxu5wr8rc8iYCSrzzJbjx6iApcM5q4UfdS': true,
        '7qEu7E1bMSAHGGZRSRSZJqHkeL6Yt36XpSf6R5EGKgJQ': true,
        'kiYPYPxFpq2yanKWn66K7uDYEWXNskqqJJh6NnahZKr': true,
        'C3nNgJymNVDSQTyNivEhegouMdvWQBLwsiKHL6gRtef8': true,
        '5sBqqLgb5LHvRK34aJSdxdybkuNZrx3FBq9A2tMNFHeL': true,
        'HfzLDishyZRPhMWr7nwMKj7BeVLpHdA9qQJMiH6npb13': true,
        '3Bj9ZWvdE9QKhqyx5e3DCx1rqE8rU5MJ3SjRCDo7BjZa': true,
        'E5RBb2sogaMYJKTNctR8RUfMRM1EtR2WWh9Xtccz2XZk': true,
        'DmC3aQpSjosn1RT41b6GgA8uMJ6aVRxL9RTt4uZanMxF': true,
        '9rTA6YuWY7W4RvhrQnc9XHWjrK1ob73oba6hdBL4ngtV': true,
        'JC3cGVUxoCxKSGuDZY9XffFRxXqha4WyeFMo2C8e8eQg': true,
        'EeqNhPRUeLnHZ7MNurwu1JWSb81dQxMDb6XWVjkHePih': true,
        '7kagpF85sWgSXFqknKRm3NVUxM8LYs2u6e483EB8QwvZ': true,
        '4mVAdrMXJgcHBWgpCp65zAYvWp8h3qFWKWwKgXCcQREB': true,
        '8gJpDoSH1kEws78mWxu6Bzy4j2TN1kUixe3wxmgck4Pm': true,
        'C7U9ncaxePCk7CF4Lu1RcgDvbMWuyUoDDvSG1MuG5txu': true,
        '7wPoVUUbFK8rdhbX65ntqamaEAGEBJbx8U26Pce2SDbk': true,
        'DozDByYJM82UMHD1PVTLfxVjThmrr9WzrkD7cxaU38w8': true,
        'DMfXeCatm8pRuCkCnxcUDCq31X7tRK44DxHkfJpRV7Cg': true,
        'G77Ski45rfJwAHZzrUmxP13ozziw2tah6MXNa8p9Ah8G': true,
        '3QBRSLq1hib8iWwNwQRYC5Jj5dAccqsE4N8dPtZAwd47': true,
        'DCbMqMiNmQV6ijGkVQ89RWfmnFnECKESyoffsAztsDNm': true,
        'APvuvzF1yGitej3a5fyMVqpbdK3ykh2P7wCReF5hgYiY': true,
        '2wfonUK6veFeWMXZ8onpFe14mb9NbrLfeFDeVBTFrNu4': true,
        '2YTfpaSLauSwCcxM3e7zNja77ZGEYoUxHHmZseeZXmD3': true,
        'BvhuuQawCi1oGrM2yYeVFX2Yp2uwZK1tKkgchN7YTFB6': true,
        'DUHYmGSZ9VH2v1nuwCiQBr4Z7Z6MiVztBsvDsRzDHRfZ': true,
        'EKWUszdCgV9pZVsYLGxDooNAeCRho9FurKBhDD8ejkzi': true,
        'HMFPrz82oNXJ5uVzpFKKJn2iLzuVQnKGahyU5tWKuUv8': true,
        '7Pu2WvFenyknhfCCbMQh26DidHNxqmWZ2fMFWjXDQPLG': true,
        'DPyMyays7yq2v67cznr49sNK8NYdojYCeBiJftxKhgFG': true,
        'ABWBJNdF3PXq24siaMZ4u4CNcsaL1W5K2g3seDBfasba': true,
        '2qDGdcrCawEWtHg8QHYeV8oUTVYXkFYDG7v9kE1vJV3S': true,
        'stFHqcpSqj5JFuQfBYeJnwfzm8iRh9Q2hQUk144Wy6W': true,
        '4thmr5vz99K42jmKBbhA5vKdZ65efUfxaJ7tzqMGbZo3': true,
        'AJK6ziRVaJCB3tKCLv7ZRRodeK9NgRt7A57G3zaiafoZ': true,
        '5xc4YEo9QTTsf7So1qQ7wDqau2PcUGCtV2Y5gDHtehLx': true,
        'HFXLLT1zSChKZmG8KvBELK6BKqHgZLmprKEG56VkRUav': true,
        '4tBn9FaPfksbP5T6TeiNyLrAtj3ScUy7tqA6NGZ3kcTg': true,
        'DiYNxuUYfawKdiNR5f9Hy12xd73SPQa8jbWtP8vh1mmy': true,
        'HK3bsttXTmFAvPBHu5cFYf73s6boj5k6q68kmnR4bqUB': true,
        'AdVW3irAbm1hEjGCPExEaJmrEhnKx5ciWsCN1WZkV8EB': true,
        '7gV2GxvNqkTntrUqz3XBnrkeMs7kPAxrGtZBNfSJrUSS': true,
        'EMW6RzFWwccfwGSrAPKyaXHTwhrnDqYLFNWqc3Pey4Bd': true,
        'DptJQZYXvGhvYpdLKiKiA9F7WsAzyD1XnQGbrmqrvA2N': true,
        '3uqBFiQm9e5bUvGydzg2CiZJWiruLs4Uzr4oVpaMJED4': true,
        'APjFsNALn2FhVi8DD8gimZigWBJpNUF7BkZDhMgojiJ2': true,
        '75kgJ5iHhKVhWU6qQiRXvZ9z1jrGmohoMLxuuyozAjKw': true,
        'BJPEP7DqZKL1fYFkzdx46SkMWtehgouPELTwHMZmf51D': true,
        'FbTDkHByzdmMWipBnkrDVDS5erM5rFoTiMtu4jYCuz2V': true,
        'Gr1tp62qwMUKnWghLDcD4fSugdfXLBLvd2ojE4vyDRe3': true,
        '3KqmqWArdhKCxpVfcn3UY3PcpFpxTCCpkaX7itgCGZaD': true,
        '4bbbsmuhR3e9B3PVeTuhW2fu32M6EZySXwkmj3uxFXLa': true,
        '78RqXZboFj8Xu1i4LE6HJLpN8FaFfpBeKh8U4qmPzTiD': true,
        'AvLSypW4pDSJYjapCd2W49Gi8XekH4YU2t9UNJM1N7dy': true,
        'J2HvqLuEb52RJLpo8cFmFykmQYxc42VZuc7j7b8QAk81': true,
        '64XMFtyPjCxco2yjg9sBnThFZMtT3ewQT8oCWWtnqQPE': true,
        '8cifrn7cAwKprnWzTYjeFApK1uUVrsyEYE9e9jZ6Y3Zy': true,
        '68BaRaybeqDssHGKCMeqVVSArBVoeR4B7NADXJTyoHqR': true,
        'FTBt7Z6LFar69vj11zWh1pdY6xPiwxP1oBbeYodnCBLD': true,
        '7UUjgHsNcieViNE4YngYHHQDJWQbQ7rRqNRXGDcMqZ1d': true,
        '2WVLG1PSCsFQst5Nh5uJ6NH8711g56Pcz9FYsQ3qUkyZ': true,
        'H4rLGs3VKk9FdQEMubNRecREx8XgSL2Hbjrwkgk3hUJD': true,
        '6sdcFfmRbAMtGdqFC5Jh9ByQxeE4iHFJ34DfnBmHQRvP': true,
        '3ve3MZmzWHXHfapPa5vPPewn7ySLCywZsxFYcYNSWGwN': true,
        '4JyfRibtGtdc61WQo7bmYbaxZqqS1S6ndfbyWvYDtoMa': true,
        'J9Lazmf9R6isigxG4hbeCVK1GZ6JKzNfcHHjUTCvuutg': true,
        'EjwLd7GPH7knqYcJGUuNoSSaHNaccd7Pw36xHqH8UMSc': true,
        'B4SR9oMMAVyATeRdkcjMyhzgCSxANxt9SkwZBLpkdRur': true,
        'CiwUt6tGxyR91FbCP2dc3iskB6moEyb6So1D7XfKfwS4': true,
        '4QpnCFXrBw5odRy1xafTt9dGmVCJuckLaCsX3Udecw57': true,
        'gxEV1LgGq4fiP88gTqEaQRdBMMXXh6rgiqHzyJvW3jh': true,
        '9xxs1aQdy6z4Gcoq4KN4coHydW58yHqVkPNVR3gxWfDe': true,
        '3czYXkMcMnSUeAfbg5wPGrjNnZeZhc87Leb5ZmqU8N4X': true,
        '4CKjECPnsLcqTFUyodxrrWhaGxV8aWkt5sfjBswMPKxj': true,
        'GXUsHDUo19Ue3dcM9jWo8qkumcqkKysqL941HP5w1n5M': true,
        '3pUHXK3Bdi6day9uWDFXgU6bGLuCNbd7dWz7TiLt8CNu': true,
        'DJv6qAJ89zKbtwQkBKmnU9ddNPySLg4Keq2x1ZpUfDwY': true,
        'F5RKmHp1EcUKPEjcxKifF6qJTSERs141H9eauSUX5Wx7': true,
        'BR8pMmG5NfnBiN1yjwGME7gRzuSxC1Sjvz9mzN7zCYj': true,
        '9fi726oedBLKQKuzCpaJ5qmuWLbF1Ua4s1vrqUa9FX7f': true,
        '8ooTkQvowewVAV2svxaDwC6CSbnETevXCEhUF5YJwSGJ': true,
        'AWasFwhffa4u94MMp7NFREZjmjRyprNyyah6KxkSCza': true,
        'DRPakJegR5qBVg7v89rafLtJQdo9yoaigEf2qWjjcigE': true,
        '3x65E2JV2fpx8ZchhQrc5g8Wx7VAU1k9aEvKME6qywFZ': true,
        '3QSYZZpqntk9Y4FQZsFicDZF8VpYtrtD8bdgaPU3fmDt': true,
        '4sUpJ9KGgsDLQctyQqzhVNYwExBHEJcg7kDiEU3R6Ccx': true,
        '3MyKzfwYggmmSv5vgaewjfLK6FEpqhAHdjfwLT3pf6Qq': true,
        'CYD21L6LwPWbWEJMYeLZh6Yo2UarBYwLHUYE8sZ4od56': true,
        'FCWsbb2jrnQ7DGwesesVeoFp2VpPsfAFp4evKVqugWs9': true,
        'Atdr8bYDUCowSg142jAPmHcRvQFdLyugu5U6qARuwR9K': true,
        'ByRaHNZGVopoohPcpnqVshr5cTjELsR5oFj6vX5CXhnJ': true,
        '68Aaahb1xFkS5y7Eziy19kboxT1qm5FRC8UXbu2AWkew': true,
        '7X872NetoG5oU7CvDci24c4mGHAgu6GH5uroavAfGnXW': true,
        '6V5k5kouttT4WLfDbXK3ESSu3Nw5nBU7HEnkHt2c535J': true,
        'CSwbsmDTEHUQ6XRffCyLx36R8T3yTsC7qLfgue7seemP': true,
        '7M1iM1vg8vjRKESwn5Yofp5opvcxK3K1CfkVk3F44gna': true,
        'C5pk3j1LiquSDdm2mBLXn8bMLkrgARpioYjsAX6YHUME': true,
        '9Dk6WkkTP5nSmDLgAHEn6kBVZkH2YmDpKBKEnCSjuLrY': true,
        '2BHKwvUApbUjD5RQGC6uAemoDEKpgpqWSXCt69C3m65z': true,
        'FRiN2oTWDu97otbGhkkS5UvSaPZFpaZrtK8z36iFEHiA': true,
        'FTBe5ySyN4GhnYtrygDvW6Ej3K85Y8YHNKdPRsonMojr': true,
        'FqrcFq85Z681FLj9NmPzFnJrs1eP4znN3FPNMwuMBAGW': true,
        'BoaW4E5QfPKWw22uoxowbP1VXf3JPHva3k5DffXRUash': true,
        '6Kcpeq1ttSQHiiynLCo5eSkSQFMoiDHu4zrKZZRSBPxZ': true,
        'D4BamoiC4zdsN1YFWsUbVideRLq5gAs45AnzaYwXtuLQ': true,
        'DqpLF24EpkaAanCM4qdGnaoVxDZFiTpRdNXKVq7h3dv7': true,
        '97kjKc3efdph4KWXxTiiQJxq5rXFpwsvh5Vn8kZKkPSC': true,
        'DJdMpW1LkfhKRo5V2rsguMtYrepN44yaX4Ssk6frkVvL': true,
        'B13G8LvcU3aht8QSkHRf9WXPVXSARNYqYB1Z2Ee6CdAN': true,
        'EPW4tY1XpuMfjTwMyRBmef9r2EeMYek9TaNrP8SCXc6y': true,
        'D359ZUmaDcBWhX9xbajQwGezJjDvqZtxCF86WLBQRtpz': true,
        '2ieuiFLTYnFn1vaab1S766JpDH9UsgvNeHHPA6yqjc8Y': true,
        'HJM7w1ZWCu6A2NQXVTQ7cSjzqkt818GUkijwrMFciLbh': true,
        '5HU4MwX4mwnQ8HfM5MxBiqFYv6Hfhr7LhtUw7dGKrTiR': true,
        '28udPYJ5MxGT84Hqo6UEdP4JJzRehSFXgW4oMNxYFF7b': true,
        '4VSK8KZd9rGW5g6bsm4a2K42bju3VReBrE49FB7V9Bmy': true,
        '8tePJbvVoYtH5bKfGPjG4ueWXTggjErEt6dcNJksC64R': true,
        'ETJK9Segd6fj81ucJDc1pPzERWZ8mZSAisS8dxyahiUM': true,
        '4egbszKLcgFYRB6YeMqKn2FQoVshDeGLuoL8EtTQV5zw': true,
        '3oLaUr9EPjmtidRGUKTuwGGa2524p4toStNxTpYYrwwq': true,
        '8ZCP38GBF3vgtBg77kB8oXyPShDr88itv5zG27GyHBNa': true,
        '4tK2A1JpxKqoCioz24QvUASEABhzrm7PgRwPLDSb5PhQ': true,
        'GnzkCTbQpmo1gUjze4gCQPjKQCZ5M8HCWGkt33Pib8qi': true,
        'GzF26UnXjRL5TRXoPBbybzoZ9aDBvftbypeaDvtubg2c': true,
        'HrojjRmaiub5QfNctSj3LVLcWXhUuw3WNn9iwjZoyi5i': true,
        'G9Mi87s1cboLUmnAEZi4K4iDYs687TVcgGQg4cVQf1AD': true,
        'HxsaebrLuux8mGx1AUL5KwQZA1nsLGEcTTYyE3mfvUUb': true,
        'EudhFubL6b27xzUJdVNczMSwynrHf4yeg6LWLQ84FwA6': true,
        '94oZTUSEoBE5DwxtGr7sKbN4FN5A7Df9atLnrmmtPmaH': true,
        'kufeFcGF5Q5AyS3XRPCELqqf8awF1Eb9kTK1bfSVjdd': true,
        '8cLZLJr9UPugUS5PBPVGW5oF848zUuFQa3QVy3bMYfH5': true,
        '3dAEFmuP8V3sxy8t14pmqU6AxHMDyGXcTsjohvrvUXyk': true,
        'D7fWaSjgn9hhJo2HXxmtiV1GrT976gAJpxS6QzsjRNXn': true,
        'B1ZkCvU9oa9ys2jhNiQNVeMmroGp6xrYbAbt9aAiPum8': true,
        'AzfQ7QQRbsuxV8mEz7nBVovV1PjksXX2eQdA9p1pTtMT': true,
        '21cZWEFLbgZQUwbUTRyEBdcPDUXmua61Z3raArafvSDo': true,
        'ASVkJgZ44ZNVKhd3YR5eXQxfyWHFBQXMKvGJyZ2mF3z4': true,
        '45ii6cgEkE4bive5BeKnko2sohRbnrV1ZQYb1nWF7Q8a': true,
        '5cbj47r6zUUSVEU9u9XbNMaTgzVf7gvQ7Wdayfp4LH4w': true,
        '8RJY6cW5N8gqwX12YbrJcT8GKDUGFQWnjd3BkWPs1s5q': true,
        'J1xc2FXtVvJHazC9ebYGB7585z8eutSEdiwyjY6AwAhL': true,
        '79zXJ9eWukomW8z3wGf2vrGSvvPXQyWmMvqEgvbAN7ox': true,
        '6fTGLpCWakkemH594u73x7P61BUnte9BGQTvpC7cBiY1': true,
        'EJAugMXWSvwwLfcgLUJA52Nj4CSJuZDSJ6XWaFKhCiJR': true,
        'ETUHSbAQnWTGbyDqW6SkhdGtbdqsYDrt7a6KdvH1vJUV': true,
        'DUNCnuQv29ZV76kPoesQGfrCtUJ5eLF16fZgFzcgokT3': true,
        '4ukb2hgVcwP8Xg3oGZDB6iukphvbaKWH4yxvBsHbC9oW': true,
        'GeuaJQgvfm94KuHYWbay9jxPGePr4QxJ36VdBxN39JLJ': true,
        '5RYRNWnEtNRfJGJLgwYNKfBreTb9XYyb58tFL2TvvSey': true,
        '7P1y6BRh94CES5x4GSVb1vFcteS95vtNpLYxqfTEu94u': true,
        '4WAn8kGcd8Bvs3Z3UhMpLtqymXLKBDMY1FGGmTDeRmFr': true,
        '7NXFzEWh83mHiV3twKq6eNUougekL2x9gdKAb4B6MTE7': true,
        '2hofM2wxC13byWb4rzwbdXiXpZPD9ehePLFVmzVfUZiz': true,
        'Fgbzr6qCtsHKR758yFdJdbzWBNYyDpEsku4WHt7sfBXg': true,
        'D9CmC5M4wxHQrrMsYxud5ccAA6aaAYDTP5cyfEQEsuXt': true,
        'DhcgBVDhDquiiBEtDLebqhaeytm9HFQHVRRrkYjSAdUS': true,
        'A7NJbLATqJxmH5vztzvk1MoFEJJN8LTw9gyLwP7LKG8z': true,
        '49xsTfz1VRpW8SpxwQL3rpMmGkkY3dLkKH1W8bXbQ73t': true,
        'D2QGiz7u42ERcjYcNa1mrnWrWcV6LFjcyJM2TLARdD1e': true,
        'aa9vGBsC3MZV1UHMKXnbdKHaTDFZFsBfBpiqVfNHkhn': true,
        'HxBKd94n3GzzgW1X3CQvpj2Kt1mSGnZyEMSs7px1hi7c': true,
        '44bRocoPhoF33FWMhFBn3JAq9cT5CMcAy4J9pRZf9gZ2': true,
        'EFarp2FwP5pdDH1ZKePjA3Vdv8iy54qH9hJNgy4eupcU': true,
        '46WCtAfeMdyxao1LJaq4KZCNhvshby7XZFPdi7JvVf4Q': true,
        '8VwcKV4tMNKWw6Ce6WDTV1PQjEDoif4a9rR7xTD5TboW': true,
        'EWhgTRjVQBP9yj2cpWvBbKZPxqwKU1YgAK79Hr8pr1to': true,
        'Cowh17PewJ9Rj3tGcwLBGN3jip57G6P6xwAETWF7yBhu': true,
        '7owUzm1suxQaGubaXGMTSJvFdG1fsRCbLHQfeYfVnrPX': true,
        '4WtjnYjTyiCykzfqMJE1CZjyrWeKKuPJQVUvyj5oEQQs': true,
        'wwqYnJcmiDkuxcuv8URHMtFPniKUApvsvbfzJpCpCzz': true,
        '2vaB3dYXx9JxEt4Lcu3Y5tiBegGNkyKRTYhCPSjGgJZX': true,
        '2NHKUwvTSnutdktN4knLf6zUgTgx2gY4fZ4dMaZniKdm': true,
        '5SHx3uSwZkJrEaM3rb2im1Nq8f9vwfRfikTFE4GayhDq': true,
        'CJKVPRLacpeTaYCAcZXKWoV4mYGdEqqaTSbrkJLdrKeX': true,
        'J6NfzZNbhU4Pohh9mfG4Hc75Uti8esPqxsWDCG43jNf7': true,
        'FU2cU5LZodnfC8tUfEwmTF3NH31YnW9bvoi9dpdq9Jdo': true,
        '3hgzidw5toAV32eAmdVVDoEoK51s8fYY9BWxGJjguzsy': true,
        '7xUajaSdbUCgXpPQJyK8SToDFCXk34xDVa7iArBrtzhP': true,
        '4XQRFhCAsWPgkiauPw2aU5qUawYNuqBhJki3HWRpS19M': true,
        '5SDLW6VCuWq9A1beeHRXHxNJ6XCQMAf1oeRjyXMpHqou': true,
        '4qpT32GAJuf2qpQu1HQAN7UAToRV3Whx5ELdum56WQe2': true,
        '85jvuHoMJyVQqJbCr6iTHzgbLjMcCmgpsDrPjYs4uEF5': true,
        '9NWQuBuEngd1oNz4uRhRord8TKFuRW2tRQVfTYZAMqTR': true,
        'Ek2jkL3ivZ9ji1Cdw2pK6dfXjHRHbVyooZf4LPvPmEYK': true,
        'DdGTQi7iCZX3sqH1EKyaNoRm6Kip8J6fwMTZr8B9Z4jX': true,
        '2B7PNN4KjZED5EywVobWiD1S9dEVVFkSvJss12RZELSK': true,
        'GdPrc55FATbfFjVyNC8jJ7naJAybt9N7RLsAnGjw2pow': true,
        'GaXTDqbwc9RX9bbvmvUGdCQHpEh9cZarFaTWdz4H9GBr': true,
        '2UHW5XpacKCg24fJ5fMhG37CKM4ZqFfXJbnKVZoe3WtW': true,
        '73uk9M5g4Ac2SUi2WNCR3VMSm3NmDqoiQrD39dj4wcXt': true,
        'Bnx67i3QamvxtmrvnnCStbkH6DvjCUUaT1pbYTTWxXG9': true,
        '8S6ygkazqRoDqKN36uj7SJXyNnPrJJFziKXQgmfirPXs': true,
        'DyY9gpcZfZxd44thHgocxDDpaqeL3ZSv3vcLNkm2pX1W': true,
        '2sA3wdMoF7wi5h3HrYYKiyjS833QCELAGt9Cg2ya8kLs': true,
        'HA981pyPjkWG49Q1DXktdCjeHmKWEHy7Rc8ket9ghMac': true,
        'BmSVvoVHkgMHBEwLLijnQ8YKYh9fxKJPhBpLZeM1swrX': true,
        '3XVw1x7t6ZwXryYUY7ofB9F6gU9j3Gm3h8LecZhPPL4z': true,
        'EiLo7v6ecc7D8x56B4CHtDzQWMxfZXwjgwNMSmbNcQRk': true,
        'GrSxz8k5DGTjgfzEnWCLdQNu513e8oiTHir4kb6EP71W': true,
        '2JBfXc1T4gC8ESYnFs9sLaMrsmof9VnZ7k1MS71sxKoD': true,
        'GTqq2Ku8vEfyU4utPDrjm7RTMjNTHdXdro5oTmmKEmJZ': true,
        'D3zWG5NJPFHRGUtxLUbUNsoKaq2Dj5hZM4R1HJLc7Zsc': true,
        '35efB3TbvNzMp1tNaW5CkSz1zp1qcxXCdbuSZbX1AeWf': true,
        'BbY5rR3KAv99GUxwteacreNwJRWxyTpyWwb9LkhUkeX2': true,
        '2GCDGaJuLLA4KyZ8NaHXBmmVGoRGSSx1T8nE2jNxEQ1x': true,
        'FffYnj6Axh5XKT8G2ch5U2R3CjNUyrYHAdbSy8JpisBN': true,
        'D97XeiKvhATkCCV8vTnvcFg8khJpoxbCFPHfgKrdXZ2N': true,
        'CiSNfcY4YHLe7agYNCVcY3kxU2LCNDsyfaD8AFH9nJDz': true,
        'HYyEnXwA2AnhAnQV9s7T3f82v6p9kyyo3u9W3SqGy2vs': true,
        'CFEsz8CSMbmFye9DDkXDUuMS4cDuPCR5vZ7NbCrdnLVa': true,
        '59MMrKKwnABp268f9UWjWMykWnT2vvoxm4bybwRru2eD': true,
        'AJPUpuTExGuW6jbKiDup7gg8caCkJCLN1sLiTwowumzT': true,
        '1LwyCoArmYktPnhEXQZ98dr74n83NjFxorMwMmExTAm': true,
        'EjgXnn2czrA1Dz3rNDPiL6WaMG24UBLdebUXvcGBWLn1': true,
        '3kSccNdU7HhCWsxDJidQapprPe1RzX624fqbE1PfFDCK': true,
        '49PHaGpdzFPYbuJjRCMmc6YGVAaiiWD2Fq5VETyi86Dr': true,
        '7XGmF2aS4KFc4S8seLDvwLjg7psypXjMas3r5To5sAD5': true,
        '9BPYaxUTwcQE83p3yWV39AyPSmv2roTYvadE4Yjy9hXu': true,
        '3yRduneZkBWit3yqN7xRvFFoSbBv7fajJnrb6tvBg6KP': true,
        '2UBTs35hpxTRkb4nEWP87UYHbRygSjieaXXj7Hy8pewa': true,
        'HoW8qkFypQhxzRDncTWFuhFgzYUPH8wzLroPARKa7bG9': true,
        '8YBBUGuFv3gndFWovx1yv6X6wA8dCuqMsA8DazKp8Ru5': true,
        '3MGfYixEQUmktNpK8CbHz21BCs7vXNvGJs1xRAQyQYZJ': true,
        'DXGF2phoCqwd9QXdtAX7FDYbQgsnUvqdFK5EnRqSaFR4': true,
        '6teFhXSg1LLJ9fNaf5RxHYfu3nnEyeRQhkaxnMKF92nU': true,
        'HBNnuKZWreygApbVLuN4J6d1WTi3tXVMKqgkEhD8b64a': true,
        'DMGLfWqu1jV9pQXrLiRs8xmLb2QKb856WdFbkP5ssh6z': true,
        'BndUsgXGihAUw2nUhmPSh6YH5PRMdVc8UeVWbZXxrokm': true,
        '42VyuhLb8EHhufGiLSdzEnGMxqBVJmYLHMSRX2uXjbjo': true,
        '3U2b4gHJ5de1VHxgw8AtABoLu7YMaqZMPuF1M8icaQBd': true,
        'DhmTePuhJjrNneidgztWAmdp9yqZEbfK582fKgjKvEEz': true,
        'B8bVJfaoAJeYoGcwjdbNjJCPtx5tmrsUeKhvWiB7PWsd': true,
        '659vGyyFrmoQKQsRyUvZCSqRkbrUyo1n5uoJQEVvckoW': true,
        '12sSdHAuH5TgG89getehGJYtYLMgJNBzJAh681fM981g': true,
        '4bo8xb1SWfeJarEpopAHKAbc4pdkwCG7wfcBWaKqSPBu': true,
        'D7JgijJxGPdCLUqdnzL67dLWi7WJ7wEm9yiUf3CaHDZx': true,
        '9HYnYnSnM1UrMxZbvVxoD8zgR2H37gThM6JdcdASKLBS': true,
        'ARuiTNJemZ9p9Gb9DuCz1KUfNjPuTvMo8uiLb5CguGLG': true,
        '6pFuF7npM8SVnWsG85oocYUkpMq2cq21aQmf1L1gMEQ3': true,
        'DZiH5nw6kBRxwUFnMQyYdpXWg5f28xjZzm6F1nwEhbXn': true,
        '4Yq8wtCetnscZdVn74RKXWR9rZsAbicVAQSERSF8Vxov': true,
        '3kDYaRqGBTK5MNE8BZ7PkSRXyxNnQhLCcuUqgkxGGRC9': true,
        'DCHmbzNVwyXvisE7zBU7Ttii7RJ8jzyoqVohxVBQyM8D': true,
        'EHgNfpCFwu9YVfyuM1HxxUBx5FkptgCQMJo1hd9QBYvq': true,
        '5HffHg7nRqL8cwoR87BfBq7VYegJmscb8nRmvjhBbsBh': true,
        '2QFoxqGArAXfQevr4zEwhVAWcn2aDmUQWmhb5djEdeoe': true,
        '5NTMMgMRdgun87WLHoTdAYHi7YHw4tsFmudUKrs9LoKR': true,
        '9HGPyzyVgHzzmTotbk4X3inzcYTXLocPVd5rULdpdQqn': true,
        'GTnpAN9s7z8h6Nw2kfQzH6fA9oLGHpbdhDgj28kZ49ga': true,
        'FD1er6SCLtYxUpTycz15ubBszAq3o83Dh1w24WC7jEj6': true,
        'HvyHrjcqGGzaptXkM1hRzw5Yj618FfSS5Ta1MpgYSS2q': true,
        '8d6z3uVuxmj3Skirzx6rioGPyxDv7ntKUYEtpa1wpk5h': true,
        '4orF7EecKZ97BzhRJuipTdafj6s6t9UniShbfejjjZyA': true,
        '2nk4fjKWMeGjkggdyVu1hTLvwFx8AKX6dSMhGNaZsdMK': true,
        'CE159LLooEWvs5HKWmXcMxuoJ17ZSpbYGgNoDm5YqgBG': true,
        'ApU114FYrWu7DhJr8qg5AnRynfboFjViuTspzXYts9ix': true,
        '23A8r6FRb8sLsA7ztTXcGA6j35grdqBjcX4eUtnNn87V': true,
        'FtTPV4AaRE3nni5tvUTmvmw6qRem9KeJsxyZpSsMG4U1': true,
        '3GBufpgMB2aA7rLWH4QxcTvNeEK9utZRkPo9beCWEkTN': true,
        '9Q4cahStp568u4PEicVZLSEQczMd3LiE5ABT4y6Be7XD': true,
        'J66offinwWiJ27Xb1gAFJZJ2Veh3f1kKHPJjgkgjLLKw': true,
        '9DXck5TEFVa8Md3sG8XQsQQkQntJPMJQVkqvahMf23ED': true,
        '3zLSCyGbRwrygHRWHumP8hm7LdUoDcwQ6USRUsWgQEM1': true,
        'MFtZDPBxuP1HDc9gXE7MxydrZSd7pGVsxFynqNNbGWY': true,
        '2vNxFyAmWyeepzeGGAoYsvszdJUma6MiP8t8ThQLtDhC': true,
        '9FiTxpycwQsYvKToHQyF95sCp9msyt4Ndbkw2saoLhb4': true,
        '4y7ea2BQ4EqCy7BjS38VibtX68L7bprubP6fHeeEtRcN': true,
        'HUczHk1BM2TsC421iDAZ14kNf66efoZwdzuSHpHQV7yg': true,
        '21wFUp2xScBDmr6kqHs2ceDrhcEN7xxCauRwwAG5m3jS': true,
        '85EK8MsW7XpSQYSHs59e3z6jCDVoLKhehLkvpdU2aSYn': true,
        '8HT5ZKAkhURBWLm76VmK75P5JqRkrCbrBB5ZK7KyhWvy': true,
        '8X8WiPmq4EfbeAicKyFLXw8ShXeQDPvmPzwbEbpK5iBv': true,
        'AHkGRh5KD3tr77ZxjSUiL2LBdfbzH5PsoGdctjvdRWPo': true,
        '8EdiAdqPUQPgSRuKhK1x2pBfLoYKfnRMu94Jn2CAQFpP': true,
        '9pqknwybdsPG5zB4UNYpEd1GFQxQV8fFFNW1KoYyCp38': true,
        'J8ircaDNoKPthfiPHPVDTeAFNyzs4fDvAfkuggq9Xr2H': true,
        'E92seBpgyaDdbLihzsHrRPLTsmjA95dtaqPPdvPfTDiu': true,
        'JADyK6dFv2kfUKkuMVZgZHetWd2Rei5bXUY1r93Uy8Q2': true,
        'DCqvtejzg8jHURuMnzVdEhwx3evcFojbfX9diKyeoFFS': true,
        '5JBRSm7UgSdnk9BE8S6PDBzASxSZvHBWTtRgMqW5JD9g': true,
        '6wPycM1SVpt2gSqF8DGYkUubzwbFbr8SfnSa2xkCEZQ1': true,
        'Gk99pBEf3ZqP3WcZrSqZuVWHULub91isoEnfwh7S9Czd': true,
        '5odDkQfaky9WxCDXCj2FbV9TueJekVdGXV1CUN4e6g4H': true,
        '6MbBFcp71S6nuqhP1J1v1JVY7TbBveUhwk9fJ8Tj5WJn': true,
        'CS6pXDXXFV5hvhTW5AiEoQGX6ykvHGdsSjGm2117SBn1': true,
        '6WKdfRXGM3Y7JCFRxSwAFZ5hrYyH3ZG3D528JeUfg46p': true,
        'DHBSEMGZ7Y7UfML3Fq8JiPCqg3bnvxEHZbWMttYJzfur': true,
        '7ycbNDK43MC4LuUXn93YsVyYUzy4v7LoCEomgTU5suLs': true,
        'AeERM9GZM7W4A3E8uHHsyuBaGYeZDriBqb1HPWEV9qkv': true,
        '49qyLWZBQjPvNXSy1uviuniZjtqnUCvpH2NWrWJyhy1e': true,
        'NoU3GNA2aNFTYYxwprQKs9njkwjvc5dSeoTT9E6h97h': true,
        '6Qz41Yowjtem4J2ruCst1wxaX1isC8Qkee7EpTnmpmVF': true,
        'GV1UJpHfnTufk8wgvKu4hbYcpRhdq3SXxJeS3p3aeqsD': true,
        'xffQycukqMjQrA7Ygy1cRuFTsBndWGozagt9GQd1HpC': true,
        'Fr7QP6aJzzgpa9hhFAez7MXVats2PsU7GzxPUKttDe5A': true,
        '4tFCukV2c5GubJZp9GSwffgGDpzVaduLYejiYRHr9x5z': true,
        'DxEgfVWywYnV8qB6up4WJHFeGZy8s5zE7q1K5b6hAR4D': true,
        'Gx27JJFFziU4Ms4tjF64z16HUK7YbiYp1mo573HW1ccK': true,
        'HV9c8LeaDwngm79jaDZ6RcqPZMJZFUYivj8NtUkBncH4': true,
        'Ccan97ipgvqKhvEs74uXXfHARTac2nUAH9ktbCaKFsMu': true,
        '6aEvcFP9f7srxcxcm8KbyWCEwqYhYCxEyY3cVX7sjiec': true,
        '3DJk8L16eLg5Cgupwe69Dng8zuwL6prbvzLfspBsM1P5': true,
        'DcutPFxUpr9pt6wJAAfjen5BQnRqYNxrCJsDmUNktHN8': true,
        'DefzMK7WcFP3PBW1o6msAWqtekMDY6d27MFPMzCK12ma': true,
        'FN9QDuR6aDQ4sFg5osvaLKvovDXRZfCY5iN3HA8FbWM1': true,
        'Haht3b2CJHfTSAxr7p7sjC67YSGC8L4vNgZQPXL8sQEe': true,
        'ChAoY9rcyaKejf76g7bBAitpNMJpMdTwvk9kNrFCZQFT': true,
        '5XQhAAvy3dGRRmw26iVLBmFeQeSYv9c8nuVPKTvU68xZ': true,
        '2VnvGEQZGymnrh3soAZRnguKiXenaio6eF9qfiXnJHAQ': true,
        '4v2cKMJZ97x4F1PVxLo6SPQwqWqqNxEZs43QtuxevX5u': true,
        'HxuwmnA8ZzMphjAcfY28Ww5cDmna71X6jTTjskxuD68g': true,
        '4fDwjEr9KEXdzYdRf9u4xoNCdYfcofbLcQJ6qR5yp8ba': true,
        '7Js2oaP7essSexxBfi2LLmFUhvfzxNmASJfw8RpYPU7h': true,
        'EZLmZCFmK8Ra2yjGbPUDz87EvTtDmReskpbvYvHfUdm1': true,
        'HQNRtGMB2V4kdKdg87SPnh7smHXtuADEPPTQrDnc6qYk': true,
        '9mthZi4CuwH9eWS9fooMwEyyN184qqiatUBp5eb3cKAf': true,
        '3FdRfVn9gqhqGY88jPPMVMZpzqxkG2KVoXP4gE8Dk1X4': true,
        'GNa2MkFGHPGsgU1YMcWMvaTRNLxBUwbLrgUAjEQpjFsk': true,
        'D9EgLZCfVxMy5syhs7zkYtnNVLqVudCqWJ3Cgsd3TZ4f': true,
        '6GLhcbZCJwu67iG3m92fTS1whUZryvNPP7qMRWJnZLz6': true,
        '2y4w7sUaEaRVQb1YcRBmrhkt4q34RyfMjJx3GSiq6yZC': true,
        'E9shyfLMsAbsEvqtPZpYvb3uwiSx7QeaCKE4KojZiBnu': true,
        'GbeViVkzjDrH4P5zkownszFk5osy53cdxMfSV5BaqRBq': true,
        '7xcskPazWd9BPWrqxHw6yuERerD3kFrWTfN2vzHpC391': true,
        '9FwSFW6cxjPwaAZXvnK85JXghgavQAvdcQpEpdE8xcB9': true,
        'A1QDhkvRL8j4MJGftQe5mghKdZDinKiSmz5cmkXUMK5L': true,
        'HZTUZVtdJBwRyJLkSMdbuLwsAiRYdqA9p3jtXfBrhhWb': true,
        'Fe8brhqowohwWPzPc9aKm3TUxq215WbuA6pdGVm2gt8o': true,
        'BLZrtNt9E88TpjSFprkUin66y7z7FXtbozS9z2vG9ACa': true,
        '7h8f2CnxaRoVH8qDdw9DHDqnbyovq8bFDFMX79LTbqiX': true,
        '5ymMXteMAT61g8EVsjsN6EJcinYUXU6ghyEaftZgsixB': true,
        '4jWdVBF2hXdGG9hu3pgFn8UUC8ethThcvtQ4rvujTqBe': true,
        'G2X3jLQ2doB5vL5dFj3Q1jKRFvaWHe7iSUcM3rbLN3Ma': true,
        'NHhzxwcPSen88XpZcXRgW44DMSZzVGWBWWLjPd17hSS': true,
        '2pN3r11EeRkzngc7mXaPcLyFs1wtBJshkUAmgH84EhJB': true,
        '58jPFUDikNZTiExXQdyqoUjEDeidrfLuhi2QYA8g56y9': true,
        'AA2DWC2HPNoaRid6x9eUYDJ7qbK9mAdZ8SgiLh58SSfh': true,
        'GdJA5gC1Pfy37pRi5Wg6aWoz45o9HTfDJoymwG1RAiLm': true,
        '2SEkcdWyCgYRawh2sPDdSppXQWpUJANyB1skVDuwkpgg': true,
        '9KBxxZ8sSRSX6F7b9fYRgFAcyv7XjHT9t5cqPXZTxYf6': true,
        'A5jDGFeYEqbRjK2uAqWmdtsqcHD11YtzYZZMsfUFAVqu': true,
        '37qubCSyCAZbJL8r1gnVXzuBGBxaJQxHa6hQgfeCFNtq': true,
        'AKcag3ydXtX7WvRV1bHCmj2snENGm1kSHj8aLFZJenfJ': true,
        'SPNF77yWCcPHtSihC9pudopqjiXAnCsvbW3bwo73YyQ': true,
        'Bk3xa4LfdunWNE1p35vSHtVzeSqC1xxfpUcJz8sw1ab7': true,
        'B5dy9h8TA1bEqPJUyTRDxdMjEpo12sFyrkEmukKxej6s': true,
        'D2GF2z3TPKu6HKQEd6Af7oZv9GzhqtiYq18zeXgUcKC3': true,
        '5uoZioSa3cLbC1KAsVY6Hjj5RstkFxfzWcjqaUiaWgEC': true,
        'HtF5iGRyzTvSzmGSqWkQTCPHNBqta1foR2kDWyJnCjAz': true,
        'J4ktKa1fUGE9TYuNxcyeeWN9kP1hTsVf5BJEDXQDdv7': true,
        'Bh1mDCzrsA92fa8xyFu7xVG9heNgg1asJ6TikZvpjLLf': true,
        'DrsDJg3hr19xzcbCFfcA8yvDALc8ZUUm8y6Zwsd9gpqJ': true,
        'AiQXEhvMiGU4JLqUKaz3hGdk6fdn2gPrAZizAEu3Ruhm': true,
        'CCDGtKVzPQg1LQYXLPQxhPRjZ7WPd5hBECCvDhVzhF2o': true,
        'JBYf1YmKK9pt68Jij511aWSL6ZRYcs3uWNxPzUb3CQoB': true,
        'N8TkxicUeWMYLXXwvE9KnyKDncxRpFtdAPZWSsWgw3a': true,
        '2n2rzvxt3TFT6s7xtoPewuCE7Wta3a4AuqFk3MF7j8QK': true,
        'CPN3vtV7AoMiYQYd56B3xidGbGCUGW1DAqN5VYi2EdUG': true,
        'Cwe7Q9WwawCcbpvzSSqUeZx9K8n1GTfY3bM39M7xGgxt': true,
        'H6UNeMiYaprLEyQiqAaQDoGijDGrh52cmJbmYVgR6At7': true,
        '6c7zgxaFy6KbiYkngE7iaeW2LJipHRYif5xjjcuzd2Kf': true,
        '3CbSktax9wJcA5v341Xh4mxHUbAtPFyb48kdgmAKkcon': true,
        '6RxzAdpvVxuknWtmmeLZcp7FREEq3KhB4Ujpop4Af3RE': true,
        'J7pZ2ALAtqGTp5wD7Yk9knkWr2d5u32UXng6crPD2UZi': true,
        'DZGBqFG3mtXRKSRFAbUPK1P1AS2ZavqV2CDwi89dJrXi': true,
        '3uZTgcN8tu7Hx11JRR2NCxZ5CEZByQQUG7jz5h8BQHiU': true,
        '2QKZb6iRpr26X4KBAmnR4edXiRvf6bKV568FXZwsU5ZN': true,
        '3PKhMwpDz9EaKejpWV3Rwzudb38XaxVBRRsctYqjzxhc': true,
        '9SwPkuDuc95Q2EzrgdpN3RU7nrw7AQHDKGS8aQqC3tBg': true,
        'DeFAbBhoamYcSwL6uPvyF8NhP2q8FxXqA8xBWL6QV6TM': true,
        '8gnPgnKcyFurC8mgcb5QispyW2PrAjfYKZUm6JjHU4LW': true,
        '3TE3XonDxZYMqZsHyjFZ5GcxubCqDJdeMH477ZSJC8BV': true,
        'HinFttzHgZahtNazMb3xiF6s6Sq16r8vt4q67Eg7PgBz': true,
        'DAMKcNhPb28KivxotVTwsz35usUF7vsnYy6p8pGkfNmf': true,
        '4ctdLAxQeQetVFoVtDm3NviXooRUXM4EVktWjcejFotY': true,
        'AwZ55M29mis3a71btQX38P7wDN5TRw9b9W9M56b8JJeS': true,
        '6bMgE3qAYJHqdXN9Vk5WjNZWhWBoJLCAo3EM9rth8yjg': true,
        'CMZECHig1JLaqRfaminuksXrEqXuM4zZYpKqnhrCZ3SV': true,
        'C55mtWeS1Rzp88Nx93wT3whyCNdZZpL2fvUAJbricFRH': true,
        'EVJEeuFwfzGzy4oFM9eRdvSbh2C2nJ83cTa1yr3ptN9a': true,
        'AkwH5qN8AyH5rj3mUD2ARAtqdBHue4x3HNds4RbamBWr': true,
        '36Fb9e2T3XdKzMYGN52SccKC4PKvDc33ZChy1Wi3yqA7': true,
        'CmRZHUj3P2YFxYWogZMTNaTTpkt3N97iEkPoHWGbtMYY': true,
        '4s9dVBJYaa2KmWFQ6bh2rKV5UTkqSr7k7TRe3pRui6dZ': true,
        '8LSzcAEmk8uP5HvUUeaCb3T4QVGUjstFkRMXifgXrx7o': true,
        'EXqdVaVdQaN33E3BVtK1aykew5nXxDBXf68bVTMXXfju': true,
        'Gtsr79wEb85GKRmqABHgK6AS662QWsFHqWHTdmBYmYFd': true,
        'FYe6HV7GfP1BA2J7v5xMmPdRQJNFqmfBKwRKgxUQHXjG': true,
        'FLvBupST7LCdDn43gYycMQgVc4hM7tGJEEpvN5XvPtQK': true,
        'D8CPNuasArdj8BCU92PViVUTfyCs8U87qG6kBzcJmAee': true,
        '2jX2NUotYj12yLT4AmrHQT6WJXTtEbzxRhvD1wNp4TCF': true,
        'BqCEkek9CfREQuPpJ3qzwnoTpoU3mCJ7P4WNcuzDu4o8': true,
        '99bbs4MoAv2YEPLuMr2ogPuhuTHBkQanjL23uqmUMMJP': true,
        '4jxUDRVYVRnfxcz9U2XRSYzwtoFu8iujyHS75woxcy8Z': true,
        '71CqgX9gicyNRwRdyMS6eELQCA4s9td4dVo3u6bsNctd': true,
        'Eno5zTppVEXV1Ns7SqzVmvJdxzFW44UakYsxpMay1nFn': true,
        '9eRon3arHwgZeGD8rmDrEfscrEZayKQmQ3GThuiHftKH': true,
        '7jWveQzkByi2q9w9zSgBbnA8NMSfyX2BdBmxoY9LC4xs': true,
        'CBqRGKKMN6vW1WZehu9gM4Ns2EmBsjPsswhTAhpgWgvB': true,
        'JfmkHh9egCpPxxgekrd7EcaPiE6YSzrstDh3w4AaQAL': true,
        'D9b11B9ZXPAemAkBaPNt5cF4baEgygzRdxRcGWyKVdN5': true,
        '8UUzkZaQsTcoRSrUspRKC4pPPfnC8GYizJhym4dx2ssA': true,
        'AekPSaSGKaHYNsd867GvzhVDaD2PfKRm7VgCXFVyyqnn': true,
        '61AuSaLsJqdS3SLyjNn4gSrNSWhG7Qcos3RB3M44RagC': true,
        '3WDqoTY7iYvExjmEra7auY2CHsx5NprbEPbq38WZHjBQ': true,
        'Dh8joZn7D8f71U4hYYkEuSn3eofuQMTUqoH65Qd9aMVy': true,
        '4YR77f4wpTTLK3bUkrzW4o6b1tkUkVnYm2kBW9st8Mz2': true,
        'CRNiP4WX2Da5DciKtPz9TEx1SmUGAYvux6VDztNuh9rN': true,
        'BWfyF61YfBXMpAxz9FnyuEQdSpzucLgMUWSstvNuZtCH': true,
        '8HjDUxeEY7oxoNZTG1PkSnKuEwYet8Hjt6oFW2Bc2YnG': true,
        'AAVHfg8EkhWJj4TQCKUZABE6wkpyK8A5ey7mC1eodNyB': true,
        'AYh5vaYFTkN2QAKWMUUhB2YzyWtbcPWsBhfpQqr72x6w': true,
        'DXB3kQSXDUVxczBGAMoaAGpwTnk2ausZGajngVLSJUgC': true,
        '8PmjuzfAMAjxivgB7wRXY8WJh7iqZgeyXhJAFywMKkFg': true,
        'GkfNnk7xaVALvjhQF4fVdntVsmAeZQWsNWRkmEX8WKNk': true,
        '4xALrEJH227JTMR6gj3z73hyVWbsS5yp3hq5oNiT45K1': true,
        'HxQpaiSGk6SrmfPkJUYCoKxA6PJk226EBMaicYx7kVBK': true,
        'GFszio7vj4AseBX4wj5yXTZ21GRUysgkgmwpSpfJ6VVq': true,
        '8a8qD93AbEXHoz3vs867aL3SXMb7rBPmTcEQwhq63Ptm': true,
        'DaUKfNJrtdPnneanUMaNJBrKcgtKWeuMmWmTxvYg3uye': true,
        'FGR8DNMiq8sYkQHcUdi6hogoDLTPj877yGrUTqgv2wWt': true,
        '3zdMBM7yxEAZZxg56PwLdeTQPWWc7WyjxZEnjaYMyFvP': true,
        '9yCBtyk1fEDssxL1EffyNykHK8exCE9GdbPURoGjuq9G': true,
        'ArQva38YkM9VQgFeuseHDqi4cL25MLaLzTT8GmpiWyN8': true,
        '8ggpCYv2Hd3Vzf8mBGPxujw4KFdk69BMeVNEnKnziuf1': true,
        'AQWhko3vEYAcxJrrHJ5q7pDaV5CobrYsVfaKrzcMf7b': true,
        '8UTXhksMUGetRWvfZ3kn8uM2HcQf4py3zdbSEiThLddQ': true,
        'f6NpBTJkTLqzsXAfJZaax9bEA54EUQ2D1rFQrpzVCWc': true,
        'D9pu4hGbJvSfDofx9zxXU16gDccpgoNxnSAAsPNzrDWn': true,
        'EVefCwKbJeNGb4kmucB8rct8WpNJ4uK2xqZpyLAnKoRw': true,
        'Gye5KtnAe5Rv5hM8Yd1eVQWaCf5w2BcFSq4vMSjvG9XT': true,
        '8etvxq4JCiSzwGj3nuqdBkwUFFGNgiGs78W1NAhm41nJ': true,
        '8LFeMc9cA1GMhX9wDZrszbQetLHmRmXU5Gpgf7wNzLyB': true,
        '8DyWiYYvETq3Pnos3vR4pKuph6fkh6sFHz78krbDmeon': true,
        'A21eDGZ2HjficbK2zS5iuqwuNLp6ZtfcadinGJuzQWEx': true,
        'HDfygZQhqFzNS9aPhqTdBxBmkCkuM5kBoeahzUU6wNUM': true,
        '4e4S538tiBmmHeqguH4eeftcd4NWMr4K1eyubXU94CvB': true,
        'GZTHMk5XAKceYMWytZxzVyYDyw4QGbWp1ioLAhePgU2m': true,
        '3WXCFDm9fQwKgy1jPXWYkLaYuukr1t2CqEx7rGsnfgNA': true,
        'DHh1t87QmiTE2YL1jykR4wvpnfGobyeJptAYsbhqPNtJ': true,
        'B9biHW7ZpWakGVXdE7JaUUxi7JecmHB2sR849AvZRhre': true,
        '7X3uczzdhQwtoWAKTgVRese5SqDJvVjH23YoSmY9GMrn': true,
        '8ct28GUkEF49KqG4eTTFs4hj6F8RT4NtM4qj5tbjNKpU': true,
        '5Lrn9udKP3tFHMJeZ6Vgo2aa54voUJNcgjvpjrdELKFt': true,
        '5Pn8QNYevxYKxY3RTUuv2oRjNde5CCgtUyfwRaWJgDXe': true,
        '4QF13LkYQ5zHQnSvHaHQXfj9ZbAEFymMzJybfzKJYLxw': true,
        '9714FxeZKcjrvLyHYAoTBWwAvjJfnVqE36izNANqXeai': true,
        'Cx2dw8FNBgP1fUtBif9t7gydJLZhTDFghvE8auVBHbGw': true,
        '247M734UbxyrnFBsuZrBt4Awerx4eijk9gcsNJ8doZ66': true,
        '4GpQ57HD7ps1KmBZJ2Mfhp7x7Nd24kRMj8s8UDXpPRnt': true,
        '7ueprzZie5un1N5SYPwEujzMAXrkyF9gJ6nZSaM2sud7': true,
        '5rsxuw553TwtGrMPRhDLLh7NR3L5xzKagKqBHxpG2SwQ': true,
        'EFqWQv3DNuDz44S8xZZeqvkzDKL1gUyT1tRNBCoUPMdZ': true,
        '6uhWU75yHMpaKYgcVSB68XYVXSaA5hZQdMvAkf67jjBW': true,
        'soCohAycC4PSzoSDzEkKKMTLjdswbMc8jMv8wtS1Sjc': true,
        '6oAyacuTDXUsjC83zF2DVS1fAdxfFgmsuQ3hXQ4LsExw': true,
        '7ySjcCttQ3632GvMBAqNqdfuJ7PTFVWTRdE9DA9BRD6g': true,
        'JC7s78Kk1AhWpnMwvq5WNKSY7cc9uXLWmdAnaQrgymTK': true,
        'AKYYyrsxUVEnVsH5MVhK8SEfxPM6jZBtB8ZJTNxbTrRe': true,
        '4JH5AVByJedkqpzetQaovNqpNz5LkkVGiMWFiqwnKxCg': true,
        'Eq8DB3pR52oHJDPXLkGvUMVLkqxMCJRuLhUtH77z31q9': true,
        'DBhYcS5QrVQvFm86iATp6yZT6bvjZnt8jhkCUsuXXcZV': true,
        'CuEUQJSmY8AC1MpeX5RbcJ4v78ZwmkoyHGuUj1QViw81': true,
        '4drqz2dY2xUmGp2zJJsdxixpdkWN5q1Y9fFKU38RAqJa': true,
        'Fj8ptXDT8PpfA5T2wsCoNDqfSbn6uv8VuiWBpXRSFzRp': true,
        '43k1vBLasdqDC7u8DBSLstCuADiNBsEX9S78g1xFGEhi': true,
        'JDzsGzrTo7fY3mGUc6rwFRPfeWVr4ghCe6UPAj7Tqjkt': true,
        'EphmZ9CGmgLieAyrrFx6RzoPzimsNvHpVXzsRmyULKZ6': true,
        '9FqMRfqMUQa8SkEA4kvYNF3m5KWyJP5bvoz4s7KVBUu6': true,
        'HBM3W9cp1WiJ2fJABUgtfEYZMriG743Ffmt1xYRyFWAp': true,
        '8uBDz4g8UMFNuQ8BWuWxNr5UdjdsCNGcsE1mAWRAhhxZ': true,
        'G2uCGtU3VyU5UyjzY3HE1au6x4PUbVKpWLKPSduh5he4': true,
        'F2ynZew3N8HATW6PSd87JKkHk9YQWsqzBRj2oPmt7wx8': true,
        '9MfWVRKBrpPgycWyws2bPCu7wXSceUnk8HSSPYzkX4DV': true,
        'CeBvzbrg5BX7oXdnyMi7c9g4dw6VemRioGqzc64JQm6J': true,
        '5aYtaS2VvuAo46PHKddiwys3HnivR5zj4G9nkwbnRQb8': true,
        '52gVBWrBHGBK3VYXfngva2zdLTcYBwkKdjWJkUGcz7Az': true,
        'ERUeAHtZFkxw9QGudMk8b9Jcmy3CmQvtWfzoCGP7ySpc': true,
        'TuZyTGSnWMGUYfVXqR6e8584kgNyeNikHBzZq5Vuf3J': true,
        'G9sjw4NaNumumXwTRogJpNJ7tVUDBTsw3WoMe1LLG4os': true,
        '5Uy5mvSgG51GaCZYoeBjF4FN9cf7yQYuS2JigAyjeRJG': true,
        'BYHyj2kJLm2yc59M6uk6oUZxRVPSTDiY4U8XoT9DaoLn': true,
        'HrDqR69XbEwcLYGJGxq76ZzoGeDbaTsV9STV8xwngnfC': true,
        'BZPkMC96PGn5wdwgEnqXs5S1GKXhAh14KDnPLZ7rTT4E': true,
        '59ZFtTyuznT1Jnot4Psf6Y4bf8veGbjnCLiZ4RZBTXBZ': true,
        'D5zptpLFpdgcMjwW8kxkPNoomRzcPi2udqqyNX6nz5vm': true,
        'XPsudpzcig3bh3ECeaNohGzvRDYiiLZxxKjG9ckjiHa': true,
        'AWdDcR4GKXjgPsoK12x4J82ANgjWidc3PsaDjDNdu8y7': true,
        'DkR85vLFRMBFgnxMb1VB5dKUYkQe6tV3PGnLNCbYwU6w': true,
        '9noPyjXcBLPaXAUjtSE8oFFvmDjwCipjPe3NVpm18Xw9': true,
        '9aNrLGfzoeRmDH1ZTB3YFjek2tGjFbrGqKvQgBnmAKSG': true,
        'A6sbr5VZVygWYsZxTefZUh17KXXozzDxo5aBXR8dsTrc': true,
        '4kKGd26a43neFHFVf8G4VocUunEjJ66uPBDUrJpazvMB': true,
        'eFLHqYDDeR3CEkFx74aw3uWCPsA9GAd7DZWyegjJmtQ': true,
        '7jhzYoV5avfaNWge5e3nxhGumSHvfPWKmEXMzVXZUMA2': true,
        '2hyxiZ2MLKdiqhghF2QC39PSeti7vSJUeDsH5tcB2FhF': true,
        'FwDPV6z6PLPd15UPX7mh2mRosPLRWeaVE6s6XMn1R4LM': true,
        '89Ak7NRgbZ39Ye1U7wRtSbWsxK9cBdfNAFPuhXejnmwb': true,
        'gzWEFbv1diwNU4ZexXDsxk4MT7trm7qoTiEraaPpPJM': true,
        '9T7UvVxLWA7vydyMaeH2hqhbnEd3tXxmqpQ2ESAQFpG5': true,
        '4EhgdHkpZPJfxnHc2hP2guLAgRwAHvPPZnfpNrrVSPuT': true,
        'HyhK3XMq7ArvVX9FBqkQqBdMDTLfxkkAsPhJdx8eBuG4': true,
        '8Wrf1CHFX1N2H8p1CNLZekjmVc7wj37EKHxyEFRW3D5m': true,
        'GLWDi7L9zbdn83FesiQgonK6nmCHaMXhbbDAXPJYaMtz': true,
        'GgntYcqHtitV572aKR6WB4WhoKrHx2bNJ4gkiYbiTjFm': true,
        'Cn4LjXMvyCGuG1bYd8U3UZsCvmSVBDPUfDgCTqYQhWxq': true,
        'CHpkE1ggV64ajvS6xmAEGDLSakjqPmJjYi9chQazr2ka': true,
        '848hHSAodk83p2YpX1uMco4GXvhXJNCvLejqbcK1nCNR': true,
        '3RcRznkbZ6MMzgz4tYh541tQjtsGRZohD59Lhg2B8B9v': true,
        'DgDyAKow4zKfB51Pzh2Vuw5VCqv1d54BPfvfGhqq9evp': true,
        '4arwBTVmXQsLsFSnGfmKikKB2S6ZgRkiepZV1dPbtWvV': true,
        '3PSP7zesaa2b3xbWhd7DYSc9MRdkyuYZXjcCk8p8Qt53': true,
        '3KUqXrJzrkbk3VEtPm3VF4UmdL1apbtKJHGYocZ7PTCa': true,
        '37DC8tuqdqB7jUTcKtDW4BP6rJRDwRxK5LK4WAeZUbcH': true,
        '9xgo78fFN9vRb4cuRinRVzcupGhywLiGyCAtiKgojQio': true,
        'F825r418wbm8X7XsyWZv3xRRVbC5MFT2ttR1yi9NXSQV': true,
        '2boAEmzPUnV94mcCydPrsQunH78uEuBEg9kAzuvbuJPg': true,
        '5XWScZQd113pN3DtPLkGPYgj1PXB8UWtXDNBqE3vMXC6': true,
        '7Cawz5Ttns545TPKHTABQXT3JdiZMBvb1D4fLbNttBa6': true,
        '4p9VED3WcgBZS75p1kYS3acmjo6NJ6dYFMuHBYCZwHu1': true,
        'B1Bhbfb7nrPKpYDZz1js1bFyFdrHLJdBngPMh697Nped': true,
        '4Yz7SwB2Hh8hXTLYcC5aHft9HAZNwtDK9aySBWcvXRQB': true,
        '42mQXqyEEg9bUzHUBAqdbkWxVshE2mqqsbYL7U5An1xu': true,
        'D24zkNkEn8Eg2ZqcX4RgZSnA9GcGR6quNbiLD1WPfmZc': true,
        'FacFX6Rqb54kMkcrXUB3oJywbYiPm3nwVjHHTUm2PXK2': true,
        '5fcccDU5ch1ovVawaN7n9kFLrNTMp3hzkPZvRmSmiW7t': true,
        '6Vfhi9qsH7UdFFcMpa37fcBmbVH34ibghep7NgFxqB91': true,
        '8Ls25SH2M8GihUr5wf1SjXmCYYw32eZNnnjCF8ZAxxZo': true,
        'F9TJRL7mjNKuteUdTNARUnxqiLQh6ATKQwStXqDrHQ77': true,
        '59GdL8m9XmRMTzr8gfqy8628LN88KtCErqoAcJNdY1jh': true,
        '7ax85ZbV1k32TMeEcLyiAi8X29GafFrmoZxY3ZQK7zKw': true,
        '3BjsgHghq5ExXhdWoQieb6Z6m7f1NPZtqRf8jQVbdA8i': true,
        'u5h5ah4CApKyH3chHKCtKVinP6hqvhzV6JuUoAnHVko': true,
        'BvSkK2bebKJGEVYrswxDR9XXixThfkRifRuhvteyw2hz': true,
        '62BCZyyk7yB9mftxrRgHLAJwQTwh44VtETYsUdSJV2po': true,
        'CFf2KqmAMYfhhHkRVWfcLXcgrM72cpfU5fZSZ1tprYcw': true,
        'BqCgjyGugUJaaBsiFLvMvRYn4qEYKwRZRkH3FP9HSvqg': true,
        '8ssC4rdfV9TTLXjD9hjLR79c6wfbDdeEkBwEf6BeMUyi': true,
        '42bdUL9CK2C6bycPWQ5vg88sktas4awGSngLJJ6gmY6M': true,
        'GTwjABoBTyFiPhuxMR9Anceq1ahKThXWFZr6LmLYJQPn': true,
        '5hTePyEa6QZDwFoS2iMgLbfuak4Gevy7zfNiZsQ5a3AY': true,
        'DfPfJBV5VEpeqRZUcdyJVTzRayn8paBTxAcxM3NHomwQ': true,
        'Fe15w39FVavo9cWEdA6nQ7ZY2DUbRcavTvF2TgiaSLB4': true,
        '9YXboosUGvcktpBJWdHyo1KGBDubgN7T1R4X4NN9pc3C': true,
        '8mZNLe1JzGis48jTpxuzbuEmPzpipEncDVuXcZwR7sDT': true,
        '6Tf73VrUTyAo2zPhpYDAVnVSVSQi5bBWkX4q24UKMDGX': true,
        '929c5XZRhjHdtExcw9YwyRVRfJtRdhmBJM5Tk2s3Yhp2': true,
        '6BEpgHKQNzRkxFazGFbRqRzLLksNJJTxpE5NoRzXFuCn': true,
        'EZrPnbkUKbNsmURNWmKs1kqGfX8SXoCFUpbSB7zQJxKr': true,
        '26SUUzXwqzbKdEVFGmujpXXtFM1qNvgzuZ7LgoR47YD9': true,
        '2G9SN4tseaWpXML6ZjmkybYeQrFGWWHbUVuGR7nX2Gdr': true,
        'BsCUAuHPharHowdwtvS1SASrZnesJWFUaeeHHDtDDedN': true,
        '7ZpU6pfgt6qzRkPugVLcTKKE1mV8u6mgZ1qej94MvGro': true,
        '7fz46biUv57n9cungtNzoy7wcENSDQNPF1EsAzzKvdt5': true,
        '5dysAHvtp3CfWFvbiH4U62YDB3bdv1BC3WzgZ4M72ED1': true,
        'Bn9zQ5PxNEZRR5MzxFSPRswfpXhZNS4qdcpCi6FnPkqq': true,
        '5vioU5KWAn2d47GyV1WNRMc5o5RykgFHna3xevQqvzn3': true,
        'GgdMY9UGG7EQbyTWjqtFSwjTtneN922KuqcMbZAKua9E': true,
        '9wYshPs56NfNH3r61xapqS1aZ1b339EKjVwABzwUyxEj': true,
        'DLU92iyViv4yqm9p46wBfWZrRd9RrzxKohUZbAiE12mU': true,
        '2S8CyAyVkMGYW1PME26u8ZM9tiYA6HY5AFGzhjpbsFcm': true,
        'DNc1mJhjcJNXNYQpdk2YCQmNcHSMEHpc1jKkAEBUYeks': true,
        'FnrLjKsWBuzvCX7jUbZmsnAoRka5v522QJtR4KAk1AkX': true,
        '6UqeYhp1Za2xwLKwDFU1HKASeR9shHfLWhBxXv5mWw8b': true,
        'FrzPBuDUYtaipEaL6qg5mWUpGU981GKEUqSHU91vyKL1': true,
        '8FKJaMuDYkB3DvF8Bue5um4dskty2WwLpkvnZUgSTCDm': true,
        '8y4Te89UJuotK1fyE36mko2N7zGrTiFUJVAEvddEbxt8': true,
        '9FnPWpkCzKmkV8wwn6Gn5koMG6T6bDVthQdJKLak8223': true,
        '8DhNSRS7Hh7LuXNWPKbyfCPEd1uEhGy245AQQDxRppeq': true,
        'AePAnNXHBJWXzqmyRvV95V5hKRZDM64zUGmpP16akt3Q': true,
        '6Nk7RD2sVUbjMup4XMeUA2GwXurYnv5nvFyUJPBtMv5i': true,
        'ADvLsdFktmMvJbsscoUoVLvoQXgNhxNvhTpBJAeKiJPp': true,
        '73dhaUDJzmjr4acJSnSg3mRjqnoEAVAL2DzzVLkEV8o7': true,
        '4k8fsCz2TqMxYHUPqcNPpGWuEGmXqFavw2YiugV97nEo': true,
        '9Cwj6A4LhAY5srbLJpu9qfPSXgbA2DDugsmvEo1tbo3q': true,
        'EvDnKkpX33CxXerxoVFHHAPVDowe8rV2T9YWnQDcjfbs': true,
        'APNbfapFJL9Jbnjwan1USADSr3unjMJtQdKuPBAN3qn5': true,
        'D3YQqNfbVTpShK7D8TGeHUJWwaevRLkTHTECAESWZBu5': true,
        'HURAvoGSmeodxn82KCkLNdx5r8TooF5tEjzN9ECx4mGM': true,
        'C6GoVD3w3FPyrrzSx37hKNHMfnfA4CkLoYWrqqSMoNS': true,
        'H2cpZFq6kwYME4dgePmUB1HnmgSP6vqeEHGMXR5ahJQc': true,
        'FZTuRtF9qi6ANBqPTS3zvb9tB8SM17r8KY6wQEfhF8er': true,
        '9T5AaHPXPTw7xzY1s9jXZFeUgRXZfi1vicGo2mMEccL1': true,
        'ERyBt1nmb7JGm4Wgp86eZdtW19dNtm6g9DJvh9DTTHnk': true,
        'xYcL4DmtV6AHrsSGNZakhkEViQbmTE8PkHQefCEuFPC': true,
        'BrzuuuJJXinjHVceBTRuZ7Ne3u2DSXBJgEpdvxc5ij2J': true,
        'GU7P3zsaBHVfCmiT9hujLtcp9vKUTaKDKhQ2jD2YHnK8': true,
        'AEhZN7XSfriHwdNYinPNvYjnJjWtnDJ7r3miCjVdqkXD': true,
        '21v1TW3yRBbhgJaUGEQTvC1Hmi3t5QDr5VQE42rRNgid': true,
        'Hdpx42MkKChaQsTQQYXySnuqzKagcovaZXzkwvz5z6EN': true,
        '4w16NMNEt4Y11vzVrwY1MLHXUZHokykJFWz9Fragz8Jc': true,
        '9U67hHAVsP8BTTv1ZBavEQkvixMr5ww58W3qq7tnBvyp': true,
        'EFA286jA34XgwVLRry8fRvFpf39GDUQfGvksDRsnwov3': true,
        '93jE8GpumZafEbPkTqEQ4pZdkEBuVyAf42qaHw5vqTZz': true,
        '79iWockTRDaVBBgii1Z28fTHcSncLmWjS6vtg5GyyCEg': true,
        'vCwdAia3qSK3Ceki7YwASfkkc1x65VQ4eY9vMnNqDf2': true,
        'AHCZvDSZiW94DeLsqm1HnHrEGM9xyYfTfXjSdC1Z8L3F': true,
        '711the1dRpVJnHRsejMNTpcMq8bu6txMgvAhayxsLTz3': true,
        '5jajrDicDxXu1LzKeLjW99de3LSysYuMjaxazKfXyetg': true,
        'AnDpbLDakcLmsq9ABM444FBJL2UfKGjN3ijfW37t6B61': true,
        'GW67ouZyqym5JZ2SCAmYUQ1y3Up6tC8UCkAS3GMW8bb3': true,
        'J29PWCzAB1jBCh6qJf2hA72yw79Lr1WWuhEkCG5uDjn3': true,
        '7LhWSe7UBfj5gGZikkrA6RHb4NM4SiGXDF5E4cwdn6Ex': true,
        '5pgw7G54E7kzWtJPppResTWfZ3v4u9sMm2aAb87ExJrm': true,
        '6rKhHN3r2MktYUYj71HgGZ1nec1DmXnSq7qwwzP6ohNG': true,
        'GvCdFTSgR5BGRYTmRmA4wJRR7YkbW1EC71hQA4r9s6Sk': true,
        '5wEcEPvQm1S6Rxj25TmHtx9HCVxUJbcRTvMxz472XDgf': true,
        '3NVy3QyXVrACTdmJpjTv8bSZvVwN4yhkscv1y5e3NVKx': true,
        'G6mJi5EUADQn7Ay8JnCp1Z6pmQxEUdfcjZJwFwLcgGWx': true,
        '9VWnTzqYd9kpiJ6cpCVzN8u1RBwAdk67HZK4xc2dBJfT': true,
        'F9tuYY7F1B6VbfoQqsr7SbeYyGRyHmFPnQdQ2gV7aZWH': true,
        'HF7sU26npHkNeni28LYf2YgG8UgoqwxgCZNsfqRk2Fg9': true,
        '3nhph7N71HpcVJpACtcSM1Lv8z8Ex7WUv2W6gPGMFrbZ': true,
        'C6WtoRDwX2PfLechqBFTj24jp3GhBA8bZxhJJEDACUNT': true,
        '3haW6kPYyWhXH2gVN4go7QHvKqiy39ZPCQc8wg5C7z9X': true,
        '7AMDSfo8HL52umVRtUtBV3zk7ighkVwJ68saauidcbeH': true,
        'FE2JzhQEs35mqastWUChuXjiwYVJjFjKkEzXv3WBtkG9': true,
        'HtNdLrpEFpHEyx4ouTg98CiVaoWks6tjz56RPTUYJgnn': true,
        '7wHxHYtASj7sc9rGyT5rTe3VB8NMk3q46c1eGGyfTkaA': true,
        'aVLF1fWvhBfNB2NFpgKGyWjoL8SXsSztjcWNNrUWZUp': true,
        'FkqE8QQab67Si5X47LqXNZ9xNByXmRhxhWyqeQfswvDo': true,
        'J62ffXTQXWoX5jsTFBBq6fhyuYgKV3xMEriQsfgK58Ey': true,
        '2c812i5czz3pubp63yLWantbXnLzRH3KwqA7dnr98CZy': true,
        '65bY3VPCwjpsBbBh6JCKPsGqS8Y6d7KSeCqnwKQBiDLy': true,
        '8qLySBX4XZMe2v314Jwgb77gNLBPrBjRJ4JZ8xH1PTsN': true,
        'E7xHPzZk7EYqkeUcRcokHq3pLgAdE6iJ1bWApfuyathA': true,
        '6MT9g1S94ZNq6KMTqxmsoQgs6UipRPkB3kkvsvSN8WXi': true,
        'Fhcj18725tjBu71Cme5gjr7uLejWwkwKLcAnXoAfoU2T': true,
        '5395nLbjVTMZwqrFsY471iZn35DTP2h25adXKk6NZg7C': true,
        'CnnhpxYKticLStk34tdfC6kbJLC75Fif1qzmg319EtPk': true,
        '8msstRZ6SNT3t49pwx6qS9wT8Nunz9zJG1nEby4USRz8': true,
        'Eu9QwUfEwEiJuP2zz599MLy8YW69RKQszHU9b9wUGV28': true,
        '8vUEaWGEPLXsKJvpfKu142XPxJF34ai3NsdcFo1NvbBG': true,
        '9N1GTErszcCVAdyvLuntoJEr1mhCKRSTK1dXFcwpQwY4': true,
        'GsG7yHrwHMbW8RRUu1JFrYFh7SDEMekKravT1YEoL1cx': true,
        'AqLZDoGSyYJCetc1odheo58J3rFS3LtDNWPuhXTkh5aH': true,
        'G3P59YfvM4of5yLNeYQ5mu7ZvdB1S1HNateuXYyF8NEM': true,
        '78ka9cjroq3GHDiokVMhGHbjcnXTPMw9mzt7CsVABq6p': true,
        'D3wZopZKBwV1L6JMFuwGTpKo6EygLrpdzG7ULbNPCbts': true,
        'H1xjVhAfParagLgDPmRZ8KYouZkeT9oYpPq6yUdk3oEz': true,
        'uw8gSpfNi78jaTfyVh3eLiE4XXTPapnp4zJncRjpd5U': true,
        'FKEkAhZQCbvgCMcEQS8RTTmMqvaWq79K33cGdkb9aCQc': true,
        '5mY9oWkAMR7fj9BA2JVAUff9D7QE9SCeUcGBp5jec3bx': true,
        'DfpcEg6eAVXKgx8nakPvXN6Af1xAexpRVinykGFzHk7G': true,
        '4rHvssNviHuwmWWvJzNdE57ip39kt1UWgc8f6eKNZEPJ': true,
        'GSACzFrPRM3XGNkEJXPWBNydtvsdQmUGoQnVcgXVeocU': true,
        'FE3MhxTZkG9NiY7CmWnRDgp3P2ftCAghYca8HeaXBj8N': true,
        '42DrtsJaHxgAGHYSjMpWnnJeC1DiD9zsKSD1AjYXRbs5': true,
        '5G6tcpAXVHBuns3CMo2w4D1Cuo4h5mZDzmME1Gp75Xxw': true,
        '3Ry12RuYL5Up9jBKVGVdKkLPn2gV1kvYW8if2aRQC9qh': true,
        '4SGPEnmPyUM7qASK9KmrtfTWFRpftWpUZiCbL7Se3tQE': true,
        'BEpEhFPJQDBJLRSZpy7kHGpfJNLUGfqH9aigyXq7xXwW': true,
        'BWKoGScx6ZL4DMeL6eZ9aHiDKQtiaTbVbTgJE5hyUD2r': true,
        'CLgJzF1nEjk5tr7AiHPFDhioFmKAXRGNeF92Gw5V4pEa': true,
        'BrR7BBRJeViVNQd3XBnyYsyHcRE4jXzRcfofSFPZCU8P': true,
        '3tCJPFDTNBH8eafwM25RRh9XwbChP1ZrKpm7vBfhWGgg': true,
        'yrauDHKJmVyCm8y3VKmgTPfkyK98e54nTtCFDF2yAWq': true,
        '9M1wcQwS2XvpbeWALsE5n3j4s97nuipZJzVZ1wXJAqdJ': true,
        'CiMR2MGCw4qfkEXruUokHRnSeiHx3wCQmzhoZZhQLCpf': true,
        '2xTEbAjUnM62oeniK2bPDUkgN7xagHcDMapHi3fWXggy': true,
        '4c328tsj7up1jZoKaTvrEfQkBXtvuCdorqVPk79tQgLU': true,
        'J172NnsQrdgV2szLch1kFdusiK2NDEhDCmoWHrzTBw2o': true,
        '3PHx1qGbXwxbs8mPdjZ1MmvtA9jPitqE3HkrFWaeP1vT': true,
        '8NQa55GgHrmApzFoPLpuP7bZFczrpMpNVHXjfT9A4VNr': true,
        '5VJNJPRT84ezArZU3kxRxFoh84aZA3rSvP3xmckoEqS7': true,
        'FiJG4PvD71hCzUvAXFhtTjaeRqYTYcrtWmcwUkkvfth4': true,
        'DLApgMac3hy8SC2CpY5CyE8NVVWmkJrauqwWEfvXpahG': true,
        '5gr4VfB6SQJ67SXHwise85zkRYXm6HDHGn9V94fq9YJb': true,
        '81zziZ7upbWiJ8f5U8HvUcZpBhmmztaWDDbqaA164Xzs': true,
        '6NgYBJUNDcYafhbZ5mmmRBkK1wTGpRJA2aQPYiNxYXTH': true,
        '5gLHqv2MugV2o2HAiBujsAPCbjiobmtTPJUGHETAE249': true,
        '87JV4s8mzgmtjGWKg9scLGWDYZKxmVjK2z8pd6KQ4Pn9': true,
        'BaWJXJzNjrXFgGBDW3N8KpAoY2CoJUCKYTxD2yVyjcan': true,
        'HZqVGQn2hGoFDFWdHDKpFznhxeYkKRrWigoUZjHNy64E': true,
        'FJiCQTroUg7zHtKhdNzU6cR8hWYddNt4fgVrGYkj3JVF': true,
        'Fz9CsznMyZaG5Pmm2wqLknRHSWupMCvas7xzUhCwC3oi': true,
        '615LPmEXUHc3N4CKz3SMn3YgA6XmHHqrg4nz29eze6y1': true,
        'BUQFK8VNxGEPY2FTZvbLik7pkEiUBYSME9A98UvE2ish': true,
        'Feit7ApwGM4t1s7JJcdG63Dte6z7gSEbwK5cBrG6MTni': true,
        'A59gf8QAkVuWL7RQw4XFYx7XA2WEufosKne1oXnPqecV': true,
        'oWgJN6YGZFtZrV8BWQ1PGktZikgg7jzGmtm16Ktyvjd': true,
        'C6esi27h3rkVwqkMcYJEtm3Z8MnJecerXUdixBbpXJFe': true,
        'b82SJDnYuPmdYPs4EXzpHEdN7BzVGAgXEtfW73Azssp': true,
        '5yLpFFCgmQUaRYHvBfMRQLqBFjzC96X2CYpkQqg9Khc': true,
        '4ftxfThQHfusPWt4cP8uoSyMQC74CSr4t8hjHux72TFH': true,
        'ByygohUFZQyjTPsSDK63dCWwXeEpY433xrX27wAPsVTP': true,
        '38hPMcboRWZHhewb2GPNPr6G97KSqhZCAFwJs4JYrM7k': true,
        '5U6XfB5uEAsrAjjfZK99JUNxS1YA2MPbzkz2YRpNwe3x': true,
        'ELH9vpKCH2ZvxjRCnJqLtwRVmKPj5mZjb1aBoxLxyhEh': true,
        'AGzzNDw3DbjexRD9fo9p4MWZfFyuKetAidg4odYnVGiN': true,
        'HWESgRrruprAZUiVCMv1MxkgLSQABUQYbMXjTxj2HyXV': true,
        'EHakAYFizkv68uKtManVjVa37VQJQf1NvAZUGKYRpQHZ': true,
        'CYXQDx6wHm8Ke767wGoBfYg4oJrE7bAcWr3zyHrQzUFm': true,
        'CCgxC4BqbYLrwZ82erzt4FyA7eWmQZbTuyk56B6PyHVs': true,
        'BoGDqDv8GpuUF6hZQBcxg3uTapZQvN2a7snQm379NAku': true,
        '8rKTjkJ7NK7ECeJrtRinhZSCnjtHv6LjoYy7jCa4Ei81': true,
        'AmRBn82tqaA8CczNCYBkH66QssFyvBD2Bqwx1kbJ3N3B': true,
        'FvGYFEEuyG7E3W7Wjcw8VK2Khw1Sd3M8vVXE9gLCvJzY': true,
        'CMP7wBVZtcpm7exhwqxL7E5WUd3iMN7p2WvE2d1EPrrA': true,
        'EEWzkhuWm8uCZ6Q49DpzMj5VbF7wJSkFgrdwgKqG3oVN': true,
        'p7BYhocQN5ZJRUgGKW5Z248JEQhCu8FgLuZdM4nLWJf': true,
        '3MgWfArTV1BHQopdUwsimWTXbP14C1eJLLKTbwNLRmM5': true,
        '2Yajk5HtoSEFdVFHSHmifieAGg73Dnabcd2XemauaWMS': true,
        '7JoiTbetNB3jtgEExq6W6hxziCAYekVbV9pjBzYp5svN': true,
        'C7F4EyWLJmhv7EFtEVCFrZtbpsNJZyTmBytvspidN5ML': true,
        '2UqJHb2S7DkTt8mNNbwBhHkhwt2LgrmD1FW8QcgLWPCc': true,
        'BETU9FPZL4yYL7rgTL8ZjXV6QHoFrSELkhdetiykC1Wc': true,
        '4m5XX8PVKwa3iYNg5WLYHH1efyU6hBN8ZXZu7dPsVWJU': true,
        'CHvHBzrJ8b1eMVPU8mmgixEG6gmqctYSvJt6TS2BHAb8': true,
        '7SephJYyigvgCRGi3Dycj9GXbLfXAJ2CBpMHtZZR68ZS': true,
        'igacCA3Zjgeupuh7Z56ZnvwWKEL1TdQa4rs5aWt881E': true,
        'EjA22ks4MCJG65T4A9Uu1AdSKeEjnjLD7oJnS96Jz8sN': true,
        '7JUcxAeZNPrwSU2VEJPJP6R74tsUK6WFAmTNKchPQJHa': true,
        '4yC346uecfMGr3KSZJnwA5uZHda7xcFsTS2F6Z2peege': true,
        'C817zgTayn4fr7DSQwDYeUuetUARcKVdtnpmDTmh8X9A': true,
        'DXA5RdDuHjS4aS69kRDtxoGDJX3RM2yK5G3oR5vTX2Zn': true,
        'AsgQAuUsJViaBRwLXYEWjPgfQfca6FpXZXviM79hXoHz': true,
        'AU545bgt1shAoYyh69S2jExPfpMVvB7QeKYyTWjd9P8X': true,
        '3bQVvU5dDy6ziVV2Uz27YFbY9Y51x91TZdUBSk1tdj8m': true,
        'CPUqAhLCWq3RFd4QVaTgjFK7Me5mKuro5ThuNtzK1soR': true,
        'BCe7xKiFsZqz81F5KxGQne71wGSG193GaKgWMHJqUfua': true,
        'DB6RxLcyJRXSZW5efw1wZa2VcGKsppj7LyvRm4pnSVdx': true,
        'BhWaeJSru9MbBShJTV3XvZiRXy6sfREp1yGbRByEc25': true,
        'J5tpCtsZifroxcC99nb6mSV4GC7Jr8EfxNiauVgGZ8XL': true,
        '3faLxxm97C9Xm4U3Mvy4StFPDnVpJJTr5JdTohP85R67': true,
        'GB3uRxpNQDRMxoGMDPT2XBhaXFphU2BaiQmnBMHXP6ns': true,
        '94u5oBwukL2PgBoZet3UMEW5yUUuHvA4JEDHn5tJkssK': true,
        '8vCvm74gMZj1bqSLF71b9qNMtnEcWz1tYD6TjBKqB3mt': true,
        'B5FvfBvaypAfvycZjKqtou2JhmGstwgF1mFYwdq5mChG': true,
        '7TfZwu4huonj1TarwKCpMjjby5kXZDg3E8J2RQgQghPa': true,
        '9cXWG1ts8VSMXnv8jKXquearheuXpEo4NEZv3Y6r9Aey': true,
        'AdmztRqLQ7m8wmrkFCANV8MHkbCSbx38UENkgB8PxCj7': true,
        '2wpzmjVrYqYMPUNFLPcwPSyzDD4rn5DZQNtwhNafZrAu': true,
        'Gksoy2HZjdkoCWEp5nM7rF7reM1favwh8dFT5Yi6hSbV': true,
        '9UJ1MtVhLfSYQX1BzYdz8avPC7avhA8H9G9FneFbwMTL': true,
        '4vTNiicZERV8bHaPvXcBRaEab881Hj2Kywja4uzgEWkS': true,
        '4jiSXKmKheYHBvJWDTg9ygJto8VDP5spKsVsyfLeoadw': true,
        '6HDKR2r42DfMKdi7FGRSzRKfKcchPEQdGHEJFziMFoGt': true,
        '8EDH85NXM4imbg5rCfY4vRQuNqVdeAkJqAYfvyCqHBQz': true,
        'Cp72Jmb7HCfuAxFKprvprttN9ybZSwHCybYbvFEqMREE': true,
        'FC9yDpedacRpXDpwc7xHPiG3a2Rbc1mF7Z72NU6dZvsy': true,
        '3dheEyY76sTpfz6BXxKjGthMwkF2vhLGQK439zoTc9Zw': true,
        '4jJ2voW2zGEYhJiMcos34ccWNVGujMHYs5YG6TToC3Gp': true,
        'dTPjY7MvjgVwboDp7Xw89PvMToZfKNDspBihonf8dXe': true,
        'Hfj7WuSH4tt2y2gtwNAtjWhjMX9jkNAkPR7Xbqp59SZ7': true,
        'DJTF9uF27q5UTCbe1iuHHb13rEvWgPhN6z6sBUXCeN1X': true,
        'GFP8gRicXy4v2pf2ZJLLDW7sdZ2n5Y22voy9n5FUdTH8': true,
        'Ekwxeyc4hMX1uJCQqU4bX8YAQDvng9iuMiqzkfCg5qnw': true,
        'CSZGUH2HiwkUsieS22k1gzJxQz8KqB9JFSqq6EGAYqjJ': true,
        '51cHvme6h7hF3AzotvibV19rWoLzy7CXv83Tg7qVEgz4': true,
        'FpmWBcZJq1KpUBYGad99tGZb5uSyjgUHwyK6D6HvgCRo': true,
        '779EMMMhfw8KskDK6H8D7P11zF69FaM3yij4Zuc6Atf2': true,
        '4SjG2CAEvyPxE4GNciSa5dek8NdvW95UwBfLkNxi75yr': true,
        'DgLKEEaW8rfoc6tP38hFycVD85FZfwt5TonaB1KZJWBg': true,
        'GkvzTPKZwXtpVcLaEzm8wyC6TQwnpYtvqarmWXX8LqSw': true,
        'G447WWtgpTMMhPbPCWovWcHL9BZgoDTgbXCqhgPGnr6o': true,
        '5PABoJyWziBtFJGLS2ddrb4UekMTPskRicv9kNpxPYXM': true,
        '8gbB78vBCcgRbtw4vE1kU9fPRMG8agYKQAMPN5DJATqa': true,
        'A8gvXw7jMk3nFDqPeJuBN7eD8BzHPxYzmNr49hZoqr1g': true,
        '9orrz2yB8GEVTEcmRZZEvDr78dBrWnxdycnZbu9EjHNt': true,
        'HWiDfzm7DnZ19VgY6QEjUuT7Xk31ELxaBiwF5nyWHceL': true,
        'AQUSBTxPNSLxVaPbK15Q5qUeA84e6tWbKsE3ZP2ucSri': true,
        '7LaQPoD7xvhQaRcPjQkx73zBwSD44mTq8byuFBA7nMyM': true,
        'CD2eLbcjNa5LyxJfdN2N6UPGNxdvGT4BhaCuKDJ7w81': true,
        'Hmq1uus7K5XfMoFXxbGFJ9JJ5hKqcCFy7piTRZLtYSuY': true,
        '4FEVNQNxbkpnJkGwYNRY8pabuChYa1Wyn8MZ3e9XLVvA': true,
        'Ee85BpDp8Y9KyDsFrJgHqbWbkycFFzp7RoXRdMpkKM18': true,
        '77Qd5aVRfZTL9NbuAWyP5oG1f28Rx7PY4fNJcwnXbLEz': true,
        'CrDaP9ZBCoComGkaVqUiyujPws1mSENbv4UxCek3GqMt': true,
        '2qGE7KVUKLQbBCcQKd7ovSQ1mwPJX9VZmRs2gS6gwebk': true,
        'GQab9XjzSCXwdBXQLpsgddp6MvPRcXLBidgCbcbqebp2': true,
        '8zMcQ6H6fTTQQgPQpfy29ZdBHzqocGBUJaAfDZcMYe5D': true,
        '6eBfqQYyrzBWPdD4n8HA5yMBtZV9F21BLFU6kfTKseCb': true,
        'FUHr9YD5Sczse9QCDCGY5tmt9FhVHyAKLkN4XqbJYZPK': true,
        'A5zDNe1rEhSAX9Aw7fChHVRJrR3czEkPfN1PbNH92Xxp': true,
        '83q62VzK5j6wkn2EbR2zZTmj2AF6RSfBCg5iLYh3qYiv': true,
        'n59yNE1iZRohoPykmva5jZ5WqKSxhvGakZavpVYQdiE': true,
        'J8mgyjKQb4M7DjEKvewBSvKZULMZMDpUtua9VtByLbVD': true,
        '9toU8ud8KGrFCXe1b7RhhL6rC5PFKBn8Y7VRkDZRGRQM': true,
        'GFWY7CmaE34EhNCHrymaW5CXQ6ppCe9EYc69oH6UfJzM': true,
        'JA2CCDGsgB5pVsx2cbgyFiexsWRqVE3rERhEakRn4zMf': true,
        'E8vkodnrwpYSLJsQdbZGiRKAhXfEf5Kn4hALEdxY6iZH': true,
        'CpEciqn7zR8twupwXcB7rhe6cjqfHc9ypRPmx7x59AUZ': true,
        '6AkLCrqXUftDhe9CPhmU4Y6FZy4TCkcqaBY7iLhc2MCT': true,
        '3xJKAwD8njQEPKGWa15goYmev8VhFkN4Pjh4nA2nXtFB': true,
        '7f98S7BcxgVUx4QtMyuftrbUXxjCcJa3CuJW7Ptvr7jH': true,
        '7hBLgEsLEBT2j1J6qZW2SDMFnDT8ZZN16GQeMgkGc5jY': true,
        '5HeBE8jKBziTz3QcUY4yHqNzeMf6whttuhMyPTcxD98T': true,
        '58vdA1xmQczrKrA2khr5RiQuvmKrpC7AiQXj312iB6rK': true,
        '3Wu928haQV2Gna5qk4XrKAygqF6o6bHdbwHvZc3ddVkq': true,
        'DJCegH7U5c9fTP8czuPRYRHeiPmGoGZXjrLaPp1vcbxv': true,
        '5qNX72b3Lyh8xSrKxLVz6s5FNMswXvUUDsCP9pdgvTAq': true,
        '4Vci7Rnwe5V5MamzvPMt6g27qKzaV9q7YQusZHYDGuAv': true,
        'Fh5u7euYMTXmWkmA4ZjTEyfyKoKxzcRsb2NGFjSntyJy': true,
        'C9FQUNmRRC6EzXAfx2tw5C6385TXDyBh3RUZmeC6E93s': true,
        '71yZBiKct9yZhegZujBimyehNmHqsz3Y8t9MfBPdMhTu': true,
        '9Mu5rZrmRMru5YMn5Z6LbWMudh3hzu5u44D431pmsjbF': true,
        'GKgwysVUSdbBgDF4eTb7SQhVbLU2C1GTtfFa3fybepWw': true,
        'FY7LNwwQVjidjWYcsJZoyRrCbXh9Ume19tr3fAY7bMtS': true,
        '4Kgx4Z4qD4nJTPWFcuzJWr3Es6XXqXBmR1PV5nbV3c9u': true,
        '3XJzR2fCit4Zm6SDxXBHKxy8cATNYkEJFjXBVoDqC9Br': true,
        '5LCFjPHd41rRwkhbhTeNVJ68JcHHwNQqLZXCkbnvt7o': true,
        '5XR1r8f6Fn8SGNa4Bfr2nZLQkie3wuxHfvwhWSpFAMbm': true,
        'Akiy3UvnGP6yfW4feSduRQ6bsUSp5W3X6BiRcgW7KqJB': true,
        '8EGcafXxZcEDNs1jQH9qZfJaZpG2t8mgbJaJihKdRdbe': true,
        'CmjJuaBRCXzKBR4ojXq4u5zTbMSa89HSuJ6Wob217c1X': true,
        '4yWb8yQKHHS1LZ1erLtaEHbQYAMR6V6NuAGzuPKJnha6': true,
        'AkXxqV2qdNjDg9ZYVDEWRQaWRd5DgAQ9Nt1idtH6B3AT': true,
        '29vuN88GuvRnhai7htncWh4oZH8aBuTf5E1AJkiqfG4e': true,
        '2L7m16ujHyFtSKFpfcTwTDJxBzjDfsbZ9avacY7xRxGe': true,
        '6eq364LZt9esaQg8YSfx6TpKrgD1zYou3AwPLWVnhdaF': true,
        '9z9GzuZSSqeoeEhWQwbjhRgsSmGShVH6YESHKL2ZUi8H': true,
        '6KHPswtx7jkMnftn7ZHEVDd3PpJVVGKaNeLbajtcefd3': true,
        'HoAVocx1L87iDjkHaikZp9egEbSVSkRoFb4Q1DuhiZRa': true,
        'HsyuoNi2uxus4nan8pNFefDCemp9KWdMdLZeniE4Y55o': true,
        '8VF5R5ybm5QvbajMT9JppRbSQEj1RpSk8JGT2MVUmffW': true,
        '4yph2wn3CynvNNuLeRsfQiMJEYPAS3CWqqBYNvx9yvjt': true,
        'xzq1PMJRdkKaHrUdrviwn2ugR1ZRwzxjactWeNNEk4J': true,
        '7ehCEMgW5Xap4YNYKE1uS8CY57zYcnsyPMYu7pSqfDDh': true,
        'BHAUKfZy6FkmqNQ53XRMvU2QsCppCpUZUmj7KYcbzfxR': true,
        'FPd4fWEKXEeB5v7pecfGunVtEjUHjHMwdrqFUTadvexZ': true,
        'EL67nooHTjyvVRdWT9ShmAA9L3hRxfPkryhEC6a3JCjn': true,
        'FqDUbvcTdDnJrdV2aLv2WnjnDsNAxxxRx44gFBRp9zc2': true,
        '4CYRBpSmNKqmw1PoKFoZADv5FaciyJcusqrHyPrAQ4Ca': true,
        '6m6prjQgBsTK98JrSbU1ubeDdX8B8zx5MKXZje1Mg9Ng': true,
        'EJvpTpZgpnsbS8XtTQpG3GsiJxRuVyDvWyFZ6EE4bj67': true,
        '5CjVos7urb6FD237a8T1EagnW8HxAyQ7YjVjnvUs7SeG': true,
        '2wBVbZFSECG2FMW1MX2NJXVJ2fZRfEthsUCGkirhTvxa': true,
        'DdK3iiUqSpxMCK9EAoBUqoa2oNwYx2ypN6xpHRHNkzq4': true,
        '94MwrhJzdZgN2JVD1Y4GDMqwnJmC8saZYQB5FbLAeZaS': true,
        'CwrjyfQvRUfSfHvoMaTUT8THahaJa4J94baMyZpAavdz': true,
        'GktGmioKNF9R5rujjJgPVKcebUhRe6Tx2yAiYgd8fxGW': true,
        '9sKcw1bYaqdET2S8iDur5oCrzBJrLZukEdFiXwuHgAJB': true,
        'BwonMQd4nust23hUCrwG4M8uMLrcyyZL6ZjSjkVQ7ux6': true,
        '5bMYDgYid7YsKMbdnoSrbBCdHWRwJ228JHjYNvmUXFpb': true,
        'ADEt452TrcCY5N5hz5pXckNC7jfAK7AZNGLPB7syEcUE': true,
        '9xgBvhvCXFzbgqjiYPTLVtFtCiwXsT5qu1X1DjvcciVN': true,
        'FgaLjpgXrdXnVBfPPqwFdN5WV9AxFzZMisjnc49svHRC': true,
        '8U5H7qqetGuYCt57meKGVVBiBx4wqgvmCZQNkifzcpiA': true,
        'Gjt2zVmzkKQis4TjnkQnx5e9Yx3DBMTJpHQxP5hjEry6': true,
        'F6s3Uhpm4cb7zPqt3neUx8kpWyZxx8B4sLK6Z1W4S4CD': true,
        'Hv1m2xkJQQik1cx9YmGsgf26QqNn3U1PeJ1VVXkM8Cw5': true,
        '2npBcr5i1i14L6odCsPuFp1HAzvppNBptHzH4K76JWJN': true,
        'HvwB8BPDVGag3TVP3tpP9VuDJTxEptuFvLpG3nrmsaB4': true,
        '85X9G4ySGkN2N2T5ENeVxD5gjR6kRob5dtszaQKkySoa': true,
        'AZcKo1iF5EB6gRRTczJjJdaMzgLACfdqXLvxLjA7x8LG': true,
        'GsZJpnvtBfHzqGVZ7CdHDBpyRgXJXeLBHwYBEypu9QLR': true,
        '7BVfVEEC8RFxWqfGinbmh58StFAZV7ofy6Ld1Q1SSjvE': true,
        '3pEoYCzUb7hWvqoMQGPYffTsxxPDkSzwSskypmYFBLFP': true,
        '57aQX3gnmKhPTK5Ufep7j78GTY6U9NTrS33721e5pRGK': true,
        '64xEHY6jcrWbAkLSkCv3Nt6kUVtNx8J4gRaWfbb2VG91': true,
        '4WYKk49hVPMRvMuY3vbWVtWCZLKxw5KBRQnwoMk6tuey': true,
        '3CsxeFexQFQCqrvBgJkyjdvdsg1QcZofHjrYroqYcvoL': true,
        '3bahuXFYvZUJEwNJzQ15hVGizWBRK44UREcAVrC4v5Ng': true,
        '8RnuAywMjiRXZywshybKBNzgLAMJWmBcZTW4pGtk2UM5': true,
        'ChG2buRMeRYsiXCkKri5it2tAdguQEPcxKcHHHTxqEv5': true,
        '29HYmbc77mPb6qU9t5k71Kvs1wZ56oV8SaU2qgKKRKiL': true,
        'Cy1P96UtnFZQWoP1Xa3U84AWERoSH9pPfZPh96sYij2E': true,
        '4vPpr6TnCSK33jEkqqdV2dGrYqRWz58xjfp6rrc3gv5p': true,
        'AA4YU1LAoz28hAWCDce2o7yzL7XhxzfH257BNDCBjiK6': true,
        'GicfvjrPioJY8uqgBhqcczydLw7EMaxshkPyQrBNG2fZ': true,
        '6MAvmKZDL5Nn7oos1ZRzGG9bQXGjuyEbzRGjzppksFbk': true,
        'EBFb8nW3rHcKEg551pCjgruh5a9dqq1LPa1f9r5EtJPs': true,
        'CFY9uAudsFsb9tp4ZMmZzFY6P3bC7m8s73JtdGiwuoKV': true,
        'G9J8qeFJouWyYt5uEz9Qp2gD4Pe8Vk2Q5bdbEi46i31G': true,
        'FSS3GhCHXRs4hyErJ1nzNgbAkxG1xGHmTTuyNZDBMyor': true,
        '7xccn7BMuCLWghLr7bcadnWbXEtWycyTGXc9aLTMoJ6R': true,
        '95cjbzL25k6TTTSLdk3o2fNTmnn3oZ2VSHPBXFuof8ZK': true,
        'BK17k3xWWpmHN8bQqZe6kppjAwgD3J6gjM6DevKzHAw6': true,
        'AbxLcYjNWae4D8q5E2Lx3RbMpTYa5iktCq5ZmAhLACRY': true,
        '7vwXfEhkxcu3Vqs68VseMAuKbsTEHfQvxHWfYDf3vwbr': true,
        'B513nSGc4DpZWXU1g6CY8SqLNY45bYmdPq74KHWEGFes': true,
        '6iJoxDwH36tyKum6pQaj5aPddmi6HV3QqTJ1G7suwpVT': true,
        '8gCd8GP4APZdX8noK1nHr7ijRGFSopTbtk5n9atnaN6t': true,
        'Bj4Esgsn23c1sKEPaK9p76zYh2zgnRZZ9vbW9FzL26Ab': true,
        'AJeZu3bwZsURHhjjag9Qaao4Y4UDo1LQgVrDjd9yeqaX': true,
        'G3Q7APx9cPcvoMDBUkzUqJGrZMLuKK2gWt661yUcRh9G': true,
        '6Nk7ksg8p34garSagPW31qDezYnU6sSxKwfJEnr4vkL2': true,
        '9p2fxrCG9DJwRsaNSds7JammPLmYpgqEmrHL52dikPx8': true,
        'C6WQBkFBwXgSzE5ZzEeZWzrYHkEURLwaYD8EBYGzrzzw': true,
        '3npqJiUTyfY9b5VAxb8DXszyf7Bfq91CRKmZjkyTrycN': true,
        '6Jyi9Nv5S9ZQ53bUuMGccBRdzSLLT4Ct75BbgJWBwZit': true,
        'Huc9FiwpujTRCPvpXweuGNosvBSfTbq1Rg5XCcuBPifx': true,
        'CYe7ei6VH6SkSAKgHDbtg3sScxQqnwFmYwQjXqkSHRrj': true,
        'FnMagmNQAJT7E7QEef3keCUCR1T4ocYTQe5K2Rsn3eKh': true,
        'GoGmRAxxJwPayCziPy365VLGcJbfyi1tHipZYFSmDtL8': true,
        '24ktw1moBZUuJ16HzxPHhLLtFveH9xT7gx9MuSVHGxhV': true,
        'B4BSen4j3YwR3HKEkzBFDSa2jfrdzyDqJkMzTma2A9ic': true,
        'Dm8ntokvcVdg2bj6GR5HWWNhJrBZJ9soeLPgdXBGTQPF': true,
        '8DizPPRMLaFxMgzgavNUSrxWPyNgNFycC2yZKBXdMhGS': true,
        'HCBUu2JtDEZH4zhynLt59VHT7PpU5M2ziqV9dMc5uTHQ': true,
        '8cDiFTq483HzVHE6qbrNrPSXjgvkEKQrE2mL9sv86AEa': true,
        '8HyRWBkHWauCd4TkBSgeKeHixsQhYBSUrMecHhupYn1t': true,
        '9rzBjVVWBnpC11NZZxfbV45XHWLvFu3HUhdNqcoC5jg7': true,
        'EyuzYWJVJ1kZY72bUSsKFGCHcV7g4kWWgcYqyC9BC8kd': true,
        '2divbEDUxXaPd48KYgmvCV8XANDLm7jnj7Pw3ABxb4e9': true,
        '5EdKeDvfMVHzr1FLk2enP9ct4mYg68bdeTDNgMoPF3RW': true,
        '5uVryhxGWUYP991eWniqhLYDnnrtErQ3uBkpiE5RxKL7': true,
        '5226ab6sjGwsdrqx9VuK1gZMV8kqnQ7TRmb62YeaUkbf': true,
        'Ced4fzMG7vVVBVDYdRLpsDaXeA823nuGcKriSeZXuEGg': true,
        '4VayfmoKPKrwYKM3JQ1zP8rK2Kd5P1kgXb1m8Yw8BrHy': true,
        '2opmsu7E5omNz8XkQBt3tcnkHeUsDHhYpgFpLvVJwmXF': true,
        'FfSadFq7hvW8LHQa4auhfsE5rpRJ7ByGpAVsjzaMBVZ8': true,
        'oW2JaQNp4YBc6E7NqcgYVgjQ4DQ8PXFriPN1dE4o9hE': true,
        'F4Br2dYrjW6E8mc4NPTrogBo3aShiX6E4zDabmbFqafS': true,
        'B73QJo1NEcxtVqVy9K3RyZ41Z2rwsHRbT6TbWr7N8SMw': true,
        'A4X3uBJc9WqwVhTEzMwy3RaV4PLUWBhFJKCTrQteVGVC': true,
        '3J3idyzQzMn2ate7XyS8vJdXvogYFvVHhrGY6q3nPaDA': true,
        'GDsmSRmDNMdVjGdVBVoezrKXFJ25JwAAYNWLvB1knqWv': true,
        'gV8Pxn1fYYewRcCGpLds9ArUBxdYGa6s4Y6RtMiFZSZ': true,
        '7rwUQC5qfLWh5sgLaejfMMcjGTsDP3vrrYiikYGJ8wJg': true,
        '3QRyj6HneL8RNX2zHWHmhYPrJQywx69ioNmrdj7dLcrH': true,
        'j1pdu16gAzUaF1m4s21YXHCNpSN3E2tHrEEGdQLs87n': true,
        'wLekFDmget1VVTFV7PQYrPsht1hiRPWJ89yXAzemDvo': true,
        'DCEZFyumEJPwBVQeSE1K81jJnFKCgHcNuo8EXvGnNNL6': true,
        'BRU4eQLdbCoMUQwWYUAjN42nCXyCYMuvD3wJXAxhntP': true,
        '8sfAQLC9AkpoR9dLsAcviCF6zpQYaLu8ofwRAfzTYjy4': true,
        '3TETptbELMZcF3hYkXFMtkrs76BwHA7g6u6muf5fyttV': true,
        'FHfFTeK924guADdgtTATZdaPyXhy4vbZNjUhAwPLaBAs': true,
        'Cb2m5UTargqvLc11KNHySGDd7WtYy6hq1ZiexV4StDc4': true,
        '8jFWg62nWTbcpYATL8db3UESYiYNbJPb37CkmiVsT48Q': true,
        '5S8d98zXkHogcptSSAMpyC4kp1efgj3GsmF7eZhkhXgQ': true,
        'DyBzSQ2UEhNJgPDE2G9PEsJbEcjJBBhci22yfg3BG6ad': true,
        '6vYffjwzkwr73HzfEuYcyXyFGyUN1WAuNSRuSqaMenja': true,
        '8UP8EEteYsLXgjBcsBh5Y7BJzYWWuKZZyCTw1wBHSb77': true,
        '2X27xTaKYCFF7D2jVnYNKsY6HQ34PaUidXFxXestA8nB': true,
        '559XzydvC6MtUjLoSGYtGzMGsjMooFTdRp8MiHkosirL': true,
        'GgJt6BVVnVPUYpVREePEvVwW3VZD43yQhvFrcGjwU7mP': true,
        '2kdtEwsT3gd8L3pNHAL3XeHvebmvRus2a42tXghdqPnx': true,
        'EomL48uviCZg7jybZ6uF9PDSc5JrWm1CJbvugkujLMR4': true,
        'A7VxmYzMM5aTuD7cCH2ndkppJZsBqDUapxdmx1DC74SU': true,
        '5JGyNx9PWB1XJk24xuEbVZhwgrJhfpE2VJfWiosMKLb2': true,
        'A4FAfDv2JTP4MZUY6n765r3pMJtyqGrN6Zb6k2VLxXXS': true,
        'EuiqUg4xTvHtLnQpDvdKGmM6o3bpqARUrVQQGJSQsAgP': true,
        'kpUuPGuRwarhMHZ86SvRLJmGM2oZg1qr9bDJoGaNzho': true,
        'HEycsH3idzsf2zJtMMPx28MEGdgxwrncM2ZdQzMw2PjV': true,
        'Dw6YyQikh7JpNiVNhaoBQF29BDoAerBzWUEU5pnru8u1': true,
        'AUw8CfcSYFF5BdvLJxHSEnApXiTv4RWcYYJofd6ZLJGx': true,
        '94mKXGVeq8UYQCUJdnfxu1eRFHh2k11R5VXKfufPUhU4': true,
        'GjoWhyja1CGR5ondBME6QV4JvX4WfwGEM95f5td6mVCc': true,
        '5cSxMyhehR3kafCtVLPYyfvH6wr4qZtFykzxjB483h92': true,
        '75wBYrjYVpAQVigLXrnF8Qy2RCLCktWWMoUHPdHRDqEd': true,
        'DqZA6LVhNP5xVtcBZxXE6VWCBhyHi6yse3PXAMgAFUoE': true,
        'AZMkGWa74xqhrH3u5S3GwHbsXzjWVmLXVCNMzc8upwc8': true,
        '8VwFAh7Xr8v7K6mWsQ5L3JcwKfqqL9zTYgSELNFu1hAx': true,
        '7BFhpMNCyonQL1SZ8vfnXamzzrLYks3pmZBgfVwRtLzX': true,
        'FiDRdhb6ka3cni1ymx5gWay7EvrKaxw3ccg2g33YonjD': true,
        'FZxNGp536RagEn4L5Y9tTD5YruHEPq5PPD7zhr2YMUX9': true,
        '7psJ71xNhn1Q2UxNHGcsRt5e7yr14WTpc9RfU8FtgGAB': true,
        '9Ni19JJDixnts5Q9iszQTGSNEc3MEiUxeG93qPKRET9H': true,
        '7bQo5gDRr6S2oS4XQRfbCt4jJmH7wRPcuxBsPrHAqUBf': true,
        '9rxcooDeKsy3UzwcLHrgfaeCUQnnSaNUDdKWyW7Hw6DQ': true,
        'F2ZYJK4A4miyrQFZ93skdhpnjEe29y1UngEScVg1r8eQ': true,
        'xU2u5KMuQefQyG7UfMxvMmgTQaJPAkSghgX4U7gLo4d': true,
        'HbkgRoxLffK6gzCvevvryLcEhrqx1wSEPRTxjyVwC84p': true,
        'HB6zKLpeXFAS45d3zBhiompPEmzUBqK6q1TpjdBxJoYy': true,
        'GCPPqbzdkzR6N7QDbAQUSaxiG8tiGcBS9JGQCtVzgFoP': true,
        '9CxyNZtBs9vjPn4xCZtohzDFJhAXLhhpYqNZVykHDAf1': true,
        '4M2ePy1tFHtqATFAmU2zTbYC3AmHqnFrRoHyBc5QmGHa': true,
        'DQ4pxXMWSCeEvZt2NvU6Lnz5B74CnyCR33smGhzokZ6j': true,
        '3WdXyWxz5FDvcPBQy8XCQcTB8BgwbRu7oTVeAoeR5cb1': true,
        'HzVFycoJsz18bNUnCpRButLMgCVRz7ha4Uc4fFzqXYfF': true,
        '3oRMyiS2i1mtY6prRFFzKnGEHsjbe9knZcfWD9isLQUx': true,
        'JCAXtsRMpxnLdUzySeGyg8ADZDsQ4G3LouJJuTGTgivn': true,
        '5TsECiMXBd6AVLpsTDMX5BAYjLWz5FRo3Pv8QmHvJt42': true,
        'ENs7oQENRQ6zK7wcgMVMEm5gB192TpAj3PdQ3EUVY1zB': true,
        'CBe7WmukpiAE8oNc8VRwtWnuyj82x1jnM2Wp5bp6C13F': true,
        '9ZkX7FeYQTCkMS2tLhHy3KrpQh4t6gX4cireTB6hmG1a': true,
        'Ead1roeUkQXTHZtkhRfr1gxmv4xEsnbUinfw77EAZh8L': true,
        '9mdobZQu8XbdeNzyPEEriGvuQ2JyKw8NF2EfEetjgWqU': true,
        '6Dtja3xGT2wwpdmavX7yJCisZ4jRKgYr1WPRMMFb7FFf': true,
        '7rC7hszztyPHe8iRX5hc2QHPTgMZExEZaeVu1BULffAe': true,
        'EbpEQeYGR7i2XM1qRkhRvV5WmfJ5p2BkNdsfMDZGv3T5': true,
        'FTVV5saAe61MbkNZHkfDYBLFVJawWS3Ct8RdirErWyss': true,
        'EzsP9mju6T2BqqR3RLxnTzVzh6Sioz3ei9NABKAWgEZs': true,
        'BuQMfVdbDfJbpiYMdJcZmNPqz2YdjhywBxthwDpDZsNb': true,
        'Aoqrfj8JfRJDbzCea1fDyZJydWzWbAQqTZHci5ZVUyQV': true,
        '7yAUGcRqtUxnVwJ2U6brcbHkc12Yubdh3tiGWL43jCqP': true,
        'GYeLfmTaPxPMhzTGcZFzFT3eFiKWWDg4UcVhpNPhZMiX': true,
        '7AbtUvf53umG8eDa4iCfes4h4a4VQ62odawkoXg1v8X5': true,
        'ALAL4hVacibupwxsiiVGYAskjzRXs6c2SsgwgG65Na3n': true,
        'BpHYTeZMjm3oryCTXjFJHWLu6MyoWt1YX3zZnzkd6kZu': true,
        'HtFny8Gsf5ZoFuKtwy7tFYRLS2MHakRhDJaDnx1JBX13': true,
        '6za14ZgKfLAkFS2M44cf6GEEkEgPYVrvB5iZrzDUemzu': true,
        '4ERqbR8ySRB5n7rzra28AmU2Tg5uiab2Do2QcNvFmAdj': true,
        'EzHhW8sg8aZ6t5fnrxJkw235eAfQsFVa3HcbQhnahR3g': true,
        'HwLK3QMbcujup2whSCxcUBwKhgETU99TkfTiEze5dfp1': true,
        'CBffuxpLs5qXTirq8zmEwGMe22dCH7VDMcg4VTEQwdgQ': true,
        'CxovugkBz9CoorDMkNVTseNAMhbrnZC62D22iSTqdBBh': true,
        '7cxiq2dABfTbzhtTx56Ua4nYjY62J6dHQ6e9PxXN4qhU': true,
        'GKTDuYV4NvEQVqKwtZB8ZoSvGzCL48DAaGg5exBtdmh2': true,
        'DFH1TpCQ2VKTX5Q3hUz4TKarGjAwxBtaTn99JiuqXN7o': true,
        '2MFqVeAo22197VooPwoJBKRJ5e13YkPCP9aFeoa3zMof': true,
        'DCDsmFdzhs2wDow3jkjCSfvKyYLSHcWPTwJuUwwyXkja': true,
        'Ex6SGtCX3yV2TLB5eT9qckaitKYtSGPMq9pumhE6wBrq': true,
        'DWdwr78PjtJBUpYahQjiWaBLLZDNGrGdYkAWGJ1n5LyA': true,
        'BSSWofmPyfb6QeDDQvq5DiqnKu7ya8ucDsfSigveLMRR': true,
        'GsnTqH3rpCW7ptGGo8bcSbV9CCNRbmXDpFutH4qG7T7z': true,
        'HFGgbtposohoWdHMD5XjoRdsu67oQBRqgSyxQMW1MmxG': true,
        '3kRe7HWjhDnhyqkmSHRCuKWUiNijaMrAzStdmbx6gmTV': true,
        '6cQLja49NUgYx7HJyP4HkkkFq8LWY3Aje5RakjWJybe5': true,
        'HoKy5AtnGNHnesUyFEbsEodGTQ1oNi7uKV2waoxyEtTC': true,
        '2wo1s21d1Zh8ppa458qcUoQh8c74xW5pyVbFPU1sUfkz': true,
        '7NZdmFLsVk7zhGjKb7CmW1n6Ev8eWFxBk6ohjM3ZVqkp': true,
        'H5o1xpFjUSstSzGYMXRm21MhhgF6XoGdLoowXfMGMGNJ': true,
        'BUNpEP3qS3MW3mRMjTeXbAV692NBuuViVKiiZtftosaV': true,
        'BPXRK6AP2ydKKn2vLP4agsEmPaJgXUtcrbWgUBYvt2uJ': true,
        '3H47zV9rTrWge8gkWbxyJG4WMRQFiAfqUW4dXRJyzr5d': true,
        '5GxtxZBkpQiXNaNVThnTLmmBfKDMkX36nYG3AmhttiA1': true,
        'xefCvyymAWbxW3p7mABSbKW6kqVY36GhSr3B5Lmt9nD': true,
        '6PfMSm8E3izL4nbi14Bs5rsQZ6skMGRTNVepD6EvQ3MN': true,
        '4SnfgSv1JYZW9S3vH6LCuLMgfNV12MoUVkGeu9kiDyRo': true,
        '9GGTr8sRMbyb8wWi6dcJGDQR5qChdJxJqgzreMTAf716': true,
        'EPR8jhe4BzPM4sUrEhdkPbhoScDKn7FnR72DQEuDaK8S': true,
        'ARsLUFobu16BY7rai19Y9fqxKiwAGsDnFZyYCtLBVNdB': true,
        'EHRs1PsYJFGTkTCApG7dNFLUGEu6QuUuPYbgYy8mJeAh': true,
        'BK7rY8c7xeGkraJajvUmhHeECkZKosfmi295vTRwDpJz': true,
        'BvzgptJ4Wcc4YGRkojLtRCL3w2uuw1YGu3BkJsFzVnX4': true,
        '3k5jqUwJUntG6UHfnJpw8GQCwbgBeTs9s4q3npf8VvLn': true,
        '5js6KevpPJExqC3e2z9zfxk5exR4RgjHjkTfBLeGy1sQ': true,
        'EmwYu6ghzFLwRjja1LdVU1fAh4C2XdxMZxH8WCSHAPLv': true,
        '3ig8wtHdFCFko8mUidnTswK1H6yEgksjrmu4BX6k8fR2': true,
        '3322YhET1nLGnZEiSA6uo3WNeJfZw7Ltuc5usLycPYen': true,
        '6qLSwfZGxdn8u9DjgTXdJMfj5SBiC23KcFscwHB1ZUcK': true,
        '86cAVtQQtS1jak2vqP1PNP8SagTt5AU6EQydnm9twNRN': true,
        'DZC4yqqn7epgJDrWaUoGxp75ub81burtfa1jypVh5r1b': true,
        'AHsDF6NB9AtL9vWZHpU7ehAYkJVgVs2d2XdTbLSMSkqD': true,
        'DdCapWdvKUJNL7NMW18yEzd7tJgscsYFeRc9PEzx4aYF': true,
        'AGfPLg2JdLa5LcR4r3YEwXteR24zQ221fDAK922xCaoh': true,
        '753EZUSUR7gVirveRMGL8jbesjgGfxb8xbHcDFsfMS4s': true,
        '37RF2Fn6w583MaQto11J5f4SCPQSzKrMhpjkFCZo2hKF': true,
        'DzzdGx8gECz6yFoTJggSP1ZF7q9n1M6UuLzhs5tt8CZp': true,
        'GXAGxHYR7oyrtBH2aAozs4f27eB3uDWj3gndVKFnFpmi': true,
        '6pYioutq64BBip1jBhvZnATpYEwt7QVPpcsGVEsKvVRQ': true,
        '7gunFDniB4WTuemRgJgJXsm2fMrEjmHNBYVPu8p2Mu1i': true,
        'Aps3ZdwdYBQx7SVt3Wpm8AafrXUKNqap8iuA4DvJC21s': true,
        'BqDoPq5MkomxcQy1Cae45ahhzU5DTLqRpwsdGGiGf8wi': true,
        'FzTvCTnv1JUFWVt962HCg7SskRHiye2dehHXKSrfXdL4': true,
        '3EKLLxa6bnTDRwrGisucRnfjZB9a5qBrWXhFqZdVKExn': true,
        '8GTgmbdvJxCLt6zPizDh8udtf7RFJieKkS7NQLbNArF5': true,
        'CKrN1XBuRLVf4KnkNGHoLQ8PTWTEV8mR86iuBwVk1jbm': true,
        'BFSDZMqPbYmKGHBSbtRznVyKETdHh75yYrJG6TqhuZ63': true,
        '6sjGnd2evcZapVAb1548RpMLaiW5WrSvE8abhLJxVJvk': true,
        '5xADhaU1kkGMUcSV8r2YyQGPdyDtBtspHqvv2qMWEof9': true,
        'FrXThnXfdxzeqyPNT2EoSfkKChMiCR5uWxvUxTrw71gU': true,
        '6NarUvLRPeopvpmXLnYeBhB7i5BzgrjrGSg4mXb3z5ZM': true,
        'HsHQ5bG182ZGPJR4KKRJwknyDGU6c9rMRgKxJ3XbpJkE': true,
        'Go2PK3v39TVw6EuafGcW1JB5eUBCYXT9GhoYxew5aaG5': true,
        '5fMUzjhtVkwxyUyDPzSZuCz2HtpesaaTNMTRsFzZvkP': true,
        '3oChzmRLjj4rkUKngGyh6ur6YqFTE2q9WBLxK5cDEZYY': true,
        'J7CTygVCdL3Jextv81rLU5FD8oCj56FtSmivT5We7dgs': true,
        '4dvfEs13aoMhqnME7bvnPBKDaRib9QS9d4Z2xxPgAisf': true,
        '8dV1B2EwfqtRL59ffBkWP6LcaC9xRniWBCXNnRPbpPFE': true,
        'AtZtQEJGYhDi52rdBTcnZXkPckeJhcLKGicUXBUa2WVG': true,
        '6147ZNT2Se9hKuZJ4ACUeWLonSUspbGpun9xvNE8UskT': true,
        'wUBbMyitebNhPYG8EzqVbsT4DFR4S49pwQBqvQSZ3qx': true,
        'F6YD5SJ5Gu5bdtDstWRsVL8zLxsrye2xpuR6P5uqHcMB': true,
        'D1yNuTJadhe4eFx16zXsDWd9yZUBX1gqfbeaxNqiQe4o': true,
        '6kZyrEnwx47to74xPcAJRrQMccZR7H3kwXuAX2YG2FfU': true,
        '9ouAQyfnanLykEASqHSpxf1WmQHiGbbd6BCwQkwwaHYk': true,
        '3HCcscMHQLAdsdjGJQQG7ayPiSZZwBqeKDbLaxJBxLTy': true,
        'ASnUWjmAGR1pYbSXUWcxJmicQrdwDro7FtWaqtCHnYza': true,
        'DbYEmtSaRrU7JF2cpBSP8gnX3R5pSsGCzfUUBiXMgtju': true,
        '6dYPoMRD5AZj4msDgPmVizSxu9HYQ2SvQ2PbyNedSjw': true,
        'CSLkh4bEbps6ViS9dBzWQptFgY8TK4UzbrU5QhCnJgWZ': true,
        'HHM3QN6BjWirnNqXpWVgbVZUBjEghcdDAx1i2AWxJw4q': true,
        '9AZCzuHhrrg6TGyJvq9Fk8pYJCb1svmDGzfWtDDB4NBn': true,
        'FqsfJ55WogcokzhE2DmB5yvTSfrCYS98Z7KbARBv889k': true,
        '3xL15wS1sxujjGGnV2A4iuyx23tGr3YvJmdvyE5Bmkmv': true,
        '85Lpuwh5cXZcSGy646obGyJFceMywt1UH3VYcJtoFRWX': true,
        'FmGEJynDwadziNtZ8fqpjhmrYtJxzFyBb93qyF5ywGF3': true,
        '3bm3ysRuBFSpPXzTVGuYPvh9g8JUPVyo75Qk3wHxzTvc': true,
        'GtozexfTPBPsBUm8x2We6QTG9hUq1GCcRV59xfDgAYQM': true,
        '8vpnbNfAbb26meH4BpXszXd9iAGr7TYfWafSjonXyi1M': true,
        '4KapQwW8P8A8FGFqYQA1q8wbydBUymapLyoYxTXSjPsy': true,
        '5gzSj9jNLsZwwZuMGRKodsuUpb4npP1GPnbftFLaCmeN': true,
        'CZRERCosPCoXfv74gN8jExRPXKmuwpRALPn969bUWz3W': true,
        'GR7QWobqV69uJ3rwrNKr4vAi8ymE6QaPRRcfU18tPsdE': true,
        '2ZBFiWctSdcv7PphTWXTvUWMatoxYUwCpcYnTqB3DTdo': true,
        'YXuYHk2eAxijNXcWBAMRZvvrk8RpxADi6ToWYQ2Fau1': true,
        'A5HwCWBe4tLVzDvNCRYck1kGjb7VHvumx7UnxhodsAJz': true,
        '9AH4VeenRdAwMVPW8ohwe1x3vaTpYWHzLJdJ9nb9mmdb': true,
        '7srnPVCq1AdfDEQZaHfiKNVam2EUHkB7cdRLEv8UTLwP': true,
        'Bi5NR2tmFSG8FKG7VHPLDWnhYi6jZ5MND2P4gyPp4PKd': true,
        'B2RzEEq5Ua9sMnKuPqSqaVtBbwpZkJ7wWzwP2QtHb2tz': true,
        '5cHeWfcYbr1JRBDzpTFws6uy5tfTdbgVkkmDW4X9kUHh': true,
        'CdmgfGQQH7saRZffeWXSUW5W2cn7321vKBdii1WmDxya': true,
        'HfxznYo41ro3Wz5uTWKPvo8ncB29m3A89utQFpupMLDa': true,
        '3v5tvz71tSdyaEqUFm7xLQZ8sT4PsvfS8juUyXJBAxzn': true,
        'C3ExSk46QbgDNFLPNqdFhpscQ1ZuVLV4FKFqJx7dv5SZ': true,
        'Hjtc6iEPkBPv3zwbr5EiGCfCzetby1sg1eV1vmMkPcGC': true,
        'FDKRmqXK5DzjoQMNsSQXvFXQZwV7ck7GBBvFGYYWKXZc': true,
        'Dy4732q6gMoDzY8pq4JoUSzmhWJCRU1jprYtUeUuE7bm': true,
        '4APKErHxHG2xx9eU3L4Ac4VBDTA6po1uribciMLtA9PX': true,
        'HTHigPHMXo6YiZabbWpWTfQCdo43fG1f6UvyWKDEA6ko': true,
        '3m9VDWTDCo2uVrrz4DUyuGgonaEXjwhWQ9QGhia5zY5D': true,
        '3z7RDztWxhg24iEcz5HBAH9eH9gsHMPcm1ujQ1cit5wt': true,
        '759wFwRjqeHvuuqW8fEXHFkQgJwhoYEF7vJQq4Peyxai': true,
        'EU1zPEwtLdPHjM7BqM2RYuweeM2XagZ9p8THjiY3rHyS': true,
        '6wuf2XSMQrtjkisPRtVMmErZ2j1vULtYNf36wi6ETM5N': true,
        '8d7YTvUVLFhqsWVt1sFZoa7fEM1SQKCpDmBKqmKg7mmD': true,
        '94Qv3XFy5bkQ52zRfmkDbiDyTPmXWbx5s7UA9yBks8Xt': true,
        '29o1m6RH64ugkoCBTKAxFxNKY9DrWnpnP9L3T9R7fm5C': true,
        'D5Yx5UtqzLxm9BnUCM93r62ihZWuVxb1uPJUUj2UtFBu': true,
        'Dyi4VhQootf82qb74Pu6tcaW91Y3bFbCnkik3nfuW8PU': true,
        '3YBADA6shPChxiEkfizXzxWzcRUSv2zZXJ6jfakTV1Sj': true,
        'Hpdy6YZTeGch6nV7vykt8NkUmQw6DMZdaXdxSJYqLxxx': true,
        '1odiq8Kbx493cYwPye2irtz8Jvj3ayFkT1tGBcqnuYY': true,
        '3V6Lj7HpB7xHWqiqFDranSzToPpaYH4X2FDd2aXcomhL': true,
        '4dWWcy2gy2SHXXLFWdCcKCZSkMn5bpW8PcPmrkS6cLN4': true,
        'D4BZCV5hJJcQmAG3iPHxuy9g8H1jE23yXVELbSJo3bXN': true,
        '4c8FbaRhJCMCgQigvkjbFh6eugvASaChM9DS4ZDJ84Cq': true,
        '4D56mNr4YuPDnq11hmnDpPBhefy7NUE4i1FAf63rC5Af': true,
        'Gu3capGQqU3MT7oX8wxvUHK6C3idsY8XtHe1NVKdwwr1': true,
        '89wCSQkvqnLNDT3GMkoiPnG5LYp8mDaMVDCc7M3EGjbb': true,
        '2hnad1UAM9FStgoUn1ZHXLcJRRXj57aDoQdXkE728Ksw': true,
        '73J7iVv45TXWkZw7dNHVJQwWGzoGwgdJRMNRyPH3S4ew': true,
        'TCK4BpD2XVzFtfJMoZN6GwfpWpQ3fQTpPTZo36TA9HP': true,
        '5NQTDaoTiWgipH6RazyXz7uoxu1m71c9Qf4Wf9trjSRE': true,
        'pWSsuoQTtpsuAKCq8LNp3Cqqm8eChEGAkBjRe1nYU9N': true,
        '9HptMBNBg8JSbbPY7N9FEkX556ovHccur1D6yHyL8tBk': true,
        'DwKF4fri8zU8M1VQZvt7k5EwxxtFm3zsZPozpqummEY8': true,
        '6Bvamx3wn2XjZcyC4hH21E94citfnPWngvpKHn5y6sji': true,
        '2yLEoo6iPQuVcLJfHeNcMZAYXcsvoKCQsDFvV2KLnExG': true,
        'GhyjdfZ1W49N5TjQ7u472YK82tZctmhLb1Cc3u99CaPW': true,
        'BpA17UDW7HYdDuZ3rzMCqSuNWB6f5ufdXtpF1rghRQzo': true,
        '5LsNz388NNTBDZXPAy6fPJ6kQ1Q896LzAyouihb1SquW': true,
        'FphrWZjSozyV27fi5HGbBs5aW2QiT4CqwDQeZVmxPnot': true,
        '8SnEgSAe9PgoxJj9hdXtjExdgD3iFuRW6zXmi6tA87yX': true,
        '8LYYnrgmN1NJ62KApdgPFKkPBeV2tKdsS3vQgW65eobh': true,
        'rR97nDDH2f1vfAArGKnFfhDTwYfNkihpbbDguvsJgj6': true,
        '93iCzknb3ADj3fDisLkuKidxZ5MsKrWGLhuXWBqTWt9y': true,
        'EcvxWBZmm2JpkNm84K9qShgTXfmxVvKUNWJhX3BhgV2C': true,
        '4V563u1Ks4LVmgev8QVsE2uu8GkAqiaxAFr9z18mL49j': true,
        'BtZ6sTjS7hiULvPd2j6Ji5tjbEf7pDBPYkowFy7PbkX5': true,
        '12xzR2JqU1oxJrEE9dPccpYohTZUhSXrK8G9dCeaQZ37': true,
        'GR6jW6fBr6YQ5TkBMNxauK1pugVenrpGWBjFt4GF3gmZ': true,
        '9FTR6tvkZBUG3bwcN5fPHDsCBm8pyzBrE132hTaa9eVS': true,
        'B9nqXaWZBa1jcs6KqHGPDcGCMKb2pL7EWMj7ihbEp1Tn': true,
        'Dnv33VtmZuGghBo4XAEYiEyX2U18XvrvoBLxKtq9YWDq': true,
        '3kSUYNZaABwsot63AiheWDa5ohqyN8776fYEZzkeRWpg': true,
        'AxekHcdYq34rSZ543vmhFT6tNHTZSTSLyUMnt8iqqWR8': true,
        'ACjSxpxTdS7bZiDYEF9WSxabR5bTh8bsBfuTi6CezrgA': true,
        'HT5UJ9DyBi5EhY5ZEabStMWowXwQsVZokdXF73BLhF8M': true,
        'Gj7eygGhSqvuBiUyAUVTxDreEqKMxyxP77T54eqLvJJ8': true,
        'BJN5XvE9vpeL9ikUwksWA3MaJmC1TM1yrJibPCmLkgFR': true,
        '4U6Xiz5eHrgqpeMAULeXqns5nfFKGRmYhxwBZ3rdZkbN': true,
        'DDnmRdkL7h58PH5AJ8hWbw7Viv3Fj27MDhuppqBdB4oA': true,
        '6KYNVoXbpCeC4jypfeQf3Cp2YpaFVwT3qdvLShkoEa8p': true,
        'Hc4RPrN7nbZyaMQbWcKpZVeByfhLyypEbyCEXVrzy8NH': true,
        'CwZAvWYwVuy86AUjeGMf9FXNNsGaBNqLEtK3pjomdrWS': true,
        'CQ72MH5HGytAemCs6n6oniia7m4KJN3mFassc7f9rT1S': true,
        '2MyUe5WqyZ2sniFiCGPBKGgVKkfVcf3SeCJarMKzG3A4': true,
        'CTMVHHBZ5FXBxsLY6Fk3e6cdnWrvX2yovDrPy7YLeAnZ': true,
        '8AGb1efXHaAVaiTC9FjcLXCxnMZ5WiHBcHiZMLyt53mn': true,
        'GDAomXgmmQesSNyCCMJLpdE8d2xJu7uZQrEzoutA6qYL': true,
        'DiTc8X2NSCiXqHpaRGjv4eVMNRVUXJiwL6Hadhs2b8kc': true,
        'CFV1WhiwxeSjzWBqffBCybACon79kc19EArFpDtLmL6y': true,
        'BocXAHSo6sY3hzv74Qd6er1brGBfoPUBpAN3he8H7oyR': true,
        '5ruf5R8MXSxVJwzQxnxRqX9suWezQQ7cBXiuC3v7fVYX': true,
        'AFuyNT1jofRSpyqt9ojNsDf5T6MdcVrhzgn4NkJTaJFv': true,
        'CA9EyLFhhLSnYBTJci9Dh2j2abNyJAPPqcwJk6f69eNS': true,
        'xpfr1vtV7g7puBk3w9nW3JjiExHtG8drLBg7RMUTHAM': true,
        'Aitj2GzwhsZuVqLRJ8ry68Rr1UBYqkUpAmihRCSF8MeA': true,
        '8Zcz5qw9HJ3wbF8P2NgmECmCRF5HeRZAPRw19KPytiAK': true,
        'Hy9kMuYsGx3JVfCi6zFn8yzgivAvZv5fzJykRxh9zQP9': true,
        '41fHYfHRvwBVFsEnmCUPTfKwTfrMZbYuM626TWYj4tdH': true,
        '8k73jMhwu856dbJUUJPFJoH3M6CdQwaiLoFfNNksaoS': true,
        'EA6L5UjgBqvZhQEqbZig4s8tJXwmmTRQEPpFw49pYnvz': true,
        '7cxoXZLhTYanKLr7QCRfkNrEmD1tvDZKHVbxiZ6vhJ96': true,
        '5KH4p8REFncvdeiNTTnNqcnXTbCY9c5uR651kRh2Hf6X': true,
        'FZ9S4oxUjDrCHZPT6kdTC3KTSGeG9MEMwvtWBsHoND7h': true,
        'DxhGcLxNQmXvKykZqckKvtiyLRJbP3XPK8wqj1mTJc6A': true,
        'BDdjJvhebXKzm8gFGNobfzuzjVJWP6aM2z9saK4kuRi9': true,
        'GSojMKT52fWEXv4GXiowVJNYnh4zZr9kG4JwRzuwyvEx': true,
        'GA4KfmCCG1gH3kGRb7wmJLGoA7moTbDk3Eaw8MCUHWRS': true,
        'AD81zhKbECb6pTNHhXtAogLVqFJ42twSULb5fcjNwQcy': true,
        '9Ugr7SjfGBQMgFTKTdkTABkesSpfHQ4uxRRQgRKSUvfs': true,
        'GC1V9HtoBCzu2Qsioi9AZhyDwxfWLExTeXhYHgmZiRMs': true,
        'A61fmcRNFxLmFuXqa5d2VXVerbNwEx1Mg9Rk1dcCYCun': true,
        'BgtZL1oJSNSkJgLZGb6mTPZaWgs3vsFhW6MdS8enegsH': true,
        '6Kw8D26aLdGu1AajvFmE7eM947UeoA3qkqQvom6dHUwk': true,
        'Hx3twK9xXkJEfz7qr47xWC5NTVDvhBvnfuAKy2iLTqKj': true,
        '2npnN5aEycfz5MNqR8FPGiAHbzNuw9cA6g3RfAzizbq7': true,
        '7zSrrpv1UaxS6esyFiXs1wrYoPqG5mAgHAZofZF4Aj4Q': true,
        'DCpJWe3HGcqMAyCQXqXmFziuEeHqtncwUr2b6VaYWogb': true,
        '5kqZV9XifVUNsqMaiamcsCG7yBrRefvpFzC3sj7UN6gq': true,
        '5SXx6uuKQhLFAadPYYgq4aFBF8FocnvNMXuhd5sbrUSK': true,
        'p698nFjADGBYEk85sabRfamvaTFGJDFJN3acYZakC9d': true,
        'FZv48rUwAeqmoaC1myYE6a4P4LUC9AKhQDzQi9gdhpfY': true,
        'G8VKr7zjzKr3YMBSivC9CgM4XZw8tFzGsZwPyNBaAEt1': true,
        '43U7QZXjq6kipkxG3G16DuM3qRyc6puJn2sbcLZEgThR': true,
        '9rv426gV3qefFRq4X7Ui34t2Gv1DvnFwe2hiqWwm7omx': true,
        '6tgqpPEpR5sRtLrfQj9q7mqr33wMEXEhsCNyPKmXHvLo': true,
        'H7ZZT5gvevpshTty2B28igCnTs6kPaEeoBGJKpKPAUAD': true,
        '3YnWfTMYoCBXwyUwzSrmyz5qyimMWYNDh5StsFys1T3S': true,
        'STK7VW87MXL9PDZkBx898wNcwokALo32NdpfvyHGovV': true,
        '8x9oFfmfQRLNaPgQBn9uXs2cde9jiWUn6A1r8wjQ1sAM': true,
        'FsrQYDJ6ZhtWpRHMJSQjYS34BrycvpNgaBXkAvu23GgG': true,
        'Ek31eBNz9tDaSvdveyLcsm7MDZPAmVJKnnchmUVcsvuh': true,
        'ES46SEu372YoBxNRMHXr7SbMtBx3r6CLMKF9unLm7otc': true,
        '3vKp6JsjZcY2NcLpsnASmRcS59X4BUj7isHnPR3KbFqh': true,
        '8U5QqqU147pQdZznG8rcoyAPnJDWBqVae9B9c4PjgNL': true,
        'C3Xo8fNvFnGeCvH3c28UhRi8FWSVRb6ncDgbhbdKTuc5': true,
        'ZTutavMbNL14fzpNDbEsu5Zpjom9BzVFd7APwza24ef': true,
        '5GF9461d1JoCx7XCUS8Lgy9bU8fR6zLQzSCAbziMVXUH': true,
        'GhzGBVGYiuo2Q7mtz2a72nnFwW5aEwWuw4HPk7i5cfvP': true,
        'BkQ2bFMfDYtbWMv2bwX6bFrwFQsQXB37fCbfGWjNHPpk': true,
        'En3jDbMw3mfnBjTYExhWvRCw8LgxqA83S6N6S3SsxJsc': true,
        'CsZLDLgmMZwqUmgfWCA3CgHTrx4GNA1nn6h2dfSzMh9Z': true,
        'BBUZ7k4KsYU3BCu7vx178pJXaC2b6FMCjV6X4yQN8VS6': true,
        'G3h7d1xnYhGZPw53Drt33LXFwgkf3apCFt1tHC7Y7qkq': true,
        'DDuCt7qSdKqpiy8f5iSwkgaNRgH8uUidJP2tbVZmxAA8': true,
        '8gTEBUutnEtC3SPivx7AZjMeJkBrgZMQXFj43s4Jz9Y': true,
        'E7VGQKuE4UhS1d4m7owUaBhyDNSnrSURZ7MEtLxzKARz': true,
        '6dJS1XS3xFZpKiEgLdMoDfByWzCuSUZaZH94wzf1qdnd': true,
        'r6heGnDsrQC1fMQ6JWVhXw6ph7pGq3UMMqmju3Gp9RK': true,
        'CE9MPeJGK7ka8BRGz28Kue9kKrBZHTDdQKqNrF6GHjXN': true,
        '2rg9T3oxbL1inVoSUXE9xj3WrmuewDPDrAeJ3WqsMAPg': true,
        'jqDC2KLMU7Z1rMZG3SgfRPyZFyfWP3EwUKuq3p5QZfQ': true,
        '5iYHumQ9cJ5HJ5xgsjjbTgEhuUHMgemrzxz6z4Zr3bC8': true,
        'eYXvTn3c5Txys6dUqZxGna6LBuc1k9tewhriPqmFJYu': true,
        '8rxueKpDrvt6jjfo8fgVkPn7zazzN1JTHrbqsQRZzcs8': true,
        'CbWWja1stffLBGTY5evcSk4FkEBa2SuZ3zuURJcKVo9f': true,
        'CYcTq1ibd7EocTcdJBg7CYWHyUfN2QWrkuydrniaQAdL': true,
        'CxfVTDtiD34FRy1CP6AUQecroZGmeVuYwFsaWTtFFuKf': true,
        'GQc4P7wPTQFYkxfznNmYxWQcy2f7HdNtaDbqZhFpdaqn': true,
        '2ULotZ7Lrm6hGw2uxkUamUMFqS74cgyGbYhvs9pLPvXQ': true,
        'PSjDy2nPH7bv1ibzDd6H1kLBjtDvPn18957V6bQaibz': true,
        'DkPXZWGUE5Wjig8pnnNSxkX2ner7sJf7PE6Y2EERgQF8': true,
        '2S4T6VhYLkuKu2qwcvwPGT7X6MXc1HiKcyeW8vFwyvKi': true,
        '9vJAZzWp5QXEhjos5fMXPDydBq7745EjaDycxZYZLS4r': true,
        '2GQYqC8BSGm5ir19f7rLLCWZ9PHhJW7azZJVBxQuRAxF': true,
        'FvQ4agb35FLq6rfpvaFUdkNFqguJWEeaa5dccGnXSXVv': true,
        '4PXgNeeaN4zUBejWQrUw1co3KdBXG8Skg8M27WvdPKUK': true,
        '4NiXYVNAGqCrysUBHnKke24pZmcfP7gFqZAw1ZASJRkM': true,
        '4k358FQNYabaVj3668KfCMArJdi7iQxsAnttwvK8fpug': true,
        '3bSupwdU7wsrhUdhi4yseXM9rruu5TCDesbLU4aQ68LN': true,
        '2NoxmrzeRGxhaAksAX5j2BZnHzedTdbsEKz2fV69mPiP': true,
        'MQNGSLcRHKNyQtMqy93jhpw4mYc4WG5oYrPxaNgKaUd': true,
        'HxwPpL6mK13kyn4wkthxJFETTTW38SJNpaLNLBnw5o3Q': true,
        '6snyTQxmUERWRkg3GAuGmxo1CCExTpJmtwWbQpNcowM4': true,
        '3vUFbdKQKRhHwN96qNLCtWwW7f7kQZTaiMTbC1y6z3UV': true,
        '7RmpBhYpsGEbjCBaNuwLGJhB78bmXUAANKYHsyrQt9oD': true,
        '4wPpY1ESzT73MobY9pQVrNj6iWcnebyLUatDxM2shzrS': true,
        'DV8ejjmqrxmAQbRkvxaWQrSxekDf3oMFB9h9qReuKkzs': true,
        'GmiX4XVJ5WU5rkkTcVrM4YvqiRatvMevWZ3fiGTbm5PP': true,
        '45JFfAzsGaByAxjAtzsA92odLZLoDA4rGBK2QjXNijYD': true,
        '9DBanuLZHRJmjeyQkckESrpz7LC59yZTcxfwUfJS4Nos': true,
        'Ajnh47hC7nTJe6cWDKeyCbqooMP3H4H5rXWJSP9RgrC4': true,
        '4ssWaUBEsMSqv1i7evGpfKZUMfbaZyd94WqqxU8HiAc5': true,
        'DzZc7uCBvc3HACcZdL2rLdBGxTcJKjfPTWhtkXczBTf2': true,
        '8wriEC8qCUPWc99YJbuJtghgaj1H9FkETheWjaeHMR3r': true,
        'C1zzr67v3b7MezaS77kJrT4MDGtQdCsd5HUfRzF4xZL4': true,
        'Cf2oPbYKCsHLm7yk6iaM8LziUiEEBnhqTiRifPeSNwao': true,
        'H8zUj7qaZLS5i7CSDZuwXFQzbpKKRj4bvJTeGz8WE3N4': true,
        'GoS8u3tb8LD3btNPkVv7nJB2XqSJHJCXjqag9JBxFbMV': true,
        '2BwDhiVNbP2JpHe5mD8vn9DBwDyPtWZ5GtzhrSPNjknc': true,
        '8CmCuGVz4jzXjg6yofMDtFkBA4iaz5uXoTkpzb9zSRs7': true,
        'Af2RpCPxn6sEeuSKjPLqszTTdqJ5ZbTje9mUzu4sL7XR': true,
        '4vt6DRnkizMVMPgZhgufkQW1mmg7CDmtNULY2akbjA7b': true,
        '32BSXaWaoHmNecc3UwkRVeAj9mSJnhZEXd4gStH7QrDd': true,
        '76xcvywShqEKy8YUtQA82ZK9WbHPoAPF9E4rTFTrrsNj': true,
        'FePoVQuSLAtXHWzdGm7WbfMdKUHryow13fx1BAP27kF5': true,
        '2fhnTLn52Lg6EHE7XKM6wNRoJt2LBinxjFp5udE1Jj4K': true,
        '442YnhjVqG1CYUGk9ohyqBwvMqQ872Cyns4jt2iMjxs2': true,
        '9FoZJUZMAdQYXmfzVvRib5mafxsXgLox96jPvXHZvgHb': true,
        'NiJgqQ1TAcAvyDtwsXSCzDD2XJgZesRexJ6spo3nfLz': true,
        '8QRzGrzKmGX996cE6CfmE9sjJ2dcQ1BzbtYjPrhjaJUi': true,
        '9mfzEJZhULck5HruxTueMfJ5D5LJLViB1KEvh4i1a3iU': true,
        '7hNxxKkaN3GAfJGL6kjuDmxnHiqMAXTM25MvzB5NAuHK': true,
        '4G3rRa7mkzt9j8tw5Y2nA4xvdvT47PGTJpjf6zUioyha': true,
        'ARSinrLf6ju15K1MritdHHaviVi8Tw6eovzGwDPLun6F': true,
        '2rbg4Sg97FGGWwZWUqxcqeN8dzLD8mk8Rdp2u5QZbWU7': true,
        '2pTzzAuY6CVnYP6Tcfe9naRwJUJhRwfM7U3eqe7zjK5k': true,
        '3iXiEcNvi6Ugv7QAwQa8UFCu1siBaRWaMAQ3s95TB6vN': true,
        'HXb6zZHVFJNHsgfwPywvsmwUsrp267RA4RtbSvugRF9X': true,
        'hzjVXHBgkTZzzQaHRQC63dKBycZ1TTLaz4Wo6VsN3ev': true,
        '7ek2sRFPSqZ6ViBAwgFtBAAkzrevwuKL3mAHmgVfd5jJ': true,
        '14QaLJX12Mm9yEaLjW18PzVGvmHfAUn1EQ7cqYMc2hmE': true,
        'AgvzKGk6raKDYYKJFQCkZWGFKkVwZ3c3ZGjigV41dRrz': true,
        'zVP96SfWKaA52i84DhFaQx4XNhBeZB4dCdd2uaJrY34': true,
        'W1jziYbbiDr9U5JYHtVp6dZHTUrTVNfbXhiKTPZZaxZ': true,
        '7GEVBUekwn7eqm123QwYBL1aZNBJooLUzhRzybvUX5Bg': true,
        '8aRqZqgZW3NNWVYttDmKdj1cRaHWaaZcVa3aBAiF9C8g': true,
        '6aEoLNf7qgDGU6F8xDxAkkmGmLHaXPY8b1sYQvbg1rxb': true,
        '7p3m5Z6doEqYD7VYrowTQsrDrDasBmhs8arHAS1ACDZX': true,
        'B6Zg3QZMKg2GNNgh4rwMmfjBk8BAG1nKL1xKhs9MZsEP': true,
        'DouEa2GqJVufBu1PLUF1hf1fuBDKMgpCnS5xHKB4KJz6': true,
        '6MUT3EPHom1ht9VSpH7TMVRP4NFJt7dsDbteCcxxyKaZ': true,
        'Eyxs1fbTdozMRSaJbTeC6HEDShWBr8YAggsZVioQy6SJ': true,
        'AMKGnzaRiUh8hEhbPKL4gRjJ94Z66X4w8BmScuZ8TBk6': true,
        '4fJ42MSLPXk9zwjfCdzXdUDAH8zQFCBdBz4sFSWZZY53': true,
        '8v7WRnMrBXddsFsQbeeE6shWxEpQmJoy1ZVY2FmwjA31': true,
        '3q5LYBtGiUHUqsYSWDVkqy1M6moWwN8uZVE7mYujzPEh': true,
        '8VdaeTXNCSJSft8QCjnBuhi62cmQ2pZQM7QiTWiJvcJV': true,
        'HakbNvCdGVe2nFtjnE3x1SLh8CzZHqSg4yWfTBV1cuFW': true,
        'G41W7yyjNEv64sck4eJ6erUyo7WiqTPfdt4ycZuL8DsX': true,
        '2DJi8czPmDzJsK44fcaJA8sEGHBvMHy2KkgZeBsGK6Kh': true,
        'Hdvx69oT9Sye5LuvfR7cJR9EjFDLAgkhp3jHAaGFxb91': true,
        'CAgyXQUytvoaf2MyFTiurpbx1hegVyPSkqrjqmtH9tuQ': true,
        '5QpLKo2x8R8QmKZFhiQrhYCXBthoR6MqDur5GmZD1SM9': true,
        '5yKN8uJkFYneyc8Pd6zCbNCnt3HS4ANVA7XbZp8yFVHR': true,
        'ApnHXb7xDBUNLcggKHcYokCmvCmWmmcLPKDW2fFjTm4g': true,
        'ArWogbkS3PTJ8KRX4co72pJpw7X3ohVasppsChHWC9UJ': true,
        '8wwtMZGf7tNp8HZGWw4hukjqkZnjTLxx4jnJ4eAhMTKH': true,
        'DyMN2SyaYbCrR1c5TyngntUxFER2YhkT19o7vzN4hFA': true,
        '2vWyKtXxFLcL7DoDE7ajRZDkWMLBRprmxHRq7JP3mRNb': true,
        '8TF8iyEgEiECy3tWUJ1hiWhoephP6ikbzDpdGTVCrgEQ': true,
        'CXK5TiP5kRXoZJGz25dJzA9USon8DPjrAeRiDAtXe8qQ': true,
        '5qUzg7WZHi7KARc72EfdMnp6cptqXCPsCQGLCmEcanek': true,
        '4T6zGbNjveDRqKX8gXVqCuvcBWsCnLNGccChkHtMr9vh': true,
        '2mFwCrEEbqLtg6Ve6uGSKhTFe6EFLBQCe5kx3tfW7Vza': true,
        '4VMroQcLH7w4J4GqBsrbbPp3KM6uvAmBYsLsG8gxK5nG': true,
        '65RzNFduwud6dTMWAo8E9hv1a6dHTRXvjmzLcqgbgP3M': true,
        '26fw2MoS4ByMr3dcFW9tuJHff1US75B4faoY89sn5DCq': true,
        'Gz74LLAXDmkwgeWYAdJbwiHMEwUaoH1pAbt7EhgQepTw': true,
        '9eMFtL9HrUF4g9rMtiYUx9Y5QdbAFcg43joWFKRqCA4f': true,
        '8tkwV5Mg81tvToKVsNFZw2c1A8QZok7DgjAmVp99hmVf': true,
        'GioFW8e4gJ65YH7YqgESQjqCHvNE57NVWRoDCdRnupHa': true,
        '3VWooajGVPydytWi9LJhqHDtHcq39kCjxV4otbAP5Cie': true,
        '8Rt4uaPg2HSGqWuSHcGtGnPJwJB9m4BNnF4UzABMYoGj': true,
        '8TFznLGY9MkXdUiEiRWESCG9LdaKmXHXTRFrY7SQoJHC': true,
        '9PHnjS321FT6YFaRrFpe7U5VGJy5oXzQopBehh8yVivb': true,
        'Gp9h4oFSm8oJ135sCBWueoZDiGTnKfvqdvH1cCSL1wWt': true,
        'AYnucisBwMEhjWjkXP4tHwW2b4h7n4f2Uzx7ixeTrY9j': true,
        '4EKJYjMojozGyAZTw43iFnBTaNPeQ3i7qCbDgcgGT35D': true,
        '2QqkR5JRt1x9sxRW9ghoWGmGfKWFzgnEEbdjvWVCDCPN': true,
        '2K6EEFcbgKL8pqepbyziT9cJYinaAEhYydt3A83ph871': true,
        'EiW3jCoWfPqbaT3JVNdpgyrdXUuNZgtMEnAwwKw1JD2e': true,
        'BtCiQNrqXUxVDo7z3KrNcTxsUBgVX9kzWAqr1MDyLiAC': true,
        '14AbzTi8We8dPsgDRnb36LYgiVYTuq5P6YVFgxFuDn7X': true,
        'GM8Xx4sGuWFkMfWtDizJMTmNSKA2Tyw4CGn1Mmp2QVSK': true,
        '2omygTVFwT1ERoewUBmT7vBv9sqiz6dEymXBnRLCLjFD': true,
        'BqpcLuLH1J4KhpwM3fJW37L7Xj49uMTxVijHoogyiigX': true,
        'YfuLD2MBQbu3tGgoCN9xVq9oDc3nzLJD7EcxsmdGYVr': true,
        'Disr8Kk3nNCJfsFZmSiNJ4bLZyNkS257WHbYyHYotx6b': true,
        '3ArrzVjAe9vdW9w8YaoF9M8uBRWGWNvckvFLBdcMoUoA': true,
        '2qBNwt3catSQxUo8JFGb2jbeaevwNwySy1j7ZviiZHRL': true,
        '7gxLTYKJXk4qYqdbv82tEp1ycAJR8aKjZrvDhNgp8CSg': true,
        '8GUU78Z4StzDCQoJB2WDgkoUYbb16FbkyjHE4zGtM9sp': true,
        'DBepjL3477FP8fZoroUnor2QWHzkgVy7Gexv7WBVF5rV': true,
        'EhZZRwvBYWNmwWcCT7Sn8AAmaMAYzpriufHWFENK953f': true,
        '8d3pqZXfxBFgCtSfjWN2FF745x8Hvg8oq1mNqchKUP7e': true,
        '8sr2Bzhz5Tpx83waWA5qPS8BvCS8Vy8MUbs1X3xYztc1': true,
        'Dc2HZbBXdtg5o7bh5U6Q7bdqcuQt69o47MVvE4SL1Jfv': true,
        '9o8vsBNvpDXDTCspFwgur54AGCXp7dPu9MUtwojwWimB': true,
        '4kKuSPnxnNB5jZtXNs4xbQ8KxcVfFKyaPcumT48sqMND': true,
        'ALX2XhDzsaE1kN2vmwfPTwQABSBUcisJFXt1AU275rUr': true,
        '88QFobjMb5AGKJ8pq8ZDvSopi5XtNYkhUSTGVUi5TYki': true,
        '2k683bqahsKsdbumnvuuprk3EAs5R21za2ucqANucUrT': true,
        '9iHEtw2JXvDZF8yXVdi79Pv4YSq7C8HWqTSxab6hR6VX': true,
        'JBXjqsqc9LDD44gdytx3LML84t33JJVDCbikZu8Y4wwB': true,
        'PkikZxGYXgmxn9oSRjmLiM6a8E2LnCeL5QcmydRDCbf': true,
        '8AkCXjv6iFRJNj2W1rtSaKakXVpKpULJRjPDBkFM4E2S': true,
        '3uepqPoSKaZmvnVznPUDWwBgPdtNiT4ActLL1PKkxKMG': true,
        'F1QKiVy9H8xQML2CRzzpab4Yyam8uG1emowTzwh5Fm2K': true,
        '3NV2VzuKY3mnYcpTV8TuJfNY8qVYb9gdyMjk4AotcSiD': true,
        'HEB6nAM4CvA57cqcrvuVicPXYZgKoEgVmUvhkYj9VFVQ': true,
        'HiQezozSKkEjwrxbRa8RtBUTLFsiSW4UKqypw1jhDheY': true,
        'Qw9hqijeSYYEykM6a2P7grLLzERjhDgfpe2vPYmMHLx': true,
        'DP7DHeyMgGpiVJ2Gv5enzkxMF5BeBcG6ntvcNqNuNJet': true,
        'HLyA2ScTCU9qejHNa9HZdUfPQHkVSyEox9YTgDYBEJMb': true,
        '24qe6t3zyeCU2Ukjaiu5M7SuMUk2KCmxhCdqMmj2ZPTr': true,
        'BmdM9h7GqaHDXxktKBtEK6YaharP9tJf66neU5LYTyH5': true,
        'GkbYNahNAEbxMkt3HduZnh5NRtmgd6XjdSfv95FCcwxh': true,
        'ACDqZsPKssX84siCSxRhJWvWfDZJ4NYpZEqeUVE9ZqEH': true,
        '3wJbEnsgkxs46xKJ5pqyrJn3DyWjr9bSAVumWPxMhpP9': true,
        '44tNk3Q5pAF3nAQZNHXyubwALhh7pDA3LT1tP5yDRaGy': true,
        '2e7NeJQMPS4Lqv7brcqL7FD4Z7A4HueNR5ymia63FTmE': true,
        '96RQCjEFPd5V9cagjEwDrMfoAfEQ4ykUgXwiPNBd4uRK': true,
        '31mkGFnbpbrT9NTyp5n9VsmWvEjrESzz5w9h9n6jPs8r': true,
        'E5bTPWkkJWHREpjwZP95VjYYUPUNtTD7euodiCR1pzQx': true,
        'UALi74dCdZmnAgo4FkStz8nu8k6V5S86mNxdaCt991A': true,
        'BzQLM2J3RNhBX92w1nh1FbSjuEyeXLKqon98fCHohGSL': true,
        '8BmFTeQQWe3oXUfuN6ZrJyUJGUkSRDdEBt8F62J9unBe': true,
        '5HtYMme8QxH8CzQGCFQ1XUZ3Zf262tsvKpQtrpFEW9jU': true,
        '8Ah5XV39fjP2D9ArkSwkVcRAjvVzmMmAWAXkVdQf4KSY': true,
        'B9JDVD4x8VVdEdG5GDJ5DfShEnrL7ieZbX7P3tYwUJrJ': true,
        '2bBmfHnfPdRWnvehu96azWrmie32cxdtYXqWZKQKiC82': true,
        'H9f3KcZrUauQNhTyeP1sAKAcVEx3YPgivjgt7AE7hNfy': true,
        'H7YArjS75DxZPxu7Dgzc1ViTeYZ4pgueTXKybfbiY94Q': true,
        'F3kfTE6vuXTMLZr6H8wZBxsLL56GvUJyN16e9Qrc8rns': true,
        '13zH2nCXAj1iDSFPztVTbDcASMXTY2Qtj121yzh4mUya': true,
        'D4wXm2JmYXM5o3D9kgG83p2CKPBNCtJa3S74b293cX5f': true,
        'BUKjQKiU8sm5nVweKbQjUH1rGTunsCZgTvKEvocz426o': true,
        '8RnrRCLEnmEktgGddu2LpA2ZhJU3mLhisDVjJhKoZf6E': true,
        '5rZnJfbATbukBMmTuKSDcankFDeAW55NMvzzVhZeDJHe': true,
        'ECwyGEATopLwYdDHMKBnq5KM6WdXVd3bKz1MAG7xQ8N1': true,
        '4ifT8ejxCkxkWFNKaCA5eYAhs5TnA58JAsJFe4xQWqCG': true,
        '8FeHFYGVEqmq28jo3qUX2aDdc1ouvfb6fgRSjyApU1Vd': true,
        '5KAymEyqHtvAja9iNd8EHStnoLYQQJ1uXdZbqBjjZ1A4': true,
        'F5gAjRnVczFU4aCiJrLZAaY6DPSbwdtNGTGory8K5yjC': true,
        'BbQTbW5CwbzrGFazn5GAJZkE84UdJzhRMd5TzwDQhtbJ': true,
        '7GnGbq5jiRPeiiY6AGrB2VqxT7Jey4bX1BqzSuUnB5hu': true,
        '2ESxAMPK6VbYr8wVQHXwkGmkkoXJK2fWkFMXJBPmk2Dj': true,
        '93AB6oSkCCJY21u82jmxBb4ELFuUk57ahRHBuUr85Pp8': true,
        'BPeBe4WikywTvoNJC5YC6TMBFU6T1UcxK5FvxRibKLR3': true,
        'HL6tWKB8AULKajpAaDfmkpdTLSHVvJRMdhyQ4XdrGk58': true,
        'J5NgRLYrikKkkHhJXsvYwXbqPZqsQpE3d27367JJEwgc': true,
        '3yoB4A29sFgrBLDwGnz4krTTkhxpcReYwEV84sRY6E2H': true,
        '9tVQn1unLbivrTEAebgz6FgDtomUF7zZPXnxJ7Ww3SQY': true,
        '2jxQuhHUfgRjc4ZkFKKAQcH9e88n8rDCwX6WJvnQZ38q': true,
        '7c58DgoFGZKqM9cyXyauP22FiG4FKF1NmE2uLNuuGmAp': true,
        '2DNFs4YCV9FpSo43ftqYXo8X8EDShBVnJnWWzJSk6dzi': true,
        '4JNtbYsA3ubBUiqoYU4YhrE6DMjx7yPkZB8P4p33Wxvt': true,
        'HmDNBhbQZ1w8Ku9h9fxvEjJNZ3mdsfYNYzMexmwceDrT': true,
        'GGLc63EcfNNnpwfJfmNhypEGBsLpHXJXX2rY6Yt4cEPQ': true,
        '9t8FzrgrsK41h59i1AduKzMEE4hedndzcS4qJciaTUrh': true,
        '9tpkSbaYZ64T1ATZDsYj1KmH5u5iamam8bdHxQxrCrsr': true,
        '6r7h5o5hFyzF6T8onQH5z7KmtC7Gw5o379M1obuDvjjt': true,
        'K6nTrbA6dTCPmiSmXJvDfaa8YxjAj8VuLXuwY8sNtPZ': true,
        'C4Lii68mY3scredr1mSwSf1CdyQeBKumTSp6KHoovJQx': true,
        'CXZCj6bqoj5bL8gpJJzrLmUiVLcBBqWs1wV7WnXfYwFp': true,
        'HUtNQsQCSxE5WHtLbD6aMUA834eYrHmeLnqk8vPPb2HT': true,
        '2wdHmgKihUUSyvT3Wp5gdAsrBJoqpCCDWtmfgNTEZXCA': true,
        'GaigKrb64ys5qeETRBaMrZYRnYMtyCqCayPam1fJ4TjV': true,
        '7QrRjZAMnTjdxf1pW5LJWjgmCVSUWpJcsuSDUERsjGtR': true,
        'BPbUDD6c3njLAHkXwYFcmczzpBuQ7NqeS51ds54zDGGt': true,
        'EAUM1u8JKNw5PUPjs1xy66bKgVUpUSTRMJWdVwTFg59v': true,
        '7xHHNP8h6FrbP5jYZunYWgGn2KFSBiWcVaZWe644crjs': true,
        'Dvtk3jBoWVQKjGgZ9zbaAUiR1HNJdLfKAD2vzL2en83i': true,
        'CcCMYZYVYFvSGqA3wQcN2ktzjvHH3A4jyCzus4jMHPuZ': true,
        'EpYmA55sLJNYXdDNJS6t4uZGhRSoMVyp7iGuMFx9CUvH': true,
        '7VqzQXc7xzmcQ311M4jcffYJPVckCkHeVM2PXoWvjZT7': true,
        'Aj9cVwtUrRVq4SKzKEb8nQZhY9GaABptwExCVonvdoH7': true,
        '5J7rAd6D5P5XjFrVurhqzRAu62otxb96j2W45BWdHJ7a': true,
        'MG8gcUQ1hRwrfHLdFLa7zgWWi78FBqZdhVKkWd5sVVw': true,
        '2MEJ9AAFFZvCA231kkppL7U3RjfSD17KGb7iTkHezgD9': true,
        '6MfncZixP5TbZsDiWNKHTwtCof8aqPGXtT3ciwjr9uqh': true,
        '6kkUjPDd3JbC3g6uiLkdvicUCrWecc8hZFryLMTDMnXJ': true,
        'AeG2qtQEyuTTjoaVHV2rbjf9EhpENBScnM3B3SGYv1sp': true,
        '3fGh1kpCYMb95x28BfpJettVvwVXNqox4PM63A5FXRvh': true,
        '6fHKyz7DeKztMMosV9uiWrBuuEFrCaxCgxVWBTCPtCr6': true,
        'QAuFj8fuvRGgx7DwEEeLcgm69TwLBbUJinXMdHwoiRx': true,
        '6AtZS793qqsfRHjHdu8P4vUZwh3a7k9DDUDwMazeKfyS': true,
        '8AYw3jhsgw3Hzyegv5pLtuUVWUaA8FBppAjf3QAu4JiW': true,
        '8vRUiDVLSund2UeJqwtPQ1oMAwD3joaBnzzc6kf4EoWp': true,
        'BiWex813vpbufthdwWCQwomrwgAArf1ptXytxmqyLqef': true,
        'FGxSmbaW5fyoX3Nu9P1SNwoHPY6PUqLtiifmbQvhCbYK': true,
        '4Rddv8YRbsNePpr4ercrqGrBa9DSCsw9qrnSeLvNfukT': true,
        '4METrTjyJ8TJNU2v1zymnNPdT4kHeQSsFdJa9DXUjjJw': true,
        '8ZZPgCuAJ9wqd9Q23CyxJsQqtihD8kFQMPuSHQMEGn8g': true,
        'HDNrZKQDDJUn8CgzyugtYq9sySAz59NnHrWQ4CHchqoU': true,
        '3R64Zy9E8vnnZHkkzuhChd3SS6WQsDc5HQnnsyi3Y6K6': true,
        'H8d2ZxBpxRA9E2rHmchnc72SRhB2qQf97ahHNzEhHDQ': true,
        '2nt4359JSQNPZDQq3Psk2tAk4YKxfMverDTAWPtqXGPi': true,
        'BbJTs9BK7QjLGCuAkPXs1kgVswXf34sBnDZXKQ1bpZsB': true,
        'Af5nyTozx8RqgYFzcmXam5t7DaxU78cb7tKr6r1umHVx': true,
        '7Ae8Mae4HvD4qAqaLj91Zef71doebdTMtj2daBoZcnoH': true,
        '8HQawFgg5mq7LrGGoaY3jikNX1erThcbsxQRQNyimWFj': true,
        '581sK15epTHBvH9sAxwbY5An2jLWZ6ksfpnXS1bhU6kN': true,
        '4BG85wpMpGbwt5PA534PuwtLSX8Xqodc8DUhRRYBeVYp': true,
        '55GJHXsK6G5rAQKeEcscLS68Bo7k4eoMmAuGWeKeMPt9': true,
        'EX5rqN1vsXgfr449m1tkfph8wGPgfHb6r9P9y4JMVVSF': true,
        'UNsHAabcQF2b23urqkTJV9BbaS4FA2kVcbdZZKoPQ5b': true,
        'EUi1oPqqyaSe366uLTxEo5E9NFUDDDGg5HAKy6WAT9A8': true,
        'DS9dPazrR6HRfpAr3kNbgnwnZqAchky3RTnFamiA69t2': true,
        '48HsbKxiNznN4y3PQq36rnaWpTp1Z6J4FdrLqu2pLZ4t': true,
        'J58mv93E46ptUPjVhXm7zgjm4TA1RnuaHpVbKiTgEukU': true,
        'FSMQMSY6RrDznDxRqX6d4zNGavwDeD2Ky2NcczbP72w6': true,
        '4UNSUvrMcQc7H2LGHYoRAjxnfhyNPTWk971gEFxrfYBH': true,
        '8J5j5bjFg1uaCw38a2RNSNucTgFfFiGotcKFnTxb6joe': true,
        'xFViGhjb9T5rai8Fg55YzaqFCEvQU9vJZ1UxxqJzLjR': true,
        '8UXM9aGR66LVYHh1JAseAEAWnCXcZDTXQDWqHuzCiYcv': true,
        'HdU6HbW1KUuZPNQSku7VnbbpS1Cznanpu5DcQB567Lkv': true,
        '5CzQMuc1Jhf541k92zaPxMzHDhfGn5Z2v1ByKr1oTc8T': true,
        'Dk9TvGZ9a2wGnyYrfxYweJyPnk2Frk2UaamQaGyfggZk': true,
        'CRTihW8M4nbxhDicUqah4B4FKUvCWTbxcFGU3ZgFEm3H': true,
        'FNLf5V71fSmdaTxXBm7rGruWbovyqqcCh3CcfAcx2uPz': true,
        '3FoEbsmMJDmLidZafX4r3hpdTgGXSQFyAiKu6zhCagYT': true,
        '3uW2hQLjo2qKjLNU5uaxwam1u59zbksLZZrPS3MyRZt4': true,
        '5oGJJWWNtNYmtjJjBmpaymoZP76hcDtmptH1p1s4TqVE': true,
        '3ADFnYDTi1btCnvRemwJZZtAAQV8jN1nL51wE3qUmZ9h': true,
        '4F6MJES6KcnFcMXv1Lzv5GHgaXPt13gxGXp5eAKVrdrt': true,
        '667K96fTKr1CLPy1wLRwodcrM87A3FFT62KZLX5WguYe': true,
        'HHWhGaob8cEtXQnncwYpXEvbujUta5DZysLgfQ1TXwtk': true,
        'Uocvy76Eb47LDUvXXntkPJtNUac9jjEvAGwk2u8ei4f': true,
        'F9knxVby9eVapyuFxVgdrFF5enMpHp249kCs56Jdchm6': true,
        '456dtgPvPhBwREbzVK5SHoVXdsfvHXEBtVfAWNdy9HQq': true,
        'FU1BwrWohB33dm3fmE1wDnB633f4ALcabNjpJJ4yzQeq': true,
        '4Na9TsFu7aBg9iE3tEKeVyPHqdY49mZfZbnKKqWDjiLQ': true,
        'DLyjaaZPZmDPTe3qJTB45LNiCaLh4Cz8ruRuZ4uQUS2c': true,
        'CSX1Ynv6AXmJmfnG1hBczrL9tN5HWrjVx5Ur3WJeuErv': true,
        'EFHWi5tHefX9sY1BoDgVBb8pPAXnKCrX38keavHCoQbU': true,
        'E8k5YiyfK21qb4Ji7Y26AYFn8ZwfxM8Lbefk93FySPtk': true,
        '9YANpGw7wkVdgPFyM5KsrKxSFs9iDtVwpHDqVbrkLmSm': true,
        '6FUGk7Dtv7CRh8BxDAZm95S4ospEP4GmuXS4BKSWvqE7': true,
        '69ZBDwEJubaqWiMPmAoFihAnPtJH5ejgnw54CU8hakwR': true,
        'F58dj2Qx4aXBMtmGq47ZzhXG9eWusSYjJ8puiiHFpwqg': true,
        'AmQkq4rKmNh29DeJ7YbUxekTnPb8tMwjJmuweQFyi7BJ': true,
        '2WhuBeYPwFwPcpPY89cnLqt3n1GkXhBSHfAMmpBhdy6H': true,
        'GXSWPNE4DKZys3F71Wa5tSWsk9BoJJo4zLepkPYNncBg': true,
        '7xoZcrXvQx2dUFApktYsFgaQK1jPvfkBzZKkiaMPy1bK': true,
        'GtBZNYDgsfEKzPdjoGF58xfMnQfBWt7JD4gdFnrn5qqp': true,
        '4Ce7zBvscZBda4kFFh4ZcF5w99WXtMHbghfdb1Swzsah': true,
        '4aPkGYy6VUkmho9CEqLyLuYRHss663Tq7zYtaioPf4LW': true,
        'AX2UMHSuJZhVi36SmTz4yxErTdemkN7m4GHv3U8pBGW5': true,
        'GLMcSenM6SEVLj4nb91fduReqNtVms1gwLPJNRCursVF': true,
        '8pn2cduBoJruPZFES3jswH8wsWYwe34J8aAFgBZekZgG': true,
        'FRv5uxF1biSVCQWXpdihgcY4iF3rJKDNiza4hN5bb22n': true,
        '4pM7SYUB4iKqvd1aQsjWcQUotra1pdDYCAW4N1x2BUrx': true,
        'EbDQauZhgah31Tn4RfAWywWY9Lvz4ahLFhSFbxicGQMg': true,
        '5X5eu4gz6M3y98dgXSTqFj9gPm9QXLabLgmCHo5xPZz6': true,
        'BQ6UEAfTsJFSQ7zpvCnke5Uao8AH1SnaKBgCCZqDxEuL': true,
        '6AWwKoZR3Bq5USEBskg34WuTmSZBeBuYQZwS8Edkth4q': true,
        '5kF1Ari79Wpkpa8hidnEnWDyVmnszZhuYQuq7Tqtez9h': true,
        'G2bJ52k1paa9tSoDtZsMf5KRWH9svJpG6Q1eHXhbDSQx': true,
        '4NVMuNVHcpWEYCEza4gc3X8YA1GF6UeGdcTY1HA2hDn6': true,
        '6XENHd99TosY7De7msCqETi5NB5A9D1Feenzziui8kBs': true,
        '2zNSNhR6YcifKjfSqHazGhEnZYVVRfxQjEDdKqUuU5Zy': true,
        'Hd2TT7KQ8qmuJyRq3VQ2V5nip5Gb3V2BzLEy1wUaUNYh': true,
        'DijXFfMsXVtgkKamiLazeRYJ75AnmDiJMna2AwxXnPX6': true,
        '7x53uE1vw5d6Bjwp6TPs7sc2gYNPvoyh9BUDGKWPKkWK': true,
        'JAboB6okMdzftF2Ejb2kHmNT4tfAstTA1fNhUVUH8Xz5': true,
        'H1uB7dVWAoge8HgoJ7w1icpYCJBoebvEZ1JY7MJ6CiYA': true,
        '95mYrNedYWobeFCMeX8w34GD3D44p3eLTeZQAcb4c2sr': true,
        '7LdeXvJQz7XdzWMp3fr2ZPj7zDSLdGJKcDzmroXL9ebc': true,
        'CrexMe1ENa5GvvDXkfqcnNUVPM6ZEiifyTAh5eGP19MW': true,
        '9MKGMkwHPu8K3QbtkpREAJ63ksspc2VjMMPVuAwyM1Yb': true,
        'BoD1Ps5vvHNjnUw6AGDjKW5K5P82PPV4zLbzY5DbRPW1': true,
        '5KYGKnaDWcPcH5eMCqe6767PayBX2FwRTcUS5SKEYCaN': true,
        'BfWUkVSDgFN6DJTi1PsTv5u1UjN7qECypbHwNkcHF9JQ': true,
        '6QPsnxMoyiQK96AFhgjBXnbjQf1wmqKJoyaCv3hb7vV7': true,
        '9eznAUtEwE7yM7sKNKR89wYYFdSCZrV8youHnbpqpptu': true,
        'CDDtnGsFfFKnxmSSfu3sVA4xLetCFCWXCVQ4ZaZTiCp9': true,
        'AqHH1ctGNo9P4vC9bBfMS1LF9wJpyC8kdXYqBNk2JUhd': true,
        '8AJzRLnZ7TnA1mWa4oc4wRd2sKdM3cgY7d4JNkmsgqUD': true,
        'Hb5Z1CLBgTbEmbZ11kBFQk1Pw6wbBfJwrVT9jR9foNt2': true,
        'DEyeNx9sdEdYwXPTUmgTsDXMWs6aCjAwy3ia2VzMjp2o': true,
        'BYcFjHc13oMqbj3rJE9SGp5eLk23CVvVjUNKsoiyugeX': true,
        'Feg9KFwDjsR8xbq5DJEP8cEDWkC6rLahbPvhiEeFVeqJ': true,
        '4H3Qs9twzk7pde8snQmT3ixqnBii4dx51C22kKUzUG8s': true,
        'AYDKQAmRXQxziV3U9JWLE9t4NncUzCvVHxeAVNuCoH9w': true,
        '3nApJsSc6Pq1bLtL44a4JWvFoaXLFUV1CwPgMyawzqJT': true,
        'DWE2RX8EGq69Kpgtj8reNY18Cc7tr21oc3Pb7yvMdpJv': true,
        'DfAXHCUKDsfpxHkFUh1z3rY6BodiBHHpRG1XUPSooDsZ': true,
        '6icmu5wTKuW4y5pTa2Dx61W6voxBxV28u5X1XPEssRvp': true,
        '7uZCr1YhjcSaMny87Tkgo48aArzsFybeFPQs4nATwUq9': true,
        'H5JZ5pibCxkgGMibCTFqmE2pnaDhAqk83U5cx9cruRFK': true,
        'HKn78Vmakadm3FzufoBxYxp1hWE5gDWgKvrFFjpH9Zrt': true,
        '9xzcr6Nw55UmmfCaJcjhD5a1S1E41KeXfL9armXR1TB2': true,
        '43yCmTo1j5KJCjWnLs6wjkko1ESPcWxxM8qCKFFFTUbh': true,
        '6N8FkxbatTLpyKvtvhjWswadWACexr9RRKhvNmdtqK8g': true,
        '4uYcdMGWGCFm2s1fLTQL82nyT43LUuJNCd8mWFNKtLHk': true,
        'GsXgiVac69dF7ZuzuVPjUU8yaGTs6TatboeQXMA1TMik': true,
        'J35p6RYRaXnieuT8XEobDB7Yy7G9sCy5QLDmJThFySBP': true,
        'EVEF6EgUBjgsuGaiXViRjuHnSw8J3nxXDHJcouiJpFLM': true,
        'AMWZKLkhDDtyBkRbV8LicBx6vQyBHRtJvybwDn3ZkuDE': true,
        'E4t88tH7wnwTH6LxsTPswsonViBdVUiWp6ZSQ6sd4uCw': true,
        'CM5Eg94WdqT8HUvt8Wv6mkYFZMVGqPhpnCMiWHZ2ogc7': true,
        'DiUEUJVSidtAYPLsc5vZwmTnggASF4wfLPqjWcGWzexd': true,
        '6Pzi7Beyu4dchyjVTULDytqNzkB3CJybYhzPAR1JsfYa': true,
        '5yBjywTmWLz2is85hWUGmPE13fgYJSD8msaaMUtgNLhk': true,
        '311QLmVFoGo5WnqU1AEJypWYs9Fn9UwMjhNF661J3mLk': true,
        'FLE1RLp3tHxELZA9CCG48HRs9jtUb7NtB2gGhYx24nUM': true,
        'DWeYvezkoB6G6J9Qx4ozcM8KynNdR2RiHQNpSuS5mD2S': true,
        '2AcupDzBBz4VDgEVBgUsx4KLvEzAmGyTHUep271iMu7M': true,
        'FF4Z9pdLuHHFVmuny46x7t9LiWvf1QBWD9DdHcordxFJ': true,
        'DSyu4DmQUAb3VtMuuq4rNuZrNH6q3YGb3cbFmPA4CJka': true,
        'A139WJ75PqPP5YShEVovwysp56PtcTbdeBZxXnHZ4ZE4': true,
        '5p1yKNpQQdvTkqFEtHKZjKa3P5Nq9Ht2oKdqreekYWFx': true,
        '3E2CRkZHmysb11saS6F3n7JSYnkbsmCbM4HoQFkPYA6h': true,
        'JDTTT4Hp5wVBAhSpNVCArvNGwbFcS8MQMW9WBtWYtDcK': true,
        'Hxim4db21kaBW5Hq3iEF9bpk8McGd1PD6xa9Yh8c6BDy': true,
        'FdCLzyCNjWZCpoAnAxxqVKMmPTtoSUWzfEZ1pNSsdTqH': true,
        '6x7VVXq1wqWoi79gPDfNtsJraTn8caK7Z6ouPJFw7x2': true,
        'FYp1SD69HHf8FJu3T6Fd1QAgswmyvTz3CeJGHUrpbYwM': true,
        'EUBCdSgGj7iCfabVy5JwXqn64WeMkmnRU7tsdXbS8HJX': true,
        '6sL3ZAbt9ru2iEByoXESfXXr5abXVm2ACYTRKrpbFvsq': true,
        'J6uZdovkp9HyJ9851jMFx3UdhhnEBPTzx2nXwj5uejpm': true,
        '2pYLj1cgMjs3DcQ1Yb5XHpqZiMyBQWrbDbtxipxsGDGD': true,
        '5YuqaNcHYERAcaLur6cTMNubFJfpiQH43DvPiJmc3k7q': true,
        'EMJ2vqnpUpguLdfXmRF4c3MzAz79nnESs7i3F2yn5U2x': true,
        'ECdvdEECbHgWJViQZvsBDrEvUEJ6XzzzjKQCyEFD4HqP': true,
        '82zTe8dFanMcWjEmqe44TkQFLramWf4GfktVgzXhjuTb': true,
        '7KhHJmdANqHbz2yueC6RX4J3z6e62hhuTRDqeStbx9bg': true,
        '8GQbZVgkJaGmUHwdnjhw5r1tGZ4cWnPyUdiLx1E4ePpu': true,
        'GTuC9ypGyUYn5gcQ269LVTY9aEAwVsfQjwmrAXCddmQA': true,
        '7TAZ4nc1F6bHAaiNwjDy4vLZ8Fv9ZgsbW6vKVwGMpSfk': true,
        'DaH7QWUQHyV8iNRQCJmgvWbfigTc8Kqr4vAk1pFMn68R': true,
        'BpeRVfaGYAvNbEyivzQ9TPJHqAc2URBKrGXkdRhmj278': true,
        'Hy2Gr6Nst4Jax1CgSV1K71uo5gN8VN5okLnvH1F9RGzL': true,
        'DtjBCcawtBViqHviC1xAxUTbyqsM8LJgLcWT73LgSMvz': true,
        '7Dj828Bd7Jg5dTH1yCkCDLJZmfS2NsTLnoEB8hYPixjv': true,
        'G7MunSZwsgHngNWdH1SYg4LKpixDMzhTQfi3LmDtykuZ': true,
        'Ce4Xh1eb97pXgDhzNtfm3wET21bn9Ri949DNXF2JMMm4': true,
        'GBS6UV8zcSHR26LZJ1LD3NDteS43HpmfQmrzfm71rJeo': true,
        '4YKhUgyi7X67qAZYqftNTz6KR8Q3HYZsJapfvYbeTncd': true,
        '7YbnDvPN5pRWUmt42hBjgjyFhs6TzwF4Az1CuSNEV2tT': true,
        'ALbKLcmdF5CAjt3TKHU2VC9aXFouYVCfPveb71sHKBWZ': true,
        'EdNQw7nEJwVb8LnAiVxw7i7a8DeJD5Ew5W3ZHsBKMFFb': true,
        '3F6Dg7EsYUM66TdcYUYS9Prb4yCEzbNqW3z8jf7b3qrG': true,
        'FdQn8m3VBp4gWxGmffzroJwWeZXJ1Us7PavEGfzeDBGX': true,
        '3dEJqAfkTmwoGPCXpCsZHKt2t94SE2Qantxf3nhCbTpJ': true,
        '4vtZkN4RXSTnbzTkEPX297ReyrCLVJDwwEnC3bEGLjPx': true,
        'HQZYmRDenLxZXwhx3iYg5RpnocxquwjconQNsZSU6DZw': true,
        '6eiNEK4nbMfeyswPuEy37je5ZDYRrGg1Ejp7hEA72LzN': true,
        '9Fh98AURXReReN3N9Y96TUGo2ctUguHYRncoDwzcNvY5': true,
        '6w7efmQX8sUYLbYRB3PSVb9pr1Tv8dVaatgaVYbMJemp': true,
        'G2n66dXRjQDfhbeHtCQRS36itL55onByKLgMTesrXKRK': true,
        '5qmdVL64UaHbzrVM5fGPQcMnznRuwpdyyuGPJ5hyZWRt': true,
        'Hx27Xj3a1NcafR37h8pRWZHQ7QQMnwT1toytcbxfJhFr': true,
        'HeK4h7ykLnkaC6HHXdgM2FPi2gCqoPajGqtVMCHBhJuj': true,
        '9hfc4hq2nRvF3a7sLL648LeYkNpQYRV1BG9JnnAuooLs': true,
        'CvzZhx6AVtZU6GePsnCnjdWYD3PDQwNSU81HgnH8MaAx': true,
        '1fGfZqGNUsDmcYMHksucdNgWMCrSSV7UzubGCKBVD3N': true,
        'D5vdKxD1jxDvBGSzgjFUx8HPsHXUwCDUYKuDeX7ioTSA': true,
        '3wUrwCERbcwaZmXFBc3H3CdcGWwXXSgzV4vpavmJWPnz': true,
        'Ee18LHfoi55m1zFm24AuFWgATTQWu6Hwd4XkHNK6jgvy': true,
        'Y8goi9ao4r9CvWfb3twpXLDxugUh6DM689vE1v8HtR2': true,
        '2H9Rgr2K85TPDUdss4WVTbt2sJe7y9QpaqwsNjVgsi11': true,
        '5kAPM6U1MFW2bLcg344KscTTj7bnirBZn6W8nug5KwCQ': true,
        'Eg6s3KSaLU9n7sPDAM3Uz5h2ULaix91US4g5bcqscwTr': true,
        'J3MYxiQ7ngAGaK129Ac7fLFfzTosA6YVhzsBeuzk1GXX': true,
        '2xUpPkiAbgwjCmohcM2bxc2bpzyF77wa1L61BwNcFpbP': true
    };
    var hasBeenUpdated = false; // set this to false to update asset list from github
    var isPendingUpdate = false;
    var SPAM_ASSET_LIST_URL = 'https://raw.githubusercontent.com/wavesplatform/waves-community/' +
        'master/Scam%20tokens%20according%20to%20the%20opinion%20of%20Waves%20Community.csv';

    angular
        .module('app.shared')
        .service('spamAssetService', ['$http', function ($http) {
            var self = this;

            this.parseAssetList = function (communityContent) {
                var lines = communityContent.split('\n');
                var result = {};
                _.forEach(lines, function (line) {
                    var parts = line.split(',');
                    if (parts.length > 0) {
                        var assetId = parts[0].trim();
                        if (assetId) {
                            result[assetId] = true;
                        }
                    }
                });

                return result;
            };

            this.isSpam = function (assetId) {
                if (!assetId) {
                    return false;
                }

                var result = !!spamAssets[assetId];

                if (!hasBeenUpdated && !isPendingUpdate) {
                    isPendingUpdate = true;
                    $http.get(SPAM_ASSET_LIST_URL).then(function (response) {
                        spamAssets = self.parseAssetList(response.data);
                    }).catch(function () {
                        // do nothing
                    }).then(function () {
                        // if we failed to update spam asset list, there is no need to try again
                        isPendingUpdate = false;
                        hasBeenUpdated = true;
                    });
                }

                return result;
            };
        }]);
})();

(function () {
    'use strict';

    var DEFAULT_ASSET_ID_FIELD_NAME = 'assetId';

    function AntiSpamFilter(spamAssetService) {
        return function filterInput(input, fieldName) {
            if (!input) {
                return [];
            }

            fieldName = fieldName || DEFAULT_ASSET_ID_FIELD_NAME;

            return _.filter(input, function (tx) {
                return !spamAssetService.isSpam(tx[fieldName]);
            });
        };
    }

    AntiSpamFilter.$inject = ['spamAssetService'];

    angular
        .module('app.shared')
        .filter('antiSpam', AntiSpamFilter);
})();

(function () {
    'use strict';

    function PadderFilter() {
        return function filterInput(input, maxLength) {
            var spaces = '',
                i = input.length;

            while (i++ < maxLength) {
                spaces +=  '&nbsp;';
            }

            return spaces + input;
        };
    }

    angular
        .module('app.shared')
        .filter('padder', PadderFilter);
})();

(function () {
    'use strict';

    function PageController($attrs, documentTitleService) {
        // documentTitleService.set($attrs.pageTitle); // TODO : uncomment this when all pages are using that component.
    }

    PageController.$inject = ['$attrs', 'documentTitleService'];

    angular
        .module('app.shared')
        .component('wavesPage', {
            controller: PageController,
            bindings: {
                pageTitle: '@'
            }
        });
})();

(function () {
    'use strict';

    var BACKGROUND = '#fff',
        FOREGROUND = '#000',
        SIZE = 150;

    function QrCodeController($element) {

        var ctrl = this,
            canvas = $element.children('canvas'),
            qr = new QRious({
                element: canvas.get(0),
                size: ctrl.size || SIZE
            });

        ctrl.setCode = function () {
            ctrl.removeCode();
            if (ctrl.value) {
                qr.background = ctrl.background || BACKGROUND;
                qr.foreqround = ctrl.foreground || FOREGROUND;
                qr.size = ctrl.size || SIZE;
                qr.value = ctrl.value;
                canvas.removeClass('hidden');
            }
        };

        ctrl.removeCode = function () {
            canvas.addClass('hidden');
        };

        ctrl.$onInit = ctrl.setCode.bind(ctrl);

        ctrl.$onChanges = function (changes) {
            if (changes.value) {
                ctrl.setCode();
            }
        };

    }

    angular
        .module('app.shared')
        .component('wavesQrCode', {
            controller: QrCodeController,
            bindings: {
                size: '<',
                background: '<',
                foreground: '<',
                value: '<'
            },
            template: '<canvas class="hidden"></canvas>'
        });
})();

(function () {
    'use strict';

    function ScrollboxController() {}

    angular
        .module('app.shared')
        .component('wavesScrollbox', {
            controller: ScrollboxController,
            transclude: true,
            template: '<div ng-transclude></div>'
        });
})();

(function () {
    'use strict';

    function WavesDialogController($scope, dialogService) {
        var defaults = {
            isError: false,
            cancelButtonVisible: true,
            closeable: true,
            showButtons: true,
            okButtonCaption: 'OK',
            okButtonEnabled: true,
            cancelButtonCaption: 'CANCEL'
        };

        _.defaults($scope, defaults);

        var imageSuffix = $scope.isError ? '-danger' : '';
        $scope.image = 'modal-header' + imageSuffix;
        if (!$scope.closeable) {
            $scope.image = 'modal-header-round';
        }

        $scope.image += '.svg';

        $scope.onOk = function () {
            var shouldClose;

            if ($scope.dialogOk) {
                shouldClose = $scope.dialogOk();
            }

            if (angular.isUndefined(shouldClose) || shouldClose !== false) {
                dialogService.close();
            }
        };

        $scope.onCancel = function () {
            if ($scope.dialogCancel) {
                $scope.dialogCancel();
            }

            dialogService.close();
        };
    }

    function WavesDialogLink(scope, element) {
        element.addClass('wavesPop');

        if (!scope.global) {
            element.addClass('recyclable');
        }
    }

    angular
        .module('app.shared')
        .directive('wavesDialog', function WavesDialogDirective() {

            return {
                restrict: 'A',
                controller: ['$scope', 'dialogService', WavesDialogController],
                transclude: true,
                scope: {
                    closeable: '=?',
                    cancelButtonVisible: '=?',
                    showButtons: '=?',
                    tooltip: '=?',
                    dialogOk: '&onDialogOk',
                    dialogCancel: '&onDialogCancel',
                    okButtonCaption: '@',
                    okButtonEnabled: '=?',
                    cancelButtonCaption: '@',
                    isError: '=?',
                    global: '=?',
                    noSupportLink: '=?'
                },
                link: WavesDialogLink,
                templateUrl: 'shared/dialog.directive'
            };
        });
})();

(function () {
    'use strict';

    angular
        .module('app.shared')
        .directive('focusMe', ['$timeout', function WavesFocusDirective($timeout) {
            return {
                restrict: 'A',
                link: function (scope, element, attributes) {
                    scope.$watch(attributes.focusMe, function (newValue) {
                        $timeout(function () {
                            return newValue && element[0].focus();
                        });
                    }, true);
                }
            };
        }]);
})();

(function () {
    'use strict';

    angular
        .module('app.shared')
        .directive('tooltipster', ['constants.tooltip', function WavesTooltipsterDirective(constants) {

            return {
                restrict: 'A',
                link: function (scope, element, attributes) {
                    var text;
                    if (angular.isDefined(attributes.title))
                        text = attributes.title;
                    else if (angular.isDefined(attributes.tooltipTitle))
                        text = attributes.tooltipTitle;

                    if (angular.isUndefined(text))
                        throw new Error('Tooltip text is undefined. ' +
                            'Tooltipster directive is unnecessary for element: ' + element);

                    var tooltipOptions = _.clone(constants);
                    if (angular.isDefined(attributes.tooltipTheme))
                        tooltipOptions.theme = attributes.tooltipTheme;
                    tooltipOptions.content = text;

                    if (angular.isDefined(attributes.tooltipHtml) || attributes.tooltipHtml === true)
                        tooltipOptions.contentAsHTML = true;

                    element.tooltipster(tooltipOptions);

                    scope.$on('$destroy', function DestroyTooltip() {
                        element.tooltipster('destroy');
                    });
                }
            };
        }]);
})();

(function () {
    'use strict';

    function WavesTransactionLoadingService($q, constants, apiService) {
        var self = this;

        // returns promise that loads and merges unconfirmed and confirmed transactions
        this.loadTransactions = function (account, limit) {
            var unconfirmed;
            return apiService.transactions.unconfirmed()
                .then(function (response) {
                    unconfirmed = response;

                    return apiService.transactions.list(account.address, limit);
                })
                .then(function (response) {
                    // FIXME : redo this when the API is fixed.
                    if (response[0] instanceof Array) {
                        response = response[0];
                    }

                    return self.mergeTransactions(account, unconfirmed, response);
                });
        };

        this.refreshAssetCache = function (cache, transactions) {
            var sequence = $q.resolve();
            _.forEach(transactions, function (tx) {
                var assetId;
                if (tx.assetId) {
                    assetId = tx.assetId;
                } else if (tx.order1 && tx.order1.assetPair.amountAsset) {
                    assetId = tx.order1.assetPair.amountAsset;
                }
                var feeAssetId;
                if (tx.feeAsset) {
                    feeAssetId = tx.feeAsset;
                }

                var cached;

                if (assetId) {
                    cached = cache.assets[assetId];
                    if (!cached) {
                        sequence = sequence
                            .then(function () {
                                return apiService.transactions.info(assetId);
                            })
                            .then(function (response) {
                                cache.putAsset(response);
                            });
                    }
                }

                if (feeAssetId) {
                    cached = cache.assets[feeAssetId];
                    if (!cached) {
                        sequence = sequence
                            .then(function () {
                                return apiService.transactions.info(feeAssetId);
                            })
                            .then(function (response) {
                                cache.putAsset(response);
                            });
                    }
                }
            });

            return sequence;
        };

        // TODO : refactor with a map.
        this.mergeTransactions = function (account, unconfirmed, confirmed) {
            var rawAddress = account.address;
            unconfirmed = _.filter(unconfirmed, function (transaction) {
                if (transaction.type === constants.EXCHANGE_TRANSACTION_TYPE) {
                    return transaction.order1.senderPublicKey === account.keyPair.public ||
                        transaction.order2.senderPublicKey === account.keyPair.public ||
                        transaction.sender === rawAddress;
                } else {
                    return (transaction.sender === rawAddress || transaction.recipient === rawAddress);
                }
            });
            var unconfirmedSignatures = _.map(unconfirmed, function (transaction) {
                return transaction.signature;
            });
            confirmed = _.filter(confirmed, function (transaction) {
                return unconfirmedSignatures.indexOf(transaction.signature) === -1;
            });
            unconfirmed = _.map(unconfirmed, function (transaction) {
                transaction.unconfirmed = true;

                return transaction;
            });

            return _.union(unconfirmed, confirmed);
        };
    }

    WavesTransactionLoadingService.$inject = ['$q', 'constants.transactions', 'apiService'];

    angular
        .module('app.shared')
        .service('transactionLoadingService', WavesTransactionLoadingService);
})();

(function () {
    'use strict';

    function TransactionFilter(constants, applicationContext, formattingService) {
        var TRANSACTION_SPEC = {};
        TRANSACTION_SPEC[constants.PAYMENT_TRANSACTION_TYPE] = {
            type: 'Payment',
            processor: processPaymentTransaction
        };
        TRANSACTION_SPEC[constants.ASSET_ISSUE_TRANSACTION_TYPE] = {
            type: 'Asset Issue',
            processor: processAssetIssueTransaction
        };
        TRANSACTION_SPEC[constants.ASSET_TRANSFER_TRANSACTION_TYPE] = {
            type: 'Transfer',
            processor: processAssetTransferTransaction
        };
        TRANSACTION_SPEC[constants.ASSET_REISSUE_TRANSACTION_TYPE] = {
            type: 'Asset Reissue',
            processor: processAssetReissueTransaction
        };
        TRANSACTION_SPEC[constants.START_LEASING_TRANSACTION_TYPE] = {
            type: 'Start Leasing',
            processor: processStartLeasingTransaction
        };
        TRANSACTION_SPEC[constants.CANCEL_LEASING_TRANSACTION_TYPE] = {
            type: 'Cancel Leasing',
            processor: processCancelLeasingTransaction
        };
        TRANSACTION_SPEC[constants.CREATE_ALIAS_TRANSACTION_TYPE] = {
            type: 'Create Alias',
            processor: processCreateAliasTransaction
        };
        TRANSACTION_SPEC[constants.EXCHANGE_TRANSACTION_TYPE] = {
            type: '',
            processor: processExchangeTransaction
        };
        TRANSACTION_SPEC[constants.MASS_PAYMENT_TRANSACTION_TYPE] = {
            type: 'Mass Payment',
            processor: processMassPaymentTransaction
        };

        function buildTransactionType (number) {
            var spec = TRANSACTION_SPEC[number];

            return spec ? spec.type : '';
        }

        function transformAddress(rawAddress) {
            var result = angular.isDefined(rawAddress) ? rawAddress : 'n/a';

            if (result === applicationContext.account.address) {
                result = 'You';
            }

            return result;
        }

        function processTransaction(transaction) {
            var spec = TRANSACTION_SPEC[transaction.type];
            if (angular.isUndefined(spec) || angular.isUndefined(spec.processor)) {
                return;
            }

            spec.processor(transaction);
        }

        function processPaymentTransaction(transaction) {
            transaction.formatted.amount = Money.fromCoins(transaction.amount, Currency.WAVES).formatAmount();
            transaction.formatted.asset = Currency.WAVES.displayName;
        }

        function processAssetIssueTransaction(transaction) {
            var asset = Currency.create({
                id: transaction.id,
                displayName: transaction.name,
                precision: transaction.decimals
            });
            transaction.formatted.amount = Money.fromCoins(transaction.quantity, asset).formatAmount();
            transaction.formatted.asset = asset.displayName;
        }

        function processCreateAliasTransaction(transaction) {
            transaction.formatted.asset = Currency.WAVES.displayName;
        }

        function processAssetTransferTransaction(transaction) {
            var currency;
            if (transaction.assetId) {
                var asset = applicationContext.cache.assets[transaction.assetId];
                if (asset) {
                    currency = asset.currency;
                }
            } else {
                currency = Currency.WAVES;
            }

            if (!currency) {
                return;
            }

            transaction.formatted.amount = Money.fromCoins(transaction.amount, currency).formatAmount();
            transaction.formatted.asset = currency.displayName;
        }

        function processAssetReissueTransaction(transaction) {
            var asset = applicationContext.cache.assets[transaction.assetId];
            if (angular.isUndefined(asset)) {
                return;
            }

            transaction.formatted.amount = Money.fromCoins(transaction.quantity, asset.currency).formatAmount();
            transaction.formatted.asset = asset.currency.displayName;
        }

        function processStartLeasingTransaction(transaction) {
            transaction.formatted.amount = Money.fromCoins(transaction.amount, Currency.WAVES).formatAmount();
            transaction.formatted.asset = Currency.WAVES.displayName;
        }

        function processCancelLeasingTransaction(transaction) {
            transaction.formatted.asset = Currency.WAVES.displayName;
        }

        function processMassPaymentTransaction(transaction) {
            var currency = Currency.WAVES;
            var assetId = transaction.assetId;
            if (assetId) {
                var asset = applicationContext.cache.assets[assetId];
                if (asset) {
                    currency = asset.currency;
                }
            }

            transaction.formatted.asset = currency.displayName;
            transaction.formatted.amount = Money.fromCoins(transaction.totalAmount, currency).formatAmount();
        }

        function processExchangeTransaction(transaction) {
            var type = 'Exchange';

            var buyOrder = transaction.order1;
            var assetId = buyOrder.assetPair.amountAsset;
            var totalFee = 0;
            if (buyOrder.senderPublicKey === applicationContext.account.keyPair.public) {
                type = type + ' ' + 'Buy';
                totalFee += transaction.buyMatcherFee;
            }

            var sellOrder = transaction.order2;
            if (sellOrder.senderPublicKey === applicationContext.account.keyPair.public) {
                type = type + ' ' + 'Sell';
                totalFee += transaction.sellMatcherFee;
            }

            transaction.formatted.type = type;
            transaction.formatted.fee = Money.fromCoins(totalFee, Currency.WAVES).formatAmount(true);

            var currency;
            if (assetId) {
                var asset = applicationContext.cache.assets[assetId];
                if (asset) {
                    currency = asset.currency;
                }
            } else {
                currency = Currency.WAVES;
            }

            if (currency) {
                transaction.formatted.asset = currency.displayName;
                transaction.formatted.amount = Money.fromCoins(transaction.amount, currency).formatAmount();
            }
        }

        function formatFee(transaction) {
            var currency = Currency.WAVES;
            var assetId = transaction.feeAsset;
            if (assetId) {
                var asset = applicationContext.cache.assets[assetId];
                if (asset) {
                    currency = asset.currency;
                }
            }

            return Money.fromCoins(transaction.fee, currency).formatAmount(true);
        }

        function getFeeAsset(transaction) {
            var currency = Currency.WAVES;
            var assetId = transaction.feeAsset;
            if (assetId) {
                var asset = applicationContext.cache.assets[assetId];
                if (asset) {
                    currency = asset.currency;
                }
            }

            return currency;
        }

        function formatTransaction(transaction) {
            // in the future currency should be a part of transaction itself
            var currentAddress = applicationContext.account.address;
            var type = transaction.sender === currentAddress ? 'Outgoing' : 'Incoming';

            transaction.formatted = {
                type: type + ' ' + buildTransactionType(transaction.type),
                datetime: formattingService.formatTimestamp(transaction.timestamp),
                isOutgoing: transaction.sender === currentAddress,
                sender: transformAddress(transaction.sender),
                recipient: transformAddress(transaction.recipient),
                amount: 'N/A',
                fee: formatFee(transaction),
                feeAsset: getFeeAsset(transaction),
                asset: 'Loading'
            };

            processTransaction(transaction);

            return transaction;
        }

        return function filterInput(input) {
            return _.map(input, formatTransaction);
        };
    }

    TransactionFilter.$inject = ['constants.transactions', 'applicationContext', 'formattingService'];

    angular
        .module('app.shared')
        .filter('transaction', TransactionFilter);
})();

(function () {
    'use strict';

    var DEFAULT_STRIP_ZEROES = true;
    var DEFAULT_USE_THOUSANDS_SEPARATOR = true;

    function MoneyShortFilter() {
        return function filterInput(input, stripZeroes, useThousandsSeparator) {
            if (!input || !input.formatAmount) {
                return '';
            }

            if (angular.isUndefined(stripZeroes)) {
                stripZeroes = DEFAULT_STRIP_ZEROES;
            }

            if (angular.isUndefined(useThousandsSeparator)) {
                useThousandsSeparator = DEFAULT_USE_THOUSANDS_SEPARATOR;
            }

            return input.formatAmount(stripZeroes, useThousandsSeparator);
        };
    }

    angular
        .module('app.shared')
        .filter('moneyShort', MoneyShortFilter);
})();

(function () {
    'use strict';

    var DEFAULT_STRIP_ZEROES = false;
    var DEFAULT_USE_THOUSANDS_SEPARATOR = true;

    function MoneyLongFilter() {
        return function filterInput(input, stripZeroes, useThousandsSeparator) {
            if (!input || !input.formatAmount) {
                return '';
            }

            if (angular.isUndefined(stripZeroes)) {
                stripZeroes = DEFAULT_STRIP_ZEROES;
            }

            if (angular.isUndefined(useThousandsSeparator)) {
                useThousandsSeparator = DEFAULT_USE_THOUSANDS_SEPARATOR;
            }

            var result = input.formatAmount(stripZeroes, useThousandsSeparator);
            var currency = input.currency.shortName ? input.currency.shortName : input.currency.displayName;

            return result + ' ' + currency;
        };
    }

    angular
        .module('app.shared')
        .filter('moneyLong', MoneyLongFilter);
})();

(function () {
    'use strict';

    angular
        .module('app.shared')
        .factory('autocomplete.fees', function AutocompleteFeesFactory() {
            var result = {
                fees: [
                    {
                        amount: 0.001,
                        displayText: '0.001 WAVE (Economic)'
                    },
                    {
                        amount: 0.0015,
                        displayText: '0.0015 WAVE (Standard)'
                    },
                    {
                        amount: 0.002,
                        displayText: '0.002 WAVE (Premium)'
                    }
                ],
                selectedFee: undefined,
                searchText: undefined
            };

            result.getFeeAmount = function() {
                return result.selectedFee ?
                    result.selectedFee.amount :
                    result.searchText;
            };

            result.defaultFee = function (feeAmount) {
                var feeIndex = 0;

                if (angular.isNumber(feeAmount)) {
                    var index = _.findIndex(result.fees, function (fee) {
                        return fee.amount === feeAmount;
                    });

                    if (index >= 0) {
                        feeIndex = index;
                    }
                }

                result.selectedFee = result.fees[feeIndex];
            };

            result.querySearch = function (searchText) {
                if (!searchText) {
                    return result.fees;
                }

                return _.filter(result.fees, function (item) {
                    return item.amount.toString().indexOf(searchText) !== -1;
                });
            };

            return result;
        })
        .factory('autocomplete.assets', function AutocompleteAssetsFactory() {
            function createAutocomplete() {
                var result = {
                    assets: [],
                    selectedAsset: undefined,
                    searchText: undefined
                };

                result.querySearch = function (searchText) {
                    if (!searchText) {
                        return result.assets.slice(0, 10);
                    }

                    var searchTextLC = searchText.toLowerCase(),
                        list = [],
                        ids = {};

                    // Adding assets which match by name.
                    list = list.concat(result.assets.filter(function (asset) {
                        ids[asset.id] = asset.displayName.toLowerCase().indexOf(searchTextLC) > -1;
                        return ids[asset.id];
                    }));

                    // Adding assets which match by ID.
                    list = list.concat(result.assets.filter(function (asset) {
                        if (ids[asset.id] === true) {
                            return false;
                        } else {
                            ids[asset.id] = asset.id.indexOf(searchText) > -1;
                            return ids[asset.id];
                        }
                    }));

                    return list;
                };

                return result;
            }

            return {
                create: function () {
                    return createAutocomplete();
                }
            };
        });
})();

(function () {
    'use strict';

    angular
        .module('app.shared')
        .factory('transactionBroadcast', ['notificationService', function (notificationService) {
            function Instance(method, successCallback) {
                var self = this;
                var transaction;

                this.pending = false;
                this.setTransaction = function (value) {
                    transaction = value;
                };

                this.broadcast = function () {
                    // checking if transaction was saved
                    if (angular.isUndefined(transaction)) {
                        return;
                    }

                    // prevent method execution when there is a pending request
                    if (self.pending) {
                        return;
                    }

                    // start pending request
                    self.pending = true;

                    method(transaction).then(function (response) {
                        successCallback(transaction, response);
                    }, function (response) {
                        if (response.data) {
                            notificationService.error('Error:' + response.data.error + ' - ' + response.data.message);
                        } else {
                            notificationService.error('Request failed. Status: ' + response.status + ' - ' +
                                response.statusText);
                        }
                    }).finally(function () {
                        self.pending = false;
                        transaction = undefined;
                    });
                };
            }

            return {
                instance: Instance
            };
        }]);
})();

(function () {
    'use strict';

    angular
        .module('app.shared')
        .directive('decimalInputRestrictor', [function WavesDecimalInputRestrictorDirective() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function (scope, element, attributes, ngModelController) {
                    var pattern = /[^0-9.]+/g;

                    function fromUser (text) {
                        if (!text)
                            return text;

                        var transformedInput = text.replace(pattern, '');
                        if (transformedInput !== text) {
                            ngModelController.$setViewValue(transformedInput);
                            ngModelController.$render();
                        }

                        return transformedInput;
                    }

                    ngModelController.$parsers.push(fromUser);
                }
            };
        }]);
})();

(function () {
    'use strict';

    angular
        .module('app.shared')
        .directive('integerInputRestrictor', [function WavesIntegerInputRestrictorDirective() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function (scope, element, attributes, ngModelController) {
                    var pattern = /[^0-9]+/g;

                    function fromUser (text) {
                        if (!text)
                            return text;

                        var transformedInput = text.replace(pattern, '');
                        if (transformedInput !== text) {
                            ngModelController.$setViewValue(transformedInput);
                            ngModelController.$render();
                        }

                        return transformedInput;
                    }

                    ngModelController.$parsers.push(fromUser);
                }
            };
        }]);
})();

(function () {
    'use strict';

    var url = 'docum.dei.su';

    function SupportLinkController() {}

    angular
        .module('app.shared')
        .component('wavesSupportLink', {
            controller: SupportLinkController,
            template: '<a href="http://' + url + '" target="_blank">' + url + '</a>'
        });
})();

(function () {
    'use strict';

    var ADDRESS_STUB = 'n/a';

    function TransactionMenuController($scope, constants, events, notificationService) {
        var ctrl = this;

        ctrl.idCopied = idCopied;
        ctrl.dataCopied = dataCopied;
        ctrl.fullTransactionData = fullTransactionData;
        ctrl.hasRecipient = hasRecipient;
        ctrl.addressCopied = addressCopied;
        ctrl.isLeasing = isLeasing;
        ctrl.cancelLeasing = cancelLeasing;

        function addressCopied () {
            return notificationService.notice('Address has been copied');
        }

        function idCopied () {
            notificationService.notice('Transaction ID has been copied');
        }

        function dataCopied () {
            notificationService.notice('Full transaction data have been copied');
        }

        function hasRecipient () {
            return !!ctrl.transaction.recipient;
        }

        function isLeasing () {
            return ctrl.transaction.type === constants.START_LEASING_TRANSACTION_TYPE;
        }

        function cancelLeasing () {
            $scope.$emit(events.LEASING_CANCEL, {
                startLeasingTransaction: ctrl.transaction
            });
        }

        function fullTransactionData () {
            var recipient = hasRecipient() ? ctrl.transaction.recipient : ADDRESS_STUB;
            var attachment = '';
            if (ctrl.transaction.attachment) {
                attachment = ' | ATTACHMENT: ' + ctrl.transaction.attachment;
            }

            return 'TX ID: ' + ctrl.transaction.id +
                ' | TYPE: ' + ctrl.transaction.formatted.type +
                ' | DATE: ' + ctrl.transaction.formatted.datetime +
                ' | SENDER ADDRESS: ' + ctrl.transaction.sender +
                ' | TX AMOUNT: ' + ctrl.transaction.formatted.amount + ' ' + ctrl.transaction.formatted.asset +
                ' | RECIPIENT ADDRESS: ' + recipient +
                ' | TX FEE: ' + ctrl.transaction.formatted.fee + ' ' + ctrl.transaction.formatted.feeAsset.displayName +
                (ctrl.transaction.formatted.feeAsset.id ? ' (' + ctrl.transaction.formatted.feeAsset.id + ')' : '') +
                attachment;
        }
    }

    TransactionMenuController.$inject = ['$scope', 'constants.transactions', 'ui.events', 'notificationService'];

    angular
        .module('app.shared')
        .component('txMenu', {
            controller: TransactionMenuController,
            bindings: {
                transaction: '<'
            },
            templateUrl: 'shared/transaction.menu.component'
        });
})();

(function () {
    'use strict';

    var FEE_CURRENCY = Currency.WAVES;
    var DEFAULT_ERROR_MESSAGE = 'The Internet connection is lost';

    // TODO : add the `exceptField` attribute or a list of all the needed fields.

    function WavesTransactionHistoryController($scope, events, constants, applicationContext,
                                               apiService, leasingRequestService, notificationService, dialogService) {
        var ctrl = this;
        var minimumFee = new Money(constants.MINIMUM_TRANSACTION_FEE, FEE_CURRENCY);

        ctrl.cancelLeasing = cancelLeasing;
        ctrl.confirm = {
            fee: minimumFee
        };

        $scope.$on(events.LEASING_CANCEL, function (event, eventData) {
            ctrl.startLeasingTransaction = eventData.startLeasingTransaction;

            ctrl.confirm.recipient = ctrl.startLeasingTransaction.recipient;
            ctrl.confirm.amount = ctrl.startLeasingTransaction.formatted.amount;
            ctrl.confirm.asset = ctrl.startLeasingTransaction.formatted.asset;

            dialogService.open('#cancel-leasing-confirmation');
        });

        function cancelLeasing () {
            var cancelLeasing = {
                startLeasingTransactionId: ctrl.startLeasingTransaction.id,
                fee: minimumFee
            };

            var sender = {
                publicKey: applicationContext.account.keyPair.public,
                privateKey: applicationContext.account.keyPair.private
            };

            var transaction = leasingRequestService.buildCancelLeasingRequest(cancelLeasing, sender);

            apiService.leasing.cancel(transaction)
                .then(function () {
                    notificationService.notice('Leasing transaction of ' +
                        ctrl.startLeasingTransaction.formatted.amount + ' ' +
                        ctrl.startLeasingTransaction.formatted.asset + ' has been cancelled.');
                })
                .catch(function (exception) {
                    if (exception) {
                        if (exception.data) {
                            notificationService.error(exception.data.message);
                        } else if (exception.message) {
                            notificationService.error(exception.message);
                        } else if (exception.statusText) {
                            notificationService.error(exception.statusText);
                        } else {
                            notificationService.error(DEFAULT_ERROR_MESSAGE);
                        }
                    } else {
                        notificationService.error(DEFAULT_ERROR_MESSAGE);
                    }

                    dialogService.close();
                });

            return true;
        }
    }

    WavesTransactionHistoryController.$inject = ['$scope', 'ui.events', 'constants.ui', 'applicationContext',
        'apiService', 'leasingRequestService', 'notificationService', 'dialogService'];

    angular
        .module('app.shared')
        .component('wavesTransactionHistory', {
            controller: WavesTransactionHistoryController,
            bindings: {
                heading: '@',
                transactions: '<',
                limitTo: '<'
            },
            templateUrl: 'shared/transaction.history.component'
        });
})();

(function() {
    'use strict';

    angular.module('app.login', ['waves.core.services', 'app.ui', 'app.shared']);
})();

(function () {
    'use strict';

    angular
        .module('app.login')
        .constant('ui.login.modes', {
            REGISTER: 'register',
            CREATE_SEED: 'create-seed',
            LIST: 'list',
            LOGIN: 'login'
        });

    angular
        .module('app.login')
        .constant('ui.login.events', {
            CHANGE_MODE: 'change-mode',
            GENERATE_SEED: 'generate-seed',  // parameter - seed
            LOGIN: 'login'                   // parameter - account object
        });
})();

(function () {
    'use strict';

    function LoginContextFactory(moduleEvents, applicationEvents, modes) {
        return {
            showAccountsListScreen: function($scope) {
                $scope.$emit(moduleEvents.CHANGE_MODE, modes.LIST);
            },

            showInputSeedScreen: function ($scope) {
                $scope.$emit(moduleEvents.CHANGE_MODE, modes.CREATE_SEED);
            },

            showLoginScreen: function ($scope, account) {
                $scope.$emit(moduleEvents.CHANGE_MODE, modes.LOGIN, account);
            },

            showRegisterScreen: function ($scope, seed) {
                $scope.$emit(moduleEvents.CHANGE_MODE, modes.REGISTER, seed);
            },

            notifyGenerateSeed: function ($scope) {
                $scope.$emit(moduleEvents.GENERATE_SEED);
            },

            notifySignedIn: function ($scope, rawAddress, seed, keys) {
                var applicationState = {
                    address: rawAddress,
                    seed: seed,
                    keyPair: keys
                };

                $scope.$emit(applicationEvents.LOGIN_SUCCESSFUL, applicationState);
            }
        };
    }

    LoginContextFactory.$inject = ['ui.login.events', 'ui.events', 'ui.login.modes'];

    angular
        .module('app.login')
        .factory('loginContext', LoginContextFactory);
})();

(function () {
    'use strict';

    function AccountsController($scope, modes, events, passPhraseService, dialogService, cryptoService, loginContext) {
        var accounts = this;

        // by default start in list mode
        switchToMode(modes.LIST);

        $scope.$on(events.CHANGE_MODE, function (event, mode, param) {
            switchToMode(mode, param);
        });

        $scope.$on(events.GENERATE_SEED, function () {
            var seed = passPhraseService.generate();
            switchToMode(modes.REGISTER, seed);
            dialogService.openNonCloseable('#login-wPop-new');
        });

        function switchToMode(mode, param) {
            switch (mode) {
                case modes.REGISTER:
                    switchToRegisterMode(param);
                    break;

                case modes.CREATE_SEED:
                    switchToCreateSeedMode();
                    break;

                case modes.LIST:
                    switchToListMode();
                    break;

                case modes.LOGIN:
                    switchToLoginMode(param);
                    break;

                default:
                    throw new Error('Unsupported account operation: ' + mode);
            }

            accounts.mode = mode;
        }

        function switchToListMode() {
            accounts.caption = 'ACCOUNTS';
        }

        function switchToCreateSeedMode() {
            accounts.caption = 'SET UP YOUR SEED';
        }

        function switchToRegisterMode(seed) {
            accounts.caption = 'REGISTER ACCOUNT';
            accounts.displayAddress = cryptoService.buildRawAddressFromSeed(seed);
            // setting a seed to register a new account
            loginContext.seed = seed;
        }

        function switchToLoginMode(account) {
            accounts.caption = 'SIGN IN';
            accounts.displayAddress = account.address;
            // setting an account which we would like to sign in
            loginContext.currentAccount = account;
        }
    }

    AccountsController.$inject = [
        '$scope',
        'ui.login.modes',
        'ui.login.events',
        'passPhraseService',
        'dialogService',
        'cryptoService',
        'loginContext'
    ];

    angular
        .module('app.login')
        .controller('accountsController', AccountsController);
})();

(function () {
    'use strict';

    function AccountListController($scope, accountService, dialogService, loginContext) {
        var list = this;
        list.accounts = [];
        list.removeCandidate = {};

        list.removeAccount = removeAccount;
        list.createAccount = createAccount;
        list.importAccount = importAccount;
        list.signIn = signIn;
        list.showRemoveWarning = showRemoveWarning;

        accountService.getAccounts().then(function (accounts) {
            list.accounts = accounts;
        });

        function showRemoveWarning(index) {
            list.removeIndex = index;
            list.removeCandidate = list.accounts[index];
            dialogService.open('#account-remove-popup');
        }

        function removeAccount() {
            if (list.removeCandidate) {
                accountService.removeAccountByIndex(list.removeIndex).then(function () {
                    list.removeCandidate = undefined;
                    list.removeIndex = undefined;
                });
            }
        }

        function createAccount() {
            loginContext.notifyGenerateSeed($scope);
        }

        function importAccount() {
            loginContext.showInputSeedScreen($scope);
        }

        function signIn(account) {
            loginContext.showLoginScreen($scope, account);
        }
    }

    AccountListController.$inject = ['$scope', 'accountService', 'dialogService', 'loginContext'];

    angular
        .module('app.login')
        .controller('accountListController', AccountListController);
})();

(function () {
    'use strict';

    var WALLET_NAME_MAXLENGTH = 16;

    function AccountRegisterController($scope, accountService, cryptoService, loginContext) {
        var ctrl = this;

        ctrl.validationOptions = {
            onfocusout: false,
            rules: {
                walletName: {
                    maxlength: WALLET_NAME_MAXLENGTH
                },
                walletPassword: {
                    required: true,
                    minlength: 8,
                    password: true
                },
                walletPasswordConfirm: {
                    equalTo: '#walletPassword'
                }
            },
            messages: {
                walletName: {
                    maxlength: 'A wallet name is too long. Maximum name length is ' +
                        WALLET_NAME_MAXLENGTH + ' characters'
                },
                walletPassword: {
                    required: 'A password is required to store your seed safely',
                    minlength: 'Password must be 8 characters or longer'
                },
                walletPasswordConfirm: {
                    equalTo: 'Passwords do not match'
                }
            }
        };
        ctrl.saveAccountAndSignIn = saveAccountAndSignIn;
        ctrl.cancel = cancel;
        ctrl.seed = function (seed) {
            return arguments.length ? (loginContext.seed = seed) : loginContext.seed;
        };

        function cleanup() {
            ctrl.name = '';
            ctrl.password = '';
            ctrl.confirmPassword = '';
        }

        function saveAccountAndSignIn(form) {
            if (!form.validate()) {
                return false;
            }

            var seed = loginContext.seed;
            var cipher = cryptoService.encryptWalletSeed(seed, ctrl.password).toString();
            var keys = cryptoService.getKeyPair(seed);
            var checksum = cryptoService.seedChecksum(seed);
            var address = cryptoService.buildRawAddress(keys.public);

            var account = {
                name: ctrl.name,
                cipher: cipher,
                checksum: checksum,
                publicKey: keys.public,
                address: address
            };

            accountService.addAccount(account);

            loginContext.notifySignedIn($scope, address, seed, keys);

            cleanup();

            return true;
        }

        function cancel() {
            loginContext.showAccountsListScreen($scope);
            cleanup();
        }
    }

    AccountRegisterController.$inject = ['$scope', 'accountService', 'cryptoService', 'loginContext'];

    angular
        .module('app.login')
        .controller('accountRegisterController', AccountRegisterController);
})();

(function () {
    'use strict';

    var SEED_MINIMUM_LENGTH = 25;

    function AccountSeedController($scope, loginContext, utilityService,
                                   cryptoService, dialogService, passPhraseService) {
        var vm = this;

        vm.validationOptions = {
            onfocusout: false,
            rules: {
                walletSeed: {
                    required: true,
                    minlength: SEED_MINIMUM_LENGTH
                }
            },
            messages: {
                walletSeed: {
                    required: 'Wallet seed is required',
                    minlength: 'Wallet seed is too short. A secure wallet seed should contain more than ' +
                       SEED_MINIMUM_LENGTH + ' characters'
                }
            }
        };
        vm.registerAccount = registerAccount;
        vm.back = goBack;
        vm.refreshAddress = refreshAddress;
        vm.checkSeedAndRegister = checkSeedAndRegister;
        vm.generateSeed = generateSeed;

        function cleanup() {
            //it seems we won't need this code if we switch to recreation of controllers on each event
            vm.seed = '';
            vm.displayAddress = '';
        }

        function refreshAddress() {
            vm.displayAddress = cryptoService.buildRawAddressFromSeed(vm.seed);
        }

        function checkSeedAndRegister(form) {
            if (!form.validate()) {
                return false;
            }

            if (utilityService.endsWithWhitespace(vm.seed)) {
                dialogService.openNonCloseable('#seed-whitespace-popup');
            } else {
                registerAccount();
            }

            return true;
        }

        function generateSeed() {
            vm.seed = passPhraseService.generate();
            refreshAddress();
        }

        function registerAccount() {
            loginContext.showRegisterScreen($scope, vm.seed);
            cleanup();
        }

        function goBack() {
            loginContext.showAccountsListScreen($scope);
            cleanup();
        }
    }

    AccountSeedController.$inject = ['$scope',
        'loginContext',
        'utilityService',
        'cryptoService',
        'dialogService',
        'passPhraseService'];

    angular
        .module('app.login')
        .controller('accountSeedController', AccountSeedController);
})();

(function () {
    'use strict';

    function AccountLoginController ($scope, cryptoService, loginContext, notificationService) {
        var vm = this;

        vm.signIn = signIn;
        vm.cancel = cancel;

        function cleanup() {
            vm.password = '';
        }

        function performSignIn() {
            var account = loginContext.currentAccount;
            if (angular.isUndefined(account)) {
                throw new Error('Account to log in hasn\'t been selected');
            }

            var decryptedSeed = cryptoService.decryptWalletSeed(account.cipher, vm.password, account.checksum);
            if (!decryptedSeed) {
                notificationService.error('Wrong password! Please try again.');
            }
            else {
                var keys = cryptoService.getKeyPair(decryptedSeed);
                loginContext.notifySignedIn($scope, account.address, decryptedSeed, keys);
            }
        }

        function signIn() {
            performSignIn();
            cleanup();
        }

        function cancel() {
            loginContext.showAccountsListScreen($scope);
            cleanup();
        }
    }

    AccountLoginController.$inject = ['$scope', 'cryptoService', 'loginContext', 'notificationService'];

    angular
        .module('app.login')
        .controller('accountLoginController', AccountLoginController);
})();

(function() {
    'use strict';

    angular.module('app.navigation', ['waves.core.services', 'app.ui', 'app.shared'])
        .constant('navigation.events', {
            NAVIGATION_CREATE_ALIAS: 'navigation-create-alias'
        });
})();

(function () {
    'use strict';

    angular
        .module('app.navigation')
        .controller('navigationController', ['$scope', function ($scope) {
            var nav = this;

            nav.currentTab = 'wallet';
            nav.changeTab = changeTab;

            function changeTab (pageId) {
                nav.currentTab = pageId;
            }
        }]);
})();

(function () {
    'use strict';

    function MainMenuController($scope, $interval, events, applicationContext,
                                cryptoService, dialogService, notificationService, apiService) {
        var ctrl = this,
            refreshPromise,
            delayRefresh = 10 * 1000;

        ctrl.blockHeight = 0;
        ctrl.address = applicationContext.account.address;
        ctrl.addressQr = 'waves://' + ctrl.address;

        function initializeBackupFields() {
            ctrl.seed = applicationContext.account.seed;
            ctrl.encodedSeed = cryptoService.base58.encode(converters.stringToByteArray(ctrl.seed));
            ctrl.publicKey = applicationContext.account.keyPair.public;
            ctrl.privateKey = applicationContext.account.keyPair.private;
        }

        function buildBackupClipboardText() {
            var text = 'Seed: ' + ctrl.seed + '\n';
            text += 'Encoded seed: ' + ctrl.encodedSeed + '\n';
            text += 'Private key: ' + ctrl.privateKey + '\n';
            text += 'Public key: ' + ctrl.publicKey + '\n';
            text += 'Address: ' + ctrl.address;
            return text;
        }

        refreshBlockHeight();
        refreshPromise = $interval(refreshBlockHeight, delayRefresh);

        $scope.$on('$destroy', function () {
            if (angular.isDefined(refreshPromise)) {
                $interval.cancel(refreshPromise);
                refreshPromise = undefined;
            }
        });

        ctrl.showAddressQr = showAddressQr;
        ctrl.showBackupDialog = showBackupDialog;
        ctrl.showProfileDialog = showProfileDialog;
        ctrl.backup = backup;

        function showAddressQr() {
            dialogService.open('#address-qr-modal');
        }

        function showProfileDialog() {
            $scope.$broadcast(events.NAVIGATION_CREATE_ALIAS, {});
        }

        function showBackupDialog() {
            initializeBackupFields();
            dialogService.open('#header-wPop-backup');
        }

        function backup() {
            var clipboard = new Clipboard('#backupForm', {
                text: function () {
                    return buildBackupClipboardText();
                }
            });

            clipboard.on('success', function(e) {
                notificationService.notice('Account backup has been copied to clipboard');
                e.clearSelection();
            });

            angular.element('#backupForm').click();
            clipboard.destroy();
        }

        function refreshBlockHeight() {
            apiService.blocks.height().then(function (response) {
                ctrl.blockHeight = response.height;
                applicationContext.blockHeight = response.height;
            });
        }
    }

    MainMenuController.$inject = ['$scope', '$interval', 'navigation.events', 'applicationContext',
                                  'cryptoService', 'dialogService', 'notificationService', 'apiService'];

    angular
        .module('app.navigation')
        .controller('mainMenuController', MainMenuController);
})();

(function () {
    'use strict';

    var DEFAULT_FEE = Money.fromTokens(0.001, Currency.WAVES);
    var ALIAS_MINIMUM_LENGTH = 4;
    var ALIAS_MAXIMUM_LENGTH = 30;

    function WavesCreateAliasController($scope, $timeout, events, applicationContext,
                                        dialogService, notificationService, transactionBroadcast,
                                        formattingService, aliasRequestService, apiService) {
        var ctrl = this;

        ctrl.fee = DEFAULT_FEE;
        ctrl.aliasList = null;

        ctrl.validationOptions = {
            onfocusout: false,
            rules: {
                aliasName: {
                    required: true,
                    minlength: ALIAS_MINIMUM_LENGTH,
                    maxlength: ALIAS_MAXIMUM_LENGTH
                }
            },
            messages: {
                aliasName: {
                    required: 'Symbolic name is required',
                    minlength: 'Alias name is too short. Please enter at least ' + ALIAS_MINIMUM_LENGTH + ' symbols',
                    maxlength: 'Alias name is too long. Please use no more than ' + ALIAS_MAXIMUM_LENGTH + ' symbols'
                }
            }
        };

        ctrl.broadcast = new transactionBroadcast.instance(apiService.alias.create, function (tx) {
            var formattedTime = formattingService.formatTimestamp(tx.timestamp),
                displayMessage = 'Created alias \'' + tx.alias + '\'<br/>Date: ' + formattedTime;
            notificationService.notice(displayMessage);
        });

        ctrl.confirmCreateAlias = confirmCreateAlias;
        ctrl.broadcastTransaction = broadcastTransaction;

        $scope.$on(events.NAVIGATION_CREATE_ALIAS, function () {
            reset();
            getExistingAliases();
            dialogService.open('#create-alias-dialog');
        });

        function getExistingAliases() {
            apiService.alias
                .getByAddress(applicationContext.account.address)
                .then(function (aliasList) {
                    ctrl.aliasList = aliasList;
                });
        }

        function broadcastTransaction () {
            ctrl.broadcast.broadcast();
        }

        function confirmCreateAlias (form) {
            if (!form.validate(ctrl.validationOptions)) {
                return false;
            }

            var createAlias = {
                alias: ctrl.alias,
                fee: ctrl.fee
            };

            var sender = {
                publicKey: applicationContext.account.keyPair.public,
                privateKey: applicationContext.account.keyPair.private
            };

            // Create the transaction and waiting for confirmation
            ctrl.broadcast.setTransaction(aliasRequestService.buildCreateAliasRequest(createAlias, sender));

            // Open confirmation dialog (async because this method is called while another dialog is open)
            $timeout(function () {
                dialogService.open('#create-alias-confirmation');
            }, 1);

            return true;
        }

        function reset () {
            ctrl.alias = '';
        }
    }

    WavesCreateAliasController.$inject = ['$scope', '$timeout', 'navigation.events', 'applicationContext',
                                          'dialogService', 'notificationService', 'transactionBroadcast',
                                          'formattingService', 'aliasRequestService', 'apiService'];

    angular
        .module('app.navigation')
        .controller('createAliasController', WavesCreateAliasController);
})();

(function () {
    'use strict';

    function WavesTabController($scope, dialogService) {
        $scope.isSelected = function () {
            return $scope.pageId === $scope.currentPageId;
        };

        $scope.onClick = function () {
            $scope.onSelect({pageId: $scope.pageId});

            // cleaning unused modal dialog divs, created by previous tab
            dialogService.cleanup();
        };
    }

    function WavesTabLink(scope, element) {
        element.addClass('tabs-radio');
    }

    angular
        .module('app.navigation')
        .directive('wavesTab', function WavesTabDirective() {
            return {
                restrict: 'A',
                controller: ['$scope', 'dialogService', WavesTabController],
                scope: {
                    pageId: '@',
                    caption: '<',
                    onSelect: '&',
                    currentPageId: '<'
                },
                link: WavesTabLink,
                templateUrl: 'navigation/tab.directive'
            };
        });
})();

(function() {
    'use strict';

    angular.module('app.wallet', ['app.shared'])
        .constant('wallet.events', {
            WALLET_SEND: 'wallet-send',
            WALLET_WITHDRAW: 'wallet-withdraw',
            WALLET_DEPOSIT: 'wallet-deposit',
            WALLET_CARD_DEPOSIT: 'wallet-card-deposit'
        });
})();

(function () {
    'use strict';

    function WalletBoxController() {
        var ctrl = this;

        var mapping = {};
        mapping[Currency.WAVES.displayName] = {
            image: 'wB-bg-WAV.svg',
            displayName: Currency.WAVES.displayName
        };
        mapping[Currency.BTC.displayName] = {
            image: 'wB-bg-BTC.svg',
            displayName: Currency.BTC.displayName
        };
        mapping[Currency.USD.displayName] = {
            image: 'wB-bg-USD.svg',
            displayName: Currency.USD.displayName
        };
        mapping[Currency.EUR.displayName] = {
            image: 'wB-bg-EUR.svg',
            displayName: Currency.EUR.displayName
        };
        mapping[Currency.ETH.displayName] = {
            image: 'wB-bg-ETH.svg',
            displayName: Currency.ETH.displayName
        };
        mapping[Currency.LTC.displayName] = {
            image: 'wB-bg-LTC.svg',
            displayName: Currency.LTC.displayName
        };
        mapping[Currency.ZEC.displayName] = {
            image: 'wB-bg-ZEC.svg',
            displayName: Currency.ZEC.displayName
        };
        mapping[Currency.TRY.displayName] = {
            image: 'wB-bg-WTRY.png',
            displayName: Currency.TRY.displayName
        };
        mapping[Currency.BCH.displayName] = {
            image: 'wB-bg-BCH.svg',
            displayName: 'BCH'
        };
				mapping[Currency.MIR.displayName] = {
            image: 'wB-bg-MIR.svg',
            displayName: Currency.MIR.displayName
        };
		mapping[Currency.YL.displayName] = {
				image: 'wB-bg-YL.svg',
				displayName: Currency.YL.displayName
		};
		mapping[Currency.MP.displayName] = {
				image: 'wB-bg-MP.svg',
				displayName: Currency.MP.displayName
		};
		mapping[Currency.RI.displayName] = {
				image: 'wB-bg-RI.svg',
				displayName: Currency.RI.displayName
		};
		mapping[Currency.GS.displayName] = {
				image: 'wB-bg-GS.svg',
				displayName: Currency.GS.displayName
		};
		mapping[Currency.BA.displayName] = {
				image: 'wB-bg-BA.svg',
				displayName: Currency.BA.displayName
		};

        ctrl.$onChanges = function (changesObject) {
            if (changesObject.balance) {
                var balance = changesObject.balance.currentValue;
                ctrl.integerBalance = balance.formatIntegerPart();
                ctrl.fractionBalance = balance.formatFractionPart();
            }
        };
        ctrl.$onInit = function () {
            ctrl.image = mapping[ctrl.balance.currency.displayName].image;
            ctrl.displayName = mapping[ctrl.balance.currency.displayName].displayName;
        };
    }

    WalletBoxController.$inject = [];

    angular
        .module('app.wallet')
        .component('walletBox', {
            controller: WalletBoxController,
            bindings: {
                balance: '<',
                onSend: '&',
                onWithdraw: '&',
                onDeposit: '&',
                detailsAvailable: '<?'
            },
            templateUrl: 'wallet/box.component'
        });
})();

(function () {
    'use strict';

    var TRANSACTIONS_TO_LOAD = 100;

    function WavesWalletListController($scope, $interval, events, applicationContext,
                                       apiService, transactionLoadingService, dialogService) {
        var ctrl = this;
        var refreshPromise;
        var refreshDelay = 10 * 1000;

        function sendCommandEvent(event, currency) {
            var assetWallet = findWalletByCurrency(currency);
            var wavesWallet = findWalletByCurrency(Currency.WAVES);

            $scope.$broadcast(event, {
                assetBalance: assetWallet.balance,
                wavesBalance: wavesWallet.balance
            });
        }

        function findWalletByCurrency(currency) {
            return _.find(ctrl.wallets, function (w) {
                return w.balance.currency === currency;
            });
        }

        ctrl.wallets = [
						{
								balance: new Money(0, Currency.RI),
								depositWith: Currency.BTC
						},
						{
								balance: new Money(0, Currency.YL),
								depositWith: Currency.BTC
						},
						{
								balance: new Money(0, Currency.GS),
								depositWith: Currency.BTC
						},
						{
								balance: new Money(0, Currency.BA),
								depositWith: Currency.BA
						},
						{
								balance: new Money(0, Currency.MP),
								depositWith: Currency.MP
						},
						{
								balance: new Money(0, Currency.MIR),
								depositWith: Currency.BTC
						},
						{
								balance: new Money(0, Currency.WAVES),
								depositWith: Currency.BTC
						}
        ];

        ctrl.transactions = [];
        ctrl.send = send;
        ctrl.withdraw = withdraw;
        ctrl.deposit = deposit;
        ctrl.depositFromCard = depositFromCard;

        loadDataFromBackend();
        patchCurrencyIdsForTestnet();

        $scope.$on('$destroy', function () {
            if (angular.isDefined(refreshPromise)) {
                $interval.cancel(refreshPromise);
                refreshPromise = undefined;
            }
        });

        function send (wallet) {
            sendCommandEvent(events.WALLET_SEND, wallet.balance.currency);
        }

        function withdraw (wallet) {
            var id = wallet.balance.currency.id,
                type;

            if (id === Currency.BTC.id ||
                id === Currency.ETH.id ||
                id === Currency.WAVES.id ||
                id === Currency.LTC.id ||
                id === Currency.ZEC.id ||
                id === Currency.BCH.id
            ) {
                type = 'crypto';
            } else if (id === Currency.EUR.id || id === Currency.USD.id) {
                type = 'fiat';
            } else if (id === Currency.TRY.id) {
                dialogService.open('#digilira-dialog');
						} else if (id === Currency.MIR.id) {
								dialogService.open('#feat-not-active');
						} else if (id === Currency.RI.id) {
								dialogService.open('#feat-not-active');
						} else if (id === Currency.YL.id) {
								dialogService.open('#feat-not-active');
						} else if (id === Currency.MP.id) {
								dialogService.open('#feat-not-active');
						} else if (id === Currency.GS.id) {
								dialogService.open('#feat-not-active');
						} else if (id === Currency.BA.id) {
								dialogService.open('#feat-not-active');
						} else {
                throw new Error('Add an option here!');
            }

            sendCommandEvent(events.WALLET_WITHDRAW + type, wallet.balance.currency);
        }

        function deposit (wallet) {
            if (wallet.balance.currency === Currency.WAVES) {
                depositFromCard(wallet.balance.currency);
            } else if (wallet.balance.currency === Currency.TRY) {
                dialogService.open('#digilira-dialog');
						} else if (wallet.balance.currency === Currency.MIR) {
								dialogService.open('#feat-not-active');
						} else if (wallet.balance.currency === Currency.RI) {
								dialogService.open('#feat-not-active');
						} else if (wallet.balance.currency === Currency.YL) {
								dialogService.open('#feat-not-active');
						} else if (wallet.balance.currency === Currency.MP) {
								dialogService.open('#feat-not-active');
						} else if (wallet.balance.currency === Currency.GS) {
								dialogService.open('#feat-not-active');
						} else if (wallet.balance.currency === Currency.BA) {
								dialogService.open('#feat-not-active');
            } else {
                $scope.$broadcast(events.WALLET_DEPOSIT + wallet.balance.currency.id, {
                    assetBalance: wallet.balance,
                    depositWith: wallet.depositWith
                });
            }
        }

        function depositFromCard (currency) {
            dialogService.close();

            $scope.$broadcast(events.WALLET_CARD_DEPOSIT, {
                currency: currency
            });
        }

        function loadDataFromBackend() {
            refreshWallets();
            refreshTransactions();

            refreshPromise = $interval(function() {
                refreshWallets();
                refreshTransactions();
            }, refreshDelay);
        }

        function refreshWallets() {
            apiService.address.balance(applicationContext.account.address)
                .then(function (response) {
                    var wavesWallet = findWalletByCurrency(Currency.WAVES);
                    wavesWallet.balance = Money.fromCoins(response.balance, Currency.WAVES);
                });

            apiService.assets.balance(applicationContext.account.address).then(function (response) {
                _.forEach(response.balances, function (assetBalance) {
                    var id = assetBalance.assetId;

                    // adding asset details to cache
                    applicationContext.cache.putAsset(assetBalance.issueTransaction);
                    applicationContext.cache.updateAsset(id, assetBalance.balance,
                        assetBalance.reissuable, assetBalance.quantity);
                });

                _.forEach(ctrl.wallets, function (wallet) {
                    var asset = applicationContext.cache.assets[wallet.balance.currency.id];
                    if (asset) {
                        wallet.balance = asset.balance;
                    }
                });
            });
        }

        function refreshTransactions() {
            var txArray;
            transactionLoadingService.loadTransactions(applicationContext.account, TRANSACTIONS_TO_LOAD)
                .then(function (transactions) {
                    txArray = transactions;

                    return transactionLoadingService.refreshAssetCache(applicationContext.cache, transactions);
                })
                .then(function () {
                    ctrl.transactions = txArray;
                });
        }

        // Assets ID substitution for testnet
        function patchCurrencyIdsForTestnet() {
            if ($scope.isTestnet()) {
                Currency.EUR.id = '2xnE3EdpqXtFgCP156qt1AbyjpqdZ5jGjWo3CwTawcux';
                Currency.USD.id = 'HyFJ3rrq5m7FxdkWtQXkZrDat1F7LjVVGfpSkUuEXQHj';
                Currency.BTC.id = 'Fmg13HEHJHuZYbtJq8Da8wifJENq8uBxDuWoP9pVe2Qe';
                Currency.ETH.id = '3fVdr1oiX39uS82ZGUPnu7atNQtFHZfPnseRDUcDxrhp';
                Currency.LTC.id = 'NO_ID_YET'; // FIXME
                Currency.ZEC.id = 'NO_ID_YET'; // FIXME
                Currency.invalidateCache();
            }
        }
    }

    WavesWalletListController.$inject = ['$scope', '$interval', 'wallet.events', 'applicationContext',
                                         'apiService', 'transactionLoadingService', 'dialogService'];

    angular
        .module('app.wallet')
        .controller('walletListController', WavesWalletListController);
})();

(function () {
    'use strict';

    var DEFAULT_FEE_AMOUNT = '0.001';
    var FEE_CURRENCY = Currency.WAVES;

    function WalletSendController($scope, $timeout, constants, events, autocomplete,
                                  applicationContext, apiService, dialogService,
                                  transactionBroadcast, assetService, notificationService,
                                  formattingService, addressService) {
        var ctrl = this;
        var minimumFee = new Money(constants.MINIMUM_TRANSACTION_FEE, FEE_CURRENCY);

        ctrl.autocomplete = autocomplete;

        ctrl.confirm = {
            recipient: ''
        };

        ctrl.broadcast = new transactionBroadcast.instance(apiService.assets.transfer,
            function (transaction) {
                var amount = Money.fromCoins(transaction.amount, ctrl.assetBalance.currency);
                var address = transaction.recipient;
                var displayMessage = 'Sent ' + amount.formatAmount(true) + ' of ' +
                    ctrl.assetBalance.currency.displayName +
                    '<br/>Recipient ' + address.substr(0,15) + '...<br/>Date: ' +
                    formattingService.formatTimestamp(transaction.timestamp);
                notificationService.notice(displayMessage);
            }
        );

        ctrl.validationOptions = {
            rules: {
                sendRecipient: {
                    required: true
                },
                sendAmount: {
                    required: true,
                    decimal: 8, // stub value updated on validation
                    min: 0,     // stub value updated on validation
                    max: constants.JAVA_MAX_LONG // stub value updated on validation
                },
                sendFee: {
                    required: true,
                    decimal: Currency.WAVES.precision,
                    min: minimumFee.toTokens()
                },
                sendAttachment: {
                    maxbytelength: constants.MAXIMUM_ATTACHMENT_BYTE_SIZE
                }
            },
            messages: {
                sendRecipient: {
                    required: 'Recipient account number is required'
                },
                sendAmount: {
                    required: 'Amount to send is required'
                },
                sendFee: {
                    required: 'Transaction fee is required',
                    decimal: 'Transaction fee must be a number with no more than ' +
                        minimumFee.currency.precision + ' digits after the decimal point (.)',
                    min: 'Transaction fee is too small. It should be greater or equal to ' +
                        minimumFee.formatAmount(true)
                },
                sendAttachment: {
                    maxbytelength: 'Attachment is too long'
                }
            }
        };

        ctrl.submitTransfer = submitTransfer;
        ctrl.broadcastTransaction = broadcastTransaction;

        resetForm();

        $scope.$on(events.WALLET_SEND, function (event, eventData) {

            resetForm();

            ctrl.feeAssetBalance = eventData.wavesBalance;
            ctrl.assetBalance = eventData.assetBalance;
            ctrl.feeAndTransferAssetsAreTheSame = eventData.assetBalance.currency === FEE_CURRENCY;
            ctrl.currency = eventData.assetBalance.currency.displayName;

            // Update validation options and check how they affect form validation
            ctrl.validationOptions.rules.sendAmount.decimal = ctrl.assetBalance.currency.precision;
            var minimumPayment = Money.fromCoins(1, ctrl.assetBalance.currency);
            ctrl.validationOptions.rules.sendAmount.min = minimumPayment.toTokens();
            ctrl.validationOptions.rules.sendAmount.max = ctrl.assetBalance.toTokens();
            ctrl.validationOptions.messages.sendAmount.decimal = 'The amount to send must be a number ' +
                'with no more than ' + minimumPayment.currency.precision +
                ' digits after the decimal point (.)';
            ctrl.validationOptions.messages.sendAmount.min = 'Payment amount is too small. ' +
                'It should be greater or equal to ' + minimumPayment.formatAmount(false);
            ctrl.validationOptions.messages.sendAmount.max = 'Payment amount is too big. ' +
                'It should be less or equal to ' + ctrl.assetBalance.formatAmount(false);

            dialogService.open('#wB-butSend-WAV');
        });

        function submitTransfer(transferForm) {
            if (!transferForm.validate(ctrl.validationOptions)) {
                // Prevent dialog from closing
                return false;
            }

            var amount = Money.fromTokens(ctrl.amount, ctrl.assetBalance.currency);
            var transferFee = Money.fromTokens(ctrl.autocomplete.getFeeAmount(), FEE_CURRENCY);
            var paymentCost = transferFee;

            if (ctrl.feeAndTransferAssetsAreTheSame) {
                paymentCost = paymentCost.plus(amount);
            }

            if (paymentCost.greaterThan(ctrl.feeAssetBalance)) {
                notificationService.error('Not enough ' + FEE_CURRENCY.displayName + ' for the transfer');
                return false;
            }

            var assetTransfer = {
                recipient: addressService.cleanupOptionalPrefix(ctrl.recipient),
                amount: amount,
                fee: transferFee
            };

            if (ctrl.attachment) {
                assetTransfer.attachment = converters.stringToByteArray(ctrl.attachment);
            }

            var sender = {
                publicKey: applicationContext.account.keyPair.public,
                privateKey: applicationContext.account.keyPair.private
            };

            // Create a transaction and wait for confirmation
            ctrl.broadcast.setTransaction(assetService.createAssetTransferTransaction(assetTransfer, sender));

            // Set data to the confirmation dialog
            ctrl.confirm.amount = assetTransfer.amount;
            ctrl.confirm.fee = assetTransfer.fee;
            ctrl.confirm.recipient = assetTransfer.recipient;

            // Open confirmation dialog (async because this method is called while another dialog is open)
            $timeout(function () {
                dialogService.open('#send-payment-confirmation');
            }, 1);

            // Close payment dialog
            return true;
        }

        function broadcastTransaction() {
            ctrl.broadcast.broadcast();
        }

        function resetForm() {
            ctrl.recipient = '';
            ctrl.amount = '0';
            ctrl.confirm.amount = Money.fromTokens(0, Currency.WAVES);
            ctrl.confirm.fee = Money.fromTokens(DEFAULT_FEE_AMOUNT, FEE_CURRENCY);
            ctrl.autocomplete.defaultFee(Number(DEFAULT_FEE_AMOUNT));
        }
    }

    WalletSendController.$inject = ['$scope', '$timeout', 'constants.ui', 'wallet.events', 'autocomplete.fees',
        'applicationContext', 'apiService', 'dialogService', 'transactionBroadcast', 'assetService',
        'notificationService', 'formattingService', 'addressService'];

    angular
        .module('app.wallet')
        .controller('walletSendController', WalletSendController);
})();

(function () {
    'use strict';

    var DEFAULT_FEE_AMOUNT = '0.001',
        DEFAULT_ERROR_MESSAGE = 'Connection is lost';

    function WavesWalletWithdrawController ($scope, constants, events, autocomplete, dialogService, $element,
                                            coinomatService, transactionBroadcast, notificationService,
                                            apiService, formattingService, assetService, applicationContext) {

        var ctrl = this;
        var type = $element.data('type');

        var minimumFee = new Money(constants.MINIMUM_TRANSACTION_FEE, Currency.WAVES);
        var notPermittedBitcoinAddresses = {};

        ctrl.broadcast = new transactionBroadcast.instance(apiService.assets.transfer,
            function (transaction) {
                var amount = Money.fromCoins(transaction.amount, ctrl.assetBalance.currency);
                var address = transaction.recipient;
                var displayMessage = 'Sent ' + amount.formatAmount(true) + ' of ' +
                    ctrl.assetBalance.currency.displayName +
                    '<br/>Gateway ' + address.substr(0,15) + '...<br/>Date: ' +
                    formattingService.formatTimestamp(transaction.timestamp);
                notificationService.notice(displayMessage);
            });

        ctrl.autocomplete = autocomplete;

        ctrl.validationOptions = {
            onfocusout: function (element) {
                return !(element.name in ['withdrawFee']); // FIXME
            },
            rules: {
                withdrawAddress: {
                    required: true
                },
                withdrawAmount: {
                    required: true,
                    decimal: 8,
                    min: 0,
                    max: constants.JAVA_MAX_LONG
                },
                withdrawFee: {
                    required: true,
                    decimal: Currency.WAVES.precision,
                    min: minimumFee.toTokens()
                },
                withdrawTotal: {
                    required: true,
                    decimal: 8,
                    min: 0,
                    max: constants.JAVA_MAX_LONG
                }
            },
            messages: {
                withdrawAddress: {
                    required: 'Bitcoin address is required'
                },
                withdrawAmount: {
                    required: 'Amount to withdraw is required'
                },
                withdrawFee: {
                    required: 'Gateway transaction fee is required',
                    decimal: 'Transaction fee must be with no more than ' +
                        minimumFee.currency.precision + ' digits after the decimal point (.)',
                    min: 'Transaction fee is too small. It should be greater or equal to ' +
                        minimumFee.formatAmount(true)
                },
                withdrawTotal: {
                    required: 'Total amount is required'
                }
            }
        };

        ctrl.confirm = {
            amount: {},
            fee: {},
            gatewayAddress: '',
            address: ''
        };

        ctrl.confirmWithdraw = confirmWithdraw;
        ctrl.refreshAmount = refreshAmount;
        ctrl.refreshTotal = refreshTotal;
        ctrl.broadcastTransaction = broadcastTransaction;
        ctrl.gatewayEmail = 'support@coinomat.com';

        resetForm();

        $scope.$on(events.WALLET_WITHDRAW + type, function (event, eventData) {
            ctrl.assetBalance = eventData.assetBalance;
            ctrl.wavesBalance = eventData.wavesBalance;

            if (ctrl.assetBalance.currency === Currency.BTC ||
                ctrl.assetBalance.currency === Currency.ETH ||
                ctrl.assetBalance.currency === Currency.LTC ||
                ctrl.assetBalance.currency === Currency.ZEC ||
                ctrl.assetBalance.currency === Currency.BCH
            ) {
                withdrawCrypto();
            } else if (ctrl.assetBalance.currency === Currency.EUR) {
                withdrawEUR();
            } else if (ctrl.assetBalance.currency === Currency.USD) {
                withdrawUSD();
            } else {
                $scope.home.featureUnderDevelopment();
            }
        });

        function withdrawCrypto() {
            coinomatService.getWithdrawRate(ctrl.assetBalance.currency)
                .then(function (response) {
                    /* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */
                    var minimumPayment = Money.fromCoins(1, ctrl.assetBalance.currency);
                    minimumPayment = Money.fromTokens(Math.max(minimumPayment.toTokens(), response.in_min),
                        ctrl.assetBalance.currency);
                    var maximumPayment = Money.fromTokens(Math.min(ctrl.assetBalance.toTokens(),
                        response.in_max), ctrl.assetBalance.currency);
                    ctrl.sourceCurrency = ctrl.assetBalance.currency.displayName;
                    ctrl.isEthereum = (ctrl.assetBalance.currency === Currency.ETH);
                    ctrl.exchangeRate = response.xrate;
                    ctrl.feeIn = response.fee_in;
                    ctrl.feeOut = response.fee_out;
                    ctrl.targetCurrency = response.to_txt;
                    ctrl.total = response.in_def;
                    ctrl.minimumPayment = minimumPayment;
                    /* jscs:enable requireCamelCaseOrUpperCaseIdentifiers */
                    ctrl.validationOptions.rules.withdrawAmount.decimal = ctrl.assetBalance.currency.precision;
                    ctrl.validationOptions.rules.withdrawAmount.max = maximumPayment.toTokens();
                    ctrl.validationOptions.rules.withdrawAmount.min = minimumPayment.toTokens();
                    ctrl.validationOptions.messages.withdrawAddress.required = minimumPayment.currency.displayName +
                        ' address is required';
                    ctrl.validationOptions.messages.withdrawAmount.decimal = 'The amount to withdraw must be ' +
                        'a number with no more than ' + minimumPayment.currency.precision +
                        ' digits after the decimal point (.)';
                    ctrl.validationOptions.messages.withdrawAmount.min = 'Withdraw amount is too small. ' +
                        'It should be greater or equal to ' + minimumPayment.formatAmount();
                    ctrl.validationOptions.messages.withdrawAmount.max = 'Withdraw amount is too big. ' +
                        'It should be less or equal to ' + maximumPayment.formatAmount();

                    refreshAmount();

                    dialogService.open('#withdraw-crypto-dialog');
                }).catch(function (exception) {
                if (exception && exception.data && exception.data.error) {
                    notificationService.error(exception.error);
                } else {
                    notificationService.error(DEFAULT_ERROR_MESSAGE);
                }
            }).then(function () {
                return coinomatService.getDepositDetails(Currency.BTC, Currency.BTC,
                    applicationContext.account.address);
            }).then(function (depositDetails) {
                notPermittedBitcoinAddresses[depositDetails.address] = 1;

                return coinomatService.getDepositDetails(Currency.BTC, Currency.WAVES,
                    applicationContext.account.address);
            }).then(function (depositDetails) {
                notPermittedBitcoinAddresses[depositDetails.address] = 1;
            });
        }

        function withdrawEUR() {
            ctrl.sourceCurrency = Currency.EUR.displayName;
            dialogService.open('#withdraw-fiat-dialog');
        }

        function withdrawUSD() {
            ctrl.sourceCurrency = Currency.USD.displayName;
            dialogService.open('#withdraw-fiat-dialog');
        }

        function validateRecipientBTCAddress(recipient) {
            if (!recipient.match(/^[0-9a-z]{27,34}$/i)) {
                throw new Error('Bitcoin address is invalid. Expected address length is from 27 to 34 symbols');
            }

            if (notPermittedBitcoinAddresses[recipient]) {
                throw new Error('Withdraw on deposit bitcoin accounts is not permitted');
            }
        }

        function validateWithdrawCost(withdrawCost, availableFunds) {
            if (withdrawCost.greaterThan(availableFunds)) {
                throw new Error('Not enough Waves for the withdraw transfer');
            }
        }

        function confirmWithdraw (amountForm) {
            if (!amountForm.validate(ctrl.validationOptions)) {
                return false;
            }

            try {
                var withdrawCost = Money.fromTokens(ctrl.autocomplete.getFeeAmount(), Currency.WAVES);
                validateWithdrawCost(withdrawCost, ctrl.wavesBalance);
                if (ctrl.assetBalance.currency === Currency.BTC) {
                    validateRecipientBTCAddress(ctrl.recipient);
                } else if (ctrl.assetBalance.currency === Currency.ETH) {
                    // TODO
                }
            } catch (e) {
                notificationService.error(e.message);
                return false;
            }

            var total = Money.fromTokens(ctrl.total, ctrl.assetBalance.currency);
            var fee = Money.fromTokens(ctrl.autocomplete.getFeeAmount(), Currency.WAVES);
            ctrl.confirm.amount = total;
            ctrl.confirm.fee = fee;
            ctrl.confirm.recipient = ctrl.recipient;

            coinomatService.getWithdrawDetails(ctrl.assetBalance.currency, ctrl.recipient)
                .then(function (withdrawDetails) {
                    ctrl.confirm.gatewayAddress = withdrawDetails.address;

                    var assetTransfer = {
                        recipient: withdrawDetails.address,
                        amount: total,
                        fee: fee,
                        attachment: converters.stringToByteArray(withdrawDetails.attachment)
                    };
                    var sender = {
                        publicKey: applicationContext.account.keyPair.public,
                        privateKey: applicationContext.account.keyPair.private
                    };
                    // creating the transaction and waiting for confirmation
                    ctrl.broadcast.setTransaction(assetService.createAssetTransferTransaction(assetTransfer, sender));

                    resetForm();

                    dialogService.open('#withdraw-confirmation');
                })
                .catch(function (exception) {
                    notificationService.error(exception.message);
                });

            return true;
        }

        function broadcastTransaction () {
            ctrl.broadcast.broadcast();
        }

        function refreshTotal () {
            var amount = ctrl.exchangeRate * ctrl.amount;
            var total = Money.fromTokens(amount + ctrl.feeIn + ctrl.feeOut, ctrl.assetBalance.currency);
            ctrl.total = total.formatAmount(true, false);
        }

        function refreshAmount () {
            var total = Math.max(0, ctrl.exchangeRate * (ctrl.total - ctrl.feeIn) - ctrl.feeOut);
            var amount = Money.fromTokens(total, ctrl.assetBalance.currency);
            ctrl.amount = amount.formatAmount(true, false);
        }

        function resetForm () {
            ctrl.recipient = '';
            ctrl.address = '';
            ctrl.autocomplete.defaultFee(Number(DEFAULT_FEE_AMOUNT));
        }
    }

    WavesWalletWithdrawController.$inject = [
        '$scope', 'constants.ui', 'wallet.events', 'autocomplete.fees', 'dialogService', '$element',
        'coinomatService', 'transactionBroadcast', 'notificationService',
        'apiService', 'formattingService', 'assetService', 'applicationContext'
    ];

    angular
        .module('app.wallet')
        .controller('walletWithdrawController', WavesWalletWithdrawController);
})();

(function () {
    'use strict';

    var DEFAULT_ERROR_MESSAGE = 'Connection is lost';

    function WavesWalletDepositController($scope, events, coinomatService, dialogService, notificationService,
                                          applicationContext, bitcoinUriService, utilsService, $element) {

        var ctrl = this;
        var currencyId = Currency[$element.data('currency')].id;

        ctrl.btc = {
            bitcoinAddress: '',
            bitcoinAmount: '',
            bitcoinUri: '',
            minimumAmount: 0.001
        };

        ctrl.eth = {
            ethereumAddress: '',
            minimumAmount: 0.001
        };

        ctrl.ltc = {
            litecoinAddress: '',
            minimumAmount: 0.001
        };

        ctrl.zec = {
            zcashAddress: '',
            minimumAmount: 0.001
        };

        ctrl.bch = {
            cashAddress: '',
            minimumAmount: 0.001
        };

        ctrl.fiat = {
            verificationLink: 'https://go.idnow.de/coinomat/userdata/' + applicationContext.account.address,
            email: 'support@coinomat.com'
        };

        ctrl.refreshBTCUri = function () {
            var params = null;
            if (ctrl.btc.bitcoinAmount >= ctrl.btc.minimumAmount) {
                params = {
                    amount: ctrl.btc.bitcoinAmount
                };
            }
            ctrl.btc.bitcoinUri = bitcoinUriService.generate(ctrl.btc.bitcoinAddress, params);
        };

        $scope.$on(events.WALLET_DEPOSIT + currencyId, function (event, eventData) {
            ctrl.depositWith = eventData.depositWith;
            ctrl.assetBalance = eventData.assetBalance;
            ctrl.currency = ctrl.assetBalance.currency.displayName;

            // Show deposit popups only on mainnet
            if (ctrl.assetBalance.currency === Currency.BTC && !utilsService.isTestnet()) {
                depositBTC();
            } else if (ctrl.assetBalance.currency === Currency.ETH && !utilsService.isTestnet()) {
                depositETH();
            } else if (ctrl.assetBalance.currency === Currency.LTC && !utilsService.isTestnet()) {
                depositLTC();
            } else if (ctrl.assetBalance.currency === Currency.ZEC && !utilsService.isTestnet()) {
                depositZEC();
            } else if (ctrl.assetBalance.currency === Currency.BCH && !utilsService.isTestnet()) {
                depositBCH();
            } else if (ctrl.assetBalance.currency === Currency.EUR) {
                depositEUR();
            } else if (ctrl.assetBalance.currency === Currency.USD) {
                depositUSD();
            } else {
                $scope.home.featureUnderDevelopment();
            }
        });

        function catchErrorMessage(e) {
            if (e && e.message) {
                notificationService.error(e.message);
            } else {
                notificationService.error(DEFAULT_ERROR_MESSAGE);
            }
        }

        function depositBTC() {
            coinomatService.getDepositDetails(ctrl.depositWith, ctrl.assetBalance.currency,
                applicationContext.account.address)
                .then(function (depositDetails) {
                    dialogService.open('#deposit-btc-dialog');
                    ctrl.btc.bitcoinAddress = depositDetails.address;
                    ctrl.btc.bitcoinUri = bitcoinUriService.generate(ctrl.btc.bitcoinAddress);
                })
                .catch(catchErrorMessage);
        }

        function depositETH() {
            coinomatService.getDepositDetails(ctrl.depositWith, ctrl.assetBalance.currency,
                applicationContext.account.address)
                .then(function (depositDetails) {
                    dialogService.open('#deposit-eth-dialog');
                    ctrl.eth.ethereumAddress = depositDetails.address;
                })
                .catch(catchErrorMessage);
        }

        function depositLTC() {
            coinomatService.getDepositDetails(ctrl.depositWith, ctrl.assetBalance.currency,
                applicationContext.account.address)
                .then(function (depositDetails) {
                    dialogService.open('#deposit-ltc-dialog');
                    ctrl.ltc.litecoinAddress = depositDetails.address;
                })
                .catch(catchErrorMessage);
        }

        function depositZEC() {
            coinomatService.getDepositDetails(ctrl.depositWith, ctrl.assetBalance.currency,
                applicationContext.account.address)
                .then(function (depositDetails) {
                    dialogService.open('#deposit-zec-dialog');
                    ctrl.zec.zcashAddress = depositDetails.address;
                })
                .catch(catchErrorMessage);
        }

        function depositBCH() {
            coinomatService.getDepositDetails(ctrl.depositWith, ctrl.assetBalance.currency,
                applicationContext.account.address)
                .then(function (depositDetails) {
                    dialogService.open('#deposit-bch-dialog');
                    ctrl.bch.cashAddress = depositDetails.address;
                })
                .catch(catchErrorMessage);
        }

        function depositEUR() {
            dialogService.open('#deposit-eur-dialog');
        }

        function depositUSD() {
            dialogService.open('#deposit-usd-dialog');
        }
    }

    WavesWalletDepositController.$inject = [
        '$scope', 'wallet.events', 'coinomatService', 'dialogService', 'notificationService',
        'applicationContext', 'bitcoinUriService', 'utilsService', '$element'
    ];

    angular
        .module('app.wallet')
        .controller('walletDepositController', WavesWalletDepositController);
})();

(function () {
    'use strict';

    var DEFAULT_AMOUNT_TO_PAY = 50;

    function FiatCurrency (code, displayName) {
        this.code = code;
        if (displayName) {
            this.displayName = displayName;
        } else {
            this.displayName = code;
        }
    }

    function WavesCardDepositController ($scope, $window, $q, events, dialogService,
                                         fiatService, applicationContext, notificationService) {
        var deferred;
        var ctrl = this;
        ctrl.currencies = [new FiatCurrency('EURO', 'Euro'), new FiatCurrency('USD')];
        ctrl.limits = {};
        ctrl.updateReceiveAmount = updateReceiveAmount;
        ctrl.updateLimitsAndReceiveAmount = updateLimitsAndReceiveAmount;
        ctrl.redirectToMerchant = redirectToMerchant;

        reset();

        $scope.$on(events.WALLET_CARD_DEPOSIT, function (event, eventData) {
            dialogService.open('#card-deposit-dialog');

            reset();
            ctrl.crypto = eventData.currency;

            updateLimitsAndReceiveAmount();
        });

        function reset() {
            ctrl.payAmount = DEFAULT_AMOUNT_TO_PAY;
            ctrl.payCurrency = ctrl.currencies[0];
            ctrl.crypto = {};
            ctrl.getAmount = '';
        }

        function updateLimitsAndReceiveAmount() {
            fiatService.getLimits(applicationContext.account.address, ctrl.payCurrency.code, ctrl.crypto)
                .then(function (response) {
                    ctrl.limits = {
                        min: Number(response.min),
                        max: Number(response.max)
                    };

                    if (ctrl.payAmount < ctrl.limits.min) {
                        ctrl.payAmount = ctrl.limits.min;
                    } else if (ctrl.payAmount > ctrl.limits.max) {
                        ctrl.payAmount = ctrl.limits.max;
                    }
                }).catch(function (response) {
                    remotePartyErrorHandler('get limits', response);
                });

            updateReceiveAmount();
        }

        function remotePartyErrorHandler(operationName, response) {
            if (response) {
                if (response.data) {
                    notificationService.error(response.data.message);
                } else if (response.statusText) {
                    notificationService.error('Failed to ' + operationName + '. Error code: ' + response.status +
                        '<br/>Message: ' + response.statusText);
                }
            } else {
                notificationService.error('Operation failed: ' + operationName);
            }
        }

        function updateReceiveAmount() {
            if (deferred) {
                deferred.reject();
                deferred = undefined;
            }

            var amount = Number(ctrl.payAmount);
            if (isNaN(amount) || ctrl.payAmount <= 0) {
                ctrl.getAmount = '';
                return;
            }

            deferred = $q.defer();
            deferred.promise.then(function (response) {
                if (response) {
                    ctrl.getAmount = response + ' ' + ctrl.crypto.shortName;
                } else {
                    ctrl.getAmount = '';
                }
            }).catch(function (value) {
                if (value) {
                    remotePartyErrorHandler('get rates', value);
                }
            });

            fiatService.getRate(applicationContext.account.address, ctrl.payAmount, ctrl.payCurrency.code, ctrl.crypto)
                .then(deferred.resolve).catch(deferred.reject);
        }

        function redirectToMerchant() {
            try {
                validateAmountToPay();

                var url = fiatService.getMerchantUrl(applicationContext.account.address,
                    ctrl.payAmount, ctrl.payCurrency.code, ctrl.crypto);
                $window.open(url, '_blank');

                return true;
            } catch (e) {
                notificationService.error(e.message);
                return false;
            }
        }

        function validateAmountToPay() {
            if (Number(ctrl.payAmount) < ctrl.limits.min) {
                throw new Error('Minimum amount to pay is ' + ctrl.limits.min + ' ' + ctrl.payCurrency.displayName);
            }
            if (Number(ctrl.payAmount) > ctrl.limits.max) {
                throw new Error('Maximum amount to pay is ' + ctrl.limits.max + ' ' + ctrl.payCurrency.displayName);
            }
        }
    }

    WavesCardDepositController.$inject = ['$scope', '$window', '$q', 'wallet.events', 'dialogService',
                                          'coinomatFiatService', 'applicationContext', 'notificationService'];

    angular
        .module('app.wallet')
        .controller('cardDepositController', WavesCardDepositController);
})();

(function() {
    'use strict';

    angular.module('app.tokens', ['app.shared']);
})();

(function () {
    'use strict';

    var ASSET_DESCRIPTION_MAX = 1000;
    var ASSET_NAME_MIN = 4;
    var ASSET_NAME_MAX = 16;
    var TOKEN_DECIMALS_MAX = 8;
    var FIXED_ISSUE_FEE = new Money(1, Currency.WAVES);

    function TokenCreateController($scope, $interval, constants, applicationContext, assetService,
                                   dialogService, apiService, notificationService,
                                   formattingService, transactionBroadcast) {
        var refreshPromise;
        var refreshDelay = 15 * 1000;
        var transaction;
        var ctrl = this;

        $scope.$on('$destroy', function () {
            if (angular.isDefined(refreshPromise)) {
                $interval.cancel(refreshPromise);
                refreshPromise = undefined;
            }
        });

        ctrl.wavesBalance = new Money(0, Currency.WAVES);
        ctrl.issuanceValidationOptions = {
            rules: {
                assetName: {
                    required: true,
                    minbytelength: ASSET_NAME_MIN,
                    maxbytelength: ASSET_NAME_MAX
                },
                assetDescription: {
                    maxbytelength: ASSET_DESCRIPTION_MAX
                },
                assetTotalTokens: {
                    required: true,
                    min: 0
                },
                assetTokenDecimalPlaces: {
                    required: true,
                    min: 0,
                    max: TOKEN_DECIMALS_MAX
                }
            },
            messages: {
                assetName: {
                    required: 'Asset name is required',
                    minbytelength: 'Asset name is too short. Please give your asset a longer name',
                    maxbytelength: 'Asset name is too long. Please give your asset a shorter name'
                },
                assetDescription: {
                    maxbytelength: 'Maximum length of asset description exceeded. Please make a shorter description'
                },
                assetTotalTokens: {
                    required: 'Total amount of issued tokens in required',
                    min: 'Total issued tokens amount must be greater than or equal to zero'
                },
                assetTokenDecimalPlaces: {
                    required: 'Number of token decimal places is required',
                    min: 'Number of token decimal places must be greater or equal to zero',
                    max: 'Number of token decimal places must be less than or equal to ' + TOKEN_DECIMALS_MAX
                }
            }
        };
        ctrl.asset = {
            fee: FIXED_ISSUE_FEE
        };
        ctrl.confirm = {};
        ctrl.broadcast = new transactionBroadcast.instance(apiService.assets.issue,
            function (transaction, response) {
                resetForm();

                applicationContext.cache.putAsset(response);

                var displayMessage = 'Asset ' + ctrl.confirm.name + ' has been issued!<br/>' +
                    'Total tokens amount: ' + ctrl.confirm.totalTokens + '<br/>' +
                    'Date: ' + formattingService.formatTimestamp(transaction.timestamp);
                notificationService.notice(displayMessage);
            });
        ctrl.broadcastIssueTransaction = broadcastIssueTransaction;
        ctrl.assetIssueConfirmation = assetIssueConfirmation;
        ctrl.resetForm = resetForm;

        loadDataFromBackend();
        resetForm();

        function assetIssueConfirmation(form, event) {
            event.preventDefault();

            if (!form.validate()) {
                return;
            }

            if (ctrl.asset.fee.greaterThan(ctrl.wavesBalance)) {
                notificationService.error('Not enough funds for the issue transaction fee');
                return;
            }

            var decimalPlaces = Number(ctrl.asset.decimalPlaces);
            var maxTokens = Math.floor(constants.JAVA_MAX_LONG / Math.pow(10, decimalPlaces));
            if (ctrl.asset.totalTokens > maxTokens) {
                notificationService.error('Total issued tokens amount must be less than ' + maxTokens);

                return;
            }

            var asset = {
                name: ctrl.asset.name,
                description: ctrl.asset.description,
                totalTokens: ctrl.asset.totalTokens,
                decimalPlaces: Number(ctrl.asset.decimalPlaces),
                reissuable: ctrl.asset.reissuable,
                fee: ctrl.asset.fee
            };

            var sender = {
                publicKey: applicationContext.account.keyPair.public,
                privateKey: applicationContext.account.keyPair.private
            };

            ctrl.confirm.name = ctrl.asset.name;
            ctrl.confirm.totalTokens = ctrl.asset.totalTokens;
            ctrl.confirm.reissuable = ctrl.asset.reissuable ? 'RE-ISSUABLE' : 'NON RE-ISSUABLE';

            ctrl.broadcast.setTransaction(assetService.createAssetIssueTransaction(asset, sender));

            dialogService.open('#create-asset-confirmation');
        }

        function broadcastIssueTransaction() {
            ctrl.broadcast.broadcast();
        }

        function resetForm() {
            ctrl.asset.name = '';
            ctrl.asset.description = '';
            ctrl.asset.totalTokens = '0';
            ctrl.asset.decimalPlaces = '0';
            ctrl.asset.reissuable = false;
        }

        function loadDataFromBackend() {
            refreshBalance();

            refreshPromise = $interval(function() {
                refreshBalance();
            }, refreshDelay);
        }

        function refreshBalance() {
            apiService.address.balance(applicationContext.account.address)
                .then(function (response) {
                    ctrl.wavesBalance = Money.fromCoins(response.balance, Currency.WAVES);
                });
        }
    }

    TokenCreateController.$inject = ['$scope', '$interval', 'constants.ui', 'applicationContext',
        'assetService', 'dialogService', 'apiService', 'notificationService',
        'formattingService', 'transactionBroadcast'];

    angular
        .module('app.tokens')
        .controller('tokenCreateController', TokenCreateController);
})();

(function() {
    'use strict';

    angular.module('app.dex', ['app.shared', 'ngSanitize']);
})();

(function () {
    'use strict';

    var POLLING_DELAY = 5000,
        HISTORY_LIMIT = 50;

    function DexController($scope, $interval, applicationContext, assetStoreFactory, datafeedApiService,
                           dexOrderService, dexOrderbookService, notificationService, utilsService, dialogService) {

        var ctrl = this,
            intervalPromise,

            assetStore = assetStoreFactory.createStore(applicationContext.account.address),

            sender = {
                publicKey: applicationContext.account.keyPair.public,
                privateKey: applicationContext.account.keyPair.private
            };

        ctrl.assetsList = [];

        ctrl.pair = {
            amountAsset: Currency.WAVES,
            priceAsset: Currency.MIR
        };

        emptyDataFields();

        var favoritePairs = [
            { amountAsset: Currency.WAVES, priceAsset: Currency.MIR },
						{ amountAsset: Currency.WAVES, priceAsset: Currency.RI },
						{ amountAsset: Currency.WAVES, priceAsset: Currency.YL },
						{ amountAsset: Currency.WAVES, priceAsset: Currency.MP },
						{ amountAsset: Currency.WAVES, priceAsset: Currency.GS },
						{ amountAsset: Currency.WAVES, priceAsset: Currency.BA }
        ];

        ctrl.favoritePairs = favoritePairs;

        ctrl.createOrder = function (type, price, amount, fee, callback) {
            // TODO : add a queue for the orders which weren't yet accepted

            function emptyBadOrderFields() {
                ctrl.badOrderQuestion = '';
                ctrl.placeBadOrder = ctrl.refuseBadOrder = function () {};
            }

            var amountName = ctrl.pair.amountAsset.displayName,
                priceName = ctrl.pair.priceAsset.displayName,
                badSellOrder = (type === 'sell' && ctrl.buyOrders.length && price < ctrl.buyOrders[0].price * 0.9),
                badBuyOrder = (type === 'buy' && ctrl.sellOrders.length && price > ctrl.sellOrders[0].price * 1.1);

            if (badSellOrder || badBuyOrder) {

                ctrl.badOrderQuestion = 'Are you sure you want to ' + type + ' ' +
                    amountName + ' at price ' + price + ' ' + priceName + '?';

                ctrl.placeBadOrder = function () {
                    emptyBadOrderFields();
                    ctrl.realCreateOrder(type, price, amount, fee, callback);
                };

                ctrl.refuseBadOrder = function () {
                    emptyBadOrderFields();
                    callback();
                };

                dialogService.open('#dex-bad-order-confirmation');

            } else {
                ctrl.realCreateOrder(type, price, amount, fee, callback);
            }

        };

        ctrl.realCreateOrder = function (type, price, amount, fee, callback) {
            // TODO : add a queue for the orders which weren't yet accepted
            dexOrderService
                .addOrder(ctrl.pair, {
                    orderType: type,
                    amount: Money.fromTokens(amount, ctrl.pair.amountAsset),
                    price: OrderPrice.fromTokens(price, ctrl.pair),
                    fee: Money.fromTokens(fee, Currency.WAVES)
                }, sender)
                .then(function () {
                    refreshOrderbooks();
                    refreshUserOrders();
                    notificationService.notice('Order has been created!');
                    if (callback) {
                        callback();
                    }
                })
                .catch(function (e) {
                    var errorMessage = e.data ? e.data.message : null;
                    notificationService.error(errorMessage || 'Order has not been created!');
                    if (callback) {
                        callback();
                    }
                });
        };

        ctrl.cancelOrder = function (order) {
            // TODO : add a queue for the orders which weren't yet canceled

            // TODO : add different messages for cancel and delete actions
            dexOrderService
                .removeOrder(ctrl.pair, order, sender)
                .then(function () {
                    refreshOrderbooks();
                    refreshUserOrders();
                    notificationService.notice('Order has been canceled!');
                })
                .catch(function (e) {
                    console.log(e);
                    notificationService.error('Order could not be canceled!');
                });
        };

        ctrl.changePair = function (pair) {
            ctrl.pair = pair;
            emptyDataFields();
            refreshAll();
        };

        ctrl.fillBuyForm = fillBuyForm;

        ctrl.fillSellForm = fillSellForm;

        assetStore
            .getAll()
            .then(function (assetsList) {
                ctrl.assetsList = assetsList;
            })
            .then(function () {
                return dexOrderbookService.getOrderbook(ctrl.pair.amountAsset, ctrl.pair.priceAsset);
            })
            .then(function (orderbook) {
                ctrl.pair = {
                    // Here we just get assets by their IDs
                    amountAsset: assetStore.syncGetAsset(orderbook.pair.amountAsset),
                    priceAsset: assetStore.syncGetAsset(orderbook.pair.priceAsset)
                };

                ctrl.buyOrders = orderbook.bids;
                ctrl.sellOrders = orderbook.asks;
                refreshUserOrders();
                refreshTradeHistory();
            })
            .catch(function (e) {
                console.log(e);
            });

        // Events are from asset pickers
        $scope.$on('asset-picked', function (e, newAsset, type) {
            // Define in which widget the asset was changed
            ctrl.pair[type] = newAsset;
            emptyDataFields();
            refreshAll();
        });

        // Enable polling for orderbooks and newly created assets
        intervalPromise = $interval(function () {
            refreshAll();
        }, POLLING_DELAY);

        ctrl.$onDestroy = function () {
            $interval.cancel(intervalPromise);
        };

        function emptyDataFields() {
            ctrl.buyOrders = [];
            ctrl.sellOrders = [];
            ctrl.userOrders = [];

            ctrl.buyFormValues = {};
            ctrl.sellFormValues = {};

            ctrl.tradeHistory = [];
            ctrl.lastTradePrice = 0;

            fillBuyForm();
            fillSellForm();

            // That forces children components to react on the pair change
            ctrl.pair = _.clone(ctrl.pair);
        }

        function refreshAll() {
            refreshOrderbooks();
            refreshUserOrders();
            refreshTradeHistory();
        }

        function refreshOrderbooks() {
            if (!ctrl.pair.amountAsset || !ctrl.pair.priceAsset) {
                return;
            }

            dexOrderbookService
                .getOrderbook(ctrl.pair.amountAsset, ctrl.pair.priceAsset)
                .then(function (orderbook) {
                    ctrl.buyOrders = orderbook.bids;
                    ctrl.sellOrders = orderbook.asks;
                    return orderbook.pair;
                })
                .then(function (pair) {
                    // Placing each asset in the right widget
                    if (ctrl.pair.amountAsset.id !== pair.amountAsset && ctrl.pair.priceAsset.id !== pair.priceAsset) {
                        var temp = ctrl.pair.amountAsset;
                        ctrl.pair.amountAsset = ctrl.pair.priceAsset;
                        ctrl.pair.priceAsset = temp;
                    }
                })
                .catch(function (e) {
                    console.log(e);
                });
        }

        function refreshUserOrders() {
            if (!ctrl.pair.amountAsset || !ctrl.pair.priceAsset) {
                return;
            }

            dexOrderService
                .getOrders(ctrl.pair)
                .then(function (orders) {
                    // TODO : add here orders from pending queues
                    ctrl.userOrders = orders;
                });
        }

        function refreshTradeHistory() {
            var pair = ctrl.pair;
            if (pair) {
                if (utilsService.isTestnet()) {
                    pair = utilsService.testnetSubstitutePair(pair);
                }

                datafeedApiService
                    .getTrades(pair, HISTORY_LIMIT)
                    .then(function (response) {
                        ctrl.tradeHistory = response.map(function (trade) {
                            return {
                                timestamp: trade.timestamp,
                                type: trade.type,
                                typeTitle: trade.type === 'buy' ? 'Buy' : 'Sell',
                                price: trade.price,
                                amount: trade.amount,
                                total: trade.price * trade.amount
                            };
                        });

                        ctrl.lastTradePrice = ctrl.tradeHistory[0].price;
                    });
            }
        }

        function fillBuyForm(price, amount, total) {
            ctrl.buyFormValues = {
                price: price,
                amount: amount,
                total: total
            };
        }

        function fillSellForm(price, amount, total) {
            ctrl.sellFormValues = {
                price: price,
                amount: amount,
                total: total
            };
        }
    }

    DexController.$inject = ['$scope', '$interval', 'applicationContext', 'assetStoreFactory', 'datafeedApiService',
        'dexOrderService', 'dexOrderbookService', 'notificationService', 'utilsService', 'dialogService'];

    angular
        .module('app.dex')
        .component('wavesDex', {
            controller: DexController,
            templateUrl: 'dex/component'
        });
})();

(function () {
    'use strict';

    var ASSET_ID_BYTE_LENGTH = 32;

    function AssetPickerController($scope, $element, autocomplete, apiService, utilityService) {
        var ctrl = this,
            autocompleteElement = $element.find('md-autocomplete');

        ctrl.isAssetLoading = false;
        ctrl.isPickingInProgress = false;
        ctrl.autocomplete = autocomplete.create();

        ctrl.$onChanges = function () {
            if (ctrl.assets && ctrl.pickedAsset) {
                if (!ctrl.isPickingInProgress) {
                    ctrl.autocomplete.selectedAsset = ctrl.pickedAsset;
                }

                ctrl.autocomplete.assets = ctrl.assets.map(function (asset) {
                    return asset.currency;
                }).filter(function (asset) {
                    return asset.verified && (asset !== ctrl.hiddenAsset);
                });
            }
        };

        autocompleteElement.on('focusin', function () {
            ctrl.isPickingInProgress = true;
        });

        autocompleteElement.on('focusout', function () {
            ctrl.isPickingInProgress = false;
            ctrl.autocomplete.selectedAsset = ctrl.pickedAsset;
        });

        ctrl.changeAsset = function () {
            var asset = ctrl.autocomplete.selectedAsset;
            if (asset && asset !== ctrl.pickedAsset) {
                ctrl.isPickingInProgress = false;
                $scope.$emit('asset-picked', asset, ctrl.type);
            }
        };

        ctrl.findAssets = function (query) {
            var assets = ctrl.autocomplete.querySearch(query);
            if (assets.length === 0 && isValidAssetId(query)) {
                ctrl.isAssetLoading = true;
                apiService.transactions.info(query).then(function (response) {
                    var currency = Currency.create({
                        id: response.id,
                        displayName: response.name,
                        precision: response.decimals
                    });

                    ctrl.autocomplete.assets.push(currency);
                    ctrl.autocomplete.selectedAsset = currency;

                    // That strangely unfocuses the element thus avoiding an empty dropdown.
                    autocompleteElement.focus();
                }).finally(function () {
                    ctrl.isAssetLoading = false;
                });
                return [];
            } else {
                ctrl.isAssetLoading = false;
                return assets;
            }
        };

        function isValidAssetId(str) {
            if (utilityService.isValidBase58String(str)) {
                return utilityService.base58StringToByteArray(str).length === ASSET_ID_BYTE_LENGTH;
            }
        }
    }

    AssetPickerController.$inject = ['$scope', '$element', 'autocomplete.assets', 'apiService', 'utilityService'];

    angular
        .module('app.dex')
        .component('wavesDexAssetPicker', {
            controller: AssetPickerController,
            bindings: {
                name: '@',
                type: '@',
                assets: '<',
                hiddenAsset: '<',
                pickedAsset: '<'
            },
            templateUrl: 'dex/asset.picker.component'
        });
})();

(function () {
    'use strict';

    var CANDLE_NUMBER = 100,
        CANDLE_FRAME = 30,
        POLLING_DELAY = 5000;

    function isCandleEmpty(c) {
        return +c.open === 0 && +c.high === 0 && +c.low === 0 && +c.close === 0 && +c.vwap === 0;
    }

    function adjustCandles(candles) {

        var i = candles.length;
        while (isCandleEmpty(candles[--i])) {}

        var fix = candles[i].open;
        while (++i < candles.length) {
            candles[i].open = candles[i].high = candles[i].low = candles[i].close = candles[i].vwap = fix;
        }

        return candles;

    }

    function ChartController($element, $interval, datafeedApiService, utilsService, chartsFactory) {
        var ctrl = this,
            intervalPromise;

        setTimeout(function () {
            // That instantiation is placed here because of the synchronous width resolving issue.
            ctrl.chart = chartsFactory.create('candlestick', $element);
            refreshCandles();
        }, 100);

        intervalPromise = $interval(refreshCandles, POLLING_DELAY);

        ctrl.$onChanges = function (changes) {
            if (ctrl.chart && changes.pair) {
                ctrl.chart.clear();
                refreshCandles();
            }
        };

        ctrl.$onDestroy = function () {
            $interval.cancel(intervalPromise);
        };

        function refreshCandles() {
            var pair = ctrl.pair;
            if (pair) {
                if (utilsService.isTestnet()) {
                    pair = utilsService.testnetSubstitutePair(pair);
                }

                datafeedApiService
                    .getLastCandles(pair, CANDLE_NUMBER, CANDLE_FRAME)
                    .then(function (response) {
                        response = adjustCandles(response);
                        ctrl.chart.draw(response);
                    });
            }
        }
    }

    ChartController.$inject = ['$element', '$interval', 'datafeedApiService', 'utilsService', 'chartsFactory'];

    angular
        .module('app.dex')
        .component('wavesDexChart', {
            controller: ChartController,
            bindings: {
                pair: '<'
            },
            templateUrl: 'dex/chart.component'
        });
})();

(function () {
    'use strict';

    angular
        .module('app.dex')
        .factory('chartsFactory', [function () {
            function CandlestickChart($element) {
                var w = $element.width(),
                    h = $element.height(),
                    elem = $element.children('.chart').get(0),
                    margins = {left: 60, top: 20, right: 60, bottom: 30};

                this.width = w - margins.left - margins.right;
                this.height = h - margins.top - margins.bottom;

                this.x = techan.scale.financetime().range([0, this.width]);
                this.y = d3.scaleLinear().range([this.height, 0]);
                this.yVolume = d3.scaleLinear().range([this.y(0), this.y(0.2)]);

                this.candlestick = techan.plot.candlestick().xScale(this.x).yScale(this.y);
                this.accessor = this.candlestick.accessor();
                this.volume = techan.plot.volume()
                    .accessor(this.accessor)
                    .xScale(this.x)
                    .yScale(this.yVolume);

                this.xAxis = d3.axisBottom(this.x);
                this.yAxis = d3.axisLeft(this.y);
                this.yAxisRight = d3.axisRight(this.y);
                this.volumeAxis = d3.axisRight(this.yVolume).ticks(2).tickFormat(d3.format(',.3s'));

                this.svg = d3
                    .select(elem)
                    .append('svg')
                    .attr('width', this.width + margins.left + margins.right)
                    .attr('height', this.height + margins.top + margins.bottom);

                this.chart = this.svg
                    .append('g')
                    .attr('transform', 'translate(' + margins.left + ',' + margins.top + ')');

                this.chart.append('g')
                    .attr('class', 'candlestick');

                this.chart.append('g')
                    .attr('class', 'volume');

                this.chart.append('g')
                    .attr('class', 'x axis')
                    .attr('transform', 'translate(0,' + this.height + ')');

                this.chart.append('g')
                    .attr('class', 'y axis');

                this.chart.append('g')
                    .attr('class', 'y axis-right')
                    .attr('transform', 'translate(' + this.width + ',0)');

                this.chart.append('g')
                    .attr('class', 'volume axis');

                this.chart.append('text')
                    .attr('class', 'note')
                    .attr('transform', 'translate(' + (this.width - 250) + ',10)')
                    .text('Candles cover 30 minute intervals');

                this.chart.append('text')
                    .attr('class', 'ticker')
                    .attr('transform', 'translate(' + (this.width - 250) + ',30)');
            }

            CandlestickChart.prototype.clear = function () {
                this.draw([]);
            };

            CandlestickChart.prototype.draw = function (data) {
                data = this.prepareData(data);

                this.x.domain(data.map(this.accessor.d));
                this.y.domain(techan.scale.plot.ohlc(data, this.accessor).domain());
                this.yVolume.domain(techan.scale.plot.volume(data).domain());

                this.chart.selectAll('g.candlestick').datum(data).call(this.candlestick);
                this.chart.selectAll('g.volume').datum(data).call(this.volume);
                this.chart.selectAll('g.x.axis').call(this.xAxis);
                this.chart.selectAll('g.y.axis').call(this.yAxis);
                this.chart.selectAll('g.y.axis-right').call(this.yAxisRight);
                this.chart.selectAll('g.volume.axis').call(this.volumeAxis);

                var now = new Date(),
                    hh = now.getHours(),
                    mm = now.getMinutes(),
                    ss = now.getSeconds();
                hh = hh < 10 ? '0' + hh : hh;
                mm = mm < 10 ? '0' + mm : mm;
                ss = ss < 10 ? '0' + ss : ss;
                this.chart.selectAll('text.ticker').text('Last updated: ' + hh + ':' + mm + ':' + ss);
            };

            CandlestickChart.prototype.prepareData = function (rawData) {
                var self = this,
                    lastTradePrice = 0;
                return rawData.map(function (candle) {
                    var adjustedHigh = Math.min(+candle.high, +candle.vwap * 1.5),
                        adjustedLow = Math.max(+candle.low, +candle.vwap / 2);

                    return {
                        date: candle.timestamp,
                        open: +candle.open,
                        high: adjustedHigh,
                        low: adjustedLow,
                        close: +candle.close,
                        volume: +candle.volume
                    };
                }).sort(function (a, b) {
                    return d3.ascending(self.accessor.d(a), self.accessor.d(b));
                }).map(function (c) {
                    if (c.open === 0 && c.high === 0 && c.low === 0 && c.close === 0) {
                        c.open = c.high = c.low = c.close = lastTradePrice;
                    } else {
                        lastTradePrice = c.close;
                    }

                    return c;
                });
            };

            return {
                create: function (type, $element) {
                    if (type === 'candlestick') {
                        return new CandlestickChart($element);
                    }
                }
            };
        }]);
})();

(function () {
    'use strict';

    function FavoritesController() {
        var ctrl = this;

        ctrl.onClick = function (pair) {
            ctrl.switchPair({
                amountAsset: pair.amountAsset,
                priceAsset: pair.priceAsset
            });
        };
    }

    angular
        .module('app.dex')
        .component('wavesDexFavorites', {
            controller: FavoritesController,
            bindings: {
                pairs: '<',
                switchPair: '<'
            },
            templateUrl: 'dex/favorites.component'
        });
})();

(function () {
    'use strict';

    function HistoryController() {}

    angular
        .module('app.dex')
        .component('wavesDexHistory', {
            controller: HistoryController,
            bindings: {
                pair: '<',
                trades: '<'
            },
            templateUrl: 'dex/history.component'
        });
})();

(function () {
    'use strict';

    var FEE = 0.003,
        BALANCE_UPDATE_DELAY = 5000;

    function OrderCreatorController($interval, applicationContext, matcherApiService) {

        var ctrl = this,
            intervalPromise;

        ctrl.buy = {
            price: '',
            amount: '',
            total: '',
            fee: FEE,
            blocked: false
        };

        ctrl.sell = {
            price: '',
            amount: '',
            total: '',
            fee: FEE,
            blocked: false
        };

        ctrl.submitBuyOrder = function () {
            if (!ctrl.buy.amount || !ctrl.buy.price) {
                return;
            }

            ctrl.buy.blocked = true;
            ctrl.submit('buy', ctrl.buy.price, ctrl.buy.amount, FEE, function () {
                ctrl.buy.blocked = false;
                refreshBalances();
            });
        };

        ctrl.submitSellOrder = function () {
            if (!ctrl.sell.amount || !ctrl.sell.price) {
                return;
            }

            ctrl.sell.blocked = true;
            ctrl.submit('sell', ctrl.sell.price, ctrl.sell.amount, FEE, function () {
                ctrl.sell.blocked = false;
                refreshBalances();
            });
        };

        // Those two methods are called to update `total` after user's input:

        ctrl.updateBuyTotal = function () {
            ctrl.buy.total = ctrl.buy.price * ctrl.buy.amount || '';
        };

        ctrl.updateSellTotal = function () {
            ctrl.sell.total = ctrl.sell.price * ctrl.sell.amount || '';
        };

        // Those two methods calculate the amount as current balance divided by last history price:

        ctrl.buyFullBalance = function () {
            var price = ctrl.buy.price || ctrl.lastPrice,
                balance = ctrl.priceAssetBalance.toTokens();

            if (price && balance) {
                ctrl.buy.price = price;
                ctrl.buy.amount = Money.fromTokens(balance / price, ctrl.pair.amountAsset).toTokens();
                ctrl.updateBuyTotal();
            }
        };

        ctrl.sellFullBalance = function () {
            var price = ctrl.sell.price || ctrl.lastPrice,
                balance = ctrl.amountAssetBalance.toTokens();

            if (price && balance) {
                ctrl.sell.price = price;
                ctrl.sell.amount = balance;
                ctrl.updateSellTotal();
            }
        };

        intervalPromise = $interval(refreshBalances, BALANCE_UPDATE_DELAY);

        ctrl.$onDestroy = function () {
            $interval.cancel(intervalPromise);
        };

        ctrl.$onChanges = function (changes) {
            refreshBalances();

            // Those lines write directly to the `total` field when it's calculated in an orderbook:

            if (changes.outerBuyValues) {
                ctrl.buy.price = ctrl.outerBuyValues.price || '';
                ctrl.buy.amount = ctrl.outerBuyValues.amount || '';
                ctrl.buy.total = ctrl.outerBuyValues.total || ctrl.buy.price * ctrl.buy.amount || '';
            }

            if (changes.outerSellValues) {
                ctrl.sell.price = ctrl.outerSellValues.price || '';
                ctrl.sell.amount = ctrl.outerSellValues.amount || '';
                ctrl.sell.total = ctrl.outerSellValues.total || ctrl.sell.price * ctrl.sell.amount || '';
            }
        };

        function refreshBalances() {
            var amountAsset = ctrl.pair.amountAsset,
                priceAsset = ctrl.pair.priceAsset;

            matcherApiService
                .getTradableBalance(amountAsset.id, priceAsset.id, applicationContext.account.address)
                .then(function (data) {
                    ctrl.amountAssetBalance = Money.fromCoins(data[amountAsset.id], amountAsset);
                    ctrl.priceAssetBalance = Money.fromCoins(data[priceAsset.id], priceAsset);
                });
        }
    }

    OrderCreatorController.$inject = ['$interval', 'applicationContext', 'matcherApiService'];

    angular
        .module('app.dex')
        .component('wavesDexOrderCreator', {
            controller: OrderCreatorController,
            bindings: {
                pair: '<',
                submit: '<',
                lastPrice: '<',
                outerBuyValues: '<buyValues',
                outerSellValues: '<sellValues'
            },
            templateUrl: 'dex/order.creator.component'
        });
})();

(function () {
    'use strict';

    var ACCEPTED = 'Accepted',
        PARTIALLY = 'PartiallyFilled',
        FILLED = 'Filled',
        CANCELLED = 'Cancelled',
        NOT_FOUND = 'NotFound',

        ORDER_CANCELED = 'OrderCanceled',
        ORDER_DELETED = 'OrderDeleted';

    function DexOrderService(matcherRequestService, matcherApiService, applicationContext) {

        // TODO : clean that all from the state.

        this.addOrder = function (pair, order, sender) {
            return matcherApiService
                .loadMatcherKey()
                .then(function (matcherKey) {
                    order.matcherKey = matcherKey;
                    var signedRequest = matcherRequestService.buildCreateOrderRequest(order, sender);
                    return matcherApiService.createOrder(signedRequest);
                }).catch(function (e) {
                    throw new Error(e);
                });
        };

        this.removeOrder = function (pair, order, sender) {
            var signedRequest = matcherRequestService.buildCancelOrderRequest(order.id, sender);
            if (order.status === ACCEPTED || order.status === PARTIALLY) {
                return matcherApiService
                    .cancelOrder(pair.amountAsset.id, pair.priceAsset.id, signedRequest)
                    .then(function (response) {
                        if (response.status !== ORDER_CANCELED) {
                            throw new Error();
                        }
                    }).catch(function (e) {
                        throw new Error(e);
                    });
            } else if (order.status === FILLED || order.status === CANCELLED) {
                return matcherApiService
                    .deleteOrder(pair.amountAsset.id, pair.priceAsset.id, signedRequest)
                    .then(function (response) {
                        if (response.status !== ORDER_DELETED) {
                            throw new Error();
                        }
                    }).catch(function (e) {
                        throw new Error(e);
                    });
            }
        };

        this.getOrders = function (pair) {
            return matcherApiService
                .loadUserOrders(pair.amountAsset.id, pair.priceAsset.id, {
                    publicKey: applicationContext.account.keyPair.public,
                    privateKey: applicationContext.account.keyPair.private
                })
                .then(function (response) {
                    return response.map(function (o) {
                        if (o.amount === null || o.price === null || o.filled === null || o.timestamp === null) {
                            console.error('Bad order!', o);
                            o.amount = o.amount || 0;
                            o.price = o.price || 0;
                            o.filled = o.filled || 0;
                            o.timestamp = o.timestamp || 0;
                        }

                        var orderPrice = OrderPrice.fromBackendPrice(o.price, pair).toTokens();

                        return {
                            id: o.id,
                            type: o.type,
                            price: Money.fromTokens(orderPrice, pair.priceAsset),
                            amount: Money.fromCoins(o.amount, pair.amountAsset),
                            filled: Money.fromCoins(o.filled, pair.amountAsset),
                            status: o.status || NOT_FOUND,
                            timestamp: o.timestamp
                        };
                    });
                })
                .catch(function (e) {
                    throw new Error(e);
                });
        };
    }

    DexOrderService.$inject = ['matcherRequestService', 'matcherApiService', 'applicationContext'];

    angular
        .module('app.dex')
        .service('dexOrderService', DexOrderService);
})();

(function () {
    'use strict';

    function denormalizeOrders(orders) {
        if (!orders || !orders.length) {
            return [];
        }

        var currentSum = 0;
        return orders.map(function (order) {
            var total = order.price * order.amount;
            currentSum += total;
            return {
                id: order.id,
                price: order.price,
                amount: order.amount,
                total: total,
                sum: currentSum
            };
        });
    }

    function calculateStringLength(n, precision) {
        // Get initial string length with a given precision.
        var len = n.toFixed(precision).length;
        // Add some length for commas (e.g. 10,000,000.0000).
        return len + Math.floor(n.toFixed(0).length / 3);
    }

    function getMaxLengths(orders, pair) {
        var price = 0,
            amount = 0,
            total = 0,
            sum = 0;

        // Get max value for each column.
        orders.forEach(function (order) {
            if (order.price > price) {
                price = order.price;
            }
            if (order.amount > amount) {
                amount = order.amount;
            }
            if (order.total > total) {
                total = order.total;
            }
            if (order.sum > sum) {
                sum = order.sum;
            }
        });

        return {
            price: calculateStringLength(price, pair.priceAsset.precision),
            amount: calculateStringLength(amount, pair.amountAsset.precision),
            total: calculateStringLength(total, pair.priceAsset.precision),
            sum: calculateStringLength(sum, pair.priceAsset.precision)
        };
    }

    function OrderbookController() {
        var ctrl = this;

        ctrl.lineClick = function (index) {
            var order = ctrl.orders[index],
                cumulativeAmount = ctrl.orders.slice(0, index + 1).reduce(function (amountSum, order) {
                    return amountSum + order.amount;
                }, 0);

            ctrl.onClick(Number(order.price).toFixed(8), cumulativeAmount, order.sum);
        };

        ctrl.$onChanges = function (changes) {
            if (!changes.rawOrders) {
                return;
            }

            var denormPreviousValue = denormalizeOrders(changes.rawOrders.previousValue),
                denormCurrentValue = denormalizeOrders(changes.rawOrders.currentValue);

            if (!_.isEqual(denormPreviousValue, denormCurrentValue)) {
                ctrl.orders = denormCurrentValue;
                ctrl.lengths = getMaxLengths(ctrl.orders, ctrl.pair);
            }
        };
    }

    angular
        .module('app.dex')
        .component('wavesDexOrderbook', {
            controller: OrderbookController,
            bindings: {
                type: '@',
                name: '@',
                pair: '<',
                onClick: '<',
                rawOrders: '<orders'
            },
            templateUrl: 'dex/orderbook.component'
        });
})();

(function () {
    'use strict';

    function normalizeOrder(order, pair) {
        return {
            price: OrderPrice.fromBackendPrice(order.price, pair).toTokens(),
            amount: Money.fromCoins(order.amount, pair.amountAsset).toTokens()
        };
    }

    function DexOrderbookService(matcherApiService) {
        this.getOrderbook = function (assetOne, assetTwo) {
            var assets = {};
            assets[assetOne.id] = assetOne;
            assets[assetTwo.id] = assetTwo;
            return matcherApiService
                .loadOrderbook(assetOne.id, assetTwo.id)
                .then(function (orderbook) {
                    var pair = {
                        amountAsset: assets[orderbook.pair.amountAsset],
                        priceAsset: assets[orderbook.pair.priceAsset]
                    };

                    return {
                        timestamp: orderbook.timestamp,
                        pair: orderbook.pair,
                        bids: orderbook.bids.map(function (order) {
                            return normalizeOrder(order, pair);
                        }),
                        asks: orderbook.asks.map(function (order) {
                            return normalizeOrder(order, pair);
                        })
                    };
                });
        };
    }

    DexOrderbookService.$inject = ['matcherApiService'];

    angular
        .module('app.dex')
        .service('dexOrderbookService', DexOrderbookService);
})();

(function () {
    'use strict';

    var statuses = {
        'PartiallyFilled': {
            title: 'Partial',
            order: 2
        },
        'Accepted': {
            title: 'Opened',
            order: 4
        },
        'Filled': {
            title: 'Closed',
            order: 6
        },
        'Cancelled': {
            title: 'Canceled',
            order: 8
        },
        'NotFound': {
            title: 'NotFound',
            order: 10
        }
    };

    var types = {
        'buy': {
            title: 'Buy',
            order: 0
        },
        'sell': {
            title: 'Sell',
            order: 1
        }
    };

    function status(s) {
        return statuses[s] ? statuses[s].title : '---';
    }

    function type(t) {
        return types[t] ? types[t].title : '---';
    }

    function denormalizeUserOrders(orders) {
        if (!orders || !orders.length) {
            return [];
        }

        return orders.map(function (order) {
            var price = order.price.toTokens(),
                amount = order.amount.toTokens(),
                filled = order.filled.toTokens();

            return {
                id: order.id,
                status: order.status,
                statusTitle: status(order.status),
                type: order.type,
                typeTitle: type(order.type),
                price: price,
                amount: amount,
                total: price * amount,
                filled: filled,
                timestamp: order.timestamp
            };
        });
    }

    function sortUserOrders(orders) {
        return orders.sort(function (a, b) {
            var aVal = statuses[a.status].order + types[a.type].order,
                bVal = statuses[b.status].order + types[b.type].order;
            return aVal - bVal;
        });
    }

    function UserOrdersController() {
        var ctrl = this;

        ctrl.cancel = function (obj) {
            ctrl.cancelOrder(obj.order);
        };

        ctrl.$onChanges = function (changes) {
            if (!changes.rawOrders) {
                return;
            }

            var denormPreviousValue = denormalizeUserOrders(changes.rawOrders.previousValue),
                denormCurrentValue = denormalizeUserOrders(changes.rawOrders.currentValue);

            if (!_.isEqual(denormPreviousValue, denormCurrentValue)) {
                ctrl.orders = sortUserOrders(denormCurrentValue);
            }
        };
    }

    angular
        .module('app.dex')
        .component('wavesDexUserOrders', {
            controller: UserOrdersController,
            bindings: {
                pair: '<',
                rawOrders: '<orders',
                cancelOrder: '<'
            },
            templateUrl: 'dex/user.orders.component'
        });
})();

(function() {
    'use strict';

    angular.module('app.leasing', ['app.shared']);
})();

(function () {
    'use strict';

    var DEFAULT_CURRENCY = Currency.WAVES;

    function WavesLeasingService (apiService) {
        function parseBalance(response) {
            return Money.fromCoins(response.balance, DEFAULT_CURRENCY);
        }

        this.loadBalanceDetails = function (address) {
            var details = {};
            return apiService.address.balance(address)
                .then(function (response) {
                    details.regular = parseBalance(response);

                    return apiService.address.effectiveBalance(address);
                })
                .then(function (response) {
                    details.effective = parseBalance(response);

                    return apiService.address.generatingBalance(address);
                })
                .then(function (response) {
                    details.generating = parseBalance(response);

                    return details;
                });
        };
    }

    WavesLeasingService.$inject = ['apiService'];

    angular
        .module('app.leasing')
        .service('leasingService', WavesLeasingService);
})();

(function () {
    'use strict';

    var POLLING_DELAY = 5000,
        DEFAULT_ERROR_MESSAGE = 'Failed to load balance details';

    function LeasingController($interval, constants, applicationContext,
                               leasingService, transactionLoadingService, notificationService) {
        var ctrl = this,
            intervalPromise;

        ctrl.transactions = [];
        ctrl.limitTo = 1000;
        ctrl.balanceDetails = null;

        refreshAll();
        intervalPromise = $interval(refreshAll, POLLING_DELAY);
        ctrl.$onDestroy = function () {
            $interval.cancel(intervalPromise);
        };

        function refreshAll() {
            refreshBalanceDetails();
            refreshLeasingTransactions();
        }

        function refreshBalanceDetails() {
            leasingService
                .loadBalanceDetails(applicationContext.account.address)
                .then(function (balanceDetails) {
                    ctrl.balanceDetails = balanceDetails;
                }).catch(function (e) {
                    if (e) {
                        if (e.data) {
                            notificationService.error(e.data.message);
                        } else if (e.message) {
                            notificationService.error(e.message);
                        } else if (e.statusText) {
                            notificationService.error(e.statusText);
                        } else {
                            notificationService.error(DEFAULT_ERROR_MESSAGE);
                        }
                    } else {
                        notificationService.error(DEFAULT_ERROR_MESSAGE);
                    }
                });
        }

        function refreshLeasingTransactions() {
            transactionLoadingService
                .loadTransactions(applicationContext.account, ctrl.limitTo)
                .then(function (transactions) {
                    ctrl.transactions = transactions.filter(function (tx) {
                        var startLeasing = constants.START_LEASING_TRANSACTION_TYPE,
                            cancelLeasing = constants.CANCEL_LEASING_TRANSACTION_TYPE;
                        return tx.type === startLeasing || tx.type === cancelLeasing;
                    });
                });
        }
    }

    LeasingController.$inject = ['$interval', 'constants.transactions', 'applicationContext',
                                 'leasingService', 'transactionLoadingService', 'notificationService'];

    angular
        .module('app.leasing')
        .component('wavesLeasing', {
            controller: LeasingController,
            templateUrl: 'leasing/component'
        });
})();

(function () {
    'use strict';

    var FEE_CURRENCY = Currency.WAVES;

    function LeasingFormController($timeout, constants, applicationContext,
                                   apiService, dialogService, notificationService, transactionBroadcast,
                                   formattingService, addressService, leasingService, leasingRequestService) {
        var ctrl = this;
        var minimumFee = new Money(constants.MINIMUM_TRANSACTION_FEE, FEE_CURRENCY);

        ctrl.fee = minimumFee;
        ctrl.availableBalance = Money.fromCoins(0, Currency.WAVES);

        ctrl.broadcast = new transactionBroadcast.instance(apiService.leasing.lease,
            function (transaction) {
                var amount = Money.fromCoins(transaction.amount, Currency.WAVES);
                var address = transaction.recipient;
                var displayMessage = 'Leased ' + amount.formatAmount(true) + ' of ' +
                    amount.currency.displayName +
                    '<br/>Recipient ' + address.substr(0,15) + '...<br/>Date: ' +
                    formattingService.formatTimestamp(transaction.timestamp);
                notificationService.notice(displayMessage);
            }
        );

        ctrl.validationOptions = {
            rules: {
                leasingRecipient: {
                    required: true
                },
                leasingAmount: {
                    required: true,
                    decimal: 8, // stub value updated on validation
                    min: 0, // stub value updated on validation
                    max: constants.JAVA_MAX_LONG // stub value updated on validation
                }
            },
            messages: {
                leasingRecipient: {
                    required: 'Recipient account number is required'
                },
                leasingAmount: {
                    required: 'Amount to lease is required'
                }
            }
        };

        ctrl.confirm = {
            recipient: ''
        };

        ctrl.confirmLease = confirmLease;
        ctrl.broadcastTransaction = broadcastTransaction;

        reset();

        leasingService
            .loadBalanceDetails(applicationContext.account.address)
            .then(function (balanceDetails) {
                //FIXME: add here a correct value available to lease
                ctrl.availableBalance = balanceDetails.effective;

                reset();

                // Update validation options and check how they affect form validation
                ctrl.validationOptions.rules.leasingAmount.decimal = ctrl.availableBalance.currency.precision;
                var minimumPayment = Money.fromCoins(1, ctrl.availableBalance.currency);
                ctrl.validationOptions.rules.leasingAmount.min = minimumPayment.toTokens();
                ctrl.validationOptions.rules.leasingAmount.max = ctrl.availableBalance.toTokens();
                ctrl.validationOptions.messages.leasingAmount.decimal = 'The amount to leasing must be a number ' +
                    'with no more than ' + minimumPayment.currency.precision +
                    ' digits after the decimal point (.)';
                ctrl.validationOptions.messages.leasingAmount.min = 'Leasing amount is too small. ' +
                    'It should be greater or equal to ' + minimumPayment.formatAmount(false);
                ctrl.validationOptions.messages.leasingAmount.max = 'Leasing amount is too big. ' +
                    'It should be less or equal to ' + ctrl.availableBalance.formatAmount(false);
            });

        function confirmLease(form) {
            if (!form.validate(ctrl.validationOptions)) {
                return false;
            }

            var amount = Money.fromTokens(ctrl.amount, ctrl.availableBalance.currency);
            var transferFee = ctrl.fee;

            // We assume here that amount and fee are in Waves, however it's not hardcoded
            var leasingCost = amount.plus(transferFee);
            if (leasingCost.greaterThan(ctrl.availableBalance)) {
                notificationService.error('Not enough ' + FEE_CURRENCY.displayName + ' for the leasing transaction');
                return false;
            }

            var startLeasing = {
                recipient: addressService.cleanupOptionalPrefix(ctrl.recipient),
                amount: amount,
                fee: transferFee
            };

            var sender = {
                publicKey: applicationContext.account.keyPair.public,
                privateKey: applicationContext.account.keyPair.private
            };

            // Create a transaction and wait for confirmation
            ctrl.broadcast.setTransaction(leasingRequestService.buildStartLeasingRequest(startLeasing, sender));

            // Set data to the confirmation dialog
            ctrl.confirm.amount = startLeasing.amount;
            ctrl.confirm.fee = startLeasing.fee;
            ctrl.confirm.recipient = startLeasing.recipient;

            // Open confirmation dialog (async because this method is called while another dialog is open)
            $timeout(function () {
                dialogService.open('#start-leasing-confirmation');
            }, 1);

            // Close payment dialog
            return true;
        }

        function broadcastTransaction() {
            ctrl.broadcast.broadcast();
        }

        function reset() {
            ctrl.amount = '0';
            ctrl.recipient = '';
            ctrl.confirm.amount = Money.fromTokens(0, Currency.WAVES);
            ctrl.confirm.fee = minimumFee;
        }
    }

    LeasingFormController.$inject = ['$timeout', 'constants.ui', 'applicationContext',
                                     'apiService', 'dialogService', 'notificationService', 'transactionBroadcast',
                                     'formattingService', 'addressService', 'leasingService', 'leasingRequestService'];

    angular
        .module('app.leasing')
        .component('wavesLeasingLeaseForm', {
            controller: LeasingFormController,
            templateUrl: 'leasing/lease.form.component'
        });
})();

(function () {
    'use strict';

    function WavesBalanceDetailsController () {
        var ctrl = this;

        ctrl.formattedBalance = {};

        ctrl.$onChanges = function () {
            if (ctrl.balanceDetails) {
                ctrl.formattedBalance = {
                    regular: formatMoney(ctrl.balanceDetails.regular),
                    effective: formatMoney(ctrl.balanceDetails.effective),
                    generating: formatMoney(ctrl.balanceDetails.generating)
                };
            }
        };

        function formatMoney(amount) {
            return amount.formatAmount(true) + ' ' + amount.currency.shortName;
        }
    }

    angular
        .module('app.leasing')
        .component('wavesLeasingBalanceDetails', {
            controller: WavesBalanceDetailsController,
            bindings: {
                balanceDetails: '<'
            },
            templateUrl: 'leasing/balance.details.component'
        });
})();

(function() {
    'use strict';

    angular.module('app.history', ['app.shared']);
})();

(function () {
    'use strict';

    var TRANSACTIONS_TO_LOAD = 200;

    function HistoryController($scope, $interval, applicationContext, transactionLoadingService) {
        var history = this;
        var refreshPromise;
        var refreshDelay = 10 * 1000;

        history.transactions = [];

        refreshTransactions();

        refreshPromise = $interval(refreshTransactions, refreshDelay);

        $scope.$on('$destroy', function () {
            if (angular.isDefined(refreshPromise)) {
                $interval.cancel(refreshPromise);
                refreshPromise = undefined;
            }
        });

        function refreshTransactions() {
            var txArray;
            transactionLoadingService.loadTransactions(applicationContext.account, TRANSACTIONS_TO_LOAD)
                .then(function (transactions) {
                    txArray = transactions;

                    return transactionLoadingService.refreshAssetCache(applicationContext.cache, transactions);
                })
                .then(function () {
                    history.transactions = txArray;
                });
        }
    }

    HistoryController.$inject = ['$scope', '$interval', 'applicationContext', 'transactionLoadingService'];

    angular
        .module('app.history')
        .controller('historyController', HistoryController);
})();

(function() {
    'use strict';

    angular.module('app.community', ['app.shared']);
})();

(function () {
    'use strict';

    function CommunityController($scope, $interval, apiService, applicationContext) {
        var community = this;
        var refreshPromise;
        var REFRESH_DELAY = 10 * 1000;
        var BLOCKS_DEPTH = 50;

        community.candidate = {
            block: 0,
            size: 0
        };
        community.blocks = [];

        refreshData();

        refreshPromise = $interval(refreshData, REFRESH_DELAY);

        $scope.$on('$destroy', function () {
            if (angular.isDefined(refreshPromise)) {
                $interval.cancel(refreshPromise);
                refreshPromise = undefined;
            }
        });

        function refreshData() {
            var blockHeight = applicationContext.blockHeight;

            var endBlock = blockHeight;
            var startBlock = Math.max(1, endBlock - BLOCKS_DEPTH);
            apiService.transactions.unconfirmed()
                .then(function (response) {
                    community.candidate.block = blockHeight + 1;
                    community.candidate.size = response.length;

                    return apiService.blocks.list(startBlock, endBlock);
                })
                .then(function (response) {
                    community.blocks = response;
                });
        }
    }

    CommunityController.$inject = ['$scope', '$interval', 'apiService', 'applicationContext'];

    angular
        .module('app.community')
        .controller('communityController', CommunityController);
})();

(function() {
    'use strict';

    angular.module('app.portfolio', ['app.shared'])
        .constant('portfolio.events', {
            ASSET_TRANSFER: 'asset-transfer',
            ASSET_REISSUE: 'asset-reissue',
            ASSET_DETAILS: 'asset-details',
            ASSET_MASSPAY: 'asset-masspay'
        });
})();

(function () {
    'use strict';

    function WavesAssetListController($scope, $timeout, $interval, events,
                                      applicationContext, apiService, formattingService) {
        var ctrl = this;
        var refreshPromise;
        var refreshDelay = 10 * 1000;

        ctrl.wavesBalance = new Money(0, Currency.WAVES);
        ctrl.assets = [];
        ctrl.noData = true;
        ctrl.assetTransfer = assetTransfer;
        ctrl.assetDetails = assetDetails;
        ctrl.assetReissue = assetReissue;
        ctrl.assetMassPay = assetMassPay;
        loadDataFromBackend();

        $scope.$on('$destroy', function () {
            if (angular.isDefined(refreshPromise)) {
                $interval.cancel(refreshPromise);
                refreshPromise = undefined;
            }
        });

        function loadDataFromBackend() {
            refreshAssets();
            refreshBalance();

            refreshPromise = $interval(function() {
                refreshAssets();
                refreshBalance();
            }, refreshDelay);
        }

        function assetTransfer(assetId) {
            $scope.$broadcast(events.ASSET_TRANSFER, {
                assetId: assetId,
                wavesBalance: ctrl.wavesBalance
            });
        }

        function assetDetails(assetId) {
            $scope.$broadcast(events.ASSET_DETAILS, assetId);
        }

        function assetReissue(assetId) {
            $scope.$broadcast(events.ASSET_REISSUE, {
                assetId: assetId,
                wavesBalance: ctrl.wavesBalance
            });
        }

        function assetMassPay(assetId) {
            $scope.$broadcast(events.ASSET_MASSPAY, {
                assetId: assetId,
                wavesBalance: ctrl.wavesBalance
            });
        }

        function loadAssetDataFromCache(asset) {
            var cached = applicationContext.cache.assets[asset.id];
            asset.balance = cached.balance;
            asset.name = cached.currency.displayName;
            asset.total = cached.totalTokens.formatAmount();
            asset.timestamp = formattingService.formatTimestamp(cached.timestamp);
            asset.reissuable = cached.reissuable;
            asset.sender = cached.sender;
        }

        function refreshBalance() {
            apiService.address.balance(applicationContext.account.address)
                .then(function (response) {
                    ctrl.wavesBalance = Money.fromCoins(response.balance, Currency.WAVES);
                });
        }

        function refreshAssets() {
            var assets = [];
            apiService.assets.balance(applicationContext.account.address).then(function (response) {
                _.forEach(response.balances, function (assetBalance) {
                    var id = assetBalance.assetId;
                    var asset = {
                        id: id,
                        name: ''
                    };

                    // adding asset details to cache
                    applicationContext.cache.putAsset(assetBalance.issueTransaction);
                    applicationContext.cache.updateAsset(id, assetBalance.balance,
                        assetBalance.reissuable, assetBalance.quantity);

                    // adding an asset with positive balance only or your reissuable assets
                    var yourReissuableAsset = assetBalance.reissuable &&
                        assetBalance.issueTransaction.sender === applicationContext.account.address;
                    if (assetBalance.balance !== 0 || yourReissuableAsset) {
                        loadAssetDataFromCache(asset);
                        assets.push(asset);
                    }
                });

                var delay = 1;
                // handling the situation when some assets appeared on the account
                if (ctrl.assets.length === 0 && assets.length > 0) {
                    ctrl.noData = false;
                    delay = 500; // waiting for 0.5 sec on first data loading attempt
                }

                // handling the situation when all assets were transferred from the account
                if (ctrl.assets.length > 0 && assets.length === 0) {
                    ctrl.noData = true;
                    delay = 500;
                }

                // to prevent no data message and asset list from displaying simultaneously
                // we need to update
                $timeout(function() {
                    ctrl.assets = assets.sort(function (a, b) {
                        var aVerified = (a.balance.currency.verified === true) ? '1:' : '0:',
                            bVerified = (b.balance.currency.verified === true) ? '1:' : '0:';

                        // The verified assets go first, then we sort them by timestamp
                        aVerified += new Date(a.timestamp).getTime();
                        bVerified += new Date(b.timestamp).getTime();

                        return (bVerified > aVerified) ? 1 : -1;
                    });
                }, delay);
            });
        }
    }

    WavesAssetListController.$inject = ['$scope', '$timeout', '$interval', 'portfolio.events',
        'applicationContext', 'apiService', 'formattingService'];

    angular
        .module('app.portfolio')
        .controller('assetListController', WavesAssetListController);
})();

(function () {
    'use strict';

    var FEE_CURRENCY = Currency.WAVES;

    function AssetTransferController($scope, $timeout, constants, events, autocomplete, applicationContext,
                                     assetService, apiService, dialogService, formattingService,
                                     notificationService, transactionBroadcast, addressService) {
        var ctrl = this;
        var minimumFee = new Money(constants.MINIMUM_TRANSACTION_FEE, FEE_CURRENCY);

        ctrl.availableBalance = 0;
        ctrl.feeAssetBalance = 0;

        ctrl.confirm = {
            recipient: ''
        };

        ctrl.broadcast = new transactionBroadcast.instance(apiService.assets.transfer,
            function (transaction) {
                var amount = Money.fromCoins(transaction.amount, ctrl.asset.currency);
                var address = transaction.recipient;
                var displayMessage = 'Sent ' + amount.formatAmount(true) + ' of ' +
                    ctrl.asset.currency.displayName +
                    '<br/>Recipient ' + address.substr(0,15) + '...<br/>Date: ' +
                    formattingService.formatTimestamp(transaction.timestamp);
                notificationService.notice(displayMessage);
            }
        );

        ctrl.autocomplete = autocomplete;

        ctrl.validationOptions = {
            rules: {
                assetRecipient: {
                    required: true
                },
                assetAmount: {
                    required: true,
                    decimal: 8, // stub value updated on validation
                    min: 0,     // stub value updated on validation
                    max: constants.JAVA_MAX_LONG // stub value updated on validation
                },
                assetFee: {
                    required: true,
                    decimal: Currency.WAVES.precision,
                    min: minimumFee.toTokens()
                },
                assetAttachment: {
                    maxbytelength: constants.MAXIMUM_ATTACHMENT_BYTE_SIZE
                }
            },
            messages: {
                assetRecipient: {
                    required: 'Recipient account number is required'
                },
                assetAmount: {
                    required: 'Amount to send is required'
                },
                assetFee: {
                    required: 'Transaction fee is required',
                    decimal: 'Transaction fee must be with no more than ' +
                        minimumFee.currency.precision + ' digits after the decimal point (.)',
                    min: 'Transaction fee is too small. It should be greater or equal to ' +
                        minimumFee.formatAmount(true)
                },
                maxbytelength: {
                    maxbytelength: 'Attachment is too long'
                }
            }
        };

        ctrl.submitTransfer = submitTransfer;
        ctrl.broadcastTransaction = broadcastTransaction;

        resetPaymentForm();

        $scope.$on(events.ASSET_TRANSFER, function (event, eventData) {
            var asset = applicationContext.cache.assets[eventData.assetId];
            ctrl.availableBalance = asset.balance;
            ctrl.feeAssetBalance = eventData.wavesBalance;
            ctrl.asset = asset;

            resetPaymentForm();

            // Update validation options and check how they affect form validation
            ctrl.validationOptions.rules.assetAmount.decimal = asset.currency.precision;
            var minimumPayment = Money.fromCoins(1, asset.currency);
            ctrl.validationOptions.rules.assetAmount.min = minimumPayment.toTokens();
            ctrl.validationOptions.rules.assetAmount.max = ctrl.availableBalance.toTokens();
            ctrl.validationOptions.messages.assetAmount.decimal = 'The amount to send must be a number ' +
                'with no more than ' + minimumPayment.currency.precision +
                ' digits after the decimal point (.)';
            ctrl.validationOptions.messages.assetAmount.min = 'Payment amount is too small. ' +
                'It should be greater or equal to ' + minimumPayment.formatAmount(false);
            ctrl.validationOptions.messages.assetAmount.max = 'Payment amount is too big. ' +
                'It should be less or equal to ' + ctrl.availableBalance.formatAmount(false);

            dialogService.open('#asset-transfer-dialog');
        });

        function submitTransfer(transferForm) {
            if (!transferForm.validate(ctrl.validationOptions)) {
                // Prevent dialog from closing
                return false;
            }

            var transferFee = Money.fromTokens(ctrl.autocomplete.getFeeAmount(), FEE_CURRENCY);
            if (transferFee.greaterThan(ctrl.feeAssetBalance)) {
                notificationService.error('Not enough funds for the transfer transaction fee');
                return false;
            }

            var transferAmount = Money.fromTokens(ctrl.amount, ctrl.asset.currency);
            if (transferAmount.greaterThan(ctrl.availableBalance)) {
                notificationService.error('Transfer amount exceeds available asset balance');
                return false;
            }

            var assetTransfer = {
                recipient: addressService.cleanupOptionalPrefix(ctrl.recipient),
                amount: transferAmount,
                fee: transferFee
            };

            if (ctrl.attachment) {
                assetTransfer.attachment = converters.stringToByteArray(ctrl.attachment);
            }

            var sender = {
                publicKey: applicationContext.account.keyPair.public,
                privateKey: applicationContext.account.keyPair.private
            };

            // Create a transaction and wait for confirmation
            ctrl.broadcast.setTransaction(assetService.createAssetTransferTransaction(assetTransfer, sender));

            // Set data to the confirmation dialog
            ctrl.confirm.amount = assetTransfer.amount;
            ctrl.confirm.fee = assetTransfer.fee;
            ctrl.confirm.recipient = assetTransfer.recipient;

            // Open confirmation dialog (async because this method is called while another dialog is open)
            $timeout(function () {
                dialogService.open('#transfer-asset-confirmation');
            }, 1);

            // Close payment dialog
            return true;
        }

        function broadcastTransaction() {
            ctrl.broadcast.broadcast();
        }

        function resetPaymentForm() {
            ctrl.recipient = '';
            ctrl.amount = '0';
            ctrl.confirm.amount = Money.fromTokens(0, Currency.WAVES);
            ctrl.confirm.fee = Money.fromTokens(constants.MINIMUM_TRANSACTION_FEE, FEE_CURRENCY);
            ctrl.autocomplete.defaultFee(constants.MINIMUM_TRANSACTION_FEE);
        }
    }

    AssetTransferController.$inject = ['$scope', '$timeout', 'constants.ui', 'portfolio.events',
        'autocomplete.fees', 'applicationContext', 'assetService', 'apiService', 'dialogService',
        'formattingService', 'notificationService', 'transactionBroadcast', 'addressService'];

    angular
        .module('app.portfolio')
        .controller('assetTransferController', AssetTransferController);
})();

(function () {
    'use strict';

    function WavesAssetDetailsController($scope, $timeout, events, applicationContext, dialogService) {
        var details = this;

        function transformAddress(address) {
            return isMyAddress(address) ? 'You' : address;
        }

        function isMyAddress(address) {
            return address === applicationContext.account.address;
        }

        $scope.$on(events.ASSET_DETAILS, function (event, assetId) {
            var asset = applicationContext.cache.assets[assetId];
            if (angular.isUndefined(asset)) {
                throw new Error('Failed to find asset details by id ' + assetId);
            }

            details.assetId = assetId;
            details.name = asset.currency.displayName;
            details.description = asset.description;
            details.sender = transformAddress(asset.sender);
            details.isSenderCopiable = !isMyAddress(asset.sender);
            details.timestamp = asset.timestamp;
            details.totalTokens = asset.totalTokens.formatAmount();
            details.reissuable = asset.reissuable ? 'Yes' : 'No';

            $timeout(function () {
                dialogService.open('#asset-details-dialog');
            }, 1);
        });
    }

    WavesAssetDetailsController.$inject = ['$scope', '$timeout', 'portfolio.events', 'applicationContext',
        'dialogService'];

    angular
        .module('app.portfolio')
        .controller('assetDetailsController', WavesAssetDetailsController);
})();

(function () {
    'use strict';

    var FIXED_REISSUE_FEE = new Money(1, Currency.WAVES);

    function WavesAssetReissueController($scope, $timeout, constants, events, applicationContext, assetService,
                                         dialogService, notificationService, formattingService, apiService,
                                         transactionBroadcast) {
        var reissue = this;
        reissue.confirm = {};
        reissue.broadcast = new transactionBroadcast.instance(apiService.assets.reissue,
            function (transaction, response) {
                var amount = Money.fromCoins(transaction.quantity, reissue.asset.currency);
                var displayMessage = 'Reissued ' + amount.formatAmount(true) + ' tokens of asset ' +
                    reissue.asset.currency.displayName + '<br/>Date: ' +
                    formattingService.formatTimestamp(transaction.timestamp);
                notificationService.notice(displayMessage);
            });
        reissue.fee = FIXED_REISSUE_FEE;
        reissue.validationOptions = {
            rules: {
                assetAmount: {
                    required: true,
                    decimal: 0,
                    min: 0
                }
            },
            messages: {
                assetAmount: {
                    required: 'Amount to reissue is required'
                }
            }
        };
        reissue.submitReissue = submitReissue;
        reissue.broadcastTransaction = broadcastTransaction;

        resetReissueForm();

        $scope.$on(events.ASSET_REISSUE, function (event, eventData) {
            var asset = applicationContext.cache.assets[eventData.assetId];
            if (!asset)
                throw new Error('Failed to find asset data by id ' + eventData.assetId);

            resetReissueForm();

            reissue.assetId = eventData.assetId;
            reissue.assetName = asset.currency.displayName;
            reissue.totalTokens = asset.totalTokens;
            reissue.asset = asset;
            reissue.wavesBalance = eventData.wavesBalance;

            // update validation options and check how it affects form validation
            reissue.validationOptions.rules.assetAmount.decimal = asset.currency.precision;
            var minimumPayment = Money.fromCoins(1, asset.currency);
            var maximumPayment = Money.fromCoins(constants.JAVA_MAX_LONG, asset.currency);
            reissue.validationOptions.rules.assetAmount.min = minimumPayment.toTokens();
            reissue.validationOptions.rules.assetAmount.max = maximumPayment.toTokens();
            reissue.validationOptions.messages.assetAmount.decimal = 'The amount to reissue must be a number ' +
                'with no more than ' + minimumPayment.currency.precision +
                ' digits after the decimal point (.)';
            reissue.validationOptions.messages.assetAmount.min = 'Amount to reissue is too small. ' +
                'It should be greater or equal to ' + minimumPayment.formatAmount(false);
            reissue.validationOptions.messages.assetAmount.max = 'Amount to reissue is too big. ' +
                'It should be less or equal to ' + maximumPayment.formatAmount(false);

            dialogService.open('#asset-reissue-dialog');
        });

        function submitReissue (form) {
            if (!form.validate(reissue.validationOptions))
                // prevent dialog from closing
                return false;

            if (reissue.fee.greaterThan(reissue.wavesBalance)) {
                notificationService.error('Not enough funds for the reissue transaction fee');

                return false;
            }

            var assetReissue = {
                totalTokens: Money.fromTokens(reissue.amount, reissue.asset.currency),
                reissuable: reissue.reissuable,
                fee: reissue.fee
            };

            var sender = {
                publicKey: applicationContext.account.keyPair.public,
                privateKey: applicationContext.account.keyPair.private
            };
            // creating the transaction and waiting for confirmation
            reissue.broadcast.setTransaction(assetService.createAssetReissueTransaction(assetReissue, sender));

            // setting data for the confirmation dialog
            reissue.confirm.amount = assetReissue.totalTokens;
            reissue.confirm.fee = assetReissue.fee;

            // open confirmation dialog
            // doing it async because this method is called while another dialog is open
            $timeout(function () {
                dialogService.open('#asset-reissue-confirm-dialog');
            }, 1);

            // it's ok to close reissue dialog
            return true;
        }

        function broadcastTransaction () {
            reissue.broadcast.broadcast();
        }

        function resetReissueForm() {
            reissue.amount = '0';
            reissue.confirm.amount = Money.fromTokens(0, Currency.WAVES);
            reissue.confirm.fee = reissue.fee;
        }
    }

    WavesAssetReissueController.$inject = ['$scope', '$timeout', 'constants.ui', 'portfolio.events',
        'applicationContext', 'assetService', 'dialogService', 'notificationService',
        'formattingService', 'apiService', 'transactionBroadcast'];

    angular
        .module('app.portfolio')
        .controller('assetReissueController', WavesAssetReissueController);
})();

(function () {
    'use strict';

    function AssetFilter(applicationContext, addressService) {
        function transformAddress (rawAddress) {
            var result = angular.isDefined(rawAddress) ? rawAddress : 'n/a';

            if (isMyAddress(result))
                result = 'You';

            return result;
        }

        function isMyAddress(address) {
            return address === applicationContext.account.address;
        }

        function formatAsset (transaction) {
            transaction.formatted = {
                sender: transformAddress(transaction.sender),
                canReissue: transaction.reissuable && isMyAddress(transaction.sender)
            };

            return transaction;
        }

        return function filterInput (input) {
            return _.map(input, formatAsset);
        };
    }

    AssetFilter.$inject = ['applicationContext', 'addressService'];

    angular
        .module('app.portfolio')
        .filter('asset', AssetFilter);
})();

(function () {
    'use strict';

    var MAXIMUM_FILE_SIZE_BYTES = 256 * 1024;
    var MAXIMUM_TRANSACTIONS_PER_FILE = 500;
    var FIRST_TRANSACTIONS_COUNT = 10;
    var LOADING_STAGE = 'loading';
    var PROCESSING_STAGE = 'processing';
    var ZERO_MONEY = Money.fromTokens(0, Currency.WAVES);

    function ValidationError(message) {
        this.message = message;
    }

    function WavesMassPaymentController ($scope, $window, $timeout, constants, events, applicationContext, autocomplete,
                                         notificationService, assetService, dialogService,
                                         transactionBroadcast, apiService) {
        var mass = this;
        var minimumFee = new Money(constants.MINIMUM_TRANSACTION_FEE, Currency.WAVES);
        var transactions;

        mass.summary = {
            totalAmount: ZERO_MONEY,
            totalFee: ZERO_MONEY
        };
        mass.confirm = {
            recipients: 0
        };
        mass.filename = '';
        mass.transfers = [];
        mass.inputPayments = [];
        mass.autocomplete = autocomplete;
        mass.stage = LOADING_STAGE;
        mass.loadingInProgress = false;
        mass.broadcast = new transactionBroadcast.instance(apiService.assets.massPay,
            function (transaction, response) {
                var displayMessage = 'Sent ' + mass.summary.totalAmount.formatAmount(true) + ' of ' +
                        mass.summary.totalAmount.currency.displayName + ' to ' + mass.summary.totalTransactions +
                        ' recipients';
                notificationService.notice(displayMessage);
            });
        mass.validationOptions = {
            rules: {
                massPayFee: {
                    required: true,
                    decimal: Currency.WAVES.precision,
                    min: minimumFee.toTokens()
                }
            },
            messages: {
                massPayFee: {
                    required: 'Fee per transaction is required',
                    decimal: 'Fee must be with no more than ' +
                        minimumFee.currency.precision + ' digits after the decimal point (.)',
                    min: 'Fee per transaction is too small. It should be greater or equal to ' +
                        minimumFee.formatAmount(true)
                }
            }
        };
        mass.handleFile = handleFile;
        mass.loadInputFile = loadInputFile;
        mass.processInputFile = processInputFile;
        mass.submitPayment = submitPayment;
        mass.broadcastTransaction = broadcastTransaction;
        mass.transactionsToClipboard = transactionsToClipboard;
        mass.dataCopied = dataCopied;
        mass.cancel = cancel;

        cleanup();

        $scope.$on(events.ASSET_MASSPAY, function (event, eventData) {
            mass.wavesBalance = eventData.wavesBalance;
            mass.assetBalance = eventData.wavesBalance;
            if (eventData.assetId) {
                mass.assetBalance = applicationContext.cache.assets[eventData.assetId].balance;
            }

            mass.sendingWaves = mass.assetBalance.currency === Currency.WAVES;

            cleanup();

            dialogService.open('#asset-mass-pay-dialog');
        });

        function fileErrorHandler(evt) {
            cleanup();

            switch (evt.target.error.code) {
                case evt.target.error.NOT_FOUND_ERR:
                    notificationService.error('File Not Found!');
                    break;
                case evt.target.error.NOT_READABLE_ERR:
                    notificationService.error('File is not readable');
                    break;
                case evt.target.error.ABORT_ERR:
                    break; // noop
                default:
                    notificationService.error('An error occurred reading this file.');
            }
        }

        function loadInputFile (fileName, content) {
            try {
                mass.inputPayments = [];
                if (fileName.endsWith('.json')) {
                    mass.inputPayments = parseJsonFile(content);
                }
                else if (fileName.endsWith('.csv')) {
                    mass.inputPayments = parseCsvFile(content);
                }
                else {
                    throw new Error('Unsupported file type: ' + fileName);
                }
            }
            catch (ex) {
                notificationService.error('Failed to parse file: ' + ex);
            }
        }

        function parseCsvFile (content) {
            var lines = content.split('\n');
            var result = [];
            _.forEach(lines, function (line) {
                line = line.trim();
                if (line.length < 1)
                    return;

                var parts = line.split(';');
                if (parts.length < 2) {
                    throw new Error('CSV file contains ' + parts.length + ' columns. Expected 2 or 3 columns');
                }
                var address = parts[0];
                var amount = parseFloat(parts[1]);
                var id;
                if (parts.length > 2) {
                    id = parts[2];
                }

                result.push({
                    recipient: address,
                    amount: amount,
                    id: id
                });
            });

            return result;
        }

        function parseJsonFile (content) {
            return $window.JSON.parse(content);
        }

        function loadTransactionsFromFile() {
            var sender = {
                publicKey: applicationContext.account.keyPair.public,
                privateKey: applicationContext.account.keyPair.private
            };

            try {
                transactions = [];
                var transfersToDisplay = [];
                var transferCurrency = mass.assetBalance.currency;
                var totalTransactions = 0;
                var totalAmount = Money.fromCoins(0, transferCurrency);
                var totalFee = Money.fromCoins(0, Currency.WAVES);
                var fee = Money.fromTokens(mass.autocomplete.getFeeAmount(), Currency.WAVES);
                var minimumPayment = Money.fromCoins(1, transferCurrency);
                _.forEach(mass.inputPayments, function (transfer) {
                    if (isNaN(transfer.amount)) {
                        throw new ValidationError('Failed to parse payment amount for address ' + transfer.recipient);
                    }

                    var assetTransfer = {
                        recipient: transfer.recipient,
                        amount: Money.fromTokens(transfer.amount, transferCurrency),
                        fee: fee,
                        attachment: transfer.id ? converters.stringToByteArray(transfer.id) : undefined
                    };

                    if (assetTransfer.amount.lessThan(minimumPayment)) {
                        throw new ValidationError('Payment amount ' + transfer.amount + ' to address ' +
                            transfer.recipient + ' is less than minimum (' + minimumPayment.formatAmount(true) + ')');
                    }

                    if (transfersToDisplay.length < FIRST_TRANSACTIONS_COUNT)
                        transfersToDisplay.push({
                            recipient: transfer.recipient,
                            amount: assetTransfer.amount.formatAmount(true)
                        });

                    transactions.push(assetService.createAssetTransferTransaction(assetTransfer, sender));

                    // statistics
                    totalAmount = totalAmount.plus(assetTransfer.amount);
                    totalFee = totalFee.plus(assetTransfer.fee);
                    totalTransactions++;
                });

                mass.broadcast.setTransaction(transactions);

                mass.summary.totalAmount = totalAmount;
                mass.summary.totalTransactions = totalTransactions;
                mass.summary.totalFee = totalFee;
                mass.transfers = transfersToDisplay;
                mass.stage = PROCESSING_STAGE;

                // cleaning up
                mass.filename = '';
                mass.inputPayments = [];
            }
            catch (e) {
                if (e instanceof ValidationError) {
                    mass.invalidPayment = true;
                    mass.inputErrorMessage = e.message;
                }
                else {
                    throw e;
                }
            }

            mass.loadingInProgress = false;
        }

        function processInputFile(form) {
            if (!form.validate(mass.validationOptions)) {
                return;
            }

            if (!mass.inputPayments || mass.inputPayments.length === 0) {
                notificationService.error('Payments were not provided or failed to parse. Nothing to load');

                return;
            }

            if (mass.inputPayments.length > MAXIMUM_TRANSACTIONS_PER_FILE) {
                notificationService.error('Too many payments for a single file. Maximum payments count ' +
                    'in a file should not exceed ' + MAXIMUM_TRANSACTIONS_PER_FILE);

                return;
            }

            mass.loadingInProgress = true;
            // loading transactions asynchronously
            $timeout(loadTransactionsFromFile, 150);
        }

        function submitPayment() {
            var paymentCost = !mass.sendingWaves ?
                mass.summary.totalFee :
                mass.summary.totalFee.plus(mass.summary.totalAmount);

            if (paymentCost.greaterThan(mass.wavesBalance)) {
                notificationService.error('Not enough Waves to make mass payment');

                return false;
            }

            if (mass.summary.totalAmount.greaterThan(mass.assetBalance)) {
                notificationService.error('Not enough "' + mass.assetBalance.currency.displayName +
                    '" to make mass payment');

                return false;
            }

            // setting data for the confirmation dialog
            mass.confirm.amount = mass.summary.totalAmount;
            mass.confirm.fee = mass.summary.totalFee;
            mass.confirm.recipients = mass.summary.totalTransactions;

            dialogService.close();
            $timeout(function () {
                dialogService.open('#asset-mass-pay-confirmation');
            }, 1);

            return true;
        }

        function cancel () {
            dialogService.close();
        }

        function broadcastTransaction() {
            mass.broadcast.broadcast();
        }

        function handleFile(file) {
            if (file.size > MAXIMUM_FILE_SIZE_BYTES) {
                notificationService.error('File "' + file.name + '" is too big. Maximum file size is ' +
                    MAXIMUM_FILE_SIZE_BYTES / 1024 + 'Kb');

                return;
            }

            var reader = new $window.FileReader();

            reader.onloadend = function (event) {
                NProgress.done();

                if (event.target.readyState == FileReader.DONE)
                    mass.loadInputFile(file.name, event.target.result);
            };
            reader.onloadstart = function (event) {
                cleanup();
                NProgress.start();
            };
            reader.onabort = function (event) {
                notificationService.error('File read cancelled');
            };
            reader.onerror = fileErrorHandler;

            reader.readAsText(file);
        }

        function transactionsToClipboard() {
            return $window.JSON.stringify(transactions, null, ' ');
        }

        function dataCopied() {
            notificationService.notice('Transactions copied successfully');
        }

        function cleanup() {
            mass.summary.totalAmount = ZERO_MONEY;
            mass.summary.totalTransactions = 0;
            mass.summary.totalFee = ZERO_MONEY;
            mass.stage = LOADING_STAGE;
            mass.invalidPayment = false;

            mass.confirm.amount = Money.fromTokens(0, Currency.WAVES);
            mass.confirm.recipients = 0;
            mass.confirm.fee = Money.fromTokens(0, Currency.WAVES);

            mass.autocomplete.defaultFee(constants.MINIMUM_TRANSACTION_FEE);
        }
    }

    WavesMassPaymentController.$inject = ['$scope', '$window', '$timeout', 'constants.ui', 'portfolio.events',
        'applicationContext', 'autocomplete.fees',
        'notificationService', 'assetService', 'dialogService', 'transactionBroadcast', 'apiService'];

    angular
        .module('app.portfolio')
        .controller('massPaymentController', WavesMassPaymentController);
})();

(function () {
    'use strict';

    angular
        .module('app.portfolio')
        .directive('fileSelect', [function WavesFileSelectDirective() {
            return {
                restrict: 'A',
                scope: {
                    fileHandler: '&'
                },
                link: function (scope, element) {
                    element.on('change', function (changeEvent) {
                        var files = changeEvent.target.files;
                        if (files.length) {
                            scope.fileHandler({file: files[0]});
                        }
                    });
                }
            };
        }]);
})();

/******************************************************************************
 * Copyright Â© 2016 The Waves Core Developers.                                *
 *                                                                            *
 * See the LICENSE.txt files at                                               *
 * the top-level directory of this distribution for the individual copyright  *
 * holder information and the developer policies on copyright and licensing.  *
 *                                                                            *
 * Unless otherwise agreed in a custom licensing agreement, no part of the    *
 * Waves software, including this file, may be copied, modified, propagated,  *
 * or distributed except according to the terms contained in the LICENSE.txt  *
 * file.                                                                      *
 *                                                                            *
 * Removal or modification of this copyright notice is prohibited.            *
 *                                                                            *
 ******************************************************************************/

(function ($, window) {
    'use strict';

    var $wrapW = $('#wrapper').width(),
        $mbBodyH = $('#mainBody').height();

    // GUI elements dynamic sizing and LeftBar visibility
    $(window).on('load resize', function (e) {

        var $wrapH = $('#wrapper').height(),
            $headerH = $('header').height(),
            $tabsH = $('#tabs').height(),
            $mainBodyH = $wrapH - $headerH - $tabsH,
            $mbBodyW = $wrapW;

        $('#mainBody').css('height', $mainBodyH);
        $('#mBBody').css('width', $mbBodyW);
    });
})(jQuery, window);

/**
 * Setup of main AngularJS application, with Restangular being defined as a dependency.
 *
 * @see controllers
 * @see services
 */

// mock methods to implement late binding
var __mockShowError = function(message) {};
var __mockValidateAddress = function(address) {};

var app = angular.module('app', [
    'restangular',
    'waves.core',

    'ngclipboard',
    'ngAnimate',
    'ngMaterial',
    'ngValidate',
    'app.ui',
    'app.shared',
    'app.login',
    'app.navigation',
    'app.wallet',
    'app.tokens',
    'app.dex',
    'app.leasing',
    'app.history',
    'app.community',
    'app.portfolio'
]).config(AngularApplicationConfig).run(AngularApplicationRun);

function AngularApplicationConfig($provide, $compileProvider, $validatorProvider, $qProvider,
                                  $sceDelegateProvider, $mdAriaProvider, networkConstants, applicationSettings) {
    'use strict';

    $provide.constant(networkConstants,
        angular.extend(networkConstants, {
            NETWORK_NAME: 'mainnet',
            NETWORK_CODE: 'W'
        }));
    $provide.constant(applicationSettings,
        angular.extend(applicationSettings, {
            CLIENT_VERSION: '0.5.22',
            NODE_ADDRESS: 'https://nodes.wavesplatform.com',
            COINOMAT_ADDRESS: 'https://coinomat.com',
            MATCHER_ADDRESS: 'https://matcher.wavesplatform.com',
            DATAFEED_ADDRESS: 'https://marketdata.wavesplatform.com'
        }));

    $compileProvider.imgSrcSanitizationWhitelist(/^\s*(https?|local|data|file|chrome-extension):/);
    $qProvider.errorOnUnhandledRejections(false);
    $sceDelegateProvider.resourceUrlWhitelist([
        'self',
        'https://test.coinomat.com/api/**',
        'https://coinomat.com/api/**',
        'https://marketdata.wavesplatform.com/**'
    ]);

    // Globally disables all ARIA warnings.
    $mdAriaProvider.disableWarnings();

    $validatorProvider.setDefaults({
        errorClass: 'wInput-error',
        onkeyup: false,
        showErrors : function(errorMap, errorList) {
            errorList.forEach(function(error) {
                // can't use notificationService here cos services are not available in config phase
                __mockShowError(error.message);
            });

            var i, elements;
            for (i = 0, elements = this.validElements(); elements[i]; i++) {
                angular.element(elements[i]).removeClass(this.settings.errorClass);
            }

            for (i = 0, elements = this.invalidElements(); elements[i]; i++) {
                angular.element(elements[i]).addClass(this.settings.errorClass);
            }
        }
    });

    $validatorProvider.addMethod('address', function (value, element) {
        return this.optional(element) || __mockValidateAddress(value);
    }, 'Account number must be a sequence of 35 alphanumeric characters with no spaces, ' +
        'optionally starting with \'1W\'');

    $validatorProvider.addMethod('decimal', function (value, element, maxDigits) {
        maxDigits = angular.isNumber(maxDigits) ? maxDigits : Currency.WAVES.precision;
        var regex = new RegExp('^(?:-?\\d+)?(?:\\.\\d{0,' + maxDigits + '})?$');
        return this.optional(element) || regex.test(value);
    }, 'Amount is expected with a dot (.) as a decimal separator with no more than {0} fraction digits');

    $validatorProvider.addMethod('password', function (value, element) {
        if (this.optional(element)) {
            return true;
        }

        var containsDigits = /[0-9]/.test(value);
        var containsUppercase = /[A-Z]/.test(value);
        var containsLowercase = /[a-z]/.test(value);

        return containsDigits && containsUppercase && containsLowercase;
    }, 'The password is too weak. A good password must contain at least one digit, ' +
        'one uppercase and one lowercase letter');

    $validatorProvider.addMethod('minbytelength', function (value, element, minLength) {
        if (this.optional(element)) {
            return true;
        }

        if (!angular.isNumber(minLength)) {
            throw new Error('minbytelength parameter must be a number. Got ' + minLength);
        }

        return converters.stringToByteArray(value).length >= minLength;
    }, 'String is too short. Please add more characters.');

    $validatorProvider.addMethod('maxbytelength', function (value, element, maxLength) {
        if (this.optional(element)) {
            return true;
        }

        if (!angular.isNumber(maxLength)) {
            throw new Error('maxbytelength parameter must be a number. Got ' + maxLength);
        }

        return converters.stringToByteArray(value).length <= maxLength;
    }, 'String is too long. Please remove some characters.');
}

AngularApplicationConfig.$inject = ['$provide', '$compileProvider', '$validatorProvider', '$qProvider',
    '$sceDelegateProvider', '$mdAriaProvider', 'constants.network', 'constants.application'];

function AngularApplicationRun(rest, applicationConstants, notificationService, addressService) {
    'use strict';

    // restangular configuration
    rest.setDefaultHttpFields({
        timeout: 10000 // milliseconds
    });
    var url = applicationConstants.NODE_ADDRESS;
    //var url = 'http://52.28.66.217:6869';
    //var url = 'http://52.77.111.219:6869';
    //var url = 'http://127.0.0.1:6869';
    //var url = 'http://127.0.0.1:8089';
    rest.setBaseUrl(url);

    // override mock methods cos in config phase services are not available yet
    __mockShowError = function (message) {
        notificationService.error(message);
    };
    __mockValidateAddress = function (address) {
        return addressService.validateAddress(address.trim());
    };
}

AngularApplicationRun.$inject = ['Restangular', 'constants.application', 'notificationService', 'addressService'];

angular.module('app').run(['$templateCache', function($templateCache) {
  'use strict';

  $templateCache.put('dex/asset.picker.component',
    "<md-autocomplete class=\"assets-autocomplete\" ng-class=\"{amount: $ctrl.type === 'amountAsset', price: $ctrl.type === 'priceAsset'}\" placeholder=\"Choose an asset or copy-paste an ID here\" md-menu-class=\"assets-autocomplete-popup\" md-selected-item=\"$ctrl.autocomplete.selectedAsset\" md-selected-item-change=\"$ctrl.changeAsset()\" md-search-text=\"$ctrl.autocomplete.searchText\" md-search-text-change=\"\" md-items=\"item in $ctrl.findAssets($ctrl.autocomplete.searchText)\" md-item-text=\"item.displayName\" md-clear-button=\"false\" md-no-cache=\"true\" md-min-length=\"0\" md-has-not-found=\"true\" md-select-on-focus><md-item-template><div class=\"asset-tile\"><span class=\"label\" ng-class=\"{'verified': item.verified}\" md-highlight-text=\"$ctrl.autocomplete.searchText\" title=\"{{item.verified ? 'Asset is verified' : ''}}\">{{item.verified ? item.displayName : ''}}</span> <span class=\"muted\">{{item.id}}</span></div></md-item-template><md-not-found><span ng-if=\"$ctrl.isAssetLoading\">Loading...</span> <span ng-if=\"!$ctrl.isAssetLoading\">Nothing is found!</span></md-not-found></md-autocomplete>"
  );


  $templateCache.put('dex/chart.component',
    "<div class=\"chart\"></div>"
  );


  $templateCache.put('dex/component',
    "<div class=\"exchange\"><div class=\"choice\"><div class=\"picker-widget\"><waves-dex-asset-picker name=\"Amount asset\" type=\"amountAsset\" assets=\"$ctrl.assetsList\" hidden-asset=\"$ctrl.pair.priceAsset\" picked-asset=\"$ctrl.pair.amountAsset\"></waves-dex-asset-picker></div><div class=\"current-pair\">{{$ctrl.pair.amountAsset.shortName}}/{{$ctrl.pair.priceAsset.shortName}}</div><div class=\"picker-widget\"><waves-dex-asset-picker name=\"Price asset\" type=\"priceAsset\" assets=\"$ctrl.assetsList\" hidden-asset=\"$ctrl.pair.amountAsset\" picked-asset=\"$ctrl.pair.priceAsset\"></waves-dex-asset-picker></div></div><div class=\"charts\"><waves-dex-chart pair=\"$ctrl.pair\"></waves-dex-chart></div><div class=\"workplace\"><div class=\"orderbooks\"><div class=\"orderbook\"><waves-dex-orderbook type=\"buy\" name=\"{{$ctrl.pair.amountAsset.displayName}} buy orders\" pair=\"$ctrl.pair\" on-click=\"$ctrl.fillSellForm\" orders=\"$ctrl.buyOrders\"></waves-dex-orderbook></div><div class=\"orderbook\"><waves-dex-orderbook type=\"sell\" name=\"{{$ctrl.pair.amountAsset.displayName}} sell orders\" pair=\"$ctrl.pair\" on-click=\"$ctrl.fillBuyForm\" orders=\"$ctrl.sellOrders\"></waves-dex-orderbook></div><div class=\"orderbook\"><waves-dex-history pair=\"$ctrl.pair\" trades=\"$ctrl.tradeHistory\"></waves-dex-history></div></div><div class=\"user-orders\"><waves-dex-order-creator pair=\"$ctrl.pair\" submit=\"$ctrl.createOrder\" last-price=\"$ctrl.lastTradePrice\" buy-values=\"$ctrl.buyFormValues\" sell-values=\"$ctrl.sellFormValues\"></waves-dex-order-creator><waves-dex-user-orders pair=\"$ctrl.pair\" orders=\"$ctrl.userOrders\" cancel-order=\"$ctrl.cancelOrder\"></waves-dex-user-orders></div></div></div><aside class=\"pairs-lists\"><waves-dex-favorites pairs=\"$ctrl.favoritePairs\" switch-pair=\"$ctrl.changePair\"></waves-dex-favorites><div class=\"how-to\"><h3>Quick guide</h3><p>1. Choose a pair of assets you want to trade. Just start typing asset name, then pick the right one.</p><p>2. Take a look at orderbooks to get an understanding of the pair market.</p><p>3. Finally, fill the form and submit your order.</p></div></aside><div id=\"dex-bad-order-confirmation\" waves-dialog ok-button-caption=\"YES\" on-dialog-ok=\"$ctrl.placeBadOrder()\" cancel-button-caption=\"NO\" on-dialog-cancel=\"$ctrl.refuseBadOrder()\"><div class=\"dialog-confirmation\"><p class=\"dialog-text\">{{$ctrl.badOrderQuestion}}</p></div></div>"
  );


  $templateCache.put('dex/favorites.component',
    "<h2>Favorites</h2><div class=\"pairs-list\"><div class=\"pair\" ng-repeat=\"p in $ctrl.pairs\" ng-click=\"$ctrl.onClick(p)\">{{p.amountAsset.shortName}}/{{p.priceAsset.shortName}}</div></div>"
  );


  $templateCache.put('dex/history.component',
    "<h3>Trade history</h3><table><thead><tr><td>Date</td><td>Type</td><td>Price ({{$ctrl.pair.priceAsset.shortName}})</td><td>Amount ({{$ctrl.pair.amountAsset.shortName}})</td><td>Total ({{$ctrl.pair.priceAsset.shortName}})</td></tr></thead></table><waves-scrollbox><table><tbody><tr ng-repeat=\"trade in $ctrl.trades\"><td>{{trade.timestamp | formatting}}</td><td class=\"type\" ng-class=\"trade.type\">{{trade.typeTitle}}</td><td>{{trade.price | number:$ctrl.pair.priceAsset.precision}}</td><td>{{trade.amount | number:$ctrl.pair.amountAsset.precision}}</td><td>{{trade.total | number:$ctrl.pair.priceAsset.precision}}</td></tr><tr ng-if=\"!$ctrl.trades.length\"><td colspan=\"5\"><span>There was no trades for the current pair.</span></td></tr></tbody></table></waves-scrollbox>"
  );


  $templateCache.put('dex/order.creator.component',
    "<div class=\"half buy\"><h2><span>Buy {{$ctrl.pair.amountAsset.displayName}} </span><small ng-click=\"$ctrl.buyFullBalance()\">{{$ctrl.priceAssetBalance}}</small></h2><div class=\"fields\"><md-input-container><label>Price in {{$ctrl.pair.priceAsset.displayName}}</label><input type=\"text\" ng-model=\"$ctrl.buy.price\" ng-change=\"$ctrl.updateBuyTotal()\" decimal-input-restrictor></md-input-container><md-input-container><label>{{$ctrl.pair.amountAsset.displayName}} amount</label><input type=\"text\" ng-model=\"$ctrl.buy.amount\" ng-change=\"$ctrl.updateBuyTotal()\" decimal-input-restrictor></md-input-container><div><span>Total:&nbsp;</span> <span>{{$ctrl.buy.total | number:$ctrl.pair.priceAsset.precision}}&nbsp;</span> <span>{{$ctrl.pair.priceAsset.shortName}}</span></div><div><span><abbr title=\"Fee will be taken in the moment of order execution\">Fee</abbr>:&nbsp;</span> <span>{{$ctrl.buy.fee}}</span> <span>WAV</span></div></div><div class=\"button-container\"><button ng-disabled=\"$ctrl.buy.blocked\" ng-click=\"$ctrl.submitBuyOrder()\">Buy</button></div></div><div class=\"half sell\"><h2><span>Sell {{$ctrl.pair.amountAsset.displayName}} </span><small ng-click=\"$ctrl.sellFullBalance()\">{{$ctrl.amountAssetBalance}}</small></h2><div class=\"fields\"><md-input-container><label>Price in {{$ctrl.pair.priceAsset.displayName}}</label><input type=\"text\" ng-model=\"$ctrl.sell.price\" ng-change=\"$ctrl.updateSellTotal()\" decimal-input-restrictor></md-input-container><md-input-container><label>{{$ctrl.pair.amountAsset.displayName}} amount</label><input type=\"text\" ng-model=\"$ctrl.sell.amount\" ng-change=\"$ctrl.updateSellTotal()\" decimal-input-restrictor></md-input-container><div><span>Total:&nbsp;</span> <span>{{$ctrl.sell.total | number:$ctrl.pair.priceAsset.precision}}&nbsp;</span> <span>{{$ctrl.pair.priceAsset.shortName}}</span></div><div><span><abbr title=\"Fee will be taken in the moment of order execution\">Fee</abbr>:&nbsp;</span> <span>{{$ctrl.sell.fee}}</span> <span>WAV</span></div></div><div class=\"button-container\"><button ng-disabled=\"$ctrl.sell.blocked\" ng-click=\"$ctrl.submitSellOrder()\">Sell</button></div></div>"
  );


  $templateCache.put('dex/orderbook.component',
    "<h3>{{$ctrl.name}}</h3><table ng-class=\"$ctrl.type\"><thead><tr><td>Price</td><td>{{$ctrl.pair.amountAsset.shortName}}</td><td>{{$ctrl.pair.priceAsset.shortName}}</td><td>SUM ({{$ctrl.pair.priceAsset.shortName}})</td></tr></thead></table><waves-scrollbox><table ng-class=\"$ctrl.type\"><tbody><tr ng-repeat=\"order in $ctrl.orders\" ng-click=\"$ctrl.lineClick($index)\"><td ng-bind-html=\"order.price | number:$ctrl.pair.priceAsset.precision | padder:$ctrl.lengths.price\"></td><td ng-bind-html=\"order.amount | number:$ctrl.pair.amountAsset.precision | padder:$ctrl.lengths.amount\"></td><td ng-bind-html=\"order.total | number:$ctrl.pair.priceAsset.precision | padder:$ctrl.lengths.total\"></td><td ng-bind-html=\"order.sum | number:$ctrl.pair.priceAsset.precision | padder:$ctrl.lengths.sum\"></td></tr><tr ng-if=\"!$ctrl.orders.length\"><td colspan=\"4\"><span>Some orders will appear soon.</span></td></tr></tbody></table></waves-scrollbox>"
  );


  $templateCache.put('dex/pair.chart.component',
    "<img src=\"http://www.ifmr.co.in/blog/wp-content/uploads/2014/04/BitcoinPrice.png\">"
  );


  $templateCache.put('dex/user.orders.component',
    "<h3>My orders</h3><table class=\"user\"><thead><tr><td>Status</td><td>Type</td><td>Price</td><td>{{$ctrl.pair.amountAsset.shortName}}</td><td>{{$ctrl.pair.priceAsset.shortName}}</td><td></td></tr></thead></table><waves-scrollbox><table class=\"user\"><tbody><tr ng-repeat=\"order in $ctrl.orders\" ng-class=\"{\n" +
    "            'filled': order.status === 'Filled' || order.status === 'Cancelled',\n" +
    "            'not-found': order.status === 'NotFound'\n" +
    "          }\"><td>{{order.statusTitle}}</td><td class=\"type\" ng-class=\"order.type\">{{order.typeTitle}}</td><td>{{order.price | number:8}}</td><td>{{order.amount | number:8}}</td><td>{{order.total | number:8}}</td><td ng-click=\"$ctrl.cancel({order: order})\">&times;</td></tr><tr ng-if=\"!$ctrl.orders.length\"><td colspan=\"6\"><span>Create your first order!</span></td></tr></tbody></table></waves-scrollbox>"
  );


  $templateCache.put('leasing/balance.details.component',
    "<section-header>BALANCE DETAILS</section-header><table class=\"waves-table\"><tbody><tr><td>Regular</td><td>{{$ctrl.formattedBalance.regular}}</td></tr><tr><td>Effective</td><td>{{$ctrl.formattedBalance.effective}}</td></tr><tr><td>Generating</td><td>{{$ctrl.formattedBalance.generating}}</td></tr></tbody></table>"
  );


  $templateCache.put('leasing/component',
    "<div class=\"leasing\"><div class=\"tools\"><div class=\"column balance\"><waves-leasing-balance-details balance-details=\"$ctrl.balanceDetails\"></waves-leasing-balance-details></div><div class=\"column form\"><waves-leasing-lease-form></waves-leasing-lease-form></div><div class=\"column quick-note\"><section-header>QUICK NOTE</section-header><p>You can only transfer or trade Waves that arenâ€™t leased. The leased amount cannot be transferred or traded by you or anyone else.</p><p>You can cancel a leasing transaction as soon as it appears in the blockchain which usually occurs in a minute or less.</p><p>To cancel a lease, click on the black button in the far right column of the Leasing Transactions table below and select Cancel Leasing.</p><p>The generating balance will be updated after 1000 blocks.</p></div></div><waves-transaction-history heading=\"LEASING TRANSACTIONS\" transactions=\"$ctrl.transactions\" limit-to=\"$ctrl.limitTo\"></waves-transaction-history></div>"
  );


  $templateCache.put('leasing/lease.form.component',
    "<section-header>BALANCE LEASING</section-header><form name=\"$ctrl.form\" novalidate ng-validate=\"$ctrl.validationOptions\"><table class=\"form-table\"><tbody><tr><td>Recipient</td><td><input class=\"wInput form-control\" name=\"leasingRecipient\" type=\"text\" placeholder=\"Recipient address\" ng-model=\"$ctrl.recipient\"></td></tr><tr><td>Amount</td><td><input class=\"wInput form-control\" name=\"leasingAmount\" type=\"text\" placeholder=\"Leasing amount\" ng-model=\"$ctrl.amount\" decimal-input-restrictor></td></tr><tr><td class=\"fee\">Fee</td><td class=\"fee\">{{$ctrl.fee | moneyLong:true}}</td></tr><tr><td colspan=\"2\" class=\"button-container\"><button class=\"wButton wButton-neg fade\" ng-click=\"$ctrl.confirmLease($ctrl.form)\">LEASE</button></td></tr></tbody></table></form><div id=\"start-leasing-confirmation\" waves-dialog ok-button-caption=\"CONFIRM\" ok-button-enabled=\"!$ctrl.broadcast.pending\" on-dialog-ok=\"$ctrl.broadcastTransaction()\"><div class=\"dialog-confirmation\"><p class=\"dialog-text\">You are going to lease <span class=\"confirmation-value\">{{$ctrl.confirm.amount | moneyLong:true}}</span> with <span class=\"confirmation-value\">{{$ctrl.confirm.fee | moneyLong:true}}</span> fee to the address<br><span class=\"confirmation-value\">{{$ctrl.confirm.recipient}}</span></p><p class=\"dialog-text\">Please <span class=\"fontBold\">CONFIRM </span>to execute or <span class=\"fontBold\">CANCEL </span>to discard.</p></div></div>"
  );


  $templateCache.put('navigation/tab.directive',
    "<img ng-src=\"img/tabs-iconset-{{pageId}}.svg\" class=\"fFade\" alt=\"{{caption}}\" ng-click=\"onClick()\" ng-class=\"[{selected: isSelected()}]\">"
  );


  $templateCache.put('shared/dialog.directive',
    "<img class=\"wPop-header\" ng-src=\"img/{{image}}\"><div class=\"wavesPop-content\" ng-transclude></div><div class=\"wavesPop-content-buttons button-row\" ng-show=\"showButtons\"><button class=\"wButton wButton-dialog fade tooltip-1\" ng-class=\"[{wButtonDanger: isError}]\" title=\"{{::tooltip}}\" ng-click=\"onOk()\" ng-disabled=\"!okButtonEnabled\">{{::okButtonCaption}}</button> <span class=\"divider-2\" ng-if=\"cancelButtonVisible\"></span> <button ng-if=\"cancelButtonVisible\" class=\"wButton wButton-dialog fade\" ng-class=\"[{wButtonDanger: isError}]\" ng-click=\"onCancel()\">{{::cancelButtonCaption}}</button><waves-support-link ng-if=\"::!noSupportLink\" class=\"dark\"></waves-support-link></div>"
  );


  $templateCache.put('shared/transaction.history.component',
    "<section-header>{{::$ctrl.heading}}</section-header><waves-scrollbox class=\"transactions-table\"><table><thead><tr><td>DATE</td><td>TYPE</td><td>NAME</td><td>SENDER</td><td>RECIPIENT</td><td>FEE</td><td>UNITS</td><td></td></tr></thead><tbody><tr ng-repeat=\"tx in $ctrl.transactions | antiSpam | orderBy:'timestamp':true | limitTo:$ctrl.limitTo | transaction track by tx.timestamp\" ng-class=\"{'tx-unc': tx.unconfirmed, 'tx-in': !tx.formatted.isOutgoing, 'tx-out': tx.formatted.isOutgoing}\"><td>{{tx.formatted.datetime}}</td><td>{{tx.formatted.type}}</td><td>{{tx.formatted.asset}}</td><td>{{tx.formatted.sender}}</td><td>{{tx.formatted.recipient}}</td><td>{{tx.formatted.fee}} {{tx.formatted.feeAsset.shortName}}</td><td>{{tx.formatted.amount}}</td><td width=\"16\"><tx-menu transaction=\"tx\"></tx-menu></td></tr></tbody></table><div id=\"cancel-leasing-confirmation\" waves-dialog ok-button-caption=\"CONFIRM\" on-dialog-ok=\"$ctrl.cancelLeasing()\"><div class=\"dialog-confirmation\"><p class=\"dialog-text\">You are going to cancel leasing of <span class=\"confirmation-value\">{{$ctrl.confirm.amount}}</span> <span class=\"confirmation-value\">{{$ctrl.confirm.asset}}</span> with <span class=\"confirmation-value\">{{$ctrl.confirm.fee | moneyLong:true}}</span> fee<br>for the address <span class=\"confirmation-value\">{{$ctrl.confirm.recipient}}</span></p><p class=\"dialog-text\">Please <span class=\"fontBold\">CONFIRM </span>to execute or <span class=\"fontBold\">CANCEL </span>to discard.</p></div></div></waves-scrollbox>"
  );


  $templateCache.put('shared/transaction.menu.component',
    "<md-menu><md-button class=\"md-icon-button\" ng-click=\"$mdMenu.open($event)\"><img ng-src=\"img/wicon_txmenu.svg\" height=\"16\" width=\"16\"></md-button><md-menu-content width=\"2\"><md-menu-item><md-button ngclipboard data-clipboard-text=\"{{::$ctrl.transaction.sender}}\" ngclipboard-success=\"$ctrl.addressCopied()\"><span md-menu-align-target>Copy sender address</span></md-button></md-menu-item><md-menu-item><md-button ng-disabled=\"!$ctrl.hasRecipient()\" ngclipboard data-clipboard-text=\"{{::$ctrl.transaction.recipient}}\" ngclipboard-success=\"$ctrl.addressCopied()\"><span md-menu-align-target>Copy recipient address</span></md-button></md-menu-item><md-menu-item><md-button ngclipboard data-clipboard-text=\"{{::$ctrl.transaction.id}}\" ngclipboard-success=\"$ctrl.idCopied()\"><span md-menu-align-target>Copy TX ID</span></md-button></md-menu-item><md-menu-item><md-button ngclipboard ngclipboard-text-provider=\"$ctrl.fullTransactionData()\" ngclipboard-success=\"$ctrl.dataCopied()\"><span md-menu-align-target>Copy full TX data</span></md-button></md-menu-item><md-menu-item ng-if=\"$ctrl.isLeasing()\"><md-button ng-click=\"$ctrl.cancelLeasing()\"><span md-menu-align-target>Cancel Leasing</span></md-button></md-menu-item></md-menu-content></md-menu>"
  );


  $templateCache.put('wallet/box.component',
    "<img ng-src=\"img/{{::$ctrl.image}}\" alt=\"{{::$ctrl.displayName}}\"><div class=\"wB-name\">{{::$ctrl.displayName | uppercase}}</div><div class=\"wB-add\"></div><div class=\"wB-balInt\">{{$ctrl.integerBalance}}</div><div class=\"wB-balDec\">{{$ctrl.fractionBalance}}</div><div class=\"wB-buttons\"><a ng-click=\"$ctrl.onSend({currency: $ctrl.balance.currency})\"><div class=\"wB-but wB-butSend fade\"><p>SEND</p></div></a><a ng-click=\"$ctrl.onWithdraw({currency: $ctrl.balance.currency})\"><div class=\"wB-but wB-butRec fade\"><p>WITHDRAW</p></div></a><a ng-click=\"$ctrl.onDeposit({currency: $ctrl.balance.currency})\"><div class=\"wB-but wB-butTrade fade\"><p>DEPOSIT</p></div></a></div>"
  );

}]);
